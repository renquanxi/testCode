{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.typed-array.int32-array.js","webpack:///./src/assets/recorderjs/jquery.js","webpack:///./src/assets/recorderjs/recorder-core.js","webpack:///./src/views/recorderDemo.vue?31b7","webpack:///src/views/recorderDemo.vue","webpack:///./src/views/recorderDemo.vue?62f9","webpack:///./src/views/recorderDemo.vue","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/core-js/modules/es.typed-array.float64-array.js","webpack:///./node_modules/core-js/modules/es.regexp.flags.js","webpack:///./node_modules/core-js/modules/es.math.log10.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/core-js/modules/es.typed-array.int16-array.js","webpack:///./src/assets/recorderjs/mp3-engine.js","webpack:///./src/assets/recorderjs/mp3.js","webpack:///./node_modules/core-js/modules/web.url.to-json.js","webpack:///./node_modules/core-js/modules/es.array.fill.js","webpack:///./node_modules/core-js/modules/es.typed-array.float32-array.js","webpack:///./src/assets/recorderjs/waveview.js","webpack:///./node_modules/core-js/modules/es.typed-array.int8-array.js"],"names":["createTypedArrayConstructor","init","data","byteOffset","length","this","e","t","n","r","i","o","document","a","location","s","jQuery","u","$","l","c","p","f","concat","d","push","h","slice","g","indexOf","m","toString","y","hasOwnProperty","v","trim","b","fn","x","source","w","T","N","C","k","E","S","A","j","D","L","toUpperCase","H","addEventListener","type","readyState","q","ready","removeEventListener","detachEvent","M","isWindow","nodeType","prototype","jquery","constructor","charAt","exec","find","merge","parseHTML","ownerDocument","test","isPlainObject","isFunction","attr","getElementById","parentNode","id","context","selector","makeArray","size","toArray","call","get","pushStack","prevObject","each","promise","done","apply","arguments","first","eq","last","map","end","sort","splice","extend","isArray","noConflict","isReady","readyWait","holdReady","body","setTimeout","resolveWith","trigger","off","Array","window","isNumeric","isNaN","parseFloat","isFinite","isEmptyObject","error","Error","createElement","buildFragment","remove","childNodes","parseJSON","JSON","parse","replace","Function","parseXML","DOMParser","parseFromString","ActiveXObject","async","loadXML","documentElement","getElementsByTagName","noop","globalEval","execScript","eval","camelCase","nodeName","toLowerCase","Object","inArray","Math","max","grep","guid","proxy","access","now","Date","getTime","Deferred","attachEvent","frameElement","doScroll","split","_","F","match","Callbacks","once","memory","stopOnFalse","shift","disable","add","unique","has","empty","disabled","lock","locked","fireWith","fire","fired","state","always","fail","then","resolve","reject","progress","notify","pipe","when","notifyWith","support","setAttribute","innerHTML","appendChild","style","cssText","getSetAttribute","className","leadingWhitespace","firstChild","tbody","htmlSerialize","getAttribute","hrefNormalized","opacity","cssFloat","checkOn","value","optSelected","selected","enctype","html5Clone","cloneNode","outerHTML","boxModel","compatMode","deleteExpando","noCloneEvent","inlineBlockNeedsLayout","shrinkWrapBlocks","reliableMarginRight","boxSizingReliable","pixelPosition","checked","noCloneChecked","optDisabled","input","radioValue","createDocumentFragment","appendChecked","checkClone","lastChild","click","submit","change","focusin","attributes","expando","backgroundClip","clearCloneStyle","offsetHeight","display","reliableHiddenOffsets","boxSizing","offsetWidth","doesNotIncludeMarginInBodyOffset","offsetTop","getComputedStyle","top","width","marginRight","zoom","removeChild","O","B","P","acceptData","cache","pop","toJSON","R","cleanData","W","random","noData","embed","object","applet","hasData","removeData","_data","_removeData","name","queue","dequeue","_queueHooks","cur","unshift","stop","delay","fx","speeds","clearTimeout","clearQueue","I","z","X","U","V","Y","J","G","Q","K","removeAttr","prop","removeProp","propFix","addClass","removeClass","toggleClass","hasClass","val","valHooks","set","option","specified","text","select","options","selectedIndex","isXMLDoc","attrHooks","removeAttribute","tabindex","readonly","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","propHooks","tabIndex","getAttributeNode","parseInt","href","defaultValue","button","setAttributeNode","createAttribute","Z","et","tt","nt","rt","it","ot","event","global","handler","events","handle","triggered","dispatch","elem","special","delegateType","bindType","origType","needsContext","expr","namespace","join","delegateCount","setup","RegExp","teardown","removeEvent","Event","isTrigger","namespace_re","result","target","noBubble","defaultView","parentWindow","isPropagationStopped","preventDefault","isDefaultPrevented","_default","fix","delegateTarget","preDispatch","handlers","currentTarget","isImmediatePropagationStopped","handleObj","stopPropagation","postDispatch","index","fixHooks","mouseHooks","keyHooks","props","srcElement","metaKey","filter","which","charCode","keyCode","fromElement","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","relatedTarget","toElement","load","focus","activeElement","blur","beforeunload","originalEvent","returnValue","simulate","isSimulated","defaultPrevented","getPreventDefault","timeStamp","cancelBubble","stopImmediatePropagation","mouseenter","mouseleave","contains","submitBubbles","form","_submit_bubble","changeBubbles","propertyName","_just_changed","focusinBubbles","on","one","bind","unbind","delegate","undelegate","triggerHandler","ID","CLASS","NAME","TAG","ATTR","PSEUDO","CHILD","String","fromCharCode","cacheLength","at","st","getByClassName","getElementsByClassName","qsa","ft","dt","querySelectorAll","wt","ut","sourceIndex","nextSibling","lt","ct","pt","isXML","setDocument","tagNameNoComments","createComment","getByName","insertBefore","getElementsByName","getIdNotName","attrHandle","matchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","detectDuplicates","matches","uniqueSort","getText","textContent","nodeValue","selectors","createPseudo","relative","dir","preFilter","pseudos","setFilters","not","innerText","lang","hash","root","hasFocus","enabled","parent","header","even","odd","gt","radio","checkbox","file","password","image","reset","ht","mt","yt","xt","vt","bt","Tt","compile","nth","filters","children","contents","next","prev","is","closest","prevAll","addBack","andSelf","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","sibling","contentDocument","contentWindow","reverse","Nt","Ct","kt","Et","St","At","legend","area","param","thead","tr","col","td","jt","Dt","Lt","Ht","qt","Mt","_t","Ft","defaultChecked","defaultSelected","Ot","Bt","optgroup","tfoot","colgroup","caption","th","append","createTextNode","wrapAll","clone","wrapInner","wrap","unwrap","replaceWith","domManip","prepend","before","after","html","detach","src","ajax","url","dataType","appendTo","prependTo","insertAfter","replaceAll","Pt","Rt","Wt","$t","It","zt","Xt","Ut","Vt","Yt","Jt","Gt","BODY","Qt","position","visibility","Kt","letterSpacing","fontWeight","Zt","en","tn","nn","css","rn","un","an","sn","ln","write","close","show","hide","toggle","cssHooks","cssNumber","columnCount","fillOpacity","lineHeight","orphans","widows","zIndex","cssProps","swap","getPropertyValue","minWidth","maxWidth","currentStyle","left","runtimeStyle","pixelLeft","$1","hidden","visible","margin","padding","border","expand","cn","pn","dn","hn","gn","serialize","serializeArray","encodeURIComponent","ajaxSettings","traditional","hover","mn","yn","vn","bn","xn","wn","Tn","Nn","Cn","kn","En","Sn","An","jn","Dn","Ln","Hn","qn","dataTypes","Mn","flatOptions","_n","responseFields","mimeType","getResponseHeader","converters","Fn","dataFilter","complete","responseText","success","active","lastModified","etag","isLocal","processData","contentType","accepts","xml","json","ajaxSetup","ajaxPrefilter","ajaxTransport","statusCode","getAllResponseHeaders","setRequestHeader","overrideMimeType","status","abort","method","crossDomain","hasContent","ifModified","headers","beforeSend","timeout","send","statusText","rejectWith","getScript","getJSON","script","head","scriptCharset","charset","onload","onreadystatechange","On","Bn","jsonp","jsonpCallback","Pn","Rn","Wn","$n","In","XMLHttpRequest","zn","xhr","cors","username","open","xhrFields","unload","Xn","Un","Vn","Yn","Jn","Gn","nr","Qn","createTween","unit","start","Kn","Zn","er","startTime","duration","tweens","run","opts","specialEasing","originalProperties","originalOptions","Tween","easing","timer","anim","unqueued","overflow","overflowX","overflowY","rr","ir","height","or","Animation","tweener","prefilter","pos","step","animate","fadeTo","speed","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","old","linear","swing","cos","PI","tick","interval","setInterval","clearInterval","slow","fast","animated","offset","setOffset","getBoundingClientRect","pageYOffset","pageXOffset","using","offsetParent","scrollTo","Height","Width","content","define","RecorderLM","NOOP","Recorder","initFn","bitRate","sampleRate","bufferSize","onProcess","IsOpen","stream","Stream","tracks","getTracks","Support","AC","AudioContext","webkitAudioContext","scope","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Scope","Ctx","True","False","f1","f2","code","message","console","notAllow","pro","audio","This","_stop","ctx","buffer","recSize","log","srcSampleRate","isMock","resume","_start","onInt","media","createMediaStreamSource","process","createScriptProcessor","createJavaScriptNode","onaudioprocess","inputBuffer","getChannelData","powerLevel","res","Int16Array","power","min","abs","round","log10","bufferSampleRate","connect","destination","disconnect","pause","_resume","mock","pcmData","pcmSampleRate","floor","idx","nl","il","t1","blob","msg","render","_vm","_h","$createElement","_c","_self","attrs","staticClass","Recordingtage","_v","_s","Recordingtime","bengin","_e","startRecording","endRecording","staticRenderFns","Recordingnum","rec","created","mounted","methods","recopen","recstop","buffers","level","time","down","batCall","_this","recclose","recstart","downloadElement","download","decodeURI","URL","revokeObjectURL","component","module","exports","__webpack_amd_options__","DESCRIPTORS","objectDefinePropertyModule","regExpFlags","fails","FORCED","getOwnPropertyDescriptor","dotAll","sticky","configurable","LOG10E","stat","$find","addToUnscopables","FIND","SKIPS_HOLES","proto","forced","callbackfn","undefined","lamejs","new_byte","count","Int8Array","new_short","new_int","Int32Array","new_float","Float32Array","new_double","Float64Array","new_float_n","args","sz","new_int_n","new_short_n","new_array_n","Arrays","fromIndex","toIndex","System","srcPos","dest","destPos","srcEnd","Util","ShortBlock","ordinal","SQRT2","FAST_LOG10","FAST_LOG10_X","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float","VbrMode","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","MPEGMode","_ordinal","Version","LAME_URL","LAME_MAJOR_VERSION","LAME_MINOR_VERSION","LAME_PATCH_VERSION","PSY_MAJOR_VERSION","PSY_MINOR_VERSION","getLameVersion","getLameShortVersion","getLameVeryShortVersion","getPsyVersion","getLameUrl","getLameOsBitness","Takehiro","qupvt","Bits","bits","setModules","_qupvt","subdv_table","quantize_lines_xrpow_01","istep","xr","xrPos","ix","ixPos","compareval0","quantize_lines_xrpow","remaining","x0","x1","x2","x3","rx0","rx1","rx2","rx3","adj43","quantize_xrpow","xp","pi","codInfo","prevNoise","sfb","sfbmax","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","global_gain","block_type","Encoder","SHORT_TYPE","NORM_TYPE","scalefac","preflag","pretab","scalefac_scale","subblock_gain","usefullsize","max_nonzero_coeff","fill","sfb_count1","ix_max","endPos","max1","max2","count_bit_ESC","t2","sum2","linbits","Tables","xlen","sum","largetbl","count_bit_noESC","sum1","hlen1","hlen","count_bit_noESC_from2","table23","table56","count_bit_noESC_from3","sum3","hlen2","hlen3","huf_tbl_noESC","choose_table","QuantizePVT","IXMAX_VAL","LARGE_BITS","choice2","choice","linmax","recalc_divide_init","gfc","cod_info","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","big_values","r0","a1","scalefac_band","r0bits","bi","r0t","r1","a2","r1t","recalc_divide_sub","cod_info2","gi","r2","SBMAX_l","count1bits","part2_3_length","r2t","assign","region0_count","region1_count","table_select","noquant_count_bits","prev_noise","l3_enc","count1","t32l","t33l","count1table_select","bv_scf","use_best_huffman","best_huffman_divide","count_bits","IPOW20","xrpow_max","substep_shaping","gain","roundfac","pseudohalf","GrInfo","mode_gr","slen1_n","slen2_n","slen1_tab","slen2_tab","scfsi_calc","ch","l3_side","g0","scfsi_band","scfsi","s1","c1","s2","c2","SBPSY_l","part2_length","scalefac_compress","best_scalefac_store","gr","recalc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","tab","max_slen1","max_slen2","mixed_block_flag","sfbdivide","max_range_sfac_tab","table_number","row_in_table","partition","nr_sfb","over","max_sfac","partition_table","nr_of_sfb_block","slen1","slen2","slen3","slen4","sfb_partition_table","slen","log2tab","err","printf","huffman_init","bv_index","scfb_anz","GainAnalysis","PINK_REF","RMS_PERCENTILE","YULE_ORDER","RMS_WINDOW_TIME_NUMERATOR","MAX_SAMP_FREQ","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","inputPos","output","outputPos","nSamples","kernel","filterButter","ResetSampleFrequency","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","fsqr","analyzeResult","len","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","ceil","STEPS_per_dB","InitGainAnalysis","linpre","rinpre","lstep","rstep","lout","rout","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","num_samples","num_channels","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","arraycopy","ival","GetTitleGain","retval","Presets","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","vbr_q","quant_comp","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","msfix","ABRPresets","kbps","bass","sc","mask","interCh","sfScale","nsmsfix","nsbass","scale","sfscale","lame","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","gfp","enforce","vbr_preset","VBR","VBR_q_frac","lame_set_VBR_q","quant_comp_short","experimentalY","internal_flags","nsPsy","attackthre","attackthre_s","maskingadjust","maskingadjust_short","ATHlower","ATHcurve","athaa_sensitivity","interChRatio","exp_nspsytune","VBR_q","abr_switch_map","apply_abr_preset","preset","actual_bitrate","nearestBitrateFullIndex","VBR_mean_bitrate_kbps","brate","disable_reservoir","noise_shaping","int","ret","apply_preset","Lame","R3MIX","V3","MEDIUM","V4","MEDIUM_FAST","STANDARD","V2","STANDARD_FAST","EXTREME","V0","EXTREME_FAST","INSANE","V9","V8","V7","V6","V5","V1","Reservoir","bs","_bs","ResvFrameBegin","mean_bits","maxmp3buf","frameLength","getframebits","sideinfo_len","resvLimit","out_samplerate","strict_ISO","ResvMax","fullFrameBits","ResvSize","resvDrain_pre","pinfo","resvsize","ResvMaxBits","targ_bits","cbr","add_bits","extra_bits","ResvAdjust","ResvFrameEnd","over_bits","stuffingBits","resvDrain_post","mdb_bytes","main_data_begin","VBRTag","FRAMES_FLAG","BYTES_FLAG","TOC_FLAG","VBR_SCALE_FLAG","NUMTOCENTRIES","MAXFRAMESIZE","VBRHEADERSIZE","LAMEHEADERSIZE","XING_BITRATE1","XING_BITRATE2","XING_BITRATE25","ISO_8859_1","VBRTag0","VBRTag1","crc16Lookup","addVbr","bitrate","nVbrNumFrames","seen","want","bag","xingSeekTable","act","indx","seek_point","extractInteger","buf","bufPos","createInteger","createShort","isVbrTag","equals","shiftInBitsValue","setLameTagFrameHeader","version","error_protection","bitrate_index","samplerate_index","extension","mode","mode_ext","copyright","original","emphasis","bbyte","abyte","free_format","BitrateIndex","crcUpdateLookup","crc","tmp","putLameVBR","musicLength","streamBuffer","streamBufferPos","vbr","revMethod","abrBitrate","bytesWritten","encDelay","encoder_delay","encPadding","encoder_padding","quality","revision","vbrTypeTranslator","lowpass","lowpassfreq","peakSignalAmplitude","radioReplayGain","audiophileReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","misc","musicCRC","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","nogap_total","noGapCurr","nogap_current","athType","ATHtype","flags","VBR_min_bitrate_kbps","findReplayGain","RadioGain","findPeakSample","PeakSample","pow","MONO","STEREO","DUAL_CHANNEL","JOINT_STEREO","force_ms","NOT_SET","in_samplerate","short_blocks","highpassfreq","scale_left","scale_right","noATH","ATHonly","nMusicCRC","skipId3v2","fpStream","seek","id3v2TagSize","id3v2Header","readFully","startsWith","addVbrFrame","bitrate_table","VBR_seek_table","getVbrTag","pTagData","VBRTagData","hId","hSrIndex","hMode","hBitrate","samprate","samplerate_table","head_flags","frames","bytes","toc","vbrScale","headersize","InitVbrTag","kbps_header","totalFrameSize","headerSize","TotalFrameSize","bWriteVbrTag","nBytesWritten","add_dummy_byte","updateMusicCRC","bufferPos","getLameTagFrame","Class_ID","LAME_ID","streamIndex","streamSize","CRC_writeheader","putVbrTag","BitStream","self","CRC16_POLYNOMIAL","ga","mpg","ver","_ga","_mpg","_ver","_vbr","totbit","bufByteIdx","bufBitIdx","putheader_bits","w_ptr","LameInternalFlags","MAX_HEADER_BUF","putbits2","write_timing","putbits_noheaders","drain_into_ancillary","remainingBits","ancillary_flag","writeheader","ptr","h_ptr","CRC_update","encodeSideInfo2","bitsPerFrame","channels_out","private_bits","band","println","huffman_coder_count1","huffbits","table","Huffmancode","tableindex","cbits","xbits","ext","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","writeMainData","data_bits","tot_bits","sfb_partition","scale_bits","sfbs","TotalBytes","total","compute_flushbits","total_bytes_output","flushbits","remaining_headers","last_ptr","first_ptr","bit_rate","byte","flush_bitstream","rgdata","noclipGainChange","EQ","noclipScale","format_bitstream","copy_buffer","mp3data","minimum","decode_on_the_fly","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","hip","init_bit_stream_w","LAME_MAXMP3BUFFER","HuffCodeTab","hl","MAX_dB","NEQ","MeanBits","meanBits","CalcNoiseResult","over_noise","tot_noise","max_noise","over_count","over_SSD","VBRQuantize","_tk","ATH","useAdjust","aaSensitivityP","adjust","adjustLimit","decay","SBMAX_s","psfb21","PSFB21","psfb12","PSFB12","cb_l","CBANDS","cb_s","eql_w","BLKSIZE","LameGlobalFlags","class_id","analysis","decode_only","write_id3tag_automatic","compression_ratio","experimentalZ","VBR_max_bitrate_kbps","VBR_hard_min","lowpasswidth","highpasswidth","ATHshort","athaa_type","athaa_loudapprox","useTemporal","tune","tune_value_a","framesize","frameNum","lame_allocated_gfp","CBRNewIterationLoop","_quantize","quantize","iteration_loop","pe","ms_ener_ratio","ratio","max_bits","l3_xmin","L3Side","SFBMAX","xrpow","mb","rv","on_pe","MPG_MD_MS_LR","ms_convert","reduce_side","masking_lower_db","PSY","mask_adjust","mask_adjust_short","masking_lower","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","ReplayGain","freqindex","ScaleFac","arrL","arrS","arr21","arr12","tak","psy","POW20","pow20","Q_MAX2","_rv","_psy","ipow20","DBL_EPSILON","PRECALC_SIZE","Q_MAX","NSATHSCALE","sfBandIndex","pow43","ATHmdct","ath","ATHformula","compute_ath","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","freq","ATH_f","StartLine","iteration_init","iteration_init_init","alto","treble","sfb21","longfact","shortfact","tbits","MAX_BITS_PER_GRANULE","MAX_BITS_PER_CHANNEL","fac","move_bits","athAdjust","athFloor","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","psy_lmax","xmin","rh1","rh2","en0","xa","xb","thm","max_nonzero","sfb_smin","psymax","tmpATH","SBPSY_s","calc_noise_core","startline","noise","temp","ix01","calc_noise","distort","distortPos","l3_xminPos","over_noise_db","tot_noise_db","scalefacPos","noise_log","sl","set_pinfo","sfb2","en1","ifqstep","xfsf","sfb_lmax","bw","thr","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","CalcNoiseData","clone_int","array","clone_float","other","t1HB","t2HB","t3HB","t5HB","t6HB","t7HB","t8HB","t9HB","t10HB","t11HB","t12HB","t13HB","t15HB","t16HB","t24HB","t32HB","t33HB","t1l","t2l","t3l","t5l","t6l","t7l","t8l","t9l","t10l","t11l","t12l","t13l","t15l","t16_5l","t16l","t24l","Quantize","tk","init_xrpow_core","sqrt","psfb21_analogsilence","ath21","block","ath12","BinSearchDirection","bin_search_StepSize","desired_rate","nBits","CurrentStep","flagGoneOver","OldValue","Direction","BINSEARCH_NONE","BINSEARCH_DOWN","BINSEARCH_UP","loop_break","penalties","get_klemm_noise","klemm_noise","quant_compare","best","calc","better","amp_scalefac_bands","bRefine","ifqstep34","noise_shaping_amp","inc_scalefac_scale","inc_subblock_gain","amp","balance_noise","sfb21_extra","ixwork","trancate_smallspectrums","work","allowedNoise","trancateThreshold","nsame","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","age","search_limit","noise_info","maxggain","huff_bits","full_outer_loop","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","found","get_framebits","frameBits","VBR_min_bitrate","VBR_max_bitrate","VBR_old_prepare","bands","analog_silence","avg","mxb","exp","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","NewMDCT","enwindow","NS","NL","win","tantab_l","cx","ca","cs","order","window_subband","x1Pos","wp","mdct_short","inout","inoutPos","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","out","outPos","_in","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","mdct_sub48","w0","w1","wk","wkPos","mdct_enc","mdct_encPos","samp","sb_sample","sampPos","band0","band1","amp_filter","bu","bd","III_psy_ratio","III_psy_xmin","FFTOFFSET","newMDCT","adjust_ATH","gr2_max","max_pow","loudness_sq","adj_lim_new","updateStats","bitrate_stereoMode_Hist","bitrate_blockType_Hist","lame_encode_frame_init","inbuf","primebuff0","primebuff1","lame_encode_mp3_frame","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","tot_ener","pe_MS","slot_lag","frac_SpF","psymodel","bufp","bufpPos","blocktype","L3psycho_anal_vbr","L3psycho_anal_ns","MPG_MD_LR_LR","sum_pe_MS","sum_pe_LR","gi0","gi1","ms_ratio","ers","energy","pefirbuf","fircoef","pcmdata","set_frame_pinfo","VBRSeekInfo","IIISideInfo","iii_psy_xmin","NsPsy","last_en_subshort","lastAttacks","MAX_HEADER_LEN","Header","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","mf_size","lowpass1","lowpass2","highpass1","highpass2","noise_shaping_stop","tag_spec","inbuf_old","blackfilt","BPC","itime","SBLIMIT","minval_l","minval_s","nb_1","nb_2","nb_s1","nb_s2","s3_ss","s3_ll","loudness_sq_save","mld_l","mld_s","bm_l","bo_l","bm_s","bo_s","npart_l","npart_s","s3ind","s3ind_s","numlines_s","numlines_l","rnumlines_l","mld_cb_l","mld_cb_s","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","ms_ener_ratio_old","blocktype_old","AudiophileGain","in_buffer_nsamples","in_buffer_0","in_buffer_1","FFT","window_s","BLKSIZE_s","costab","fht","fz","fzPos","k4","fi","tri","k1","k2","k3","kx","f0","f3","g1","g2","g3","rv_tbl","fft_short","x_real","chn","fft_long","jj","init_fft","PsyModel","fft","LOG10","rpelev","rpelev2","rpelev_s","rpelev2_s","DELBARK","VO_SCALE","temporalmask_sustain_sec","NS_PREECHO_ATT0","NS_PREECHO_ATT1","NS_PREECHO_ATT2","NS_MSFIX","NSFIRLEN","LN_TO_LOG10","NON_LINEAR_SCALE_ENERGY","psycho_loudness_approx","loudness_power","compute_ffts","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","re","im","totalenergy","HBLKSIZE","energy_save","ma_max_i1","ma_max_i2","ma_max_m","I1LIMIT","I2LIMIT","MLIMIT","init_mask_add_max_values","table1","table2","table3","mask_add","m1","m2","kk","shortblock","table2_","vbrpsy_mask_add","calc_interchannel_masking","sb","sblock","msfix1","mld","rmid","rside","ns_msfix","athadjust","msfix2","athlower","thmLR","thmM","thmS","convert_partition2scalefac_s","eb","enn","thmm","bo_s_sb","b_lim","w_curr","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l_weight","compute_masking_s","ebb","el","ecb","block_type_set","uselongblock","blocktype_d","STOP_TYPE","START_TYPE","NS_INTERP","regcoef_s","pecalc_s","mr","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","calc_mask_index_l","mask_idx","last_tab_entry","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","numchn","pcfact","wsamp_L","wsamp_S","eb_l","eb_s","ns_hpfsmpl","mask_idx_l","mask_idx_s","firbuf","firbufPos","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","HBLKSIZE_s","pf","pfPos","pfe","ers_save","eb2","ppe","ppePos","fircoef_","vbrpsy_attack_detection","sub_short_factor","n_chn_out","n_chn_psy","factor","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","psyvbr_calc_mask_index_s","vbrpsy_compute_masking_s","float","dd","dd_n","avg_mask","vbrpsy_compute_masking_l","ecb_limit","ecb_limit_2","ecb_limit_1","vbrpsy_compute_block_type","vbrpsy_apply_block_type","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","tempx","norm_s3_func_x","lim_a","lim_b","norm","s3_func","freq2bark","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","ni","j2","bark1","i1","i2","arg","f_tmp","bark2","init_s3_values","npart","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","ch01","new_thmm","psymodel_init","useOldS3","bvl_a","bvl_b","snr_l_a","snr_l_b","snr_s_a","snr_s_b","snr","frame_duration","freq_inc","eql_balance","LAME_MAXALBUMART","qu","id3","mpglib","LowPassHighPass","lowerlimit","BandPass","lPass","enc","_p","_qu","_id3","_mpglib","lame_init_old","ENCDELAY","POSTDELAY","MDCTDELAY","filter_coef","optimum_samplefreq","input_samplefreq","suggested_samplefreq","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","samplerate","optimum_bandwidth","lh","freq_map","table_index","lame_init_params_ppflt","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_qval","lame_init_bitstream","id3tag_write_v2","update_inbuffer_size","nsamples","calcNeeded","mf_needed","lame_encode_buffer_sample","buffer_l","buffer_r","mp3out","mp3size","in_buffer","in_bufferPos","in_buffer_ptr","n_in","n_out","inOut","InOut","fill_buffer","buf_size","lame_encode_frame","NumUsed","num_used","gcd","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","bpc","intratio","filter_l","BLACKSIZE","time0","joff","xvalue","n_shift","io","numUsed","lame_init","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","lame_init_params","map2MP3Frequency","linear_int","hip_decode_exit","hip_decode_init","cmp","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","NSATTACKTHRE","NSATTACKTHRE_S","lame_encode_flush","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","lame_encode_buffer","id3tag_write_v1","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","Mp3Encoder","channels","gaud","maxSamples","encodeBuffer","right","_sz","subarray","flush","WavHeader","dataOffset","dataLen","fourccToInt","fourcc","charCodeAt","DECDELAY","MPG_MD_LR_I","MPG_MD_MS_I","RIFF","WAVE","fmt_","readHeader","dataView","getUint32","fmtLen","getUint16","enc_mp3","stable","testmsg","mp3","blockSize","Blob","enumerable","WaveView","lineWidth","linear1","linear2","linearBg","querySelector","thisElem","canvas","getContext","genLinear","_phase","colors","rtv","createLinearGradient","addColorStop","genPath","frequency","amplitude","phase","maxAmplitude","scaling","speedx","path1","path2","clearRect","beginPath","moveTo","lineTo","closePath","fillStyle","drawPath","path","strokeStyle","stroke"],"mappings":"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AQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KACxD,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,IACxD,MAAQ,KAAQ,KAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KACxD,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KACxD,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAA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,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI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kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgB/6B,EAAKG,MAAQ,GAAM,QACnC,WAAgBH,EAAKG,MAAQ,GAAM,QACnC,WAAeH,EAAKG,MAAQ,GAAM,QAClC,WAAeH,EAAKG,MAAQ,GAAM,QAClC,UAAcH,EAAKG,MAAQ,GAAM,QACjC,UAAcH,EAAKG,MAAQ,GAAM,QACjC,UAAcH,EAAKG,MAAQ,GAAM,QACjC,SAAaH,EAAKG,MAAQ,GAAM,QAEhC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAGE66B,EAAK,GACLC,EAAK,GAELC,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACC,mBACA,kBACD,kBACA,IAEC,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBAED,kBACA,kBA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","file":"js/chunk-798eec4a.44508c4e.js","sourcesContent":["var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int32Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int32', function (init) {\n  return function Int32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","/*eslint-disable*/\r\n/*! jQuery v1.9.1 | (c) 2005, 2012 jQuery Foundation, Inc. | jquery.org/license\r\n//@ sourceMappingURL=jquery.min.map\r\n*/(function(e,t){var n,r,i=typeof t,o=e.document,a=e.location,s=e.jQuery,u=e.$,l={},c=[],p=\"1.9.1\",f=c.concat,d=c.push,h=c.slice,g=c.indexOf,m=l.toString,y=l.hasOwnProperty,v=p.trim,b=function(e,t){return new b.fn.init(e,t,r)},x=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,w=/\\S+/g,T=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,N=/^(?:(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,C=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,k=/^[\\],:{}\\s]*$/,E=/(?:^|:|,)(?:\\s*\\[)+/g,S=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,A=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,j=/^-ms-/,D=/-([\\da-z])/gi,L=function(e,t){return t.toUpperCase()},H=function(e){(o.addEventListener||\"load\"===e.type||\"complete\"===o.readyState)&&(q(),b.ready())},q=function(){o.addEventListener?(o.removeEventListener(\"DOMContentLoaded\",H,!1),e.removeEventListener(\"load\",H,!1)):(o.detachEvent(\"onreadystatechange\",H),e.detachEvent(\"onload\",H))};b.fn=b.prototype={jquery:p,constructor:b,init:function(e,n,r){var i,a;if(!e)return this;if(\"string\"==typeof e){if(i=\"<\"===e.charAt(0)&&\">\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof b?n[0]:n,b.merge(this,b.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:o,!0)),C.test(i[1])&&b.isPlainObject(n))for(i in n)b.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(a=o.getElementById(i[2]),a&&a.parentNode){if(a.id!==i[2])return r.find(e);this.length=1,this[0]=a}return this.context=o,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):b.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),b.makeArray(e,this))},selector:\"\",length:0,size:function(){return this.length},toArray:function(){return h.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=b.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return b.each(this,e,t)},ready:function(e){return b.ready.promise().done(e),this},slice:function(){return this.pushStack(h.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(b.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:d,sort:[].sort,splice:[].splice},b.fn.init.prototype=b.fn,b.extend=b.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},u=1,l=arguments.length,c=!1;for(\"boolean\"==typeof s&&(c=s,s=arguments[1]||{},u=2),\"object\"==typeof s||b.isFunction(s)||(s={}),l===u&&(s=this,--u);l>u;u++)if(null!=(o=arguments[u]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(b.isPlainObject(r)||(n=b.isArray(r)))?(n?(n=!1,a=e&&b.isArray(e)?e:[]):a=e&&b.isPlainObject(e)?e:{},s[i]=b.extend(c,a,r)):r!==t&&(s[i]=r));return s},b.extend({noConflict:function(t){return e.$===b&&(e.$=u),t&&e.jQuery===b&&(e.jQuery=s),b},isReady:!1,readyWait:1,holdReady:function(e){e?b.readyWait++:b.ready(!0)},ready:function(e){if(e===!0?!--b.readyWait:!b.isReady){if(!o.body)return setTimeout(b.ready);b.isReady=!0,e!==!0&&--b.readyWait>0||(n.resolveWith(o,[b]),b.fn.trigger&&b(o).trigger(\"ready\").off(\"ready\"))}},isFunction:function(e){return\"function\"===b.type(e)},isArray:Array.isArray||function(e){return\"array\"===b.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?l[m.call(e)]||\"object\":typeof e},isPlainObject:function(e){if(!e||\"object\"!==b.type(e)||e.nodeType||b.isWindow(e))return!1;try{if(e.constructor&&!y.call(e,\"constructor\")&&!y.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(n){return!1}var r;for(r in e);return r===t||y.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||o;var r=C.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=b.buildFragment([e],t,i),i&&b(i).remove(),b.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:\"string\"==typeof n&&(n=b.trim(n),n&&k.test(n.replace(S,\"@\").replace(A,\"]\").replace(E,\"\")))?Function(\"return \"+n)():(b.error(\"Invalid JSON: \"+n),t)},parseXML:function(n){var r,i;if(!n||\"string\"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,\"text/xml\")):(r=new ActiveXObject(\"Microsoft.XMLDOM\"),r.async=\"false\",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length||b.error(\"Invalid XML: \"+n),r},noop:function(){},globalEval:function(t){t&&b.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(j,\"ms-\").replace(D,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:v&&!v.call(\"\\ufeff\\u00a0\")?function(e){return null==e?\"\":v.call(e)}:function(e){return null==e?\"\":(e+\"\").replace(T,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?b.merge(n,\"string\"==typeof e?[e]:e):d.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(g)return g.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if(\"number\"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return f.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return\"string\"==typeof n&&(o=e[n],n=e,e=o),b.isFunction(e)?(r=h.call(arguments,2),i=function(){return e.apply(n||this,r.concat(h.call(arguments)))},i.guid=e.guid=e.guid||b.guid++,i):t},access:function(e,n,r,i,o,a,s){var u=0,l=e.length,c=null==r;if(\"object\"===b.type(r)){o=!0;for(u in r)b.access(e,n,u,r[u],!0,a,s)}else if(i!==t&&(o=!0,b.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(b(e),n)})),n))for(;l>u;u++)n(e[u],r,s?i:i.call(e[u],u,n(e[u],r)));return o?e:c?n.call(e):l?n(e[0],r):a},now:function(){return(new Date).getTime()}}),b.ready.promise=function(t){if(!n)if(n=b.Deferred(),\"complete\"===o.readyState)setTimeout(b.ready);else if(o.addEventListener)o.addEventListener(\"DOMContentLoaded\",H,!1),e.addEventListener(\"load\",H,!1);else{o.attachEvent(\"onreadystatechange\",H),e.attachEvent(\"onload\",H);var r=!1;try{r=null==e.frameElement&&o.documentElement}catch(i){}r&&r.doScroll&&function a(){if(!b.isReady){try{r.doScroll(\"left\")}catch(e){return setTimeout(a,50)}q(),b.ready()}}()}return n.promise(t)},b.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){l[\"[object \"+t+\"]\"]=t.toLowerCase()});function M(e){var t=e.length,n=b.type(e);return b.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}r=b(o);var _={};function F(e){var t=_[e]={};return b.each(e.match(w)||[],function(e,n){t[n]=!0}),t}b.Callbacks=function(e){e=\"string\"==typeof e?_[e]||F(e):b.extend({},e);var n,r,i,o,a,s,u=[],l=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=u.length,n=!0;u&&o>a;a++)if(u[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,u&&(l?l.length&&c(l.shift()):r?u=[]:p.disable())},p={add:function(){if(u){var t=u.length;(function i(t){b.each(t,function(t,n){var r=b.type(n);\"function\"===r?e.unique&&p.has(n)||u.push(n):n&&n.length&&\"string\"!==r&&i(n)})})(arguments),n?o=u.length:r&&(s=t,c(r))}return this},remove:function(){return u&&b.each(arguments,function(e,t){var r;while((r=b.inArray(t,u,r))>-1)u.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?b.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],this},disable:function(){return u=l=r=t,this},disabled:function(){return!u},lock:function(){return l=t,r||p.disable(),this},locked:function(){return!l},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],!u||i&&!l||(n?l.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},b.extend({Deferred:function(e){var t=[[\"resolve\",\"done\",b.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",b.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",b.Callbacks(\"memory\")]],n=\"pending\",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return b.Deferred(function(n){b.each(t,function(t,o){var a=o[0],s=b.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&b.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+\"With\"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?b.extend(e,r):r}},i={};return r.pipe=r.then,b.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+\"With\"](this===i?r:this,arguments),this},i[o[0]+\"With\"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=h.call(arguments),r=n.length,i=1!==r||e&&b.isFunction(e.promise)?r:0,o=1===i?e:b.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?h.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,u,l;if(r>1)for(s=Array(r),u=Array(r),l=Array(r);r>t;t++)n[t]&&b.isFunction(n[t].promise)?n[t].promise().done(a(t,l,n)).fail(o.reject).progress(a(t,u,s)):--i;return i||o.resolveWith(l,n),o.promise()}}),b.support=function(){var t,n,r,a,s,u,l,c,p,f,d=o.createElement(\"div\");if(d.setAttribute(\"className\",\"t\"),d.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",n=d.getElementsByTagName(\"*\"),r=d.getElementsByTagName(\"a\")[0],!n||!r||!n.length)return{};s=o.createElement(\"select\"),l=s.appendChild(o.createElement(\"option\")),a=d.getElementsByTagName(\"input\")[0],r.style.cssText=\"top:1px;float:left;opacity:.5\",t={getSetAttribute:\"t\"!==d.className,leadingWhitespace:3===d.firstChild.nodeType,tbody:!d.getElementsByTagName(\"tbody\").length,htmlSerialize:!!d.getElementsByTagName(\"link\").length,style:/top/.test(r.getAttribute(\"style\")),hrefNormalized:\"/a\"===r.getAttribute(\"href\"),opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:!!a.value,optSelected:l.selected,enctype:!!o.createElement(\"form\").enctype,html5Clone:\"<:nav></:nav>\"!==o.createElement(\"nav\").cloneNode(!0).outerHTML,boxModel:\"CSS1Compat\"===o.compatMode,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},a.checked=!0,t.noCloneChecked=a.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!l.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}a=o.createElement(\"input\"),a.setAttribute(\"value\",\"\"),t.input=\"\"===a.getAttribute(\"value\"),a.value=\"t\",a.setAttribute(\"type\",\"radio\"),t.radioValue=\"t\"===a.value,a.setAttribute(\"checked\",\"t\"),a.setAttribute(\"name\",\"t\"),u=o.createDocumentFragment(),u.appendChild(a),t.appendChecked=a.checked,t.checkClone=u.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent(\"onclick\",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c=\"on\"+f,\"t\"),t[f+\"Bubbles\"]=c in e||d.attributes[c].expando===!1;return d.style.backgroundClip=\"content-box\",d.cloneNode(!0).style.backgroundClip=\"\",t.clearCloneStyle=\"content-box\"===d.style.backgroundClip,b(function(){var n,r,a,s=\"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",u=o.getElementsByTagName(\"body\")[0];u&&(n=o.createElement(\"div\"),n.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",u.appendChild(n).appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",a=d.getElementsByTagName(\"td\"),a[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",p=0===a[0].offsetHeight,a[0].style.display=\"\",a[1].style.display=\"none\",t.reliableHiddenOffsets=p&&0===a[0].offsetHeight,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",t.boxSizing=4===d.offsetWidth,t.doesNotIncludeMarginInBodyOffset=1!==u.offsetTop,e.getComputedStyle&&(t.pixelPosition=\"1%\"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable=\"4px\"===(e.getComputedStyle(d,null)||{width:\"4px\"}).width,r=d.appendChild(o.createElement(\"div\")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width=\"0\",d.style.width=\"1px\",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML=\"\",d.style.cssText=s+\"width:1px;padding:1px;display:inline;zoom:1\",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display=\"block\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(u.style.zoom=1)),u.removeChild(n),n=d=a=r=null)}),n=s=u=l=r=a=null,t}();var O=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,B=/([A-Z])/g;function P(e,n,r,i){if(b.acceptData(e)){var o,a,s=b.expando,u=\"string\"==typeof n,l=e.nodeType,p=l?b.cache:e,f=l?e[s]:e[s]&&s;if(f&&p[f]&&(i||p[f].data)||!u||r!==t)return f||(l?e[s]=f=c.pop()||b.guid++:f=s),p[f]||(p[f]={},l||(p[f].toJSON=b.noop)),(\"object\"==typeof n||\"function\"==typeof n)&&(i?p[f]=b.extend(p[f],n):p[f].data=b.extend(p[f].data,n)),o=p[f],i||(o.data||(o.data={}),o=o.data),r!==t&&(o[b.camelCase(n)]=r),u?(a=o[n],null==a&&(a=o[b.camelCase(n)])):a=o,a}}function R(e,t,n){if(b.acceptData(e)){var r,i,o,a=e.nodeType,s=a?b.cache:e,u=a?e[b.expando]:b.expando;if(s[u]){if(t&&(o=n?s[u]:s[u].data)){b.isArray(t)?t=t.concat(b.map(t,b.camelCase)):t in o?t=[t]:(t=b.camelCase(t),t=t in o?[t]:t.split(\" \"));for(r=0,i=t.length;i>r;r++)delete o[t[r]];if(!(n?$:b.isEmptyObject)(o))return}(n||(delete s[u].data,$(s[u])))&&(a?b.cleanData([e],!0):b.support.deleteExpando||s!=s.window?delete s[u]:s[u]=null)}}}b.extend({cache:{},expando:\"jQuery\"+(p+Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",applet:!0},hasData:function(e){return e=e.nodeType?b.cache[e[b.expando]]:e[b.expando],!!e&&!$(e)},data:function(e,t,n){return P(e,t,n)},removeData:function(e,t){return R(e,t)},_data:function(e,t,n){return P(e,t,n,!0)},_removeData:function(e,t){return R(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&b.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute(\"classid\")===t}}),b.fn.extend({data:function(e,n){var r,i,o=this[0],a=0,s=null;if(e===t){if(this.length&&(s=b.data(o),1===o.nodeType&&!b._data(o,\"parsedAttrs\"))){for(r=o.attributes;r.length>a;a++)i=r[a].name,i.indexOf(\"data-\")||(i=b.camelCase(i.slice(5)),W(o,i,s[i]));b._data(o,\"parsedAttrs\",!0)}return s}return\"object\"==typeof e?this.each(function(){b.data(this,e)}):b.access(this,function(n){return n===t?o?W(o,e,b.data(o,e)):null:(this.each(function(){b.data(this,e,n)}),t)},null,n,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){b.removeData(this,e)})}});function W(e,n,r){if(r===t&&1===e.nodeType){var i=\"data-\"+n.replace(B,\"-$1\").toLowerCase();if(r=e.getAttribute(i),\"string\"==typeof r){try{r=\"true\"===r?!0:\"false\"===r?!1:\"null\"===r?null:+r+\"\"===r?+r:O.test(r)?b.parseJSON(r):r}catch(o){}b.data(e,n,r)}else r=t}return r}function $(e){var t;for(t in e)if((\"data\"!==t||!b.isEmptyObject(e[t]))&&\"toJSON\"!==t)return!1;return!0}b.extend({queue:function(e,n,r){var i;return e?(n=(n||\"fx\")+\"queue\",i=b._data(e,n),r&&(!i||b.isArray(r)?i=b._data(e,n,b.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||\"fx\";var n=b.queue(e,t),r=n.length,i=n.shift(),o=b._queueHooks(e,t),a=function(){b.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),o.cur=i,i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return b._data(e,n)||b._data(e,n,{empty:b.Callbacks(\"once memory\").add(function(){b._removeData(e,t+\"queue\"),b._removeData(e,n)})})}}),b.fn.extend({queue:function(e,n){var r=2;return\"string\"!=typeof e&&(n=e,e=\"fx\",r--),r>arguments.length?b.queue(this[0],e):n===t?this:this.each(function(){var t=b.queue(this,e,n);b._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==t[0]&&b.dequeue(this,e)})},dequeue:function(e){return this.each(function(){b.dequeue(this,e)})},delay:function(e,t){return e=b.fx?b.fx.speeds[e]||e:e,t=t||\"fx\",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,n){var r,i=1,o=b.Deferred(),a=this,s=this.length,u=function(){--i||o.resolveWith(a,[a])};\"string\"!=typeof e&&(n=e,e=t),e=e||\"fx\";while(s--)r=b._data(a[s],e+\"queueHooks\"),r&&r.empty&&(i++,r.empty.add(u));return u(),o.promise(n)}});var I,z,X=/[\\t\\r\\n]/g,U=/\\r/g,V=/^(?:input|select|textarea|button|object)$/i,Y=/^(?:a|area)$/i,J=/^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i,G=/^(?:checked|selected)$/i,Q=b.support.getSetAttribute,K=b.support.input;b.fn.extend({attr:function(e,t){return b.access(this,b.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){b.removeAttr(this,e)})},prop:function(e,t){return b.access(this,b.prop,e,t,arguments.length>1)},removeProp:function(e){return e=b.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=\"string\"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(X,\" \"):\" \")){o=0;while(i=t[o++])0>r.indexOf(\" \"+i+\" \")&&(r+=i+\" \");n.className=b.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=0===arguments.length||\"string\"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(X,\" \"):\"\")){o=0;while(i=t[o++])while(r.indexOf(\" \"+i+\" \")>=0)r=r.replace(\" \"+i+\" \",\" \");n.className=e?b.trim(r):\"\"}return this},toggleClass:function(e,t){var n=typeof e,r=\"boolean\"==typeof t;return b.isFunction(e)?this.each(function(n){b(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(\"string\"===n){var o,a=0,s=b(this),u=t,l=e.match(w)||[];while(o=l[a++])u=r?u:!s.hasClass(o),s[u?\"addClass\":\"removeClass\"](o)}else(n===i||\"boolean\"===n)&&(this.className&&b._data(this,\"__className__\",this.className),this.className=this.className||e===!1?\"\":b._data(this,\"__className__\")||\"\")})},hasClass:function(e){var t=\" \"+e+\" \",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(\" \"+this[n].className+\" \").replace(X,\" \").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=b.isFunction(e),this.each(function(n){var o,a=b(this);1===this.nodeType&&(o=i?e.call(this,n,a.val()):e,null==o?o=\"\":\"number\"==typeof o?o+=\"\":b.isArray(o)&&(o=b.map(o,function(e){return null==e?\"\":e+\"\"})),r=b.valHooks[this.type]||b.valHooks[this.nodeName.toLowerCase()],r&&\"set\"in r&&r.set(this,o,\"value\")!==t||(this.value=o))});if(o)return r=b.valHooks[o.type]||b.valHooks[o.nodeName.toLowerCase()],r&&\"get\"in r&&(n=r.get(o,\"value\"))!==t?n:(n=o.value,\"string\"==typeof n?n.replace(U,\"\"):null==n?\"\":n)}}}),b.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o=\"select-one\"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,u=0>i?s:o?i:0;for(;s>u;u++)if(n=r[u],!(!n.selected&&u!==i||(b.support.optDisabled?n.disabled:null!==n.getAttribute(\"disabled\"))||n.parentNode.disabled&&b.nodeName(n.parentNode,\"optgroup\"))){if(t=b(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n=b.makeArray(t);return b(e).find(\"option\").each(function(){this.selected=b.inArray(b(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attr:function(e,n,r){var o,a,s,u=e.nodeType;if(e&&3!==u&&8!==u&&2!==u)return typeof e.getAttribute===i?b.prop(e,n,r):(a=1!==u||!b.isXMLDoc(e),a&&(n=n.toLowerCase(),o=b.attrHooks[n]||(J.test(n)?z:I)),r===t?o&&a&&\"get\"in o&&null!==(s=o.get(e,n))?s:(typeof e.getAttribute!==i&&(s=e.getAttribute(n)),null==s?t:s):null!==r?o&&a&&\"set\"in o&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+\"\"),r):(b.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(w);if(o&&1===e.nodeType)while(n=o[i++])r=b.propFix[n]||n,J.test(n)?!Q&&G.test(n)?e[b.camelCase(\"default-\"+n)]=e[r]=!1:e[r]=!1:b.attr(e,n,\"\"),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!b.support.radioValue&&\"radio\"===t&&b.nodeName(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},propFix:{tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!b.isXMLDoc(e),a&&(n=b.propFix[n]||n,o=b.propHooks[n]),r!==t?o&&\"set\"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&\"get\"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode(\"tabindex\");return n&&n.specified?parseInt(n.value,10):V.test(e.nodeName)||Y.test(e.nodeName)&&e.href?0:t}}}}),z={get:function(e,n){var r=b.prop(e,n),i=\"boolean\"==typeof r&&e.getAttribute(n),o=\"boolean\"==typeof r?K&&Q?null!=i:G.test(n)?e[b.camelCase(\"default-\"+n)]:!!i:e.getAttributeNode(n);return o&&o.value!==!1?n.toLowerCase():t},set:function(e,t,n){return t===!1?b.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&b.propFix[n]||n,n):e[b.camelCase(\"default-\"+n)]=e[n]=!0,n}},K&&Q||(b.attrHooks.value={get:function(e,n){var r=e.getAttributeNode(n);return b.nodeName(e,\"input\")?e.defaultValue:r&&r.specified?r.value:t},set:function(e,n,r){return b.nodeName(e,\"input\")?(e.defaultValue=n,t):I&&I.set(e,n,r)}}),Q||(I=b.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&(\"id\"===n||\"name\"===n||\"coords\"===n?\"\"!==r.value:r.specified)?r.value:t},set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+=\"\",\"value\"===r||n===e.getAttribute(r)?n:t}},b.attrHooks.contenteditable={get:I.get,set:function(e,t,n){I.set(e,\"\"===t?!1:t,n)}},b.each([\"width\",\"height\"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{set:function(e,r){return\"\"===r?(e.setAttribute(n,\"auto\"),r):t}})})),b.support.hrefNormalized||(b.each([\"href\",\"src\",\"width\",\"height\"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return null==r?t:r}})}),b.each([\"href\",\"src\"],function(e,t){b.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}})),b.support.style||(b.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+\"\"}}),b.support.optSelected||(b.propHooks.selected=b.extend(b.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),b.support.enctype||(b.propFix.enctype=\"encoding\"),b.support.checkOn||b.each([\"radio\",\"checkbox\"],function(){b.valHooks[this]={get:function(e){return null===e.getAttribute(\"value\")?\"on\":e.value}}}),b.each([\"radio\",\"checkbox\"],function(){b.valHooks[this]=b.extend(b.valHooks[this],{set:function(e,n){return b.isArray(n)?e.checked=b.inArray(b(e).val(),n)>=0:t}})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\\.(.+)|)$/;function it(){return!0}function ot(){return!1}b.event={global:{},add:function(e,n,r,o,a){var s,u,l,c,p,f,d,h,g,m,y,v=b._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=b.guid++),(u=v.events)||(u=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof b===i||e&&b.event.triggered===e.type?t:b.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||\"\").match(w)||[\"\"],l=n.length;while(l--)s=rt.exec(n[l])||[],g=y=s[1],m=(s[2]||\"\").split(\".\").sort(),p=b.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=b.event.special[g]||{},d=b.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&b.expr.match.needsContext.test(a),namespace:m.join(\".\")},c),(h=u[g])||(h=u[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent(\"on\"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),b.event.global[g]=!0;e=null}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,p,f,d,h,g,m=b.hasData(e)&&b._data(e);if(m&&(c=m.events)){t=(t||\"\").match(w)||[\"\"],l=t.length;while(l--)if(s=rt.exec(t[l])||[],d=g=s[1],h=(s[2]||\"\").split(\".\").sort(),d){p=b.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),u=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&(\"**\"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));u&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||b.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)b.event.remove(e,d+t[l],n,r,!0);b.isEmptyObject(c)&&(delete m.handle,b._removeData(e,\"events\"))}},trigger:function(n,r,i,a){var s,u,l,c,p,f,d,h=[i||o],g=y.call(n,\"type\")?n.type:n,m=y.call(n,\"namespace\")?n.namespace.split(\".\"):[];if(l=f=i=i||o,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+b.event.triggered)&&(g.indexOf(\".\")>=0&&(m=g.split(\".\"),g=m.shift(),m.sort()),u=0>g.indexOf(\":\")&&\"on\"+g,n=n[b.expando]?n:new b.Event(g,\"object\"==typeof n&&n),n.isTrigger=!0,n.namespace=m.join(\".\"),n.namespace_re=n.namespace?RegExp(\"(^|\\\\.)\"+m.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:b.makeArray(r,[n]),p=b.event.special[g]||{},a||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!a&&!p.noBubble&&!b.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(l=l.parentNode);l;l=l.parentNode)h.push(l),f=l;f===(i.ownerDocument||o)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((l=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(b._data(l,\"events\")||{})[n.type]&&b._data(l,\"handle\"),s&&s.apply(l,r),s=u&&l[u],s&&b.acceptData(l)&&s.apply&&s.apply(l,r)===!1&&n.preventDefault();if(n.type=g,!(a||n.isDefaultPrevented()||p._default&&p._default.apply(i.ownerDocument,r)!==!1||\"click\"===g&&b.nodeName(i,\"a\")||!b.acceptData(i)||!u||!i[g]||b.isWindow(i))){f=i[u],f&&(i[u]=null),b.event.triggered=g;try{i[g]()}catch(v){}b.event.triggered=t,f&&(i[u]=f)}return n.result}},dispatch:function(e){e=b.event.fix(e);var n,r,i,o,a,s=[],u=h.call(arguments),l=(b._data(this,\"events\")||{})[e.type]||[],c=b.event.special[e.type]||{};if(u[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=b.event.handlers.call(this,e,l),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((b.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,u),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],u=n.delegateCount,l=e.target;if(u&&l.nodeType&&(!e.button||\"click\"!==e.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||\"click\"!==e.type)){for(o=[],a=0;u>a;a++)i=n[a],r=i.selector+\" \",o[r]===t&&(o[r]=i.needsContext?b(r,this).index(l)>=0:b.find(r,this,null,[l]).length),o[r]&&o.push(i);o.length&&s.push({elem:l,handlers:o})}return n.length>u&&s.push({elem:this,handlers:n.slice(u)}),s},fix:function(e){if(e[b.expando])return e;var t,n,r,i=e.type,a=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new b.Event(a),t=r.length;while(t--)n=r[t],e[n]=a[n];return e.target||(e.target=a.srcElement||o),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,a):e},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(e,n){var r,i,a,s=n.button,u=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||o,a=i.documentElement,r=i.body,e.pageX=n.clientX+(a&&a.scrollLeft||r&&r.scrollLeft||0)-(a&&a.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(a&&a.scrollTop||r&&r.scrollTop||0)-(a&&a.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&u&&(e.relatedTarget=u===e.target?n.toElement:u),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},click:{trigger:function(){return b.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):t}},focus:{trigger:function(){if(this!==o.activeElement&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===o.activeElement&&this.blur?(this.blur(),!1):t},delegateType:\"focusout\"},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=b.extend(new b.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?b.event.trigger(i,null,t):b.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},b.removeEvent=o.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r=\"on\"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},b.Event=function(e,n){return this instanceof b.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&b.extend(this,n),this.timeStamp=e&&e.timeStamp||b.now(),this[b.expando]=!0,t):new b.Event(e,n)},b.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},b.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(e,t){b.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;\r\nreturn(!i||i!==r&&!b.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),b.support.submitBubbles||(b.event.special.submit={setup:function(){return b.nodeName(this,\"form\")?!1:(b.event.add(this,\"click._submit keypress._submit\",function(e){var n=e.target,r=b.nodeName(n,\"input\")||b.nodeName(n,\"button\")?n.form:t;r&&!b._data(r,\"submitBubbles\")&&(b.event.add(r,\"submit._submit\",function(e){e._submit_bubble=!0}),b._data(r,\"submitBubbles\",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&b.event.simulate(\"submit\",this.parentNode,e,!0))},teardown:function(){return b.nodeName(this,\"form\")?!1:(b.event.remove(this,\"._submit\"),t)}}),b.support.changeBubbles||(b.event.special.change={setup:function(){return Z.test(this.nodeName)?((\"checkbox\"===this.type||\"radio\"===this.type)&&(b.event.add(this,\"propertychange._change\",function(e){\"checked\"===e.originalEvent.propertyName&&(this._just_changed=!0)}),b.event.add(this,\"click._change\",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),b.event.simulate(\"change\",this,e,!0)})),!1):(b.event.add(this,\"beforeactivate._change\",function(e){var t=e.target;Z.test(t.nodeName)&&!b._data(t,\"changeBubbles\")&&(b.event.add(t,\"change._change\",function(e){!this.parentNode||e.isSimulated||e.isTrigger||b.event.simulate(\"change\",this.parentNode,e,!0)}),b._data(t,\"changeBubbles\",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||\"radio\"!==n.type&&\"checkbox\"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return b.event.remove(this,\"._change\"),!Z.test(this.nodeName)}}),b.support.focusinBubbles||b.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=0,r=function(e){b.event.simulate(t,e.target,b.event.fix(e),!0)};b.event.special[t]={setup:function(){0===n++&&o.addEventListener(e,r,!0)},teardown:function(){0===--n&&o.removeEventListener(e,r,!0)}}}),b.fn.extend({on:function(e,n,r,i,o){var a,s;if(\"object\"==typeof e){\"string\"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&(\"string\"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return b().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=b.guid++)),this.each(function(){b.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,b(e.delegateTarget).off(i.namespace?i.origType+\".\"+i.namespace:i.origType,i.selector,i.handler),this;if(\"object\"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||\"function\"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){b.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)},trigger:function(e,t){return this.each(function(){b.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?b.event.trigger(e,n,r,!0):t}}),function(e,t){var n,r,i,o,a,s,u,l,c,p,f,d,h,g,m,y,v,x=\"sizzle\"+-new Date,w=e.document,T={},N=0,C=0,k=it(),E=it(),S=it(),A=typeof t,j=1<<31,D=[],L=D.pop,H=D.push,q=D.slice,M=D.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},_=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",F=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=F.replace(\"w\",\"w#\"),B=\"([*^$|!~]?=)\",P=\"\\\\[\"+_+\"*(\"+F+\")\"+_+\"*(?:\"+B+_+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+O+\")|)|)\"+_+\"*\\\\]\",R=\":(\"+F+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P.replace(3,8)+\")*)|.*)\\\\)|)\",W=RegExp(\"^\"+_+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+_+\"+$\",\"g\"),$=RegExp(\"^\"+_+\"*,\"+_+\"*\"),I=RegExp(\"^\"+_+\"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\"+_+\"*\"),z=RegExp(R),X=RegExp(\"^\"+O+\"$\"),U={ID:RegExp(\"^#(\"+F+\")\"),CLASS:RegExp(\"^\\\\.(\"+F+\")\"),NAME:RegExp(\"^\\\\[name=['\\\"]?(\"+F+\")['\\\"]?\\\\]\"),TAG:RegExp(\"^(\"+F.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+P),PSEUDO:RegExp(\"^\"+R),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+_+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+_+\"*(?:([+-]|)\"+_+\"*(\\\\d+)|))\"+_+\"*\\\\)|)\",\"i\"),needsContext:RegExp(\"^\"+_+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+_+\"*((?:-\\\\d)?\\\\d*)\"+_+\"*\\\\)|)(?=[^-]|$)\",\"i\")},V=/[\\x20\\t\\r\\n\\f]*[+~]/,Y=/^[^{]+\\{\\s*\\[native code/,J=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,G=/^(?:input|select|textarea|button)$/i,Q=/^h\\d$/i,K=/'|\\\\/g,Z=/\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,et=/\\\\([\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|.)/g,tt=function(e,t){var n=\"0x\"+t-65536;return n!==n?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(55296|n>>10,56320|1023&n)};try{q.call(w.documentElement.childNodes,0)[0].nodeType}catch(nt){q=function(e){var t,n=[];while(t=this[e++])n.push(t);return n}}function rt(e){return Y.test(e+\"\")}function it(){var e,t=[];return e=function(n,r){return t.push(n+=\" \")>i.cacheLength&&delete e[t.shift()],e[n]=r}}function ot(e){return e[x]=!0,e}function at(e){var t=p.createElement(\"div\");try{return e(t)}catch(n){return!1}finally{t=null}}function st(e,t,n,r){var i,o,a,s,u,l,f,g,m,v;if((t?t.ownerDocument||t:w)!==p&&c(t),t=t||p,n=n||[],!e||\"string\"!=typeof e)return n;if(1!==(s=t.nodeType)&&9!==s)return[];if(!d&&!r){if(i=J.exec(e))if(a=i[1]){if(9===s){if(o=t.getElementById(a),!o||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&y(t,o)&&o.id===a)return n.push(o),n}else{if(i[2])return H.apply(n,q.call(t.getElementsByTagName(e),0)),n;if((a=i[3])&&T.getByClassName&&t.getElementsByClassName)return H.apply(n,q.call(t.getElementsByClassName(a),0)),n}if(T.qsa&&!h.test(e)){if(f=!0,g=x,m=t,v=9===s&&e,1===s&&\"object\"!==t.nodeName.toLowerCase()){l=ft(e),(f=t.getAttribute(\"id\"))?g=f.replace(K,\"\\\\$&\"):t.setAttribute(\"id\",g),g=\"[id='\"+g+\"'] \",u=l.length;while(u--)l[u]=g+dt(l[u]);m=V.test(e)&&t.parentNode||t,v=l.join(\",\")}if(v)try{return H.apply(n,q.call(m.querySelectorAll(v),0)),n}catch(b){}finally{f||t.removeAttribute(\"id\")}}}return wt(e.replace(W,\"$1\"),t,n,r)}a=st.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?\"HTML\"!==t.nodeName:!1},c=st.setDocument=function(e){var n=e?e.ownerDocument||e:w;return n!==p&&9===n.nodeType&&n.documentElement?(p=n,f=n.documentElement,d=a(n),T.tagNameNoComments=at(function(e){return e.appendChild(n.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),T.attributes=at(function(e){e.innerHTML=\"<select></select>\";var t=typeof e.lastChild.getAttribute(\"multiple\");return\"boolean\"!==t&&\"string\"!==t}),T.getByClassName=at(function(e){return e.innerHTML=\"<div class='hidden e'></div><div class='hidden'></div>\",e.getElementsByClassName&&e.getElementsByClassName(\"e\").length?(e.lastChild.className=\"e\",2===e.getElementsByClassName(\"e\").length):!1}),T.getByName=at(function(e){e.id=x+0,e.innerHTML=\"<a name='\"+x+\"'></a><div name='\"+x+\"'></div>\",f.insertBefore(e,f.firstChild);var t=n.getElementsByName&&n.getElementsByName(x).length===2+n.getElementsByName(x+0).length;return T.getIdNotName=!n.getElementById(x),f.removeChild(e),t}),i.attrHandle=at(function(e){return e.innerHTML=\"<a href='#'></a>\",e.firstChild&&typeof e.firstChild.getAttribute!==A&&\"#\"===e.firstChild.getAttribute(\"href\")})?{}:{href:function(e){return e.getAttribute(\"href\",2)},type:function(e){return e.getAttribute(\"type\")}},T.getIdNotName?(i.find.ID=function(e,t){if(typeof t.getElementById!==A&&!d){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){return e.getAttribute(\"id\")===t}}):(i.find.ID=function(e,n){if(typeof n.getElementById!==A&&!d){var r=n.getElementById(e);return r?r.id===e||typeof r.getAttributeNode!==A&&r.getAttributeNode(\"id\").value===e?[r]:t:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){var n=typeof e.getAttributeNode!==A&&e.getAttributeNode(\"id\");return n&&n.value===t}}),i.find.TAG=T.tagNameNoComments?function(e,n){return typeof n.getElementsByTagName!==A?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},i.find.NAME=T.getByName&&function(e,n){return typeof n.getElementsByName!==A?n.getElementsByName(name):t},i.find.CLASS=T.getByClassName&&function(e,n){return typeof n.getElementsByClassName===A||d?t:n.getElementsByClassName(e)},g=[],h=[\":focus\"],(T.qsa=rt(n.querySelectorAll))&&(at(function(e){e.innerHTML=\"<select><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||h.push(\"\\\\[\"+_+\"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\"),e.querySelectorAll(\":checked\").length||h.push(\":checked\")}),at(function(e){e.innerHTML=\"<input type='hidden' i=''/>\",e.querySelectorAll(\"[i^='']\").length&&h.push(\"[*^$]=\"+_+\"*(?:\\\"\\\"|'')\"),e.querySelectorAll(\":enabled\").length||h.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),h.push(\",.*:\")})),(T.matchesSelector=rt(m=f.matchesSelector||f.mozMatchesSelector||f.webkitMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&at(function(e){T.disconnectedMatch=m.call(e,\"div\"),m.call(e,\"[s!='']:x\"),g.push(\"!=\",R)}),h=RegExp(h.join(\"|\")),g=RegExp(g.join(\"|\")),y=rt(f.contains)||f.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},v=f.compareDocumentPosition?function(e,t){var r;return e===t?(u=!0,0):(r=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t))?1&r||e.parentNode&&11===e.parentNode.nodeType?e===n||y(w,e)?-1:t===n||y(w,t)?1:0:4&r?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return u=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:0;if(o===a)return ut(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?ut(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},u=!1,[0,0].sort(v),T.detectDuplicates=u,p):p},st.matches=function(e,t){return st(e,null,null,t)},st.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&c(e),t=t.replace(Z,\"='$1']\"),!(!T.matchesSelector||d||g&&g.test(t)||h.test(t)))try{var n=m.call(e,t);if(n||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(r){}return st(t,p,null,[e]).length>0},st.contains=function(e,t){return(e.ownerDocument||e)!==p&&c(e),y(e,t)},st.attr=function(e,t){var n;return(e.ownerDocument||e)!==p&&c(e),d||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):d||T.attributes?e.getAttribute(t):((n=e.getAttributeNode(t))||e.getAttribute(t))&&e[t]===!0?t:n&&n.specified?n.value:null},st.error=function(e){throw Error(\"Syntax error, unrecognized expression: \"+e)},st.uniqueSort=function(e){var t,n=[],r=1,i=0;if(u=!T.detectDuplicates,e.sort(v),u){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e};function ut(e,t){var n=t&&e,r=n&&(~t.sourceIndex||j)-(~e.sourceIndex||j);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function lt(e){return function(t){var n=t.nodeName.toLowerCase();return\"input\"===n&&t.type===e}}function ct(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function pt(e){return ot(function(t){return t=+t,ot(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}o=st.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=o(t);return n},i=st.selectors={cacheLength:50,createPseudo:ot,match:U,find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(et,tt),e[3]=(e[4]||e[5]||\"\").replace(et,tt),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||st.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&st.error(e[0]),e},PSEUDO:function(e){var t,n=!e[5]&&e[2];return U.CHILD.test(e[0])?null:(e[4]?e[2]=e[4]:n&&z.test(n)&&(t=ft(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){return\"*\"===e?function(){return!0}:(e=e.replace(et,tt).toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[e+\" \"];return t||(t=RegExp(\"(^|\"+_+\")\"+e+\"(\"+_+\"|$)\"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==A&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=st.attr(r,e);return null==i?\"!=\"===t:t?(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i+\" \").indexOf(n)>-1:\"|=\"===t?i===n||i.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,p,f,d,h,g=o!==a?\"nextSibling\":\"previousSibling\",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!u&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g=\"only\"===e&&!h&&\"nextSibling\"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[x]||(m[x]={}),l=c[e]||[],d=l[0]===N&&l[1],f=l[0]===N&&l[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[N,d,f];break}}else if(v&&(l=(t[x]||(t[x]={}))[e])&&l[0]===N)f=l[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[x]||(p[x]={}))[e]=[N,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||st.error(\"unsupported pseudo: \"+e);return r[x]?r(t):r.length>1?(n=[e,e,\"\",t],i.setFilters.hasOwnProperty(e.toLowerCase())?ot(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=M.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ot(function(e){var t=[],n=[],r=s(e.replace(W,\"$1\"));return r[x]?ot(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:ot(function(e){return function(t){return st(e,t).length>0}}),contains:ot(function(e){return function(t){return(t.textContent||t.innerText||o(t)).indexOf(e)>-1}}),lang:ot(function(e){return X.test(e||\"\")||st.error(\"unsupported lang: \"+e),e=e.replace(et,tt).toLowerCase(),function(t){var n;do if(n=d?t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"):t.lang)return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>\"@\"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return G.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||t.toLowerCase()===e.type)},first:pt(function(){return[0]}),last:pt(function(e,t){return[t-1]}),eq:pt(function(e,t,n){return[0>n?n+t:n]}),even:pt(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:pt(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:pt(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:pt(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}};for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[n]=lt(n);for(n in{submit:!0,reset:!0})i.pseudos[n]=ct(n);function ft(e,t){var n,r,o,a,s,u,l,c=E[e+\" \"];if(c)return t?0:c.slice(0);s=e,u=[],l=i.preFilter;while(s){(!n||(r=$.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),u.push(o=[])),n=!1,(r=I.exec(s))&&(n=r.shift(),o.push({value:n,type:r[0].replace(W,\" \")}),s=s.slice(n.length));for(a in i.filter)!(r=U[a].exec(s))||l[a]&&!(r=l[a](r))||(n=r.shift(),o.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?st.error(e):E(e,u).slice(0)}function dt(e){var t=0,n=e.length,r=\"\";for(;n>t;t++)r+=e[t].value;return r}function ht(e,t,n){var i=t.dir,o=n&&\"parentNode\"===i,a=C++;return t.first?function(t,n,r){while(t=t[i])if(1===t.nodeType||o)return e(t,n,r)}:function(t,n,s){var u,l,c,p=N+\" \"+a;if(s){while(t=t[i])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[i])if(1===t.nodeType||o)if(c=t[x]||(t[x]={}),(l=c[i])&&l[0]===p){if((u=l[1])===!0||u===r)return u===!0}else if(l=c[i]=[p],l[1]=e(t,n,s)||r,l[1]===!0)return!0}}function gt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function mt(e,t,n,r,i){var o,a=[],s=0,u=e.length,l=null!=t;for(;u>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),l&&t.push(s));return a}function yt(e,t,n,r,i,o){return r&&!r[x]&&(r=yt(r)),i&&!i[x]&&(i=yt(i,o)),ot(function(o,a,s,u){var l,c,p,f=[],d=[],h=a.length,g=o||xt(t||\"*\",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:mt(g,f,e,s,u),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,u),r){l=mt(y,d),r(l,[],s,u),c=l.length;while(c--)(p=l[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){l=[],c=y.length;while(c--)(p=y[c])&&l.push(m[c]=p);i(null,y=[],l,u)}c=y.length;while(c--)(p=y[c])&&(l=i?M.call(o,p):f[c])>-1&&(o[l]=!(a[l]=p))}}else y=mt(y===a?y.splice(h,y.length):y),i?i(null,a,y,u):H.apply(a,y)})}function vt(e){var t,n,r,o=e.length,a=i.relative[e[0].type],s=a||i.relative[\" \"],u=a?1:0,c=ht(function(e){return e===t},s,!0),p=ht(function(e){return M.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==l)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;o>u;u++)if(n=i.relative[e[u].type])f=[ht(gt(f),n)];else{if(n=i.filter[e[u].type].apply(null,e[u].matches),n[x]){for(r=++u;o>r;r++)if(i.relative[e[r].type])break;return yt(u>1&&gt(f),u>1&&dt(e.slice(0,u-1)).replace(W,\"$1\"),n,r>u&&vt(e.slice(u,r)),o>r&&vt(e=e.slice(r)),o>r&&dt(e))}f.push(n)}return gt(f)}function bt(e,t){var n=0,o=t.length>0,a=e.length>0,s=function(s,u,c,f,d){var h,g,m,y=[],v=0,b=\"0\",x=s&&[],w=null!=d,T=l,C=s||a&&i.find.TAG(\"*\",d&&u.parentNode||u),k=N+=null==T?1:Math.random()||.1;for(w&&(l=u!==p&&u,r=n);null!=(h=C[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,u,c)){f.push(h);break}w&&(N=k,r=++n)}o&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,o&&b!==v){g=0;while(m=t[g++])m(x,y,u,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=L.call(f));y=mt(y)}H.apply(f,y),w&&!s&&y.length>0&&v+t.length>1&&st.uniqueSort(f)}return w&&(N=k,l=T),x};return o?ot(s):s}s=st.compile=function(e,t){var n,r=[],i=[],o=S[e+\" \"];if(!o){t||(t=ft(e)),n=t.length;while(n--)o=vt(t[n]),o[x]?r.push(o):i.push(o);o=S(e,bt(i,r))}return o};function xt(e,t,n){var r=0,i=t.length;for(;i>r;r++)st(e,t[r],n);return n}function wt(e,t,n,r){var o,a,u,l,c,p=ft(e);if(!r&&1===p.length){if(a=p[0]=p[0].slice(0),a.length>2&&\"ID\"===(u=a[0]).type&&9===t.nodeType&&!d&&i.relative[a[1].type]){if(t=i.find.ID(u.matches[0].replace(et,tt),t)[0],!t)return n;e=e.slice(a.shift().value.length)}o=U.needsContext.test(e)?0:a.length;while(o--){if(u=a[o],i.relative[l=u.type])break;if((c=i.find[l])&&(r=c(u.matches[0].replace(et,tt),V.test(a[0].type)&&t.parentNode||t))){if(a.splice(o,1),e=r.length&&dt(a),!e)return H.apply(n,q.call(r,0)),n;break}}}return s(e,p)(r,t,d,n,V.test(e)),n}i.pseudos.nth=i.pseudos.eq;function Tt(){}i.filters=Tt.prototype=i.pseudos,i.setFilters=new Tt,c(),st.attr=b.attr,b.find=st,b.expr=st.selectors,b.expr[\":\"]=b.expr.pseudos,b.unique=st.uniqueSort,b.text=st.getText,b.isXMLDoc=st.isXML,b.contains=st.contains}(e);var at=/Until$/,st=/^(?:parents|prev(?:Until|All))/,ut=/^.[^:#\\[\\.,]*$/,lt=b.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};b.fn.extend({find:function(e){var t,n,r,i=this.length;if(\"string\"!=typeof e)return r=this,this.pushStack(b(e).filter(function(){for(t=0;i>t;t++)if(b.contains(r[t],this))return!0}));for(n=[],t=0;i>t;t++)b.find(e,this[t],n);return n=this.pushStack(i>1?b.unique(n):n),n.selector=(this.selector?this.selector+\" \":\"\")+e,n},has:function(e){var t,n=b(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(b.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1))},filter:function(e){return this.pushStack(ft(this,e,!0))},is:function(e){return!!e&&(\"string\"==typeof e?lt.test(e)?b(e,this.context).index(this[0])>=0:b.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,o=[],a=lt.test(e)||\"string\"!=typeof e?b(e,t||this.context):0;for(;i>r;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&11!==n.nodeType){if(a?a.index(n)>-1:b.find.matchesSelector(n,e)){o.push(n);break}n=n.parentNode}}return this.pushStack(o.length>1?b.unique(o):o)},index:function(e){return e?\"string\"==typeof e?b.inArray(this[0],b(e)):b.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n=\"string\"==typeof e?b(e,t):b.makeArray(e&&e.nodeType?[e]:e),r=b.merge(this.get(),n);return this.pushStack(b.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),b.fn.andSelf=b.fn.addBack;function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}b.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return b.dir(e,\"parentNode\")},parentsUntil:function(e,t,n){return b.dir(e,\"parentNode\",n)},next:function(e){return pt(e,\"nextSibling\")},prev:function(e){return pt(e,\"previousSibling\")},nextAll:function(e){return b.dir(e,\"nextSibling\")},prevAll:function(e){return b.dir(e,\"previousSibling\")},nextUntil:function(e,t,n){return b.dir(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return b.dir(e,\"previousSibling\",n)},siblings:function(e){return b.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return b.sibling(e.firstChild)},contents:function(e){return b.nodeName(e,\"iframe\")?e.contentDocument||e.contentWindow.document:b.merge([],e.childNodes)}},function(e,t){b.fn[e]=function(n,r){var i=b.map(this,t,n);return at.test(e)||(r=n),r&&\"string\"==typeof r&&(i=b.filter(r,i)),i=this.length>1&&!ct[e]?b.unique(i):i,this.length>1&&st.test(e)&&(i=i.reverse()),this.pushStack(i)}}),b.extend({filter:function(e,t,n){return n&&(e=\":not(\"+e+\")\"),1===t.length?b.find.matchesSelector(t[0],e)?[t[0]]:[]:b.find.matches(e,t)},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!b(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(t=t||0,b.isFunction(t))return b.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return b.grep(e,function(e){return e===t===n});if(\"string\"==typeof t){var r=b.grep(e,function(e){return 1===e.nodeType});if(ut.test(t))return b.filter(t,r,!n);t=b.filter(t,r)}return b.grep(e,function(e){return b.inArray(e,t)>=0===n})}function dt(e){var t=ht.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",gt=/ jQuery\\d+=\"(?:null|\\d+)\"/g,mt=RegExp(\"<(?:\"+ht+\")[\\\\s/>]\",\"i\"),yt=/^\\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bt=/<([\\w:]+)/,xt=/<tbody/i,wt=/<|&#?\\w+;/,Tt=/<(?:script|style|link)/i,Nt=/^(?:checkbox|radio)$/i,Ct=/checked\\s*(?:[^=]|=\\s*.checked.)/i,kt=/^$|\\/(?:java|ecma)script/i,Et=/^true\\/(.*)/,St=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,At={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:b.support.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]},jt=dt(o),Dt=jt.appendChild(o.createElement(\"div\"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,b.fn.extend({text:function(e){return b.access(this,function(e){return e===t?b.text(this):this.empty().append((this[0]&&this[0].ownerDocument||o).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(b.isFunction(e))return this.each(function(t){b(this).wrapAll(e.call(this,t))});if(this[0]){var t=b(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return b.isFunction(e)?this.each(function(t){b(this).wrapInner(e.call(this,t))}):this.each(function(){var t=b(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=b.isFunction(e);return this.each(function(n){b(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){b.nodeName(this,\"body\")||b(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.insertBefore(e,this.firstChild)})},before:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=0;for(;null!=(n=this[r]);r++)(!e||b.filter(e,[n]).length>0)&&(t||1!==n.nodeType||b.cleanData(Ot(n)),n.parentNode&&(t&&b.contains(n.ownerDocument,n)&&Mt(Ot(n,\"script\")),n.parentNode.removeChild(n)));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&b.cleanData(Ot(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&b.nodeName(e,\"select\")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return b.clone(this,e,t)})},html:function(e){return b.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,\"\"):t;if(!(\"string\"!=typeof e||Tt.test(e)||!b.support.htmlSerialize&&mt.test(e)||!b.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||[\"\",\"\"])[1].toLowerCase()])){e=e.replace(vt,\"<$1></$2>\");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(b.cleanData(Ot(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){var t=b.isFunction(e);return t||\"string\"==typeof e||(e=b(e).not(this).detach()),this.domManip([e],!0,function(e){var t=this.nextSibling,n=this.parentNode;n&&(b(this).remove(),n.insertBefore(e,t))})},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=f.apply([],e);var i,o,a,s,u,l,c=0,p=this.length,d=this,h=p-1,g=e[0],m=b.isFunction(g);if(m||!(1>=p||\"string\"!=typeof g||b.support.checkClone)&&Ct.test(g))return this.each(function(i){var o=d.eq(i);m&&(e[0]=g.call(this,i,n?o.html():t)),o.domManip(e,n,r)});if(p&&(l=b.buildFragment(e,this[0].ownerDocument,!1,this),i=l.firstChild,1===l.childNodes.length&&(l=i),i)){for(n=n&&b.nodeName(i,\"tr\"),s=b.map(Ot(l,\"script\"),Ht),a=s.length;p>c;c++)o=l,c!==h&&(o=b.clone(o,!0,!0),a&&b.merge(s,Ot(o,\"script\"))),r.call(n&&b.nodeName(this[c],\"table\")?Lt(this[c],\"tbody\"):this[c],o,c);if(a)for(u=s[s.length-1].ownerDocument,b.map(s,qt),c=0;a>c;c++)o=s[c],kt.test(o.type||\"\")&&!b._data(o,\"globalEval\")&&b.contains(u,o)&&(o.src?b.ajax({url:o.src,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0}):b.globalEval((o.text||o.textContent||o.innerHTML||\"\").replace(St,\"\")));l=i=null}return this}});function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function Ht(e){var t=e.getAttributeNode(\"type\");return e.type=(t&&t.specified)+\"/\"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute(\"type\"),e}function Mt(e,t){var n,r=0;for(;null!=(n=e[r]);r++)b._data(n,\"globalEval\",!t||b._data(t[r],\"globalEval\"))}function _t(e,t){if(1===t.nodeType&&b.hasData(e)){var n,r,i,o=b._data(e),a=b._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)b.event.add(t,n,s[n][r])}a.data&&(a.data=b.extend({},a.data))}}function Ft(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!b.support.noCloneEvent&&t[b.expando]){i=b._data(t);for(r in i.events)b.removeEvent(t,r,i.handle);t.removeAttribute(b.expando)}\"script\"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):\"object\"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),b.support.html5Clone&&e.innerHTML&&!b.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):\"input\"===n&&Nt.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):\"option\"===n?t.defaultSelected=t.selected=e.defaultSelected:(\"input\"===n||\"textarea\"===n)&&(t.defaultValue=e.defaultValue)}}b.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){b.fn[e]=function(e){var n,r=0,i=[],o=b(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),b(o[r])[t](n),d.apply(i,n.get());return this.pushStack(i)}});function Ot(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||\"*\"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||\"*\"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||b.nodeName(o,n)?s.push(o):b.merge(s,Ot(o,n));return n===t||n&&b.nodeName(e,n)?b.merge([e],s):s}function Bt(e){Nt.test(e.type)&&(e.defaultChecked=e.checked)}b.extend({clone:function(e,t,n){var r,i,o,a,s,u=b.contains(e.ownerDocument,e);if(b.support.html5Clone||b.isXMLDoc(e)||!mt.test(\"<\"+e.nodeName+\">\")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(b.support.noCloneEvent&&b.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||b.isXMLDoc(e)))for(r=Ot(o),s=Ot(e),a=0;null!=(i=s[a]);++a)r[a]&&Ft(i,r[a]);if(t)if(n)for(s=s||Ot(e),r=r||Ot(o),a=0;null!=(i=s[a]);a++)_t(i,r[a]);else _t(e,o);return r=Ot(o,\"script\"),r.length>0&&Mt(r,!u&&Ot(e,\"script\")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,u,l,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if(\"object\"===b.type(o))b.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement(\"div\")),u=(bt.exec(o)||[\"\",\"\"])[1].toLowerCase(),c=At[u]||At._default,s.innerHTML=c[1]+o.replace(vt,\"<$1></$2>\")+c[2],i=c[0];while(i--)s=s.lastChild;if(!b.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!b.support.tbody){o=\"table\"!==u||xt.test(o)?\"<table>\"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)b.nodeName(l=o.childNodes[i],\"tbody\")&&!l.childNodes.length&&o.removeChild(l)\r\n}b.merge(d,s.childNodes),s.textContent=\"\";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),b.support.appendChecked||b.grep(Ot(d,\"input\"),Bt),h=0;while(o=d[h++])if((!r||-1===b.inArray(o,r))&&(a=b.contains(o.ownerDocument,o),s=Ot(f.appendChild(o),\"script\"),a&&Mt(s),n)){i=0;while(o=s[i++])kt.test(o.type||\"\")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,u=b.expando,l=b.cache,p=b.support.deleteExpando,f=b.event.special;for(;null!=(n=e[s]);s++)if((t||b.acceptData(n))&&(o=n[u],a=o&&l[o])){if(a.events)for(r in a.events)f[r]?b.event.remove(n,r):b.removeEvent(n,r,a.handle);l[o]&&(delete l[o],p?delete n[u]:typeof n.removeAttribute!==i?n.removeAttribute(u):n[u]=null,c.push(o))}}});var Pt,Rt,Wt,$t=/alpha\\([^)]*\\)/i,It=/opacity\\s*=\\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp(\"^(\"+x+\")(.*)$\",\"i\"),Yt=RegExp(\"^(\"+x+\")(?!px)[a-z%]+$\",\"i\"),Jt=RegExp(\"^([+-])=(\"+x+\")\",\"i\"),Gt={BODY:\"block\"},Qt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Kt={letterSpacing:0,fontWeight:400},Zt=[\"Top\",\"Right\",\"Bottom\",\"Left\"],en=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,\"none\"===b.css(e,\"display\")||!b.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=b._data(r,\"olddisplay\"),n=r.style.display,t?(o[a]||\"none\"!==n||(r.style.display=\"\"),\"\"===r.style.display&&nn(r)&&(o[a]=b._data(r,\"olddisplay\",un(r.nodeName)))):o[a]||(i=nn(r),(n&&\"none\"!==n||!i)&&b._data(r,\"olddisplay\",i?n:b.css(r,\"display\"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&\"none\"!==r.style.display&&\"\"!==r.style.display||(r.style.display=t?o[a]||\"\":\"none\"));return e}b.fn.extend({css:function(e,n){return b.access(this,function(e,n,r){var i,o,a={},s=0;if(b.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=b.css(e,n[s],!1,o);return a}return r!==t?b.style(e,n,r):b.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){var t=\"boolean\"==typeof e;return this.each(function(){(t?e:nn(this))?b(this).show():b(this).hide()})}}),b.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":b.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,u=b.camelCase(n),l=e.style;if(n=b.cssProps[u]||(b.cssProps[u]=tn(l,u)),s=b.cssHooks[n]||b.cssHooks[u],r===t)return s&&\"get\"in s&&(o=s.get(e,!1,i))!==t?o:l[n];if(a=typeof r,\"string\"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(b.css(e,n)),a=\"number\"),!(null==r||\"number\"===a&&isNaN(r)||(\"number\"!==a||b.cssNumber[u]||(r+=\"px\"),b.support.clearCloneStyle||\"\"!==r||0!==n.indexOf(\"background\")||(l[n]=\"inherit\"),s&&\"set\"in s&&(r=s.set(e,r,i))===t)))try{l[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,u=b.camelCase(n);return n=b.cssProps[u]||(b.cssProps[u]=tn(e.style,u)),s=b.cssHooks[n]||b.cssHooks[u],s&&\"get\"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),\"normal\"===a&&n in Kt&&(a=Kt[n]),\"\"===r||r?(o=parseFloat(a),r===!0||b.isNumeric(o)?o||0:a):a},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s.getPropertyValue(n)||s[n]:t,l=e.style;return s&&(\"\"!==u||b.contains(e.ownerDocument,e)||(u=b.style(e,n)),Yt.test(u)&&Ut.test(n)&&(i=l.width,o=l.minWidth,a=l.maxWidth,l.minWidth=l.maxWidth=l.width=u,u=s.width,l.width=i,l.minWidth=o,l.maxWidth=a)),u}):o.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s[n]:t,l=e.style;return null==u&&l&&l[n]&&(u=l[n]),Yt.test(u)&&!zt.test(n)&&(i=l.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),l.left=\"fontSize\"===n?\"1em\":u,u=l.pixelLeft+\"px\",l.left=i,a&&(o.left=a)),\"\"===u?\"auto\":u});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||\"px\"):t}function an(e,t,n,r,i){var o=n===(r?\"border\":\"content\")?4:\"width\"===t?1:0,a=0;for(;4>o;o+=2)\"margin\"===n&&(a+=b.css(e,n+Zt[o],!0,i)),r?(\"content\"===n&&(a-=b.css(e,\"padding\"+Zt[o],!0,i)),\"margin\"!==n&&(a-=b.css(e,\"border\"+Zt[o]+\"Width\",!0,i))):(a+=b.css(e,\"padding\"+Zt[o],!0,i),\"padding\"!==n&&(a+=b.css(e,\"border\"+Zt[o]+\"Width\",!0,i)));return a}function sn(e,t,n){var r=!0,i=\"width\"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=b.support.boxSizing&&\"border-box\"===b.css(e,\"boxSizing\",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(b.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?\"border\":\"content\"),r,o)+\"px\"}function un(e){var t=o,n=Gt[e];return n||(n=ln(e,t),\"none\"!==n&&n||(Pt=(Pt||b(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write(\"<!doctype html><html><body>\"),t.close(),n=ln(e,t),Pt.detach()),Gt[e]=n),n}function ln(e,t){var n=b(t.createElement(e)).appendTo(t.body),r=b.css(n[0],\"display\");return n.remove(),r}b.each([\"height\",\"width\"],function(e,n){b.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(b.css(e,\"display\"))?b.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,b.support.boxSizing&&\"border-box\"===b.css(e,\"boxSizing\",!1,i),i):0)}}}),b.support.opacity||(b.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":t?\"1\":\"\"},set:function(e,t){var n=e.style,r=e.currentStyle,i=b.isNumeric(t)?\"alpha(opacity=\"+100*t+\")\":\"\",o=r&&r.filter||n.filter||\"\";n.zoom=1,(t>=1||\"\"===t)&&\"\"===b.trim(o.replace($t,\"\"))&&n.removeAttribute&&(n.removeAttribute(\"filter\"),\"\"===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+\" \"+i)}}),b(function(){b.support.reliableMarginRight||(b.cssHooks.marginRight={get:function(e,n){return n?b.swap(e,{display:\"inline-block\"},Wt,[e,\"marginRight\"]):t}}),!b.support.pixelPosition&&b.fn.position&&b.each([\"top\",\"left\"],function(e,n){b.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?b(e).position()[n]+\"px\":r):t}}})}),b.expr&&b.expr.filters&&(b.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!b.support.reliableHiddenOffsets&&\"none\"===(e.style&&e.style.display||b.css(e,\"display\"))},b.expr.filters.visible=function(e){return!b.expr.filters.hidden(e)}),b.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){b.cssHooks[e+t]={expand:function(n){var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(b.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\\[\\]$/,fn=/\\r?\\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;b.fn.extend({serialize:function(){return b.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=b.prop(this,\"elements\");return e?b.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!b(this).is(\":disabled\")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Nt.test(e))}).map(function(e,t){var n=b(this).val();return null==n?null:b.isArray(n)?b.map(n,function(e){return{name:t.name,value:e.replace(fn,\"\\r\\n\")}}):{name:t.name,value:n.replace(fn,\"\\r\\n\")}}).get()}}),b.param=function(e,n){var r,i=[],o=function(e,t){t=b.isFunction(t)?t():null==t?\"\":t,i[i.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(t)};if(n===t&&(n=b.ajaxSettings&&b.ajaxSettings.traditional),b.isArray(e)||e.jquery&&!b.isPlainObject(e))b.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join(\"&\").replace(cn,\"+\")};function gn(e,t,n,r){var i;if(b.isArray(t))b.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+\"[\"+(\"object\"==typeof i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==b.type(t))r(e,t);else for(i in t)gn(e+\"[\"+i+\"]\",t[i],n,r)}b.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(e,t){b.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),b.fn.hover=function(e,t){return this.mouseenter(e).mouseleave(t||e)};var mn,yn,vn=b.now(),bn=/\\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Nn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Cn=/^(?:GET|HEAD)$/,kn=/^\\/\\//,En=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,Sn=b.fn.load,An={},jn={},Dn=\"*/\".concat(\"*\");try{yn=a.href}catch(Ln){yn=o.createElement(\"a\"),yn.href=\"\",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(w)||[];if(b.isFunction(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(u){var l;return o[u]=!0,b.each(e[u]||[],function(e,u){var c=u(n,r,i);return\"string\"!=typeof c||a||o[c]?a?!(l=c):t:(n.dataTypes.unshift(c),s(c),!1)}),l}return s(n.dataTypes[0])||!o[\"*\"]&&s(\"*\")}function Mn(e,n){var r,i,o=b.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&b.extend(!0,e,r),e}b.fn.load=function(e,n,r){if(\"string\"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,u=e.indexOf(\" \");return u>=0&&(i=e.slice(u,e.length),e=e.slice(0,u)),b.isFunction(n)?(r=n,n=t):n&&\"object\"==typeof n&&(a=\"POST\"),s.length>0&&b.ajax({url:e,type:a,dataType:\"html\",data:n}).done(function(e){o=arguments,s.html(i?b(\"<div>\").append(b.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},b.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){b.fn[t]=function(e){return this.on(t,e)}}),b.each([\"get\",\"post\"],function(e,n){b[n]=function(e,r,i,o){return b.isFunction(r)&&(o=o||i,i=r,r=t),b.ajax({url:e,type:n,dataType:o,data:r,success:i})}}),b.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:\"GET\",isLocal:Nn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Dn,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":e.String,\"text html\":!0,\"text json\":b.parseJSON,\"text xml\":b.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Mn(Mn(e,b.ajaxSettings),t):Mn(b.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){\"object\"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,u,l,c,p=b.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?b(f):b.event,h=b.Deferred(),g=b.Callbacks(\"once memory\"),m=p.statusCode||{},y={},v={},x=0,T=\"canceled\",N={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return x||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)m[t]=[m[t],e[t]];else N.always(e[N.status]);return this},abort:function(e){var t=e||T;return l&&l.abort(t),k(0,t),this}};if(h.promise(N).complete=g.add,N.success=N.done,N.error=N.fail,p.url=((e||p.url||yn)+\"\").replace(xn,\"\").replace(kn,mn[1]+\"//\"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=b.trim(p.dataType||\"*\").toLowerCase().match(w)||[\"\"],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||(\"http:\"===r[1]?80:443))==(mn[3]||(\"http:\"===mn[1]?80:443)))),p.data&&p.processData&&\"string\"!=typeof p.data&&(p.data=b.param(p.data,p.traditional)),qn(An,p,n,N),2===x)return N;u=p.global,u&&0===b.active++&&b.event.trigger(\"ajaxStart\"),p.type=p.type.toUpperCase(),p.hasContent=!Cn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?\"&\":\"?\")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,\"$1_=\"+vn++):o+(bn.test(o)?\"&\":\"?\")+\"_=\"+vn++)),p.ifModified&&(b.lastModified[o]&&N.setRequestHeader(\"If-Modified-Since\",b.lastModified[o]),b.etag[o]&&N.setRequestHeader(\"If-None-Match\",b.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&N.setRequestHeader(\"Content-Type\",p.contentType),N.setRequestHeader(\"Accept\",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+(\"*\"!==p.dataTypes[0]?\", \"+Dn+\"; q=0.01\":\"\"):p.accepts[\"*\"]);for(i in p.headers)N.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,N,p)===!1||2===x))return N.abort();T=\"abort\";for(i in{success:1,error:1,complete:1})N[i](p[i]);if(l=qn(jn,p,n,N)){N.readyState=1,u&&d.trigger(\"ajaxSend\",[N,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){N.abort(\"timeout\")},p.timeout));try{x=1,l.send(y,k)}catch(C){if(!(2>x))throw C;k(-1,C)}}else k(-1,\"No Transport\");function k(e,n,r,i){var c,y,v,w,T,C=n;2!==x&&(x=2,s&&clearTimeout(s),l=t,a=i||\"\",N.readyState=e>0?4:0,r&&(w=_n(p,N,r)),e>=200&&300>e||304===e?(p.ifModified&&(T=N.getResponseHeader(\"Last-Modified\"),T&&(b.lastModified[o]=T),T=N.getResponseHeader(\"etag\"),T&&(b.etag[o]=T)),204===e?(c=!0,C=\"nocontent\"):304===e?(c=!0,C=\"notmodified\"):(c=Fn(p,w),C=c.state,y=c.data,v=c.error,c=!v)):(v=C,(e||!C)&&(C=\"error\",0>e&&(e=0))),N.status=e,N.statusText=(n||C)+\"\",c?h.resolveWith(f,[y,C,N]):h.rejectWith(f,[N,C,v]),N.statusCode(m),m=t,u&&d.trigger(c?\"ajaxSuccess\":\"ajaxError\",[N,p,c?y:v]),g.fireWith(f,[N,C]),u&&(d.trigger(\"ajaxComplete\",[N,p]),--b.active||b.event.trigger(\"ajaxStop\")))}return N},getScript:function(e,n){return b.get(e,t,n,\"script\")},getJSON:function(e,t,n){return b.get(e,t,n,\"json\")}});function _n(e,n,r){var i,o,a,s,u=e.contents,l=e.dataTypes,c=e.responseFields;for(s in c)s in r&&(n[c[s]]=r[s]);while(\"*\"===l[0])l.shift(),o===t&&(o=e.mimeType||n.getResponseHeader(\"Content-Type\"));if(o)for(s in u)if(u[s]&&u[s].test(o)){l.unshift(s);break}if(l[0]in r)a=l[0];else{for(s in r){if(!l[0]||e.converters[s+\" \"+l[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==l[0]&&l.unshift(a),r[a]):t}function Fn(e,t){var n,r,i,o,a={},s=0,u=e.dataTypes.slice(),l=u[0];if(e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u[1])for(i in e.converters)a[i.toLowerCase()]=e.converters[i];for(;r=u[++s];)if(\"*\"!==r){if(\"*\"!==l&&l!==r){if(i=a[l+\" \"+r]||a[\"* \"+r],!i)for(n in a)if(o=n.split(\" \"),o[1]===r&&(i=a[l+\" \"+o[0]]||a[\"* \"+o[0]])){i===!0?i=a[n]:a[n]!==!0&&(r=o[0],u.splice(s--,0,r));break}if(i!==!0)if(i&&e[\"throws\"])t=i(t);else try{t=i(t)}catch(c){return{state:\"parsererror\",error:i?c:\"No conversion from \"+l+\" to \"+r}}}l=r}return{state:\"success\",data:t}}b.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(e){return b.globalEval(e),e}}}),b.ajaxPrefilter(\"script\",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\",e.global=!1)}),b.ajaxTransport(\"script\",function(e){if(e.crossDomain){var n,r=o.head||b(\"head\")[0]||o.documentElement;return{send:function(t,i){n=o.createElement(\"script\"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,\"success\"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var On=[],Bn=/(=)\\?(?=&|$)|\\?\\?/;b.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=On.pop()||b.expando+\"_\"+vn++;return this[e]=!0,e}}),b.ajaxPrefilter(\"json jsonp\",function(n,r,i){var o,a,s,u=n.jsonp!==!1&&(Bn.test(n.url)?\"url\":\"string\"==typeof n.data&&!(n.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Bn.test(n.data)&&\"data\");return u||\"jsonp\"===n.dataTypes[0]?(o=n.jsonpCallback=b.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,u?n[u]=n[u].replace(Bn,\"$1\"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?\"&\":\"?\")+n.jsonp+\"=\"+o),n.converters[\"script json\"]=function(){return s||b.error(o+\" was not called\"),s[0]},n.dataTypes[0]=\"json\",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,On.push(o)),s&&b.isFunction(a)&&a(s[0]),s=a=t}),\"script\"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(t){}}b.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=b.ajaxSettings.xhr(),b.support.cors=!!Rn&&\"withCredentials\"in Rn,Rn=b.support.ajax=!!Rn,Rn&&b.ajaxTransport(function(n){if(!n.crossDomain||b.support.cors){var r;return{send:function(i,o){var a,s,u=n.xhr();if(n.username?u.open(n.type,n.url,n.async,n.username,n.password):u.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)u[s]=n.xhrFields[s];n.mimeType&&u.overrideMimeType&&u.overrideMimeType(n.mimeType),n.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(s in i)u.setRequestHeader(s,i[s])}catch(l){}u.send(n.hasContent&&n.data||null),r=function(e,i){var s,l,c,p;try{if(r&&(i||4===u.readyState))if(r=t,a&&(u.onreadystatechange=b.noop,$n&&delete Pn[a]),i)4!==u.readyState&&u.abort();else{p={},s=u.status,l=u.getAllResponseHeaders(),\"string\"==typeof u.responseText&&(p.text=u.responseText);try{c=u.statusText}catch(f){c=\"\"}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,l)},n.async?4===u.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},b(e).unload($n)),Pn[a]=r),u.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp(\"^(?:([+-])=|)(\"+x+\")([a-z%]*)$\",\"i\"),Jn=/queueHooks$/,Gn=[nr],Qn={\"*\":[function(e,t){var n,r,i=this.createTween(e,t),o=Yn.exec(t),a=i.cur(),s=+a||0,u=1,l=20;if(o){if(n=+o[2],r=o[3]||(b.cssNumber[e]?\"\":\"px\"),\"px\"!==r&&s){s=b.css(i.elem,e,!0)||n||1;do u=u||\".5\",s/=u,b.style(i.elem,e,s+r);while(u!==(u=i.cur()/a)&&1!==u&&--l)}i.unit=r,i.start=s,i.end=o[1]?s+(o[1]+1)*n:n}return i}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=b.now()}function Zn(e,t){b.each(t,function(t,n){var r=(Qn[t]||[]).concat(Qn[\"*\"]),i=0,o=r.length;for(;o>i;i++)if(r[i].call(e,t,n))return})}function er(e,t,n){var r,i,o=0,a=Gn.length,s=b.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,a=0,u=l.tweens.length;for(;u>a;a++)l.tweens[a].run(o);return s.notifyWith(e,[l,o,n]),1>o&&u?n:(s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:b.extend({},t),opts:b.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=b.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?s.resolveWith(e,[l,t]):s.rejectWith(e,[l,t]),this}}),c=l.props;for(tr(c,l.opts.specialEasing);a>o;o++)if(r=Gn[o].call(l,e,c,l.opts))return r;return Zn(l,c),b.isFunction(l.opts.start)&&l.opts.start.call(e,l),b.fx.timer(b.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function tr(e,t){var n,r,i,o,a;for(i in e)if(r=b.camelCase(i),o=t[r],n=e[i],b.isArray(n)&&(o=n[1],n=e[i]=n[0]),i!==r&&(e[r]=n,delete e[i]),a=b.cssHooks[r],a&&\"expand\"in a){n=a.expand(n),delete e[r];for(i in n)i in e||(e[i]=n[i],t[i]=o)}else t[r]=o}b.Animation=b.extend(er,{tweener:function(e,t){b.isFunction(e)?(t=e,e=[\"*\"]):e=e.split(\" \");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,u,l,c,p,f=this,d=e.style,h={},g=[],m=e.nodeType&&nn(e);n.queue||(c=b._queueHooks(e,\"fx\"),null==c.unqueued&&(c.unqueued=0,p=c.empty.fire,c.empty.fire=function(){c.unqueued||p()}),c.unqueued++,f.always(function(){f.always(function(){c.unqueued--,b.queue(e,\"fx\").length||c.empty.fire()})})),1===e.nodeType&&(\"height\"in t||\"width\"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],\"inline\"===b.css(e,\"display\")&&\"none\"===b.css(e,\"float\")&&(b.support.inlineBlockNeedsLayout&&\"inline\"!==un(e.nodeName)?d.zoom=1:d.display=\"inline-block\")),n.overflow&&(d.overflow=\"hidden\",b.support.shrinkWrapBlocks||f.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(i in t)if(a=t[i],Vn.exec(a)){if(delete t[i],u=u||\"toggle\"===a,a===(m?\"hide\":\"show\"))continue;g.push(i)}if(o=g.length){s=b._data(e,\"fxshow\")||b._data(e,\"fxshow\",{}),\"hidden\"in s&&(m=s.hidden),u&&(s.hidden=!m),m?b(e).show():f.done(function(){b(e).hide()}),f.done(function(){var t;b._removeData(e,\"fxshow\");for(t in h)b.style(e,t,h[t])});for(i=0;o>i;i++)r=g[i],l=f.createTween(r,m?s[r]:0),h[r]=s[r]||b.style(e,r),r in s||(s[r]=l.start,m&&(l.end=l.start,l.start=\"width\"===r||\"height\"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}b.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||\"swing\",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(b.cssNumber[n]?\"\":\"px\")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?b.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=b.css(e.elem,e.prop,\"\"),t&&\"auto\"!==t?t:0):e.elem[e.prop]},set:function(e){b.fx.step[e.prop]?b.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[b.cssProps[e.prop]]||b.cssHooks[e.prop])?b.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},b.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=b.fn[t];b.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),b.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=b.isEmptyObject(e),o=b.speed(t,n,r),a=function(){var t=er(this,b.extend({},e),o);a.finish=function(){t.stop(!0)},(i||b._data(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return\"string\"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,n=null!=e&&e+\"queueHooks\",o=b.timers,a=b._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&b.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||\"fx\"),this.each(function(){var t,n=b._data(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=b.timers,a=r?r.length:0;for(n.finish=!0,b.queue(this,e,[]),i&&i.cur&&i.cur.finish&&i.cur.finish.call(this),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r[\"margin\"+n]=r[\"padding\"+n]=e;return t&&(r.opacity=r.width=e),r}b.each({slideDown:ir(\"show\"),slideUp:ir(\"hide\"),slideToggle:ir(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){b.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),b.speed=function(e,t,n){var r=e&&\"object\"==typeof e?b.extend({},e):{complete:n||!n&&t||b.isFunction(e)&&e,duration:e,easing:n&&t||t&&!b.isFunction(t)&&t};return r.duration=b.fx.off?0:\"number\"==typeof r.duration?r.duration:r.duration in b.fx.speeds?b.fx.speeds[r.duration]:b.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){b.isFunction(r.old)&&r.old.call(this),r.queue&&b.dequeue(this,r.queue)},r},b.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},b.timers=[],b.fx=rr.prototype.init,b.fx.tick=function(){var e,n=b.timers,r=0;for(Xn=b.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||b.fx.stop(),Xn=t},b.fx.timer=function(e){e()&&b.timers.push(e)&&b.fx.start()},b.fx.interval=13,b.fx.start=function(){Un||(Un=setInterval(b.fx.tick,b.fx.interval))},b.fx.stop=function(){clearInterval(Un),Un=null},b.fx.speeds={slow:600,fast:200,_default:400},b.fx.step={},b.expr&&b.expr.filters&&(b.expr.filters.animated=function(e){return b.grep(b.timers,function(t){return e===t.elem}).length}),b.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){b.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,b.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},b.offset={setOffset:function(e,t,n){var r=b.css(e,\"position\");\"static\"===r&&(e.style.position=\"relative\");var i=b(e),o=i.offset(),a=b.css(e,\"top\"),s=b.css(e,\"left\"),u=(\"absolute\"===r||\"fixed\"===r)&&b.inArray(\"auto\",[a,s])>-1,l={},c={},p,f;u?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),b.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(l.top=t.top-o.top+p),null!=t.left&&(l.left=t.left-o.left+f),\"using\"in t?t.using.call(e,l):i.css(l)}},b.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return\"fixed\"===b.css(r,\"position\")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),b.nodeName(e[0],\"html\")||(n=e.offset()),n.top+=b.css(e[0],\"borderTopWidth\",!0),n.left+=b.css(e[0],\"borderLeftWidth\",!0)),{top:t.top-n.top-b.css(r,\"marginTop\",!0),left:t.left-n.left-b.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||o.documentElement;while(e&&!b.nodeName(e,\"html\")&&\"static\"===b.css(e,\"position\"))e=e.offsetParent;return e||o.documentElement})}}),b.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,n){var r=/Y/.test(n);b.fn[e]=function(i){return b.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?b(a).scrollLeft():o,r?o:b(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return b.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}b.each({Height:\"height\",Width:\"width\"},function(e,n){b.each({padding:\"inner\"+e,content:n,\"\":\"outer\"+e},function(r,i){b.fn[i]=function(i,o){var a=arguments.length&&(r||\"boolean\"!=typeof i),s=r||(i===!0||o===!0?\"margin\":\"border\");return b.access(this,function(n,r,i){var o;return b.isWindow(n)?n.document.documentElement[\"client\"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body[\"scroll\"+e],o[\"scroll\"+e],n.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):i===t?b.css(n,r,s):b.style(n,r,i,s)},n,a?i:t,a,null)}})}),e.jQuery=e.$=b,\"function\"==typeof define&&define.amd&&define.amd.jQuery&&define(\"jquery\",[],function(){return b})})(window);","/*eslint-disable*/\r\n/*\r\n录音\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n(function(window){\r\n\"use strict\";\r\n\r\n//兼容环境\r\nwindow.RecorderLM=\"2019-01-06 21:38:00\";\r\nvar NOOP=function(){};\r\n//end 兼容环境 ****从以下开始copy源码，到wav、mp3前面为止*****\r\n\r\nfunction Recorder(set){\r\n\treturn new initFn(set);\r\n};\r\n//是否已经打开了录音，所有工作都已经准备好了，就等接收音频数据了\r\nRecorder.IsOpen=function(){\r\n\tvar stream=Recorder.Stream;\r\n\tif(stream){\r\n\t\tvar tracks=stream.getTracks();\r\n\t\tif(tracks.length>0){\r\n\t\t\treturn tracks[0].readyState==\"live\";\r\n\t\t};\r\n\t};\r\n\treturn false;\r\n};\r\n//判断浏览器是否支持录音，随时可以调用。注意：仅仅是检测浏览器支持情况，不会判断和调起用户授权，不会判断是否支持特定格式录音。\r\nRecorder.Support=function(){\r\n\tvar AC=window.AudioContext;\r\n\tif(!AC){\r\n\t\tAC=window.webkitAudioContext;\r\n\t};\r\n\tif(!AC){\r\n\t\treturn false;\r\n\t};\r\n\tvar scope=navigator.mediaDevices||{};\r\n\tif(!scope.getUserMedia){\r\n\t\tscope=navigator;\r\n\t\tscope.getUserMedia||(scope.getUserMedia=scope.webkitGetUserMedia||scope.mozGetUserMedia||scope.msGetUserMedia);\r\n\t};\r\n\tif(!scope.getUserMedia){\r\n\t\treturn false;\r\n\t};\r\n\t\r\n\tRecorder.Scope=scope;\r\n\tif(!Recorder.Ctx||Recorder.Ctx.state==\"closed\"){\r\n\t\t//不能反复构造，低版本number of hardware contexts reached maximum (6)\r\n\t\tRecorder.Ctx=new AC();\r\n\t};\r\n\treturn true;\r\n};\r\nfunction initFn(set){\r\n\tvar o={\r\n\t\ttype:\"mp3\" //输出类型：mp3,wav，wav输出文件尺寸超大不推荐使用，但mp3编码支持会导致js文件超大，如果不需支持mp3可以使js文件大幅减小\r\n\t\t,bitRate:16 //比特率 wav:16或8位，MP3：8kbps 1k/s，8kbps 2k/s 录音文件很小\r\n\t\t\r\n\t\t,sampleRate:16000 //采样率，wav格式大小=sampleRate*时间；mp3此项对低比特率有影响，高比特率几乎无影响。\r\n\t\t\t\t\t//wav任意值，mp3取值范围：48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000\r\n\t\t\t\t\t//采样率参考https://www.cnblogs.com/devin87/p/mp3-recorder.html\r\n\t\t\r\n\t\t,bufferSize:4096//AudioContext缓冲大小。会影响onProcess调用速度，相对于AudioContext.sampleRate=48000时，4096接近12帧/s，调节此参数可生成比较流畅的回调动画。\r\n\t\t\t\t//取值256, 512, 1024, 2048, 4096, 8192, or 16384\r\n\t\t\t\t//注意，取值不能过低，2048开始不同浏览器可能回调速率跟不上造成音质问题（低端浏览器→说的就是腾讯X5）\r\n\t\t,onProcess:NOOP //fn(this.buffer,powerLevel,bufferDuration,bufferSampleRate) buffer=[缓冲PCM数据,...]，powerLevel：当前缓冲的音量级别0-100，bufferDuration：已缓冲时长，bufferSampleRate：缓冲使用的采样率\r\n\t};\r\n\t\r\n\tfor(var k in set){\r\n\t\to[k]=set[k];\r\n\t};\r\n\tthis.set=o;\r\n};\r\nRecorder.prototype=initFn.prototype={\r\n\t//打开录音资源True(),False(msg,isUserNotAllow)，需要调用close。注意：此方法是异步的；一般使用时打开，用完立即关闭；可重复调用，可用来测试是否能录音\r\n\topen:function(True,False){\r\n\t\tTrue=True||NOOP;\r\n\t\tFalse=False||NOOP;\r\n\t\t\r\n\t\tif(Recorder.IsOpen()){\r\n\t\t\tTrue();\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tif(!Recorder.Support()){\r\n\t\t\tFalse(\"此浏览器不支持录音\",false);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tvar f1=function(stream){\r\n\t\t\tRecorder.Stream=stream;\r\n\t\t\t\r\n\t\t\t//https://github.com/xiangyuecn/Recorder/issues/14 获取到的track.readyState!=\"live\"，刚刚回调时可能是正常的，但过一下可能就被关掉了，原因不明。延迟一下保证真异步。对正常浏览器不影响\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(Recorder.IsOpen()){\r\n\t\t\t\t\tTrue();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tFalse(\"录音功能无效：无音频流\");\r\n\t\t\t\t};\r\n\t\t\t},100);\r\n\t\t};\r\n\t\tvar f2=function(e){\r\n\t\t\tvar code=e.name||e.message||\"\";\r\n\t\t\tconsole.error(e);\r\n\t\t\tvar notAllow=/Permission|Allow/i.test(code);\r\n\t\t\tFalse(notAllow?\"用户拒绝了录音权限\":\"无法录音：\"+code,notAllow);\r\n\t\t};\r\n\t\tvar pro=Recorder.Scope.getUserMedia({audio:true},f1,f2);\r\n\t\tif(pro&&pro.then){\r\n\t\t\tpro.then(f1)[\"catch\"](f2);\r\n\t\t};\r\n\t}\r\n\t//关闭释放录音资源\r\n\t,close:function(call){\r\n\t\tcall=call||NOOP;\r\n\t\t\r\n\t\tvar This=this;\r\n\t\tThis._stop();\r\n\t\t\r\n\t\tvar stream=Recorder.Stream;\r\n\t\tif(stream){\r\n\t\t\tvar tracks=stream.getTracks();\r\n\t\t\tfor(var i=0;i<tracks.length;i++){\r\n\t\t\t\ttracks[i].stop();\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tRecorder.Stream=0;\r\n\t\tcall();\r\n\t}\r\n\t\r\n\t\r\n\t//开始录音，需先调用open；不支持、错误，不会有任何提示，stop时自然能得到错误\r\n\t,start:function(){\r\n\t\tvar This=this,ctx=Recorder.Ctx;\r\n\t\tvar buffer=This.buffer=[];//数据缓冲\r\n\t\tThis.recSize=0;//数据大小\r\n\t\tThis._stop();\r\n\t\t\r\n\t\tThis.state=0;\r\n\t\tif(!Recorder.IsOpen()){\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tconsole.log(\"[\"+Date.now()+\"]Start\");\r\n\t\tThis.srcSampleRate=ctx.sampleRate;\r\n\t\tThis.isMock=0;\r\n\t\t\r\n\t\tif(ctx.state==\"suspended\"){\r\n\t\t\tctx.resume().then(function(){\r\n\t\t\t\tconsole.log(\"ctx resume\");\r\n\t\t\t\tThis._start();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tThis._start();\r\n\t\t};\r\n\t}\r\n\t,_start:function(){\r\n\t\tvar This=this,set=This.set,buffer=This.buffer;\r\n\t\tvar ctx=Recorder.Ctx;\r\n\t\tvar media=This.media=ctx.createMediaStreamSource(Recorder.Stream);\r\n\t\tvar process=This.process=(ctx.createScriptProcessor||ctx.createJavaScriptNode).call(ctx,set.bufferSize,1,1);//单声道，省的数据处理复杂\r\n\t\t\r\n\t\tvar onInt;\r\n\t\tprocess.onaudioprocess=function(e){\r\n\t\t\tif(This.state!=1){\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\tvar o=e.inputBuffer.getChannelData(0);//块是共享的，必须复制出来\r\n\t\t\tvar size=o.length;\r\n\t\t\tThis.recSize+=size;\r\n\t\t\t\r\n\t\t\tvar res=new Int16Array(size);\r\n\t\t\tvar power=0;\r\n\t\t\tfor(var j=0;j<size;j++){//floatTo16BitPCM \r\n\t\t\t\t//var s=Math.max(-1,Math.min(1,o[j]*8));//PCM 音量直接放大8倍，失真还能接受\r\n\t\t\t\tvar s=Math.max(-1,Math.min(1,o[j]));\r\n\t\t\t\ts=s<0?s*0x8000:s*0x7FFF;\r\n\t\t\t\tres[j]=s;\r\n\t\t\t\tpower+=Math.abs(s);\r\n\t\t\t};\r\n\t\t\tbuffer.push(res);\r\n\t\t\t\r\n\t\t\t/*https://blog.csdn.net/jody1989/article/details/73480259\r\n\t\t\t更高灵敏度算法:\r\n\t\t\t\t限定最大感应值10000\r\n\t\t\t\t\t线性曲线：低音量不友好\r\n\t\t\t\t\t\tpower/10000*100 \r\n\t\t\t\t\t对数曲线：低音量友好，但需限定最低感应值\r\n\t\t\t\t\t\t(1+Math.log10(power/10000))*100\r\n\t\t\t*/\r\n\t\t\tpower/=size;\r\n\t\t\tvar powerLevel;\r\n\t\t\tif(power<1251){//1250的结果10%，更小的音量采用线性取值\r\n\t\t\t\tpowerLevel=Math.round(power/1250*10);\r\n\t\t\t}else{\r\n\t\t\t\tpowerLevel=Math.round(Math.min(100,Math.max(0,(1+Math.log10(power/10000))*100)));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar bufferSampleRate=This.srcSampleRate;\r\n\t\t\tvar duration=Math.round(This.recSize/bufferSampleRate*1000);\r\n\t\t\t\r\n\t\t\tclearTimeout(onInt);\r\n\t\t\tonInt=setTimeout(function(){\r\n\t\t\t\tset.onProcess(buffer,powerLevel,duration,bufferSampleRate);\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\tmedia.connect(process);\r\n\t\tprocess.connect(ctx.destination);\r\n\t\tThis.state=1;\r\n\t}\r\n\t,_stop:function(){\r\n\t\tvar This=this;\r\n\t\tif(This.state){\r\n\t\t\tThis.state=0;\r\n\t\t\tThis.media.disconnect();\r\n\t\t\tThis.process.disconnect();\r\n\t\t};\r\n\t}\r\n\t/*暂停录音*/\r\n\t,pause:function(_resume){\r\n\t\tvar This=this;\r\n\t\tif(This.state){\r\n\t\t\tThis.state=_resume||2;\r\n\t\t};\r\n\t}\r\n\t/*恢复录音*/\r\n\t,resume:function(){\r\n\t\tthis.pause(1);\r\n\t}\r\n\t/*模拟一段录音数据，后面可以调用stop进行编码，需提供pcm数据[1,2,3...]，pcm的采样率*/\r\n\t,mock:function(pcmData,pcmSampleRate){\r\n\t\tvar This=this;\r\n\t\tThis.isMock=1;\r\n\t\tThis.buffer=[pcmData];\r\n\t\tThis.recSize=pcmData.length;\r\n\t\tThis.srcSampleRate=pcmSampleRate;\r\n\t\treturn This;\r\n\t}\r\n\t/*\r\n\t结束录音并返回录音数据blob对象\r\n\t\tTrue(blob,duration) blob：录音数据audio/mp3|wav格式\r\n\t\t\t\t\t\t\tduration：录音时长，单位毫秒\r\n\t\tFalse(msg)\r\n\t*/\r\n\t,stop:function(True,False){\r\n\t\tconsole.log(\"[\"+Date.now()+\"]Stop\");\r\n\t\tTrue=True||NOOP;\r\n\t\tFalse=False||NOOP;\r\n\t\tvar This=this,set=This.set;\r\n\t\t\r\n\t\tif(!This.isMock){\r\n\t\t\tif(!This.state){\r\n\t\t\t\tFalse(\"未开始录音\");\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\tThis._stop();\r\n\t\t};\r\n\t\tvar size=This.recSize;\r\n\t\tif(!size){\r\n\t\t\tFalse(\"未采集到录音\");\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tvar sampleRate=set.sampleRate\r\n\t\t\t,srcSampleRate=This.srcSampleRate;\r\n\t\t//采样 https://www.cnblogs.com/blqw/p/3782420.html\r\n\t\tvar step=srcSampleRate/sampleRate;\r\n\t\tif(step>1){//新采样高于录音采样不处理，省去了插值处理，直接抽样\r\n\t\t\tsize=Math.floor(size/step);\r\n\t\t}else{\r\n\t\t\tstep=1;\r\n\t\t\tsampleRate=srcSampleRate;\r\n\t\t\tset.sampleRate=sampleRate;\r\n\t\t};\r\n\t\t//准备数据\r\n\t\tvar res=new Int16Array(size);\r\n\t\tvar last=0,idx=0;\r\n\t\tfor (var n=0,nl=This.buffer.length;n<nl;n++) {\r\n\t\t\tvar o=This.buffer[n];\r\n\t\t\tvar i=last,il=o.length;\r\n\t\t\twhile(i<il){\r\n\t\t\t\tres[idx]=o[Math.round(i)];\r\n\t\t\t\tidx++;\r\n\t\t\t\ti+=step;//抽样\r\n\t\t\t};\r\n\t\t\tlast=i-il;\r\n\t\t};\r\n\t\tvar duration=Math.round(size/sampleRate*1000);\r\n\t\t\r\n\t\tsetTimeout(function(){\r\n\t\t\tdebugger\r\n\t\t\tvar t1=Date.now();\r\n\t\t\tconsole.log(set.type);\r\n\t\t\tconsole.log(This);\r\n\t\t\tconsole.log(This[set.type]);\r\n\t\t\tThis[set.type](res,function(blob){\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconsole.log(blob);\r\n\t\t\t\tconsole.log(\"[\"+Date.now()+\"]End\",blob,duration,\"编码耗时:\"+(Date.now()-t1));\r\n\t\t\t\tTrue(blob,duration);\r\n\t\t\t},function(msg){\r\n\t\t\t\tFalse(msg);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n//end ****copy源码结束，到wav、mp3前面为止*****\r\n\r\n\r\n\r\n\r\n};\r\n\r\nwindow.Recorder=Recorder;\r\n\r\n})(window);","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('audio',{attrs:{\"id\":\"audio\"}}),_c('div',{staticClass:\"iconfont icon-sound\"}),_c('el-progress',{attrs:{\"show-text\":false,\"stroke-width\":5,\"percentage\":_vm.Recordingtage,\"color\":\"#2E70ED\"}}),_c('div',{staticClass:\"time-text\"},[_vm._v(_vm._s(_vm.Recordingtime))]),(!_vm.bengin)?_c('button',{on:{\"click\":_vm.startRecording}},[_vm._v(\"begin\")]):_vm._e(),(_vm.bengin)?_c('button',{on:{\"click\":_vm.endRecording}},[_vm._v(\"结束录音\")]):_vm._e(),_c('ns-Video')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <audio id=\"audio\"></audio>\r\n    <div class=\"iconfont icon-sound\"></div>\r\n    <el-progress :show-text=\"false\" :stroke-width=\"5\" :percentage=\"Recordingtage\" color=\"#2E70ED\"></el-progress>\r\n    <div class=\"time-text\">{{Recordingtime}}</div>\r\n    <button @click=\"startRecording\" v-if=\"!bengin\">begin</button>\r\n    <button @click=\"endRecording\" v-if=\"bengin\">结束录音</button>\r\n    <ns-Video></ns-Video>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"@/assets/recorderjs/recorder-core.js\";\r\nimport \"@/assets/recorderjs/waveview.js\";\r\nimport \"@/assets/recorderjs/jquery.js\";\r\nimport \"@/assets/recorderjs/mp3-engine.js\";\r\nimport \"@/assets/recorderjs/mp3.js\";\r\n\r\nexport default {\r\n  name: \"recorderDemo\",\r\n  data() {\r\n    return {\r\n      bengin: false,\r\n      Recordingtime: \"00\",\r\n      Recordingtage: \"30\",\r\n      Recordingnum: \"\",\r\n      rec: ''\r\n    };\r\n  },\r\n  created() {},\r\n  mounted(){},\r\n  methods: {\r\n    startRecording() {\r\n      this.bengin = true;\r\n      this.recopen();\r\n    },\r\n    endRecording() {\r\n      this.bengin = false;\r\n      this.recstop();\r\n    },\r\n    recopen(){  //打开录音\r\n      let _this = this;\r\n      let type = \"mp3\"; // 类型\r\n      let bit = 16; // kbps mp3、wav取值8位16位\r\n      let sample = 16000; // mp3标准值，wav任意\r\n      this.rec=window.Recorder({\r\n        type:type,\r\n        bitRate:bit,\r\n        sampleRate:sample,\r\n        onProcess:function(buffers,level,time,sampleRate){\r\n          console.log('成功参数1：', buffers);\r\n          console.log('成功参数1：', level);\r\n          console.log('成功参数1：', time);\r\n          console.log('成功参数1：', sampleRate);\r\n        }\r\n      });\r\n      this.rec.open(\r\n        function(){\r\n          console.log(\"已打开:\"+type+\" \"+bit+\"kbps\");\r\n          setTimeout(function(){  //正常打开录音后开始录音\r\n            _this.recstart();\r\n          },200)\r\n        },\r\n        function(e,isUserNotAllow){\r\n          console.log((isUserNotAllow?\"UserNotAllow，\":\"\")+\"打开失败：\"+e);\r\n        }\r\n      );\r\n    },\r\n    recstop(batCall){\r\n      let _this = this;\r\n      if(this.rec){\r\n        if(!batCall){\r\n          console.log(\"正在编码\"+this.rec.set.type+\"...\");\r\n        }\r\n        this.rec.stop(\r\n        function(blob,time){\r\n          console.log('blob:=======', blob);\r\n          console.log('time:=======', time);\r\n          this.down(blob, new Date().getTime(), 'mp3')\r\n        },function(s){\r\n          console.log(\"失败：\"+s);\r\n          batCall&&batCall();\r\n        });\r\n      }\r\n      setTimeout(function(){\r\n        _this.recclose()\r\n      },200)\r\n    },\r\n    recstart() {\r\n      if (this.rec) {\r\n        this.rec.start();\r\n        console.log(\"录制中...\");\r\n      }\r\n    },\r\n    recclose() { // 关闭网页录音功能\r\n      if (this.rec) {\r\n        this.rec.close(function() {\r\n          console.log(\"已关闭\");// 控制台提示已关闭\r\n        });\r\n      }\r\n    },\r\n    down(res, name, type){\r\n      let blob = new Blob([res], {\r\n        type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n      });\r\n      let downloadElement = document.createElement('a');\r\n      let href = window.URL.createObjectURL(blob);\r\n      downloadElement.href = href;\r\n      downloadElement.download = decodeURI(name) + '.' + type;\r\n      document.body.appendChild(downloadElement);\r\n      downloadElement.click();\r\n      document.body.removeChild(downloadElement);\r\n      window.URL.revokeObjectURL(href);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./recorderDemo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./recorderDemo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./recorderDemo.vue?vue&type=template&id=4decea9a&scoped=true&\"\nimport script from \"./recorderDemo.vue?vue&type=script&lang=js&\"\nexport * from \"./recorderDemo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4decea9a\",\n  null\n  \n)\n\nexport default component.exports","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Float64Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Float64', function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectDefinePropertyModule = require('../internals/object-define-property');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  return Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call({ dotAll: true, sticky: true }) !== 'sy';\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) objectDefinePropertyModule.f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","var $ = require('../internals/export');\n\nvar log = Math.log;\nvar LOG10E = Math.LOG10E;\n\n// `Math.log10` method\n// https://tc39.es/ecma262/#sec-math.log10\n$({ target: 'Math', stat: true }, {\n  log10: function log10(x) {\n    return log(x) * LOG10E;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int16Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int16', function (init) {\n  return function Int16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","/*eslint-disable*/\r\n/*\r\nmp3编码器用到的lamejs编码引擎，一般都用MP3格式，浏览器支持广泛，此引擎测试的也比较多，稳定\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n\r\n(function(){\r\n\"use strict\";\r\n\r\n//end2 ****开始copy lamejs*****\r\n/*\r\nmp3编码依赖lamejs，如果无需mp3支持直接移除此代码\r\nhttps://github.com/zhuker/lamejs/blob/bfb7f6c6d7877e0fe1ad9e72697a871676119a0e/lame.all.js\r\n*/\r\n\r\nfunction lamejs() {\r\nfunction new_byte(count) {\r\n    return new Int8Array(count);\r\n}\r\n\r\nfunction new_short(count) {\r\n    return new Int16Array(count);\r\n}\r\n\r\nfunction new_int(count) {\r\n    return new Int32Array(count);\r\n}\r\n\r\nfunction new_float(count) {\r\n    return new Float32Array(count);\r\n}\r\n\r\nfunction new_double(count) {\r\n    return new Float64Array(count);\r\n}\r\n\r\nfunction new_float_n(args) {\r\n    if (args.length == 1) {\r\n        return new_float(args[0]);\r\n    }\r\n    var sz = args[0];\r\n    args = args.slice(1);\r\n    var A = [];\r\n    for (var i = 0; i < sz; i++) {\r\n        A.push(new_float_n(args));\r\n    }\r\n    return A;\r\n}\r\nfunction new_int_n(args) {\r\n    if (args.length == 1) {\r\n        return new_int(args[0]);\r\n    }\r\n    var sz = args[0];\r\n    args = args.slice(1);\r\n    var A = [];\r\n    for (var i = 0; i < sz; i++) {\r\n        A.push(new_int_n(args));\r\n    }\r\n    return A;\r\n}\r\n\r\nfunction new_short_n(args) {\r\n    if (args.length == 1) {\r\n        return new_short(args[0]);\r\n    }\r\n    var sz = args[0];\r\n    args = args.slice(1);\r\n    var A = [];\r\n    for (var i = 0; i < sz; i++) {\r\n        A.push(new_short_n(args));\r\n    }\r\n    return A;\r\n}\r\n\r\nfunction new_array_n(args) {\r\n    if (args.length == 1) {\r\n        return new Array(args[0]);\r\n    }\r\n    var sz = args[0];\r\n    args = args.slice(1);\r\n    var A = [];\r\n    for (var i = 0; i < sz; i++) {\r\n        A.push(new_array_n(args));\r\n    }\r\n    return A;\r\n}\r\n\r\n\r\nvar Arrays = {};\r\n\r\nArrays.fill = function (a, fromIndex, toIndex, val) {\r\n    if (arguments.length == 2) {\r\n        for (var i = 0; i < a.length; i++) {\r\n            a[i] = arguments[1];\r\n        }\r\n    } else {\r\n        for (var i = fromIndex; i < toIndex; i++) {\r\n            a[i] = val;\r\n        }\r\n    }\r\n};\r\n\r\nvar System = {};\r\n\r\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\r\n    var srcEnd = srcPos + length;\r\n    while (srcPos < srcEnd)\r\n        dest[destPos++] = src[srcPos++];\r\n};\r\n\r\n\r\nvar Util = {};\r\nUtil.SQRT2 = 1.41421356237309504880;\r\nUtil.FAST_LOG10 = function (x) {\r\n    return Math.log10(x);\r\n};\r\n\r\nUtil.FAST_LOG10_X = function (x, y) {\r\n    return Math.log10(x) * y;\r\n};\r\n\r\nfunction ShortBlock(ordinal) {\r\n    this.ordinal = ordinal;\r\n}\r\n/**\r\n * LAME may use them, even different block types for L/R.\r\n */\r\nShortBlock.short_block_allowed = new ShortBlock(0);\r\n/**\r\n * LAME may use them, but always same block types in L/R.\r\n */\r\nShortBlock.short_block_coupled = new ShortBlock(1);\r\n/**\r\n * LAME will not use short blocks, long blocks only.\r\n */\r\nShortBlock.short_block_dispensed = new ShortBlock(2);\r\n/**\r\n * LAME will not use long blocks, short blocks only.\r\n */\r\nShortBlock.short_block_forced = new ShortBlock(3);\r\n\r\nvar Float = {};\r\nFloat.MAX_VALUE = 3.4028235e+38;\r\n\r\nfunction VbrMode(ordinal) {\r\n    this.ordinal = ordinal;\r\n}\r\nVbrMode.vbr_off = new VbrMode(0);\r\nVbrMode.vbr_mt = new VbrMode(1);\r\nVbrMode.vbr_rh = new VbrMode(2);\r\nVbrMode.vbr_abr = new VbrMode(3);\r\nVbrMode.vbr_mtrh = new VbrMode(4);\r\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\r\n\r\nvar assert = function (x) {\r\n    //console.assert(x);\r\n};\r\n\r\nvar module_exports = {\r\n    \"System\": System,\r\n    \"VbrMode\": VbrMode,\r\n    \"Float\": Float,\r\n    \"ShortBlock\": ShortBlock,\r\n    \"Util\": Util,\r\n    \"Arrays\": Arrays,\r\n    \"new_array_n\": new_array_n,\r\n    \"new_byte\": new_byte,\r\n    \"new_double\": new_double,\r\n    \"new_float\": new_float,\r\n    \"new_float_n\": new_float_n,\r\n    \"new_int\": new_int,\r\n    \"new_int_n\": new_int_n,\r\n    \"new_short\": new_short,\r\n    \"new_short_n\": new_short_n,\r\n    \"assert\": assert\r\n};\r\n//package mp3;\r\n\r\n/* MPEG modes */\r\nfunction MPEGMode(ordinal) {\r\n    var _ordinal = ordinal;\r\n    this.ordinal = function () {\r\n        return _ordinal;\r\n    }\r\n}\r\n\r\nMPEGMode.STEREO = new MPEGMode(0);\r\nMPEGMode.JOINT_STEREO = new MPEGMode(1);\r\nMPEGMode.DUAL_CHANNEL = new MPEGMode(2);\r\nMPEGMode.MONO = new MPEGMode(3);\r\nMPEGMode.NOT_SET = new MPEGMode(4);\r\n\r\nfunction Version() {\r\n\r\n    /**\r\n     * URL for the LAME website.\r\n     */\r\n    var LAME_URL = \"http://www.mp3dev.org/\";\r\n\r\n    /**\r\n     * Major version number.\r\n     */\r\n    var LAME_MAJOR_VERSION = 3;\r\n    /**\r\n     * Minor version number.\r\n     */\r\n    var LAME_MINOR_VERSION = 98;\r\n    /**\r\n     * Patch level.\r\n     */\r\n    var LAME_PATCH_VERSION = 4;\r\n\r\n    /**\r\n     * Major version number.\r\n     */\r\n    var PSY_MAJOR_VERSION = 0;\r\n    /**\r\n     * Minor version number.\r\n     */\r\n    var PSY_MINOR_VERSION = 93;\r\n\r\n    /**\r\n     * A string which describes the version of LAME.\r\n     *\r\n     * @return string which describes the version of LAME\r\n     */\r\n    this.getLameVersion = function () {\r\n        // primary to write screen reports\r\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\r\n    }\r\n\r\n    /**\r\n     * The short version of the LAME version string.\r\n     *\r\n     * @return short version of the LAME version string\r\n     */\r\n    this.getLameShortVersion = function () {\r\n        // Adding date and time to version string makes it harder for output\r\n        // validation\r\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\r\n    }\r\n\r\n    /**\r\n     * The shortest version of the LAME version string.\r\n     *\r\n     * @return shortest version of the LAME version string\r\n     */\r\n    this.getLameVeryShortVersion = function () {\r\n        // Adding date and time to version string makes it harder for output\r\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\r\n    }\r\n\r\n    /**\r\n     * String which describes the version of GPSYCHO\r\n     *\r\n     * @return string which describes the version of GPSYCHO\r\n     */\r\n    this.getPsyVersion = function () {\r\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\r\n    }\r\n\r\n    /**\r\n     * String which is a URL for the LAME website.\r\n     *\r\n     * @return string which is a URL for the LAME website\r\n     */\r\n    this.getLameUrl = function () {\r\n        return LAME_URL;\r\n    }\r\n\r\n    /**\r\n     * Quite useless for a java version, however we are compatible ;-)\r\n     *\r\n     * @return \"32bits\"\r\n     */\r\n    this.getLameOsBitness = function () {\r\n        return \"32bits\";\r\n    }\r\n\r\n}\r\n\r\n/*\r\n *\tMP3 huffman table selecting and bit counting\r\n *\r\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\r\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n//package mp3;\r\n\r\n//import java.util.Arrays;\r\n\r\n\r\n\r\nfunction Takehiro() {\r\n\r\n    var qupvt = null;\r\n    this.qupvt = null;\r\n\r\n    this.setModules = function (_qupvt) {\r\n        this.qupvt = _qupvt;\r\n        qupvt = _qupvt;\r\n    }\r\n\r\n    function Bits(b) {\r\n        this.bits = 0 | b;\r\n    }\r\n\r\n    var subdv_table = [[0, 0], /* 0 bands */\r\n        [0, 0], /* 1 bands */\r\n        [0, 0], /* 2 bands */\r\n        [0, 0], /* 3 bands */\r\n        [0, 0], /* 4 bands */\r\n        [0, 1], /* 5 bands */\r\n        [1, 1], /* 6 bands */\r\n        [1, 1], /* 7 bands */\r\n        [1, 2], /* 8 bands */\r\n        [2, 2], /* 9 bands */\r\n        [2, 3], /* 10 bands */\r\n        [2, 3], /* 11 bands */\r\n        [3, 4], /* 12 bands */\r\n        [3, 4], /* 13 bands */\r\n        [3, 4], /* 14 bands */\r\n        [4, 5], /* 15 bands */\r\n        [4, 5], /* 16 bands */\r\n        [4, 6], /* 17 bands */\r\n        [5, 6], /* 18 bands */\r\n        [5, 6], /* 19 bands */\r\n        [5, 7], /* 20 bands */\r\n        [6, 7], /* 21 bands */\r\n        [6, 7], /* 22 bands */\r\n    ];\r\n\r\n\r\n    /**\r\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\r\n     * Takes into account the fact that we are quantizing xr . ix, but we want\r\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\r\n     * mean ix is as close as possible to xr, which is different.)\r\n     *\r\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\r\n     *\r\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\r\n     * If you need the ASM code, check CVS circa Aug 2000.\r\n     *\r\n     * 01/2004: Optimizations by Gabriel Bouvigne\r\n     */\r\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\r\n        var compareval0 = (1.0 - 0.4054) / istep;\r\n\r\n        l = l >> 1;\r\n        while ((l--) != 0) {\r\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\r\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\r\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\r\n     * ROUNDFAC= -0.0946<BR>\r\n     *\r\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\r\n     * ROUNDFAC=0.4054<BR>\r\n     *\r\n     * Note: using floor() or 0| is extremely slow. On machines where the\r\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\r\n     * some ASM for XRPOW_FTOI().\r\n     */\r\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\r\n\r\n        l = l >> 1;\r\n        var remaining = l % 2;\r\n        l = l >> 1;\r\n        while (l-- != 0) {\r\n            var x0, x1, x2, x3;\r\n            var rx0, rx1, rx2, rx3;\r\n\r\n            x0 = xr[xrPos++] * istep;\r\n            x1 = xr[xrPos++] * istep;\r\n            rx0 = 0 | x0;\r\n            x2 = xr[xrPos++] * istep;\r\n            rx1 = 0 | x1;\r\n            x3 = xr[xrPos++] * istep;\r\n            rx2 = 0 | x2;\r\n            x0 += qupvt.adj43[rx0];\r\n            rx3 = 0 | x3;\r\n            x1 += qupvt.adj43[rx1];\r\n            ix[ixPos++] = 0 | x0;\r\n            x2 += qupvt.adj43[rx2];\r\n            ix[ixPos++] = 0 | x1;\r\n            x3 += qupvt.adj43[rx3];\r\n            ix[ixPos++] = 0 | x2;\r\n            ix[ixPos++] = 0 | x3;\r\n        }\r\n        if (remaining != 0) {\r\n            var x0, x1;\r\n            var rx0, rx1;\r\n\r\n            x0 = xr[xrPos++] * istep;\r\n            x1 = xr[xrPos++] * istep;\r\n            rx0 = 0 | x0;\r\n            rx1 = 0 | x1;\r\n            x0 += qupvt.adj43[rx0];\r\n            x1 += qupvt.adj43[rx1];\r\n            ix[ixPos++] = 0 | x0;\r\n            ix[ixPos++] = 0 | x1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Quantization function This function will select which lines to quantize\r\n     * and call the proper quantization function\r\n     */\r\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\r\n        /* quantize on xr^(3/4) instead of xr */\r\n        var sfb;\r\n        var sfbmax;\r\n        var j = 0;\r\n        var prev_data_use;\r\n        var accumulate = 0;\r\n        var accumulate01 = 0;\r\n        var xpPos = 0;\r\n        var iData = pi;\r\n        var iDataPos = 0;\r\n        var acc_iData = iData;\r\n        var acc_iDataPos = 0;\r\n        var acc_xp = xp;\r\n        var acc_xpPos = 0;\r\n\r\n        /*\r\n         * Reusing previously computed data does not seems to work if global\r\n         * gain is changed. Finding why it behaves this way would allow to use a\r\n         * cache of previously computed values (let's 10 cached values per sfb)\r\n         * that would probably provide a noticeable speedup\r\n         */\r\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\r\n\r\n        if (codInfo.block_type == Encoder.SHORT_TYPE)\r\n            sfbmax = 38;\r\n        else\r\n            sfbmax = 21;\r\n\r\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\r\n            var step = -1;\r\n\r\n            if (prev_data_use || codInfo.block_type == Encoder.NORM_TYPE) {\r\n                step = codInfo.global_gain\r\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\r\n                        : 0)) << (codInfo.scalefac_scale + 1))\r\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\r\n            }\r\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\r\n                /*\r\n                 * do not recompute this part, but compute accumulated lines\r\n                 */\r\n                if (accumulate != 0) {\r\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\r\n                        acc_iData, acc_iDataPos);\r\n                    accumulate = 0;\r\n                }\r\n                if (accumulate01 != 0) {\r\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\r\n                        acc_xpPos, acc_iData, acc_iDataPos);\r\n                    accumulate01 = 0;\r\n                }\r\n            } else { /* should compute this part */\r\n                var l = codInfo.width[sfb];\r\n\r\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\r\n                    /* do not compute upper zero part */\r\n                    var usefullsize;\r\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\r\n                    Arrays.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\r\n                    l = usefullsize;\r\n\r\n                    if (l < 0) {\r\n                        l = 0;\r\n                    }\r\n\r\n                    /* no need to compute higher sfb values */\r\n                    sfb = sfbmax + 1;\r\n                }\r\n\r\n                /* accumulate lines to quantize */\r\n                if (0 == accumulate && 0 == accumulate01) {\r\n                    acc_iData = iData;\r\n                    acc_iDataPos = iDataPos;\r\n                    acc_xp = xp;\r\n                    acc_xpPos = xpPos;\r\n                }\r\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\r\n                    && sfb >= prevNoise.sfb_count1\r\n                    && prevNoise.step[sfb] > 0\r\n                    && step >= prevNoise.step[sfb]) {\r\n\r\n                    if (accumulate != 0) {\r\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\r\n                            acc_xpPos, acc_iData, acc_iDataPos);\r\n                        accumulate = 0;\r\n                        acc_iData = iData;\r\n                        acc_iDataPos = iDataPos;\r\n                        acc_xp = xp;\r\n                        acc_xpPos = xpPos;\r\n                    }\r\n                    accumulate01 += l;\r\n                } else {\r\n                    if (accumulate01 != 0) {\r\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\r\n                            acc_xpPos, acc_iData, acc_iDataPos);\r\n                        accumulate01 = 0;\r\n                        acc_iData = iData;\r\n                        acc_iDataPos = iDataPos;\r\n                        acc_xp = xp;\r\n                        acc_xpPos = xpPos;\r\n                    }\r\n                    accumulate += l;\r\n                }\r\n\r\n                if (l <= 0) {\r\n                    /*\r\n                     * rh: 20040215 may happen due to \"prev_data_use\"\r\n                     * optimization\r\n                     */\r\n                    if (accumulate01 != 0) {\r\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\r\n                            acc_xpPos, acc_iData, acc_iDataPos);\r\n                        accumulate01 = 0;\r\n                    }\r\n                    if (accumulate != 0) {\r\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\r\n                            acc_xpPos, acc_iData, acc_iDataPos);\r\n                        accumulate = 0;\r\n                    }\r\n\r\n                    break;\r\n                    /* ends for-loop */\r\n                }\r\n            }\r\n            if (sfb <= sfbmax) {\r\n                iDataPos += codInfo.width[sfb];\r\n                xpPos += codInfo.width[sfb];\r\n                j += codInfo.width[sfb];\r\n            }\r\n        }\r\n        if (accumulate != 0) { /* last data part */\r\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\r\n                acc_iData, acc_iDataPos);\r\n            accumulate = 0;\r\n        }\r\n        if (accumulate01 != 0) { /* last data part */\r\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\r\n                acc_iData, acc_iDataPos);\r\n            accumulate01 = 0;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * ix_max\r\n     */\r\n    function ix_max(ix, ixPos, endPos) {\r\n        var max1 = 0, max2 = 0;\r\n\r\n        do {\r\n            var x1 = ix[ixPos++];\r\n            var x2 = ix[ixPos++];\r\n            if (max1 < x1)\r\n                max1 = x1;\r\n\r\n            if (max2 < x2)\r\n                max2 = x2;\r\n        } while (ixPos < endPos);\r\n        if (max1 < max2)\r\n            max1 = max2;\r\n        return max1;\r\n    }\r\n\r\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\r\n        /* ESC-table is used */\r\n        var linbits = Tables.ht[t1].xlen * 65536 + Tables.ht[t2].xlen;\r\n        var sum = 0, sum2;\r\n\r\n        do {\r\n            var x = ix[ixPos++];\r\n            var y = ix[ixPos++];\r\n\r\n            if (x != 0) {\r\n                if (x > 14) {\r\n                    x = 15;\r\n                    sum += linbits;\r\n                }\r\n                x *= 16;\r\n            }\r\n\r\n            if (y != 0) {\r\n                if (y > 14) {\r\n                    y = 15;\r\n                    sum += linbits;\r\n                }\r\n                x += y;\r\n            }\r\n\r\n            sum += Tables.largetbl[x];\r\n        } while (ixPos < end);\r\n\r\n        sum2 = sum & 0xffff;\r\n        sum >>= 16;\r\n\r\n        if (sum > sum2) {\r\n            sum = sum2;\r\n            t1 = t2;\r\n        }\r\n\r\n        s.bits += sum;\r\n        return t1;\r\n    }\r\n\r\n    function count_bit_noESC(ix, ixPos, end, s) {\r\n        /* No ESC-words */\r\n        var sum1 = 0;\r\n        var hlen1 = Tables.ht[1].hlen;\r\n\r\n        do {\r\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\r\n            ixPos += 2;\r\n            sum1 += hlen1[x];\r\n        } while (ixPos < end);\r\n\r\n        s.bits += sum1;\r\n        return 1;\r\n    }\r\n\r\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\r\n        /* No ESC-words */\r\n        var sum = 0, sum2;\r\n        var xlen = Tables.ht[t1].xlen;\r\n        var hlen;\r\n        if (t1 == 2)\r\n            hlen = Tables.table23;\r\n        else\r\n            hlen = Tables.table56;\r\n\r\n        do {\r\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\r\n            ixPos += 2;\r\n            sum += hlen[x];\r\n        } while (ixPos < end);\r\n\r\n        sum2 = sum & 0xffff;\r\n        sum >>= 16;\r\n\r\n        if (sum > sum2) {\r\n            sum = sum2;\r\n            t1++;\r\n        }\r\n\r\n        s.bits += sum;\r\n        return t1;\r\n    }\r\n\r\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\r\n        /* No ESC-words */\r\n        var sum1 = 0;\r\n        var sum2 = 0;\r\n        var sum3 = 0;\r\n        var xlen = Tables.ht[t1].xlen;\r\n        var hlen1 = Tables.ht[t1].hlen;\r\n        var hlen2 = Tables.ht[t1 + 1].hlen;\r\n        var hlen3 = Tables.ht[t1 + 2].hlen;\r\n\r\n        do {\r\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\r\n            ixPos += 2;\r\n            sum1 += hlen1[x];\r\n            sum2 += hlen2[x];\r\n            sum3 += hlen3[x];\r\n        } while (ixPos < end);\r\n        var t = t1;\r\n        if (sum1 > sum2) {\r\n            sum1 = sum2;\r\n            t++;\r\n        }\r\n        if (sum1 > sum3) {\r\n            sum1 = sum3;\r\n            t = t1 + 2;\r\n        }\r\n        s.bits += sum1;\r\n\r\n        return t;\r\n    }\r\n\r\n    /*************************************************************************/\r\n    /* choose table */\r\n    /*************************************************************************/\r\n\r\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\r\n        13, 13, 13, 13, 13, 13];\r\n\r\n    /**\r\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\r\n     * bits.\r\n     *\r\n     * Note: This code contains knowledge about the sizes and characteristics of\r\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\r\n     * with any arbitrary tables.\r\n     */\r\n    function choose_table(ix, ixPos, endPos, s) {\r\n        var max = ix_max(ix, ixPos, endPos);\r\n\r\n        switch (max) {\r\n            case 0:\r\n                return max;\r\n\r\n            case 1:\r\n                return count_bit_noESC(ix, ixPos, endPos, s);\r\n\r\n            case 2:\r\n            case 3:\r\n                return count_bit_noESC_from2(ix, ixPos, endPos,\r\n                    huf_tbl_noESC[max - 1], s);\r\n\r\n            case 4:\r\n            case 5:\r\n            case 6:\r\n            case 7:\r\n            case 8:\r\n            case 9:\r\n            case 10:\r\n            case 11:\r\n            case 12:\r\n            case 13:\r\n            case 14:\r\n            case 15:\r\n                return count_bit_noESC_from3(ix, ixPos, endPos,\r\n                    huf_tbl_noESC[max - 1], s);\r\n\r\n            default:\r\n                /* try tables with linbits */\r\n                if (max > QuantizePVT.IXMAX_VAL) {\r\n                    s.bits = QuantizePVT.LARGE_BITS;\r\n                    return -1;\r\n                }\r\n                max -= 15;\r\n                var choice2;\r\n                for (choice2 = 24; choice2 < 32; choice2++) {\r\n                    if (Tables.ht[choice2].linmax >= max) {\r\n                        break;\r\n                    }\r\n                }\r\n                var choice;\r\n                for (choice = choice2 - 8; choice < 24; choice++) {\r\n                    if (Tables.ht[choice].linmax >= max) {\r\n                        break;\r\n                    }\r\n                }\r\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * count_bit\r\n     */\r\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\r\n        var ix = gi.l3_enc;\r\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\r\n\r\n        if (prev_noise != null)\r\n            prev_noise.sfb_count1 = 0;\r\n\r\n        /* Determine count1 region */\r\n        for (; i > 1; i -= 2)\r\n            if ((ix[i - 1] | ix[i - 2]) != 0)\r\n                break;\r\n        gi.count1 = i;\r\n\r\n        /* Determines the number of bits to encode the quadruples. */\r\n        var a1 = 0;\r\n        var a2 = 0;\r\n        for (; i > 3; i -= 4) {\r\n            var p;\r\n            /* hack to check if all values <= 1 */\r\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\r\n            //if (true) {\r\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\r\n                break;\r\n            }\r\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\r\n            a1 += Tables.t32l[p];\r\n            a2 += Tables.t33l[p];\r\n        }\r\n        var bits = a1;\r\n        gi.count1table_select = 0;\r\n        if (a1 > a2) {\r\n            bits = a2;\r\n            gi.count1table_select = 1;\r\n        }\r\n\r\n        gi.count1bits = bits;\r\n        gi.big_values = i;\r\n        if (i == 0)\r\n            return bits;\r\n\r\n        if (gi.block_type == Encoder.SHORT_TYPE) {\r\n            a1 = 3 * gfc.scalefac_band.s[3];\r\n            if (a1 > gi.big_values)\r\n                a1 = gi.big_values;\r\n            a2 = gi.big_values;\r\n\r\n        } else if (gi.block_type == Encoder.NORM_TYPE) {\r\n            /* bv_scf has 576 entries (0..575) */\r\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\r\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\r\n\r\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\r\n            a1 = gfc.scalefac_band.l[a1 + 1];\r\n            if (a2 < i) {\r\n                var bi = new Bits(bits);\r\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\r\n                bits = bi.bits;\r\n            }\r\n        } else {\r\n            gi.region0_count = 7;\r\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\r\n            gi.region1_count = Encoder.SBMAX_l - 1 - 7 - 1;\r\n            a1 = gfc.scalefac_band.l[7 + 1];\r\n            a2 = i;\r\n            if (a1 > a2) {\r\n                a1 = a2;\r\n            }\r\n        }\r\n\r\n        /* have to allow for the case when bigvalues < region0 < region1 */\r\n        /* (and region0, region1 are ignored) */\r\n        a1 = Math.min(a1, i);\r\n        a2 = Math.min(a2, i);\r\n\r\n\r\n        /* Count the number of bits necessary to code the bigvalues region. */\r\n        if (0 < a1) {\r\n            var bi = new Bits(bits);\r\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\r\n            bits = bi.bits;\r\n        }\r\n        if (a1 < a2) {\r\n            var bi = new Bits(bits);\r\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\r\n            bits = bi.bits;\r\n        }\r\n        if (gfc.use_best_huffman == 2) {\r\n            gi.part2_3_length = bits;\r\n            best_huffman_divide(gfc, gi);\r\n            bits = gi.part2_3_length;\r\n        }\r\n\r\n        if (prev_noise != null) {\r\n            if (gi.block_type == Encoder.NORM_TYPE) {\r\n                var sfb = 0;\r\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\r\n                    sfb++;\r\n                }\r\n                prev_noise.sfb_count1 = sfb;\r\n            }\r\n        }\r\n\r\n        return bits;\r\n    }\r\n\r\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\r\n        var ix = gi.l3_enc;\r\n\r\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\r\n        var w = (QuantizePVT.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\r\n\r\n        if (gi.xrpow_max > w)\r\n            return QuantizePVT.LARGE_BITS;\r\n\r\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\r\n\r\n        if ((gfc.substep_shaping & 2) != 0) {\r\n            var j = 0;\r\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\r\n            var gain = gi.global_gain + gi.scalefac_scale;\r\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\r\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\r\n                var width = gi.width[sfb];\r\n                if (0 == gfc.pseudohalf[sfb]) {\r\n                    j += width;\r\n                } else {\r\n                    var k;\r\n                    for (k = j, j += width; k < j; ++k) {\r\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.noquant_count_bits(gfc, gi, prev_noise);\r\n    }\r\n\r\n    /**\r\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\r\n     * kept in the bit reservoir.\r\n     */\r\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\r\n        var bigv = cod_info.big_values;\r\n\r\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\r\n            r01_bits[r0] = QuantizePVT.LARGE_BITS;\r\n        }\r\n\r\n        for (var r0 = 0; r0 < 16; r0++) {\r\n            var a1 = gfc.scalefac_band.l[r0 + 1];\r\n            if (a1 >= bigv)\r\n                break;\r\n            var r0bits = 0;\r\n            var bi = new Bits(r0bits);\r\n            var r0t = choose_table(ix, 0, a1, bi);\r\n            r0bits = bi.bits;\r\n\r\n            for (var r1 = 0; r1 < 8; r1++) {\r\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\r\n                if (a2 >= bigv)\r\n                    break;\r\n                var bits = r0bits;\r\n                bi = new Bits(bits);\r\n                var r1t = choose_table(ix, a1, a2, bi);\r\n                bits = bi.bits;\r\n                if (r01_bits[r0 + r1] > bits) {\r\n                    r01_bits[r0 + r1] = bits;\r\n                    r01_div[r0 + r1] = r0;\r\n                    r0_tbl[r0 + r1] = r0t;\r\n                    r1_tbl[r0 + r1] = r1t;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\r\n        var bigv = cod_info2.big_values;\r\n\r\n        for (var r2 = 2; r2 < Encoder.SBMAX_l + 1; r2++) {\r\n            var a2 = gfc.scalefac_band.l[r2];\r\n            if (a2 >= bigv)\r\n                break;\r\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\r\n            if (gi.part2_3_length <= bits)\r\n                break;\r\n\r\n            var bi = new Bits(bits);\r\n            var r2t = choose_table(ix, a2, bigv, bi);\r\n            bits = bi.bits;\r\n            if (gi.part2_3_length <= bits)\r\n                continue;\r\n\r\n            gi.assign(cod_info2);\r\n            gi.part2_3_length = bits;\r\n            gi.region0_count = r01_div[r2 - 2];\r\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\r\n            gi.table_select[0] = r0_tbl[r2 - 2];\r\n            gi.table_select[1] = r1_tbl[r2 - 2];\r\n            gi.table_select[2] = r2t;\r\n        }\r\n    }\r\n\r\n    this.best_huffman_divide = function (gfc, gi) {\r\n        var cod_info2 = new GrInfo();\r\n        var ix = gi.l3_enc;\r\n        var r01_bits = new_int(7 + 15 + 1);\r\n        var r01_div = new_int(7 + 15 + 1);\r\n        var r0_tbl = new_int(7 + 15 + 1);\r\n        var r1_tbl = new_int(7 + 15 + 1);\r\n\r\n        /* SHORT BLOCK stuff fails for MPEG2 */\r\n        if (gi.block_type == Encoder.SHORT_TYPE && gfc.mode_gr == 1)\r\n            return;\r\n\r\n        cod_info2.assign(gi);\r\n        if (gi.block_type == Encoder.NORM_TYPE) {\r\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\r\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\r\n                r0_tbl, r1_tbl);\r\n        }\r\n        var i = cod_info2.big_values;\r\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\r\n            return;\r\n\r\n        i = gi.count1 + 2;\r\n        if (i > 576)\r\n            return;\r\n\r\n        /* Determines the number of bits to encode the quadruples. */\r\n        cod_info2.assign(gi);\r\n        cod_info2.count1 = i;\r\n        var a1 = 0;\r\n        var a2 = 0;\r\n\r\n\r\n        for (; i > cod_info2.big_values; i -= 4) {\r\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\r\n                + ix[i - 1];\r\n            a1 += Tables.t32l[p];\r\n            a2 += Tables.t33l[p];\r\n        }\r\n        cod_info2.big_values = i;\r\n\r\n        cod_info2.count1table_select = 0;\r\n        if (a1 > a2) {\r\n            a1 = a2;\r\n            cod_info2.count1table_select = 1;\r\n        }\r\n\r\n        cod_info2.count1bits = a1;\r\n\r\n        if (cod_info2.block_type == Encoder.NORM_TYPE)\r\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\r\n                r0_tbl, r1_tbl);\r\n        else {\r\n            /* Count the number of bits necessary to code the bigvalues region. */\r\n            cod_info2.part2_3_length = a1;\r\n            a1 = gfc.scalefac_band.l[7 + 1];\r\n            if (a1 > i) {\r\n                a1 = i;\r\n            }\r\n            if (a1 > 0) {\r\n                var bi = new Bits(cod_info2.part2_3_length);\r\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\r\n                cod_info2.part2_3_length = bi.bits;\r\n            }\r\n            if (i > a1) {\r\n                var bi = new Bits(cod_info2.part2_3_length);\r\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\r\n                cod_info2.part2_3_length = bi.bits;\r\n            }\r\n            if (gi.part2_3_length > cod_info2.part2_3_length)\r\n                gi.assign(cod_info2);\r\n        }\r\n    }\r\n\r\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\r\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\r\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\r\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\r\n    Takehiro.slen1_tab = slen1_tab;\r\n    Takehiro.slen2_tab = slen2_tab;\r\n\r\n    function scfsi_calc(ch, l3_side) {\r\n        var sfb;\r\n        var gi = l3_side.tt[1][ch];\r\n        var g0 = l3_side.tt[0][ch];\r\n\r\n        for (var i = 0; i < Tables.scfsi_band.length - 1; i++) {\r\n            for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\r\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\r\n                    && gi.scalefac[sfb] >= 0)\r\n                    break;\r\n            }\r\n            if (sfb == Tables.scfsi_band[i + 1]) {\r\n                for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\r\n                    gi.scalefac[sfb] = -1;\r\n                }\r\n                l3_side.scfsi[ch][i] = 1;\r\n            }\r\n        }\r\n        var s1 = 0;\r\n        var c1 = 0;\r\n        for (sfb = 0; sfb < 11; sfb++) {\r\n            if (gi.scalefac[sfb] == -1)\r\n                continue;\r\n            c1++;\r\n            if (s1 < gi.scalefac[sfb])\r\n                s1 = gi.scalefac[sfb];\r\n        }\r\n        var s2 = 0;\r\n        var c2 = 0;\r\n        for (; sfb < Encoder.SBPSY_l; sfb++) {\r\n            if (gi.scalefac[sfb] == -1)\r\n                continue;\r\n            c2++;\r\n            if (s2 < gi.scalefac[sfb])\r\n                s2 = gi.scalefac[sfb];\r\n        }\r\n\r\n        for (var i = 0; i < 16; i++) {\r\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\r\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\r\n                if (gi.part2_length > c) {\r\n                    gi.part2_length = c;\r\n                    gi.scalefac_compress = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Find the optimal way to store the scalefactors. Only call this routine\r\n     * after final scalefactors have been chosen and the channel/granule will\r\n     * not be re-encoded.\r\n     */\r\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\r\n        /* use scalefac_scale if we can */\r\n        var gi = l3_side.tt[gr][ch];\r\n        var sfb, i, j, l;\r\n        var recalc = 0;\r\n\r\n        /*\r\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\r\n         * ISO docs. added mt 3/00\r\n         */\r\n        /* check if l3_enc=0 */\r\n        j = 0;\r\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\r\n            var width = gi.width[sfb];\r\n            j += width;\r\n            for (l = -width; l < 0; l++) {\r\n                if (gi.l3_enc[l + j] != 0)\r\n                    break;\r\n            }\r\n            if (l == 0)\r\n                gi.scalefac[sfb] = recalc = -2;\r\n            /* anything goes. */\r\n            /*\r\n             * only best_scalefac_store and calc_scfsi know--and only they\r\n             * should know--about the magic number -2.\r\n             */\r\n        }\r\n\r\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\r\n            var s = 0;\r\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\r\n                if (gi.scalefac[sfb] > 0)\r\n                    s |= gi.scalefac[sfb];\r\n\r\n            if (0 == (s & 1) && s != 0) {\r\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\r\n                    if (gi.scalefac[sfb] > 0)\r\n                        gi.scalefac[sfb] >>= 1;\r\n\r\n                gi.scalefac_scale = recalc = 1;\r\n            }\r\n        }\r\n\r\n        if (0 == gi.preflag && gi.block_type != Encoder.SHORT_TYPE\r\n            && gfc.mode_gr == 2) {\r\n            for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\r\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\r\n                    && gi.scalefac[sfb] != -2)\r\n                    break;\r\n            if (sfb == Encoder.SBPSY_l) {\r\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\r\n                    if (gi.scalefac[sfb] > 0)\r\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\r\n\r\n                gi.preflag = recalc = 1;\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < 4; i++)\r\n            l3_side.scfsi[ch][i] = 0;\r\n\r\n        if (gfc.mode_gr == 2 && gr == 1\r\n            && l3_side.tt[0][ch].block_type != Encoder.SHORT_TYPE\r\n            && l3_side.tt[1][ch].block_type != Encoder.SHORT_TYPE) {\r\n            scfsi_calc(ch, l3_side);\r\n            recalc = 0;\r\n        }\r\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\r\n            if (gi.scalefac[sfb] == -2) {\r\n                gi.scalefac[sfb] = 0;\r\n                /* if anything goes, then 0 is a good choice */\r\n            }\r\n        }\r\n        if (recalc != 0) {\r\n            if (gfc.mode_gr == 2) {\r\n                this.scale_bitcount(gi);\r\n            } else {\r\n                this.scale_bitcount_lsf(gfc, gi);\r\n            }\r\n        }\r\n    }\r\n\r\n    function all_scalefactors_not_negative(scalefac, n) {\r\n        for (var i = 0; i < n; ++i) {\r\n            if (scalefac[i] < 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * number of bits used to encode scalefacs.\r\n     *\r\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\r\n     */\r\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\r\n        54, 72, 90, 72, 90, 108, 108, 126];\r\n\r\n    /**\r\n     * number of bits used to encode scalefacs.\r\n     *\r\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\r\n     */\r\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\r\n        52, 70, 88, 69, 87, 105, 104, 122];\r\n\r\n    /**\r\n     * number of bits used to encode scalefacs.\r\n     *\r\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\r\n     */\r\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\r\n        52, 43, 53, 63, 64, 74];\r\n\r\n    /**\r\n     * Also calculates the number of bits necessary to code the scalefactors.\r\n     */\r\n    this.scale_bitcount = function (cod_info) {\r\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\r\n\r\n        /* maximum values */\r\n        var tab;\r\n        var scalefac = cod_info.scalefac;\r\n\r\n\r\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n            tab = scale_short;\r\n            if (cod_info.mixed_block_flag != 0)\r\n                tab = scale_mixed;\r\n        } else { /* block_type == 1,2,or 3 */\r\n            tab = scale_long;\r\n            if (0 == cod_info.preflag) {\r\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\r\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\r\n                        break;\r\n\r\n                if (sfb == Encoder.SBPSY_l) {\r\n                    cod_info.preflag = 1;\r\n                    for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\r\n                        scalefac[sfb] -= qupvt.pretab[sfb];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\r\n            if (max_slen1 < scalefac[sfb])\r\n                max_slen1 = scalefac[sfb];\r\n\r\n        for (; sfb < cod_info.sfbmax; sfb++)\r\n            if (max_slen2 < scalefac[sfb])\r\n                max_slen2 = scalefac[sfb];\r\n\r\n        /*\r\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\r\n         * posible values of scalefac_compress to find the one which uses the\r\n         * smallest number of bits. ISO would stop at first valid index\r\n         */\r\n        cod_info.part2_length = QuantizePVT.LARGE_BITS;\r\n        for (k = 0; k < 16; k++) {\r\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\r\n                && cod_info.part2_length > tab[k]) {\r\n                cod_info.part2_length = tab[k];\r\n                cod_info.scalefac_compress = k;\r\n            }\r\n        }\r\n        return cod_info.part2_length == QuantizePVT.LARGE_BITS;\r\n    }\r\n\r\n    /**\r\n     * table of largest scalefactor values for MPEG2\r\n     */\r\n    var max_range_sfac_tab = [[15, 15, 7, 7],\r\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\r\n        [7, 7, 7, 0], [3, 3, 0, 0]];\r\n\r\n    /**\r\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\r\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\r\n     *\r\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\r\n     * \"Audio Decoding Layer III\"\r\n     */\r\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\r\n        var table_number, row_in_table, partition, nr_sfb, window;\r\n        var over;\r\n        var i, sfb;\r\n        var max_sfac = new_int(4);\r\n//var partition_table;\r\n        var scalefac = cod_info.scalefac;\r\n\r\n        /*\r\n         * Set partition table. Note that should try to use table one, but do\r\n         * not yet...\r\n         */\r\n        if (cod_info.preflag != 0)\r\n            table_number = 2;\r\n        else\r\n            table_number = 0;\r\n\r\n        for (i = 0; i < 4; i++)\r\n            max_sfac[i] = 0;\r\n\r\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n            row_in_table = 1;\r\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\r\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\r\n                nr_sfb = partition_table[partition] / 3;\r\n                for (i = 0; i < nr_sfb; i++, sfb++)\r\n                    for (window = 0; window < 3; window++)\r\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\r\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\r\n            }\r\n        } else {\r\n            row_in_table = 0;\r\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\r\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\r\n                nr_sfb = partition_table[partition];\r\n                for (i = 0; i < nr_sfb; i++, sfb++)\r\n                    if (scalefac[sfb] > max_sfac[partition])\r\n                        max_sfac[partition] = scalefac[sfb];\r\n            }\r\n        }\r\n\r\n        for (over = false, partition = 0; partition < 4; partition++) {\r\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\r\n                over = true;\r\n        }\r\n        if (!over) {\r\n            var slen1, slen2, slen3, slen4;\r\n\r\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\r\n            for (partition = 0; partition < 4; partition++)\r\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\r\n\r\n            /* set scalefac_compress */\r\n            slen1 = cod_info.slen[0];\r\n            slen2 = cod_info.slen[1];\r\n            slen3 = cod_info.slen[2];\r\n            slen4 = cod_info.slen[3];\r\n\r\n            switch (table_number) {\r\n                case 0:\r\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\r\n                        + (slen3 << 2) + slen4;\r\n                    break;\r\n\r\n                case 1:\r\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\r\n                        + slen3;\r\n                    break;\r\n\r\n                case 2:\r\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\r\n                    break;\r\n\r\n                default:\r\n                    System.err.printf(\"intensity stereo not implemented yet\\n\");\r\n                    break;\r\n            }\r\n        }\r\n        if (!over) {\r\n            cod_info.part2_length = 0;\r\n            for (partition = 0; partition < 4; partition++)\r\n                cod_info.part2_length += cod_info.slen[partition]\r\n                    * cod_info.sfb_partition_table[partition];\r\n        }\r\n        return over;\r\n    }\r\n\r\n    /*\r\n     * Since no bands have been over-amplified, we can set scalefac_compress and\r\n     * slen[] for the formatter\r\n     */\r\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\r\n        4, 4, 4, 4];\r\n\r\n    this.huffman_init = function (gfc) {\r\n        for (var i = 2; i <= 576; i += 2) {\r\n            var scfb_anz = 0, bv_index;\r\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\r\n                ;\r\n\r\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\r\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\r\n                bv_index--;\r\n\r\n            if (bv_index < 0) {\r\n                /*\r\n                 * this is an indication that everything is going to be encoded\r\n                 * as region0: bigvalues < region0 < region1 so lets set\r\n                 * region0, region1 to some value larger than bigvalues\r\n                 */\r\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\r\n            }\r\n\r\n            gfc.bv_scf[i - 2] = bv_index;\r\n\r\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\r\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\r\n                bv_index--;\r\n\r\n            if (bv_index < 0) {\r\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\r\n            }\r\n\r\n            gfc.bv_scf[i - 1] = bv_index;\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\r\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\r\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \r\n *\r\n *  This library is free software; you can redistribute it and/or\r\n *  modify it under the terms of the GNU Lesser General Public\r\n *  License as published by the Free Software Foundation; either\r\n *  version 2.1 of the License, or (at your option) any later version.\r\n *\r\n *  This library is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n *  Lesser General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU Lesser General Public\r\n *  License along with this library; if not, write to the Free Software\r\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\r\n *\r\n *  concept and filter values by David Robinson (David@Robinson.org)\r\n *    -- blame him if you think the idea is flawed\r\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\r\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\r\n *\r\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\r\n *    -- credit him for all the _good_ programming ;)\r\n *\r\n *\r\n *  For an explanation of the concepts and the basic algorithms involved, go to:\r\n *    http://www.replaygain.org/\r\n */\r\n\r\n/*\r\n *  Here's the deal. Call\r\n *\r\n *    InitGainAnalysis ( long samplefreq );\r\n *\r\n *  to initialize everything. Call\r\n *\r\n *    AnalyzeSamples ( var Float_t*  left_samples,\r\n *                     var Float_t*  right_samples,\r\n *                     size_t          num_samples,\r\n *                     int             num_channels );\r\n *\r\n *  as many times as you want, with as many or as few samples as you want.\r\n *  If mono, pass the sample buffer in through left_samples, leave\r\n *  right_samples NULL, and make sure num_channels = 1.\r\n *\r\n *    GetTitleGain()\r\n *\r\n *  will return the recommended dB level change for all samples analyzed\r\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\r\n *\r\n *    GetAlbumGain()\r\n *\r\n *  will return the recommended dB level change for all samples analyzed\r\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\r\n *\r\n *  Pseudo-code to process an album:\r\n *\r\n *    Float_t       l_samples [4096];\r\n *    Float_t       r_samples [4096];\r\n *    size_t        num_samples;\r\n *    unsigned int  num_songs;\r\n *    unsigned int  i;\r\n *\r\n *    InitGainAnalysis ( 44100 );\r\n *    for ( i = 1; i <= num_songs; i++ ) {\r\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\r\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\r\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\r\n *    }\r\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\r\n */\r\n\r\n/*\r\n *  So here's the main source of potential code confusion:\r\n *\r\n *  The filters applied to the incoming samples are IIR filters,\r\n *  meaning they rely on up to <filter order> number of previous samples\r\n *  AND up to <filter order> number of previous filtered samples.\r\n *\r\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\r\n *  complexity. The speed isn't compromised too much (I don't think), but the\r\n *  internal complexity is higher than it should be for such a relatively\r\n *  simple routine.\r\n *\r\n *  Optimization/clarity suggestions are welcome.\r\n */\r\n\r\n/**\r\n * Table entries per dB\r\n */\r\nGainAnalysis.STEPS_per_dB = 100.;\r\n/**\r\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\r\n */\r\nGainAnalysis.MAX_dB = 120.;\r\nGainAnalysis.GAIN_NOT_ENOUGH_SAMPLES = -24601;\r\nGainAnalysis.GAIN_ANALYSIS_ERROR = 0;\r\nGainAnalysis.GAIN_ANALYSIS_OK = 1;\r\nGainAnalysis.INIT_GAIN_ANALYSIS_ERROR = 0;\r\nGainAnalysis.INIT_GAIN_ANALYSIS_OK = 1;\r\n\r\nGainAnalysis.YULE_ORDER = 10;\r\nGainAnalysis.MAX_ORDER = GainAnalysis.YULE_ORDER;\r\n\r\nGainAnalysis.MAX_SAMP_FREQ = 48000;\r\nGainAnalysis.RMS_WINDOW_TIME_NUMERATOR = 1;\r\nGainAnalysis.RMS_WINDOW_TIME_DENOMINATOR = 20;\r\nGainAnalysis.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis.MAX_SAMP_FREQ * GainAnalysis.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR + 1);\r\n\r\nfunction GainAnalysis() {\r\n    /**\r\n     * calibration value for 89dB\r\n     */\r\n    var PINK_REF = 64.82;\r\n\r\n    var YULE_ORDER = GainAnalysis.YULE_ORDER;\r\n    /**\r\n     * percentile which is louder than the proposed level\r\n     */\r\n    var RMS_PERCENTILE = 0.95;\r\n    /**\r\n\r\n     * maximum allowed sample frequency [Hz]\r\n     */\r\n    var MAX_SAMP_FREQ = GainAnalysis.MAX_SAMP_FREQ;\r\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis.RMS_WINDOW_TIME_NUMERATOR;\r\n    /**\r\n     * numerator / denominator = time slice size [s]\r\n     */\r\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR;\r\n    /**\r\n     * max. Samples per Time slice\r\n     */\r\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis.MAX_SAMPLES_PER_WINDOW;\r\n\r\n\r\n    var ABYule = [\r\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\r\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\r\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\r\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\r\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\r\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\r\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\r\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\r\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\r\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\r\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\r\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\r\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\r\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\r\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\r\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\r\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\r\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\r\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\r\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\r\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\r\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\r\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\r\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\r\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\r\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\r\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\r\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\r\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\r\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\r\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\r\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\r\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\r\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\r\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\r\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\r\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\r\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\r\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\r\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\r\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\r\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\r\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\r\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\r\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\r\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\r\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\r\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\r\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\r\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\r\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\r\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\r\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\r\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\r\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\r\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\r\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\r\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\r\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\r\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\r\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\r\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\r\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\r\n\r\n    var ABButter = [\r\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\r\n            0.97261396931306, 0.98621192462708],\r\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\r\n            0.97022847566350, 0.98500175787242],\r\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\r\n            0.95920349965459, 0.97938932735214],\r\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\r\n            0.95124613669835, 0.97531843204928],\r\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\r\n            0.94705070426118, 0.97316523498161],\r\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\r\n            0.93034775234268, 0.96454515552826],\r\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\r\n            0.92177618768381, 0.96009142950541],\r\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\r\n            0.91885558323625, 0.95856916599601],\r\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\r\n            0.89487434461664, 0.94597685600279]];\r\n\r\n\r\n    /**\r\n     * When calling this procedure, make sure that ip[-order] and op[-order]\r\n     * point to real data\r\n     */\r\n    //private void filterYule(final float[] input, int inputPos, float[] output,\r\n    //int outputPos, int nSamples, final float[] kernel) {\r\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\r\n\r\n        while ((nSamples--) != 0) {\r\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\r\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\r\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\r\n                * kernel[2] - output[outputPos - 2] * kernel[3]\r\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\r\n                * kernel[5] + input[inputPos - 3] * kernel[6]\r\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\r\n                * kernel[8] - output[outputPos - 5] * kernel[9]\r\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\r\n                * kernel[11] + input[inputPos - 6] * kernel[12]\r\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\r\n                * kernel[14] - output[outputPos - 8] * kernel[15]\r\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\r\n                * kernel[17] + input[inputPos - 9] * kernel[18]\r\n                - output[outputPos - 10] * kernel[19]\r\n                + input[inputPos - 10] * kernel[20];\r\n            ++outputPos;\r\n            ++inputPos;\r\n        }\r\n    }\r\n\r\n//private void filterButter(final float[] input, int inputPos,\r\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\r\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\r\n\r\n        while ((nSamples--) != 0) {\r\n            output[outputPos] = input[inputPos + 0] * kernel[0]\r\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\r\n                * kernel[2] - output[outputPos - 2] * kernel[3]\r\n                + input[inputPos - 2] * kernel[4];\r\n            ++outputPos;\r\n            ++inputPos;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\r\n     *         not\r\n     */\r\n    function ResetSampleFrequency(rgData, samplefreq) {\r\n        /* zero out initial values */\r\n        for (var i = 0; i < MAX_ORDER; i++)\r\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\r\n\r\n        switch (0 | (samplefreq)) {\r\n            case 48000:\r\n                rgData.reqindex = 0;\r\n                break;\r\n            case 44100:\r\n                rgData.reqindex = 1;\r\n                break;\r\n            case 32000:\r\n                rgData.reqindex = 2;\r\n                break;\r\n            case 24000:\r\n                rgData.reqindex = 3;\r\n                break;\r\n            case 22050:\r\n                rgData.reqindex = 4;\r\n                break;\r\n            case 16000:\r\n                rgData.reqindex = 5;\r\n                break;\r\n            case 12000:\r\n                rgData.reqindex = 6;\r\n                break;\r\n            case 11025:\r\n                rgData.reqindex = 7;\r\n                break;\r\n            case 8000:\r\n                rgData.reqindex = 8;\r\n                break;\r\n            default:\r\n                return INIT_GAIN_ANALYSIS_ERROR;\r\n        }\r\n\r\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\r\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\r\n\r\n        rgData.lsum = 0.;\r\n        rgData.rsum = 0.;\r\n        rgData.totsamp = 0;\r\n\r\n        Arrays.ill(rgData.A, 0);\r\n\r\n        return INIT_GAIN_ANALYSIS_OK;\r\n    }\r\n\r\n    this.InitGainAnalysis = function (rgData, samplefreq) {\r\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\r\n            return INIT_GAIN_ANALYSIS_ERROR;\r\n        }\r\n\r\n        rgData.linpre = MAX_ORDER;\r\n        rgData.rinpre = MAX_ORDER;\r\n        rgData.lstep = MAX_ORDER;\r\n        rgData.rstep = MAX_ORDER;\r\n        rgData.lout = MAX_ORDER;\r\n        rgData.rout = MAX_ORDER;\r\n\r\n        Arrays.fill(rgData.B, 0);\r\n\r\n        return INIT_GAIN_ANALYSIS_OK;\r\n    };\r\n\r\n    /**\r\n     * square\r\n     */\r\n    function fsqr(d) {\r\n        return d * d;\r\n    }\r\n\r\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\r\n                                    num_channels) {\r\n        var curleft;\r\n        var curleftBase;\r\n        var curright;\r\n        var currightBase;\r\n        var batchsamples;\r\n        var cursamples;\r\n        var cursamplepos;\r\n\r\n        if (num_samples == 0)\r\n            return GAIN_ANALYSIS_OK;\r\n\r\n        cursamplepos = 0;\r\n        batchsamples = num_samples;\r\n\r\n        switch (num_channels) {\r\n            case 1:\r\n                right_samples = left_samples;\r\n                right_samplesPos = left_samplesPos;\r\n                break;\r\n            case 2:\r\n                break;\r\n            default:\r\n                return GAIN_ANALYSIS_ERROR;\r\n        }\r\n\r\n        if (num_samples < MAX_ORDER) {\r\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\r\n                MAX_ORDER, num_samples);\r\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\r\n                MAX_ORDER, num_samples);\r\n        } else {\r\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\r\n                MAX_ORDER, MAX_ORDER);\r\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\r\n                MAX_ORDER, MAX_ORDER);\r\n        }\r\n\r\n        while (batchsamples > 0) {\r\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\r\n            - rgData.totsamp\r\n                : batchsamples;\r\n            if (cursamplepos < MAX_ORDER) {\r\n                curleft = rgData.linpre + cursamplepos;\r\n                curleftBase = rgData.linprebuf;\r\n                curright = rgData.rinpre + cursamplepos;\r\n                currightBase = rgData.rinprebuf;\r\n                if (cursamples > MAX_ORDER - cursamplepos)\r\n                    cursamples = MAX_ORDER - cursamplepos;\r\n            } else {\r\n                curleft = left_samplesPos + cursamplepos;\r\n                curleftBase = left_samples;\r\n\r\n                curright = right_samplesPos + cursamplepos;\r\n                currightBase = right_samples;\r\n            }\r\n\r\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\r\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\r\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\r\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\r\n\r\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\r\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\r\n                ABButter[rgData.reqindex]);\r\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\r\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\r\n                ABButter[rgData.reqindex]);\r\n\r\n            curleft = rgData.lout + rgData.totsamp;\r\n            /* Get the squared values */\r\n            curleftBase = rgData.loutbuf;\r\n            curright = rgData.rout + rgData.totsamp;\r\n            currightBase = rgData.routbuf;\r\n\r\n            var i = cursamples % 8;\r\n            while ((i--) != 0) {\r\n                rgData.lsum += fsqr(curleftBase[curleft++]);\r\n                rgData.rsum += fsqr(currightBase[curright++]);\r\n            }\r\n            i = cursamples / 8;\r\n            while ((i--) != 0) {\r\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\r\n                    + fsqr(curleftBase[curleft + 1])\r\n                    + fsqr(curleftBase[curleft + 2])\r\n                    + fsqr(curleftBase[curleft + 3])\r\n                    + fsqr(curleftBase[curleft + 4])\r\n                    + fsqr(curleftBase[curleft + 5])\r\n                    + fsqr(curleftBase[curleft + 6])\r\n                    + fsqr(curleftBase[curleft + 7]);\r\n                curleft += 8;\r\n                rgData.rsum += fsqr(currightBase[curright + 0])\r\n                    + fsqr(currightBase[curright + 1])\r\n                    + fsqr(currightBase[curright + 2])\r\n                    + fsqr(currightBase[curright + 3])\r\n                    + fsqr(currightBase[curright + 4])\r\n                    + fsqr(currightBase[curright + 5])\r\n                    + fsqr(currightBase[curright + 6])\r\n                    + fsqr(currightBase[curright + 7]);\r\n                curright += 8;\r\n            }\r\n\r\n            batchsamples -= cursamples;\r\n            cursamplepos += cursamples;\r\n            rgData.totsamp += cursamples;\r\n            if (rgData.totsamp == rgData.sampleWindow) {\r\n                /* Get the Root Mean Square (RMS) for this set of samples */\r\n                var val = GainAnalysis.STEPS_per_dB\r\n                    * 10.\r\n                    * Math.log10((rgData.lsum + rgData.rsum)\r\n                        / rgData.totsamp * 0.5 + 1.e-37);\r\n                var ival = (val <= 0) ? 0 : 0 | val;\r\n                if (ival >= rgData.A.length)\r\n                    ival = rgData.A.length - 1;\r\n                rgData.A[ival]++;\r\n                rgData.lsum = rgData.rsum = 0.;\r\n\r\n                System.arraycopy(rgData.loutbuf, rgData.totsamp,\r\n                    rgData.loutbuf, 0, MAX_ORDER);\r\n                System.arraycopy(rgData.routbuf, rgData.totsamp,\r\n                    rgData.routbuf, 0, MAX_ORDER);\r\n                System.arraycopy(rgData.lstepbuf, rgData.totsamp,\r\n                    rgData.lstepbuf, 0, MAX_ORDER);\r\n                System.arraycopy(rgData.rstepbuf, rgData.totsamp,\r\n                    rgData.rstepbuf, 0, MAX_ORDER);\r\n                rgData.totsamp = 0;\r\n            }\r\n            if (rgData.totsamp > rgData.sampleWindow) {\r\n                /*\r\n                 * somehow I really screwed up: Error in programming! Contact\r\n                 * author about totsamp > sampleWindow\r\n                 */\r\n                return GAIN_ANALYSIS_ERROR;\r\n            }\r\n        }\r\n        if (num_samples < MAX_ORDER) {\r\n            System.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\r\n                0, MAX_ORDER - num_samples);\r\n            System.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\r\n                0, MAX_ORDER - num_samples);\r\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\r\n                MAX_ORDER - num_samples, num_samples);\r\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\r\n                MAX_ORDER - num_samples, num_samples);\r\n        } else {\r\n            System.arraycopy(left_samples, left_samplesPos + num_samples\r\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\r\n            System.arraycopy(right_samples, right_samplesPos + num_samples\r\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\r\n        }\r\n\r\n        return GAIN_ANALYSIS_OK;\r\n    };\r\n\r\n    function analyzeResult(Array, len) {\r\n        var i;\r\n\r\n        var elems = 0;\r\n        for (i = 0; i < len; i++)\r\n            elems += Array[i];\r\n        if (elems == 0)\r\n            return GAIN_NOT_ENOUGH_SAMPLES;\r\n\r\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\r\n        for (i = len; i-- > 0;) {\r\n            if ((upper -= Array[i]) <= 0)\r\n                break;\r\n        }\r\n\r\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\r\n        return (PINK_REF - i / GainAnalysis.STEPS_per_dB);\r\n    }\r\n\r\n    this.GetTitleGain = function (rgData) {\r\n        var retval = analyzeResult(rgData.A, rgData.A.length);\r\n\r\n        for (var i = 0; i < rgData.A.length; i++) {\r\n            rgData.B[i] += rgData.A[i];\r\n            rgData.A[i] = 0;\r\n        }\r\n\r\n        for (var i = 0; i < MAX_ORDER; i++)\r\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\r\n\r\n        rgData.totsamp = 0;\r\n        rgData.lsum = rgData.rsum = 0.;\r\n        return retval;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction Presets() {\r\n    function VBRPresets(qual, comp, compS,\r\n                        y, shThreshold, shThresholdS,\r\n                        adj, adjShort, lower,\r\n                        curve, sens, inter,\r\n                        joint, mod, fix) {\r\n        this.vbr_q = qual;\r\n        this.quant_comp = comp;\r\n        this.quant_comp_s = compS;\r\n        this.expY = y;\r\n        this.st_lrm = shThreshold;\r\n        this.st_s = shThresholdS;\r\n        this.masking_adj = adj;\r\n        this.masking_adj_short = adjShort;\r\n        this.ath_lower = lower;\r\n        this.ath_curve = curve;\r\n        this.ath_sensitivity = sens;\r\n        this.interch = inter;\r\n        this.safejoint = joint;\r\n        this.sfb21mod = mod;\r\n        this.msfix = fix;\r\n    }\r\n\r\n    function ABRPresets(kbps, comp, compS,\r\n                        joint, fix, shThreshold,\r\n                        shThresholdS, bass, sc,\r\n                        mask, lower, curve,\r\n                        interCh, sfScale) {\r\n        this.quant_comp = comp;\r\n        this.quant_comp_s = compS;\r\n        this.safejoint = joint;\r\n        this.nsmsfix = fix;\r\n        this.st_lrm = shThreshold;\r\n        this.st_s = shThresholdS;\r\n        this.nsbass = bass;\r\n        this.scale = sc;\r\n        this.masking_adj = mask;\r\n        this.ath_lower = lower;\r\n        this.ath_curve = curve;\r\n        this.interch = interCh;\r\n        this.sfscale = sfScale;\r\n    }\r\n\r\n    var lame;\r\n\r\n    this.setModules = function (_lame) {\r\n        lame = _lame;\r\n    };\r\n\r\n    /**\r\n     * <PRE>\r\n     * Switch mappings for VBR mode VBR_RH\r\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\r\n     * </PRE>\r\n     */\r\n    var vbr_old_switch_map = [\r\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\r\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\r\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\r\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\r\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\r\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\r\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\r\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\r\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\r\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\r\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\r\n    ];\r\n\r\n    /**\r\n     * <PRE>\r\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\r\n     * </PRE>\r\n     */\r\n    var vbr_psy_switch_map = [\r\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\r\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\r\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\r\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\r\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\r\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\r\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\r\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\r\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\r\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\r\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\r\n    ];\r\n\r\n    function apply_vbr_preset(gfp, a, enforce) {\r\n        var vbr_preset = gfp.VBR == VbrMode.vbr_rh ? vbr_old_switch_map\r\n            : vbr_psy_switch_map;\r\n\r\n        var x = gfp.VBR_q_frac;\r\n        var p = vbr_preset[a];\r\n        var q = vbr_preset[a + 1];\r\n        var set = p;\r\n\r\n        // NOOP(vbr_q);\r\n        // NOOP(quant_comp);\r\n        // NOOP(quant_comp_s);\r\n        // NOOP(expY);\r\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\r\n        // LERP(st_lrm);\r\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\r\n        // LERP(st_s);\r\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\r\n        // LERP(masking_adj);\r\n        p.masking_adj_short = p.masking_adj_short + x\r\n            * (q.masking_adj_short - p.masking_adj_short);\r\n        // LERP(masking_adj_short);\r\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\r\n        // LERP(ath_lower);\r\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\r\n        // LERP(ath_curve);\r\n        p.ath_sensitivity = p.ath_sensitivity + x\r\n            * (q.ath_sensitivity - p.ath_sensitivity);\r\n        // LERP(ath_sensitivity);\r\n        p.interch = p.interch + x * (q.interch - p.interch);\r\n        // LERP(interch);\r\n        // NOOP(safejoint);\r\n        // NOOP(sfb21mod);\r\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\r\n        // LERP(msfix);\r\n\r\n        lame_set_VBR_q(gfp, set.vbr_q);\r\n\r\n        if (enforce != 0)\r\n            gfp.quant_comp = set.quant_comp;\r\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\r\n            gfp.quant_comp = set.quant_comp;\r\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\r\n        if (enforce != 0)\r\n            gfp.quant_comp_short = set.quant_comp_s;\r\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\r\n            gfp.quant_comp_short = set.quant_comp_s;\r\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\r\n        if (set.expY != 0) {\r\n            gfp.experimentalY = set.expY != 0;\r\n        }\r\n        if (enforce != 0)\r\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\r\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\r\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\r\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\r\n        if (enforce != 0)\r\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\r\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\r\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\r\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\r\n        if (enforce != 0)\r\n            gfp.maskingadjust = set.masking_adj;\r\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\r\n            gfp.maskingadjust = set.masking_adj;\r\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\r\n        if (enforce != 0)\r\n            gfp.maskingadjust_short = set.masking_adj_short;\r\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\r\n            gfp.maskingadjust_short = set.masking_adj_short;\r\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\r\n        if (enforce != 0)\r\n            gfp.ATHlower = -set.ath_lower / 10.0;\r\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\r\n            gfp.ATHlower = -set.ath_lower / 10.0;\r\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\r\n        if (enforce != 0)\r\n            gfp.ATHcurve = set.ath_curve;\r\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\r\n            gfp.ATHcurve = set.ath_curve;\r\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\r\n        if (enforce != 0)\r\n            gfp.athaa_sensitivity = set.ath_sensitivity;\r\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\r\n            gfp.athaa_sensitivity = set.ath_sensitivity;\r\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\r\n        if (set.interch > 0) {\r\n            if (enforce != 0)\r\n                gfp.interChRatio = set.interch;\r\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\r\n                gfp.interChRatio = set.interch;\r\n            // SET_OPTION(interChRatio, set.interch, -1);\r\n        }\r\n\r\n        /* parameters for which there is no proper set/get interface */\r\n        if (set.safejoint > 0) {\r\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\r\n        }\r\n        if (set.sfb21mod > 0) {\r\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\r\n        }\r\n        if (enforce != 0)\r\n            gfp.msfix = set.msfix;\r\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\r\n            gfp.msfix = set.msfix;\r\n        // SET_OPTION(msfix, set.msfix, -1);\r\n\r\n        if (enforce == 0) {\r\n            gfp.VBR_q = a;\r\n            gfp.VBR_q_frac = x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *  Switch mappings for ABR mode\r\n     *\r\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\r\n     * </PRE>\r\n     */\r\n    var abr_switch_map = [\r\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\r\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\r\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\r\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\r\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\r\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\r\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\r\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\r\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\r\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\r\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\r\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\r\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\r\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\r\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\r\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\r\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\r\n    ];\r\n\r\n    function apply_abr_preset(gfp, preset, enforce) {\r\n        /* Variables for the ABR stuff */\r\n        var actual_bitrate = preset;\r\n\r\n        var r = lame.nearestBitrateFullIndex(preset);\r\n\r\n        gfp.VBR = VbrMode.vbr_abr;\r\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\r\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\r\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\r\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\r\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\r\n            gfp.disable_reservoir = true;\r\n        }\r\n\r\n        /* parameters for which there is no proper set/get interface */\r\n        if (abr_switch_map[r].safejoint > 0)\r\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\r\n        /* safejoint */\r\n\r\n        if (abr_switch_map[r].sfscale > 0) {\r\n            gfp.internal_flags.noise_shaping = 2;\r\n        }\r\n        /* ns-bass tweaks */\r\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\r\n            var k = (int)(abr_switch_map[r].nsbass * 4);\r\n            if (k < 0)\r\n                k += 64;\r\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\r\n        }\r\n\r\n        if (enforce != 0)\r\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\r\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\r\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\r\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\r\n        if (enforce != 0)\r\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\r\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\r\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\r\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\r\n\r\n        if (enforce != 0)\r\n            gfp.msfix = abr_switch_map[r].nsmsfix;\r\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\r\n            gfp.msfix = abr_switch_map[r].nsmsfix;\r\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\r\n\r\n        if (enforce != 0)\r\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\r\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\r\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\r\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\r\n        if (enforce != 0)\r\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\r\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\r\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\r\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\r\n\r\n        /*\r\n         * ABR seems to have big problems with clipping, especially at low\r\n         * bitrates\r\n         */\r\n        /*\r\n         * so we compensate for that here by using a scale value depending on\r\n         * bitrate\r\n         */\r\n        if (enforce != 0)\r\n            gfp.scale = abr_switch_map[r].scale;\r\n        else if (!(Math.abs(gfp.scale - -1) > 0))\r\n            gfp.scale = abr_switch_map[r].scale;\r\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\r\n\r\n        if (enforce != 0)\r\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\r\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\r\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\r\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\r\n        if (abr_switch_map[r].masking_adj > 0) {\r\n            if (enforce != 0)\r\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\r\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\r\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\r\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\r\n            // .9, 0);\r\n        } else {\r\n            if (enforce != 0)\r\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\r\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\r\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\r\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\r\n            // 1.1, 0);\r\n        }\r\n\r\n        if (enforce != 0)\r\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\r\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\r\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\r\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\r\n        if (enforce != 0)\r\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\r\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\r\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\r\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\r\n\r\n        if (enforce != 0)\r\n            gfp.interChRatio = abr_switch_map[r].interch;\r\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\r\n            gfp.interChRatio = abr_switch_map[r].interch;\r\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\r\n\r\n        return preset;\r\n    }\r\n\r\n    this.apply_preset = function(gfp, preset, enforce) {\r\n        /* translate legacy presets */\r\n        switch (preset) {\r\n            case Lame.R3MIX:\r\n            {\r\n                preset = Lame.V3;\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n                break;\r\n            }\r\n            case Lame.MEDIUM:\r\n            {\r\n                preset = Lame.V4;\r\n                gfp.VBR = VbrMode.vbr_rh;\r\n                break;\r\n            }\r\n            case Lame.MEDIUM_FAST:\r\n            {\r\n                preset = Lame.V4;\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n                break;\r\n            }\r\n            case Lame.STANDARD:\r\n            {\r\n                preset = Lame.V2;\r\n                gfp.VBR = VbrMode.vbr_rh;\r\n                break;\r\n            }\r\n            case Lame.STANDARD_FAST:\r\n            {\r\n                preset = Lame.V2;\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n                break;\r\n            }\r\n            case Lame.EXTREME:\r\n            {\r\n                preset = Lame.V0;\r\n                gfp.VBR = VbrMode.vbr_rh;\r\n                break;\r\n            }\r\n            case Lame.EXTREME_FAST:\r\n            {\r\n                preset = Lame.V0;\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n                break;\r\n            }\r\n            case Lame.INSANE:\r\n            {\r\n                preset = 320;\r\n                gfp.preset = preset;\r\n                apply_abr_preset(gfp, preset, enforce);\r\n                gfp.VBR = VbrMode.vbr_off;\r\n                return preset;\r\n            }\r\n        }\r\n\r\n        gfp.preset = preset;\r\n        {\r\n            switch (preset) {\r\n                case Lame.V9:\r\n                    apply_vbr_preset(gfp, 9, enforce);\r\n                    return preset;\r\n                case Lame.V8:\r\n                    apply_vbr_preset(gfp, 8, enforce);\r\n                    return preset;\r\n                case Lame.V7:\r\n                    apply_vbr_preset(gfp, 7, enforce);\r\n                    return preset;\r\n                case Lame.V6:\r\n                    apply_vbr_preset(gfp, 6, enforce);\r\n                    return preset;\r\n                case Lame.V5:\r\n                    apply_vbr_preset(gfp, 5, enforce);\r\n                    return preset;\r\n                case Lame.V4:\r\n                    apply_vbr_preset(gfp, 4, enforce);\r\n                    return preset;\r\n                case Lame.V3:\r\n                    apply_vbr_preset(gfp, 3, enforce);\r\n                    return preset;\r\n                case Lame.V2:\r\n                    apply_vbr_preset(gfp, 2, enforce);\r\n                    return preset;\r\n                case Lame.V1:\r\n                    apply_vbr_preset(gfp, 1, enforce);\r\n                    return preset;\r\n                case Lame.V0:\r\n                    apply_vbr_preset(gfp, 0, enforce);\r\n                    return preset;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (8 <= preset && preset <= 320) {\r\n            return apply_abr_preset(gfp, preset, enforce);\r\n        }\r\n\r\n        /* no corresponding preset found */\r\n        gfp.preset = 0;\r\n        return preset;\r\n    }\r\n\r\n    // Rest from getset.c:\r\n\r\n    /**\r\n     * VBR quality level.<BR>\r\n     * 0 = highest<BR>\r\n     * 9 = lowest\r\n     */\r\n    function lame_set_VBR_q(gfp, VBR_q) {\r\n        var ret = 0;\r\n\r\n        if (0 > VBR_q) {\r\n            /* Unknown VBR quality level! */\r\n            ret = -1;\r\n            VBR_q = 0;\r\n        }\r\n        if (9 < VBR_q) {\r\n            ret = -1;\r\n            VBR_q = 9;\r\n        }\r\n\r\n        gfp.VBR_q = VBR_q;\r\n        gfp.VBR_q_frac = 0;\r\n        return ret;\r\n    }\r\n\r\n}\r\n\r\n/*\r\n *      bit reservoir source file\r\n *\r\n *      Copyright (c) 1999-2000 Mark Taylor\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n//package mp3;\r\n\r\n/**\r\n * ResvFrameBegin:<BR>\r\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\r\n * the reservoir, and checks to make sure main_data_begin was set properly by\r\n * the formatter<BR>\r\n * Background information:\r\n * \r\n * This is the original text from the ISO standard. Because of sooo many bugs\r\n * and irritations correcting comments are added in brackets []. A '^W' means\r\n * you should remove the last word.\r\n * \r\n * <PRE>\r\n *  1. The following rule can be used to calculate the maximum\r\n *     number of bits used for one granule [^W frame]:<BR>\r\n *     At the highest possible bitrate of Layer III (320 kbps\r\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\r\n *     [^W^W^W are designed to have] constant length, i.e.\r\n *     one buffer [^W^W the frame] length is:<BR>\r\n * \r\n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\r\n * \r\n *     This value is used as the maximum buffer per channel [^W^W] at\r\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\r\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\r\n *     [per granule and channel] at 48 kHz sampling frequency.\r\n *     This means that there is a maximum deviation (short time buffer\r\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\r\n *     The actual deviation is equal to the number of bytes [with the\r\n *     meaning of octets] denoted by the main_data_end offset pointer.\r\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\r\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\r\n *     ... The xchange of buffer bits between the left and right channel\r\n *     is allowed without restrictions [exception: dual channel].\r\n *     Because of the [constructed] constraint on the buffer size\r\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\r\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\r\n *     all data are allocated between adjacent header [^W sync] words\r\n *     [, i.e. there is no buffering at all].\r\n * </PRE>\r\n */\r\n\r\n\r\nfunction Reservoir() {\r\n\tvar bs;\r\n\r\n\tthis.setModules  = function(_bs) {\r\n\t\tbs = _bs;\r\n\t}\r\n\r\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\r\n\t\tvar gfc = gfp.internal_flags;\r\n\t\tvar maxmp3buf;\r\n\t\tvar l3_side = gfc.l3_side;\r\n\r\n\t\tvar frameLength = bs.getframebits(gfp);\r\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\r\n\r\n\t\t/**\r\n\t\t * <PRE>\r\n\t\t *  Meaning of the variables:\r\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\r\n\t\t *          Number of bits can be stored in previous frame(s) due to\r\n\t\t *          counter size constaints\r\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\r\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\r\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\r\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\r\n\t\t *          value for MPEG-1 and -2)\r\n\t\t * \r\n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\r\n\t\t *          so this is the absolute maximum supported by the format.\r\n\t\t * \r\n\t\t * \r\n\t\t *      fullFrameBits:  maximum number of bits available for encoding\r\n\t\t *                      the current frame.\r\n\t\t * \r\n\t\t *      mean_bits:      target number of bits per granule.\r\n\t\t * \r\n\t\t *      frameLength:\r\n\t\t * \r\n\t\t *      gfc.ResvMax:   maximum allowed reservoir\r\n\t\t * \r\n\t\t *      gfc.ResvSize:  current reservoir size\r\n\t\t * \r\n\t\t *      l3_side.resvDrain_pre:\r\n\t\t *         ancillary data to be added to previous frame:\r\n\t\t *         (only usefull in VBR modes if it is possible to have\r\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\r\n\t\t *         see #define NEW_DRAIN\r\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\r\n\t\t *                     as there exists one example, where the FhG decoder\r\n\t\t *                     can't decode a -b320 CBR file anymore.\r\n\t\t * \r\n\t\t *      l3_side.resvDrain_post:\r\n\t\t *         ancillary data to be added to this frame:\r\n\t\t * \r\n\t\t * </PRE>\r\n\t\t */\r\n\r\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\r\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\r\n\r\n\t\t/*\r\n\t\t * maximum allowed frame size. dont use more than this number of bits,\r\n\t\t * even if the frame has the space for them:\r\n\t\t */\r\n\t\tif (gfp.brate > 320) {\r\n\t\t\t/* in freeformat the buffer is constant */\r\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\r\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\r\n\t\t} else {\r\n\t\t\t/*\r\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\r\n\t\t\t * size of a 320kbps 32kHz frame\r\n\t\t\t */\r\n\t\t\tmaxmp3buf = 8 * 1440;\r\n\r\n\t\t\t/*\r\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\r\n\t\t\t * instead of using 8*960.\r\n\t\t\t */\r\n\r\n\t\t\tif (gfp.strict_ISO) {\r\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\r\n\t\tif (gfc.ResvMax > resvLimit)\r\n\t\t\tgfc.ResvMax = resvLimit;\r\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\r\n\t\t\tgfc.ResvMax = 0;\r\n\r\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\r\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\r\n\r\n\t\tif (fullFrameBits > maxmp3buf)\r\n\t\t\tfullFrameBits = maxmp3buf;\r\n\r\n\r\n\t\tl3_side.resvDrain_pre = 0;\r\n\r\n\t\t// frame analyzer code\r\n\t\tif (gfc.pinfo != null) {\r\n\t\t\t/*\r\n\t\t\t * expected bits per channel per granule [is this also right for\r\n\t\t\t * mono/stereo, MPEG-1/2 ?]\r\n\t\t\t */\r\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\r\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\r\n\t\t}\r\n\r\n\t\treturn fullFrameBits;\r\n\t}\r\n\r\n\t/**\r\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\r\n\t * extra_bits: amount extra available from reservoir<BR>\r\n\t * Mark Taylor 4/99\r\n\t */\r\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\r\n\t\tvar gfc = gfp.internal_flags;\r\n\t\tvar add_bits;\r\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\r\n\r\n\t\t/* compensate the saved bits used in the 1st granule */\r\n\t\tif (cbr != 0)\r\n\t\t\tResvSize += mean_bits;\r\n\r\n\t\tif ((gfc.substep_shaping & 1) != 0)\r\n\t\t\tResvMax *= 0.9;\r\n\r\n\t\ttarg_bits.bits = mean_bits;\r\n\r\n\t\t/* extra bits if the reservoir is almost full */\r\n\t\tif (ResvSize * 10 > ResvMax * 9) {\r\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\r\n\t\t\ttarg_bits.bits += add_bits;\r\n\t\t\tgfc.substep_shaping |= 0x80;\r\n\t\t} else {\r\n\t\t\tadd_bits = 0;\r\n\t\t\tgfc.substep_shaping &= 0x7f;\r\n\t\t\t/*\r\n\t\t\t * build up reservoir. this builds the reservoir a little slower\r\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\r\n\t\t\t * always produce 100 (the old value) at 128kbs\r\n\t\t\t */\r\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\r\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\r\n\t\t}\r\n\r\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\r\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\r\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\r\n\t\textra_bits -= add_bits;\r\n\r\n\t\tif (extra_bits < 0)\r\n\t\t\textra_bits = 0;\r\n\t\treturn extra_bits;\r\n\t}\r\n\r\n\t/**\r\n\t * Called after a granule's bit allocation. Readjusts the size of the\r\n\t * reservoir to reflect the granule's usage.\r\n\t */\r\n\tthis.ResvAdjust = function(gfc, gi) {\r\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\r\n\t}\r\n\r\n\t/**\r\n\t * Called after all granules in a frame have been allocated. Makes sure that\r\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\r\n\t */\r\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\r\n\t\tvar over_bits;\r\n\t\tvar l3_side = gfc.l3_side;\r\n\r\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\r\n\t\tvar stuffingBits = 0;\r\n\t\tl3_side.resvDrain_post = 0;\r\n\t\tl3_side.resvDrain_pre = 0;\r\n\r\n\t\t/* we must be byte aligned */\r\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\r\n\t\t\tstuffingBits += over_bits;\r\n\r\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\r\n\t\tif (over_bits > 0) {\r\n\t\t\tstuffingBits += over_bits;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\r\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\r\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\r\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\r\n\t\t * frame at 32 kHz sample rate.\r\n\t\t * \r\n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\r\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\r\n\t\t * \r\n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\r\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\r\n\t\t * \r\n\t\t * Robert Hegemann, 2010-02-13.\r\n\t\t */\r\n\t\t/*\r\n\t\t * drain as many bits as possible into previous frame ancillary data In\r\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\r\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\r\n\t\t * mt 4/00\r\n\t\t */\r\n\t\t{\r\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\r\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\r\n\t\t\tstuffingBits -= 8 * mdb_bytes;\r\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\r\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\r\n\t\t}\r\n\t\t/* drain the rest into this frames ancillary data */\r\n\t\tl3_side.resvDrain_post += stuffingBits;\r\n\t\tgfc.ResvSize -= stuffingBits;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * A Vbr header may be present in the ancillary data field of the first frame of\r\n * an mp3 bitstream<BR>\r\n * The Vbr header (optionally) contains\r\n * <UL>\r\n * <LI>frames total number of audio frames in the bitstream\r\n * <LI>bytes total number of bytes in the bitstream\r\n * <LI>toc table of contents\r\n * </UL>\r\n *\r\n * toc (table of contents) gives seek points for random access.<BR>\r\n * The ith entry determines the seek point for i-percent duration.<BR>\r\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\r\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\r\n */\r\nVBRTag.NUMTOCENTRIES = 100;\r\nVBRTag.MAXFRAMESIZE = 2880;\r\n\r\nfunction VBRTag() {\r\n\r\n    var lame;\r\n    var bs;\r\n    var v;\r\n\r\n    this.setModules = function (_lame, _bs, _v) {\r\n        lame = _lame;\r\n        bs = _bs;\r\n        v = _v;\r\n    };\r\n\r\n    var FRAMES_FLAG = 0x0001;\r\n    var BYTES_FLAG = 0x0002;\r\n    var TOC_FLAG = 0x0004;\r\n    var VBR_SCALE_FLAG = 0x0008;\r\n\r\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\r\n\r\n    /**\r\n     * (0xB40) the max freeformat 640 32kHz framesize.\r\n     */\r\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\r\n\r\n    /**\r\n     * <PRE>\r\n     *    4 bytes for Header Tag\r\n     *    4 bytes for Header Flags\r\n     *  100 bytes for entry (toc)\r\n     *    4 bytes for frame size\r\n     *    4 bytes for stream size\r\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\r\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\r\n     * ___________\r\n     *  140 bytes\r\n     * </PRE>\r\n     */\r\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\r\n\r\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\r\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\r\n\r\n    /**\r\n     * The size of the Xing header MPEG-1, bit rate in kbps.\r\n     */\r\n    var XING_BITRATE1 = 128;\r\n    /**\r\n     * The size of the Xing header MPEG-2, bit rate in kbps.\r\n     */\r\n    var XING_BITRATE2 = 64;\r\n    /**\r\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\r\n     */\r\n    var XING_BITRATE25 = 32;\r\n\r\n    /**\r\n     * ISO-8859-1 charset for byte to string operations.\r\n     */\r\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\r\n\r\n    /**\r\n     * VBR header magic string.\r\n     */\r\n    var VBRTag0 = \"Xing\";\r\n    /**\r\n     * VBR header magic string (VBR == VBRMode.vbr_off).\r\n     */\r\n    var VBRTag1 = \"Info\";\r\n\r\n    /**\r\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\r\n     * x^16+x^15+x^2+1\r\n     */\r\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\r\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\r\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\r\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\r\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\r\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\r\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\r\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\r\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\r\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\r\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\r\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\r\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\r\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\r\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\r\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\r\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\r\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\r\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\r\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\r\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\r\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\r\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\r\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\r\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\r\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\r\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\r\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\r\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\r\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\r\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\r\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\r\n        0x4100, 0x81C1, 0x8081, 0x4040];\r\n\r\n    /***********************************************************************\r\n     * Robert Hegemann 2001-01-17\r\n     ***********************************************************************/\r\n\r\n    function addVbr(v, bitrate) {\r\n        v.nVbrNumFrames++;\r\n        v.sum += bitrate;\r\n        v.seen++;\r\n\r\n        if (v.seen < v.want) {\r\n            return;\r\n        }\r\n\r\n        if (v.pos < v.size) {\r\n            v.bag[v.pos] = v.sum;\r\n            v.pos++;\r\n            v.seen = 0;\r\n        }\r\n        if (v.pos == v.size) {\r\n            for (var i = 1; i < v.size; i += 2) {\r\n                v.bag[i / 2] = v.bag[i];\r\n            }\r\n            v.want *= 2;\r\n            v.pos /= 2;\r\n        }\r\n    }\r\n\r\n    function xingSeekTable(v, t) {\r\n        if (v.pos <= 0)\r\n            return;\r\n\r\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\r\n            var j = i / NUMTOCENTRIES, act, sum;\r\n            var indx = 0 | (Math.floor(j * v.pos));\r\n            if (indx > v.pos - 1)\r\n                indx = v.pos - 1;\r\n            act = v.bag[indx];\r\n            sum = v.sum;\r\n            var seek_point = 0 | (256. * act / sum);\r\n            if (seek_point > 255)\r\n                seek_point = 255;\r\n            t[i] = 0xff & seek_point;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add VBR entry, used to fill the VBR TOC entries.\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     */\r\n    this.addVbrFrame = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\r\n        addVbr(gfc.VBR_seek_table, kbps);\r\n    }\r\n\r\n    /**\r\n     * Read big endian integer (4-bytes) from header.\r\n     *\r\n     * @param buf\r\n     *            header containing the integer\r\n     * @param bufPos\r\n     *            offset into the header\r\n     * @return extracted integer\r\n     */\r\n    function extractInteger(buf, bufPos) {\r\n        var x = buf[bufPos + 0] & 0xff;\r\n        x <<= 8;\r\n        x |= buf[bufPos + 1] & 0xff;\r\n        x <<= 8;\r\n        x |= buf[bufPos + 2] & 0xff;\r\n        x <<= 8;\r\n        x |= buf[bufPos + 3] & 0xff;\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * Write big endian integer (4-bytes) in the header.\r\n     *\r\n     * @param buf\r\n     *            header to write the integer into\r\n     * @param bufPos\r\n     *            offset into the header\r\n     * @param value\r\n     *            integer value to write\r\n     */\r\n    function createInteger(buf, bufPos, value) {\r\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\r\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\r\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\r\n        buf[bufPos + 3] = 0xff & (value & 0xff);\r\n    }\r\n\r\n    /**\r\n     * Write big endian short (2-bytes) in the header.\r\n     *\r\n     * @param buf\r\n     *            header to write the integer into\r\n     * @param bufPos\r\n     *            offset into the header\r\n     * @param value\r\n     *            integer value to write\r\n     */\r\n    function createShort(buf, bufPos, value) {\r\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\r\n        buf[bufPos + 1] = 0xff & (value & 0xff);\r\n    }\r\n\r\n    /**\r\n     * Check for magic strings (Xing/Info).\r\n     *\r\n     * @param buf\r\n     *            header to check\r\n     * @param bufPos\r\n     *            header offset to check\r\n     * @return magic string found\r\n     */\r\n    function isVbrTag(buf, bufPos) {\r\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\r\n                .equals(VBRTag0)\r\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\r\n                .equals(VBRTag1);\r\n    }\r\n\r\n    function shiftInBitsValue(x, n, v) {\r\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\r\n    }\r\n\r\n    /**\r\n     * Construct the MP3 header using the settings of the global flags.\r\n     *\r\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     * @param buffer\r\n     *            header\r\n     */\r\n    function setLameTagFrameHeader(gfp, buffer) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        // MP3 Sync Word\r\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\r\n\r\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\r\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\r\n            (gfp.out_samplerate < 16000) ? 0 : 1);\r\n        // Version\r\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\r\n        // 01 == Layer 3\r\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\r\n        // Error protection\r\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\r\n            : 0);\r\n\r\n        // Bit rate\r\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\r\n        // Frequency\r\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\r\n        // Pad. Bit\r\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\r\n        // Priv. Bit\r\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\r\n\r\n        // Mode\r\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\r\n        // Mode extension (Used with Joint Stereo)\r\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\r\n        // Copy\r\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\r\n        // Original\r\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\r\n        // Emphasis\r\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\r\n\r\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\r\n        /* but sampling freq, mode and copyright/copy protection taken */\r\n        /* from first valid frame */\r\n        buffer[0] = 0xff;\r\n        var abyte = 0xff & (buffer[1] & 0xf1);\r\n        var bitrate;\r\n        if (1 == gfp.version) {\r\n            bitrate = XING_BITRATE1;\r\n        } else {\r\n            if (gfp.out_samplerate < 16000)\r\n                bitrate = XING_BITRATE25;\r\n            else\r\n                bitrate = XING_BITRATE2;\r\n        }\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off)\r\n            bitrate = gfp.brate;\r\n\r\n        var bbyte;\r\n        if (gfp.free_format)\r\n            bbyte = 0x00;\r\n        else\r\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\r\n                    gfp.out_samplerate));\r\n\r\n        /*\r\n         * Use as much of the info from the real frames in the Xing header:\r\n         * samplerate, channels, crc, etc...\r\n         */\r\n        if (gfp.version == 1) {\r\n            /* MPEG1 */\r\n            buffer[1] = 0xff & (abyte | 0x0a);\r\n            /* was 0x0b; */\r\n            abyte = 0xff & (buffer[2] & 0x0d);\r\n            /* AF keep also private bit */\r\n            buffer[2] = 0xff & (bbyte | abyte);\r\n            /* 64kbs MPEG1 frame */\r\n        } else {\r\n            /* MPEG2 */\r\n            buffer[1] = 0xff & (abyte | 0x02);\r\n            /* was 0x03; */\r\n            abyte = 0xff & (buffer[2] & 0x0d);\r\n            /* AF keep also private bit */\r\n            buffer[2] = 0xff & (bbyte | abyte);\r\n            /* 64kbs MPEG2 frame */\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get VBR tag information\r\n     *\r\n     * @param buf\r\n     *            header to analyze\r\n     * @param bufPos\r\n     *            offset into the header\r\n     * @return VBR tag data\r\n     */\r\n    this.getVbrTag = function (buf) {\r\n        var pTagData = new VBRTagData();\r\n        var bufPos = 0;\r\n\r\n        /* get Vbr header data */\r\n        pTagData.flags = 0;\r\n\r\n        /* get selected MPEG header data */\r\n        var hId = (buf[bufPos + 1] >> 3) & 1;\r\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\r\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\r\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\r\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\r\n\r\n        /* check for FFE syncword */\r\n        if ((buf[bufPos + 1] >> 4) == 0xE)\r\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\r\n        else\r\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\r\n\r\n        /* determine offset of header */\r\n        if (hId != 0) {\r\n            /* mpeg1 */\r\n            if (hMode != 3)\r\n                bufPos += (32 + 4);\r\n            else\r\n                bufPos += (17 + 4);\r\n        } else {\r\n            /* mpeg2 */\r\n            if (hMode != 3)\r\n                bufPos += (17 + 4);\r\n            else\r\n                bufPos += (9 + 4);\r\n        }\r\n\r\n        if (!isVbrTag(buf, bufPos))\r\n            return null;\r\n\r\n        bufPos += 4;\r\n\r\n        pTagData.hId = hId;\r\n\r\n        /* get flags */\r\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\r\n        bufPos += 4;\r\n\r\n        if ((head_flags & FRAMES_FLAG) != 0) {\r\n            pTagData.frames = extractInteger(buf, bufPos);\r\n            bufPos += 4;\r\n        }\r\n\r\n        if ((head_flags & BYTES_FLAG) != 0) {\r\n            pTagData.bytes = extractInteger(buf, bufPos);\r\n            bufPos += 4;\r\n        }\r\n\r\n        if ((head_flags & TOC_FLAG) != 0) {\r\n            if (pTagData.toc != null) {\r\n                for (var i = 0; i < NUMTOCENTRIES; i++)\r\n                    pTagData.toc[i] = buf[bufPos + i];\r\n            }\r\n            bufPos += NUMTOCENTRIES;\r\n        }\r\n\r\n        pTagData.vbrScale = -1;\r\n\r\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\r\n            pTagData.vbrScale = extractInteger(buf, bufPos);\r\n            bufPos += 4;\r\n        }\r\n\r\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\r\n            / pTagData.samprate;\r\n\r\n        bufPos += 21;\r\n        var encDelay = buf[bufPos + 0] << 4;\r\n        encDelay += buf[bufPos + 1] >> 4;\r\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\r\n        encPadding += buf[bufPos + 2] & 0xff;\r\n        /* check for reasonable values (this may be an old Xing header, */\r\n        /* not a INFO tag) */\r\n        if (encDelay < 0 || encDelay > 3000)\r\n            encDelay = -1;\r\n        if (encPadding < 0 || encPadding > 3000)\r\n            encPadding = -1;\r\n\r\n        pTagData.encDelay = encDelay;\r\n        pTagData.encPadding = encPadding;\r\n\r\n        /* success */\r\n        return pTagData;\r\n    }\r\n\r\n    /**\r\n     * Initializes the header\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     */\r\n    this.InitVbrTag = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /**\r\n         * <PRE>\r\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\r\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\r\n         * table of contents)\r\n         * let's always embed Xing header inside a 64kbs layer III frame.\r\n         * this gives us enough room for a LAME version string too.\r\n         * size determined by sampling frequency (MPEG1)\r\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\r\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\r\n         * 48kHz:    144 bytes          192\r\n         *\r\n         * MPEG 2 values are the same since the framesize and samplerate\r\n         * are each reduced by a factor of 2.\r\n         * </PRE>\r\n         */\r\n        var kbps_header;\r\n        if (1 == gfp.version) {\r\n            kbps_header = XING_BITRATE1;\r\n        } else {\r\n            if (gfp.out_samplerate < 16000)\r\n                kbps_header = XING_BITRATE25;\r\n            else\r\n                kbps_header = XING_BITRATE2;\r\n        }\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off)\r\n            kbps_header = gfp.brate;\r\n\r\n        // make sure LAME Header fits into Frame\r\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\r\n            / gfp.out_samplerate;\r\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\r\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\r\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\r\n            /* disable tag, it wont fit */\r\n            gfp.bWriteVbrTag = false;\r\n            return;\r\n        }\r\n\r\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\r\n        gfc.VBR_seek_table.nBytesWritten = 0;\r\n        gfc.VBR_seek_table.sum = 0;\r\n\r\n        gfc.VBR_seek_table.seen = 0;\r\n        gfc.VBR_seek_table.want = 1;\r\n        gfc.VBR_seek_table.pos = 0;\r\n\r\n        if (gfc.VBR_seek_table.bag == null) {\r\n            gfc.VBR_seek_table.bag = new int[400];\r\n            gfc.VBR_seek_table.size = 400;\r\n        }\r\n\r\n        // write dummy VBR tag of all 0's into bitstream\r\n        var buffer = new_byte(MAXFRAMESIZE);\r\n\r\n        setLameTagFrameHeader(gfp, buffer);\r\n        var n = gfc.VBR_seek_table.TotalFrameSize;\r\n        for (var i = 0; i < n; ++i) {\r\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fast CRC-16 computation (uses table crc16Lookup).\r\n     *\r\n     * @param value\r\n     * @param crc\r\n     * @return\r\n     */\r\n    function crcUpdateLookup(value, crc) {\r\n        var tmp = crc ^ value;\r\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\r\n        return crc;\r\n    }\r\n\r\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\r\n        for (var i = 0; i < size; ++i)\r\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\r\n    }\r\n\r\n    /**\r\n     * Write LAME info: mini version + info on various switches used (Jonathan\r\n     * Dee 2001/08/31).\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     * @param musicLength\r\n     *            music length\r\n     * @param streamBuffer\r\n     *            pointer to output buffer\r\n     * @param streamBufferPos\r\n     *            offset into the output buffer\r\n     * @param crc\r\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\r\n     *            sync)\r\n     * @return number of bytes written to the stream\r\n     */\r\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\r\n        var gfc = gfp.internal_flags;\r\n        var bytesWritten = 0;\r\n\r\n        /* encoder delay */\r\n        var encDelay = gfp.encoder_delay;\r\n        /* encoder padding */\r\n        var encPadding = gfp.encoder_padding;\r\n\r\n        /* recall: gfp.VBR_q is for example set by the switch -V */\r\n        /* gfp.quality by -q, -h, -f, etc */\r\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\r\n\r\n        var version = v.getLameVeryShortVersion();\r\n        var vbr;\r\n        var revision = 0x00;\r\n        var revMethod;\r\n        // numbering different in vbr_mode vs. Lame tag\r\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\r\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\r\n                : (gfp.lowpassfreq / 100.0) + .5);\r\n        var peakSignalAmplitude = 0;\r\n        var radioReplayGain = 0;\r\n        var audiophileReplayGain = 0;\r\n        var noiseShaping = gfp.internal_flags.noise_shaping;\r\n        var stereoMode = 0;\r\n        var nonOptimal = 0;\r\n        var sourceFreq = 0;\r\n        var misc = 0;\r\n        var musicCRC = 0;\r\n\r\n        // psy model type: Gpsycho or NsPsytune\r\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\r\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\r\n        var noGapMore = false;\r\n        var noGapPrevious = false;\r\n        var noGapCount = gfp.internal_flags.nogap_total;\r\n        var noGapCurr = gfp.internal_flags.nogap_current;\r\n\r\n        // 4 bits\r\n        var athType = gfp.ATHtype;\r\n        var flags = 0;\r\n\r\n        // vbr modes\r\n        var abrBitrate;\r\n        switch (gfp.VBR) {\r\n            case vbr_abr:\r\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\r\n                break;\r\n            case vbr_off:\r\n                abrBitrate = gfp.brate;\r\n                break;\r\n            default:\r\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\r\n        }\r\n\r\n        // revision and vbr method\r\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\r\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\r\n        else\r\n            vbr = 0x00; // unknown\r\n\r\n        revMethod = 0x10 * revision + vbr;\r\n\r\n        // ReplayGain\r\n        if (gfc.findReplayGain) {\r\n            if (gfc.RadioGain > 0x1FE)\r\n                gfc.RadioGain = 0x1FE;\r\n            if (gfc.RadioGain < -0x1FE)\r\n                gfc.RadioGain = -0x1FE;\r\n\r\n            // set name code\r\n            radioReplayGain = 0x2000;\r\n            // set originator code to `determined automatically'\r\n            radioReplayGain |= 0xC00;\r\n\r\n            if (gfc.RadioGain >= 0) {\r\n                // set gain adjustment\r\n                radioReplayGain |= gfc.RadioGain;\r\n            } else {\r\n                // set the sign bit\r\n                radioReplayGain |= 0x200;\r\n                // set gain adjustment\r\n                radioReplayGain |= -gfc.RadioGain;\r\n            }\r\n        }\r\n\r\n        // peak sample\r\n        if (gfc.findPeakSample)\r\n            peakSignalAmplitude = Math\r\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\r\n\r\n        // nogap\r\n        if (noGapCount != -1) {\r\n            if (noGapCurr > 0)\r\n                noGapPrevious = true;\r\n\r\n            if (noGapCurr < noGapCount - 1)\r\n                noGapMore = true;\r\n        }\r\n\r\n        // flags\r\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\r\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\r\n            + ((noGapPrevious ? 1 : 0) << 7);\r\n\r\n        if (quality < 0)\r\n            quality = 0;\r\n\r\n        // stereo mode field (Intensity stereo is not implemented)\r\n        switch (gfp.mode) {\r\n            case MONO:\r\n                stereoMode = 0;\r\n                break;\r\n            case STEREO:\r\n                stereoMode = 1;\r\n                break;\r\n            case DUAL_CHANNEL:\r\n                stereoMode = 2;\r\n                break;\r\n            case JOINT_STEREO:\r\n                if (gfp.force_ms)\r\n                    stereoMode = 4;\r\n                else\r\n                    stereoMode = 3;\r\n                break;\r\n            case NOT_SET:\r\n            //$FALL-THROUGH$\r\n            default:\r\n                stereoMode = 7;\r\n                break;\r\n        }\r\n\r\n        if (gfp.in_samplerate <= 32000)\r\n            sourceFreq = 0x00;\r\n        else if (gfp.in_samplerate == 48000)\r\n            sourceFreq = 0x02;\r\n        else if (gfp.in_samplerate > 48000)\r\n            sourceFreq = 0x03;\r\n        else {\r\n            // default is 44100Hz\r\n            sourceFreq = 0x01;\r\n        }\r\n\r\n        // Check if the user overrided the default LAME behavior with some\r\n        // nasty options\r\n        if (gfp.short_blocks == ShortBlock.short_block_forced\r\n            || gfp.short_blocks == ShortBlock.short_block_dispensed\r\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\r\n            (gfp.scale_left < gfp.scale_right)\r\n            || (gfp.scale_left > gfp.scale_right)\r\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\r\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\r\n            nonOptimal = 1;\r\n\r\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\r\n            + (sourceFreq << 6);\r\n\r\n        musicCRC = gfc.nMusicCRC;\r\n\r\n        // Write all this information into the stream\r\n\r\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\r\n        bytesWritten += 4;\r\n\r\n        for (var j = 0; j < 9; j++) {\r\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\r\n        }\r\n        bytesWritten += 9;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\r\n        bytesWritten++;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\r\n        bytesWritten++;\r\n\r\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\r\n            peakSignalAmplitude);\r\n        bytesWritten += 4;\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\r\n            radioReplayGain);\r\n        bytesWritten += 2;\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\r\n            audiophileReplayGain);\r\n        bytesWritten += 2;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\r\n        bytesWritten++;\r\n\r\n        if (abrBitrate >= 255)\r\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\r\n        else\r\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\r\n        bytesWritten++;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\r\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\r\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\r\n\r\n        bytesWritten += 3;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\r\n        bytesWritten++;\r\n\r\n        // unused in rev0\r\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\r\n        bytesWritten += 2;\r\n\r\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\r\n        bytesWritten += 4;\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\r\n        bytesWritten += 2;\r\n\r\n        // Calculate tag CRC.... must be done here, since it includes previous\r\n        // information\r\n\r\n        for (var i = 0; i < bytesWritten; i++)\r\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\r\n        bytesWritten += 2;\r\n\r\n        return bytesWritten;\r\n    }\r\n\r\n    function skipId3v2(fpStream) {\r\n        // seek to the beginning of the stream\r\n        fpStream.seek(0);\r\n        // read 10 bytes in case there's an ID3 version 2 header here\r\n        var id3v2Header = new_byte(10);\r\n        fpStream.readFully(id3v2Header);\r\n        /* does the stream begin with the ID3 version 2 file identifier? */\r\n        var id3v2TagSize;\r\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\r\n            /*\r\n             * the tag size (minus the 10-byte header) is encoded into four\r\n             * bytes where the most significant bit is clear in each byte\r\n             */\r\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\r\n                | ((id3v2Header[7] & 0x7f) << 14)\r\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\r\n                + id3v2Header.length;\r\n        } else {\r\n            /* no ID3 version 2 tag in this stream */\r\n            id3v2TagSize = 0;\r\n        }\r\n        return id3v2TagSize;\r\n    }\r\n\r\n    this.getLameTagFrame = function (gfp, buffer) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (!gfp.bWriteVbrTag) {\r\n            return 0;\r\n        }\r\n        if (gfc.Class_ID != Lame.LAME_ID) {\r\n            return 0;\r\n        }\r\n        if (gfc.VBR_seek_table.pos <= 0) {\r\n            return 0;\r\n        }\r\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\r\n            return gfc.VBR_seek_table.TotalFrameSize;\r\n        }\r\n\r\n        Arrays.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\r\n\r\n        // 4 bytes frame header\r\n        setLameTagFrameHeader(gfp, buffer);\r\n\r\n        // Create TOC entries\r\n        var toc = new_byte(NUMTOCENTRIES);\r\n\r\n        if (gfp.free_format) {\r\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\r\n                toc[i] = 0xff & (255 * i / 100);\r\n        } else {\r\n            xingSeekTable(gfc.VBR_seek_table, toc);\r\n        }\r\n\r\n        // Start writing the tag after the zero frame\r\n        var streamIndex = gfc.sideinfo_len;\r\n        /**\r\n         * Note: Xing header specifies that Xing data goes in the ancillary data\r\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\r\n         * data still starts at the same offset, and now it is in sideinfo data\r\n         * block, and thus will not decode correctly by non-Xing tag aware\r\n         * players\r\n         */\r\n        if (gfp.error_protection)\r\n            streamIndex -= 2;\r\n\r\n        // Put Vbr tag\r\n        if (gfp.VBR == VbrMode.vbr_off) {\r\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\r\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\r\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\r\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\r\n\r\n        } else {\r\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\r\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\r\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\r\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\r\n        }\r\n\r\n        // Put header flags\r\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\r\n            + VBR_SCALE_FLAG);\r\n        streamIndex += 4;\r\n\r\n        // Put Total Number of frames\r\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\r\n        streamIndex += 4;\r\n\r\n        // Put total audio stream size, including Xing/LAME Header\r\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\r\n        createInteger(buffer, streamIndex, 0 | streamSize);\r\n        streamIndex += 4;\r\n\r\n        /* Put TOC */\r\n        System.arraycopy(toc, 0, buffer, streamIndex, toc.length);\r\n        streamIndex += toc.length;\r\n\r\n        if (gfp.error_protection) {\r\n            // (jo) error_protection: add crc16 information to header\r\n            bs.CRC_writeheader(gfc, buffer);\r\n        }\r\n\r\n        // work out CRC so far: initially crc = 0\r\n        var crc = 0x00;\r\n        for (var i = 0; i < streamIndex; i++)\r\n            crc = crcUpdateLookup(buffer[i], crc);\r\n        // Put LAME VBR info\r\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\r\n\r\n        return gfc.VBR_seek_table.TotalFrameSize;\r\n    }\r\n\r\n    /**\r\n     * Write final VBR tag to the file.\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     * @param stream\r\n     *            stream to add the VBR tag to\r\n     * @return 0 (OK), -1 else\r\n     * @throws IOException\r\n     *             I/O error\r\n     */\r\n    this.putVbrTag = function (gfp, stream) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (gfc.VBR_seek_table.pos <= 0)\r\n            return -1;\r\n\r\n        // Seek to end of file\r\n        stream.seek(stream.length());\r\n\r\n        // Get file size, abort if file has zero length.\r\n        if (stream.length() == 0)\r\n            return -1;\r\n\r\n        // The VBR tag may NOT be located at the beginning of the stream. If an\r\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\r\n        // tag data.\r\n        var id3v2TagSize = skipId3v2(stream);\r\n\r\n        // Seek to the beginning of the stream\r\n        stream.seek(id3v2TagSize);\r\n\r\n        var buffer = new_byte(MAXFRAMESIZE);\r\n        var bytes = getLameTagFrame(gfp, buffer);\r\n        if (bytes > buffer.length) {\r\n            return -1;\r\n        }\r\n\r\n        if (bytes < 1) {\r\n            return 0;\r\n        }\r\n\r\n        // Put it all to disk again\r\n        stream.write(buffer, 0, bytes);\r\n        // success\r\n        return 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nBitStream.EQ = function (a, b) {\r\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\r\n        .abs(a) * 1e-6))\r\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\r\n};\r\n\r\nBitStream.NEQ = function (a, b) {\r\n    return !BitStream.EQ(a, b);\r\n};\r\n\r\nfunction BitStream() {\r\n    var self = this;\r\n    var CRC16_POLYNOMIAL = 0x8005;\r\n\r\n    /*\r\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\r\n     * MAX_LENGTH-2 just to be on the safe side\r\n     */\r\n    var MAX_LENGTH = 32;\r\n\r\n    //GainAnalysis ga;\r\n    //MPGLib mpg;\r\n    //Version ver;\r\n    //VBRTag vbr;\r\n    var ga = null;\r\n    var mpg = null;\r\n    var ver = null;\r\n    var vbr = null;\r\n\r\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\r\n    //\tVBRTag vbr) {\r\n\r\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\r\n        ga = _ga;\r\n        mpg = _mpg;\r\n        ver = _ver;\r\n        vbr = _vbr;\r\n    };\r\n\r\n    /**\r\n     * Bit stream buffer.\r\n     */\r\n    //private byte[] buf;\r\n    var buf = null;\r\n    /**\r\n     * Bit counter of bit stream.\r\n     */\r\n    var totbit = 0;\r\n    /**\r\n     * Pointer to top byte in buffer.\r\n     */\r\n    var bufByteIdx = 0;\r\n    /**\r\n     * Pointer to top bit of top byte in buffer.\r\n     */\r\n    var bufBitIdx = 0;\r\n\r\n    /**\r\n     * compute bitsperframe and mean_bits for a layer III frame\r\n     */\r\n    this.getframebits = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var bit_rate;\r\n\r\n        /* get bitrate in kbps [?] */\r\n        if (gfc.bitrate_index != 0)\r\n            bit_rate = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\r\n        else\r\n            bit_rate = gfp.brate;\r\n\r\n        /* main encoding routine toggles padding on and off */\r\n        /* one Layer3 Slot consists of 8 bits */\r\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\r\n        return 8 * bytes;\r\n    };\r\n\r\n    function putheader_bits(gfc) {\r\n        System.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\r\n        bufByteIdx += gfc.sideinfo_len;\r\n        totbit += gfc.sideinfo_len * 8;\r\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\r\n    }\r\n\r\n    /**\r\n     * write j bits into the bit stream\r\n     */\r\n    function putbits2(gfc, val, j) {\r\n\r\n\r\n        while (j > 0) {\r\n            var k;\r\n            if (bufBitIdx == 0) {\r\n                bufBitIdx = 8;\r\n                bufByteIdx++;\r\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\r\n                    putheader_bits(gfc);\r\n                }\r\n                buf[bufByteIdx] = 0;\r\n            }\r\n\r\n            k = Math.min(j, bufBitIdx);\r\n            j -= k;\r\n\r\n            bufBitIdx -= k;\r\n\r\n            /* 32 too large on 32 bit machines */\r\n\r\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\r\n            totbit += k;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * write j bits into the bit stream, ignoring frame headers\r\n     */\r\n    function putbits_noheaders(gfc, val, j) {\r\n\r\n        while (j > 0) {\r\n            var k;\r\n            if (bufBitIdx == 0) {\r\n                bufBitIdx = 8;\r\n                bufByteIdx++;\r\n                buf[bufByteIdx] = 0;\r\n            }\r\n\r\n            k = Math.min(j, bufBitIdx);\r\n            j -= k;\r\n\r\n            bufBitIdx -= k;\r\n\r\n            /* 32 too large on 32 bit machines */\r\n\r\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\r\n            totbit += k;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\r\n     * out a frame using just main_data, due to the limited number of bits to\r\n     * indicate main_data_length. In these situations, we put stuffing bits into\r\n     * the ancillary data...\r\n     */\r\n    function drain_into_ancillary(gfp, remainingBits) {\r\n        var gfc = gfp.internal_flags;\r\n        var i;\r\n\r\n        if (remainingBits >= 8) {\r\n            putbits2(gfc, 0x4c, 8);\r\n            remainingBits -= 8;\r\n        }\r\n        if (remainingBits >= 8) {\r\n            putbits2(gfc, 0x41, 8);\r\n            remainingBits -= 8;\r\n        }\r\n        if (remainingBits >= 8) {\r\n            putbits2(gfc, 0x4d, 8);\r\n            remainingBits -= 8;\r\n        }\r\n        if (remainingBits >= 8) {\r\n            putbits2(gfc, 0x45, 8);\r\n            remainingBits -= 8;\r\n        }\r\n\r\n        if (remainingBits >= 32) {\r\n            var version = ver.getLameShortVersion();\r\n            if (remainingBits >= 32)\r\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\r\n                    remainingBits -= 8;\r\n                    putbits2(gfc, version.charAt(i), 8);\r\n                }\r\n        }\r\n\r\n        for (; remainingBits >= 1; remainingBits -= 1) {\r\n            putbits2(gfc, gfc.ancillary_flag, 1);\r\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * write N bits into the header\r\n     */\r\n    function writeheader(gfc, val, j) {\r\n        var ptr = gfc.header[gfc.h_ptr].ptr;\r\n\r\n        while (j > 0) {\r\n            var k = Math.min(j, 8 - (ptr & 7));\r\n            j -= k;\r\n            /* >> 32 too large for 32 bit machines */\r\n\r\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\r\n            ptr += k;\r\n        }\r\n        gfc.header[gfc.h_ptr].ptr = ptr;\r\n    }\r\n\r\n    function CRC_update(value, crc) {\r\n        value <<= 8;\r\n        for (var i = 0; i < 8; i++) {\r\n            value <<= 1;\r\n            crc <<= 1;\r\n\r\n            if ((((crc ^ value) & 0x10000) != 0))\r\n                crc ^= CRC16_POLYNOMIAL;\r\n        }\r\n        return crc;\r\n    }\r\n\r\n    this.CRC_writeheader = function (gfc, header) {\r\n        var crc = 0xffff;\r\n        /* (jo) init crc16 for error_protection */\r\n\r\n        crc = CRC_update(header[2] & 0xff, crc);\r\n        crc = CRC_update(header[3] & 0xff, crc);\r\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\r\n            crc = CRC_update(header[i] & 0xff, crc);\r\n        }\r\n\r\n        header[4] = (byte)(crc >> 8);\r\n        header[5] = (byte)(crc & 255);\r\n    };\r\n\r\n    function encodeSideInfo2(gfp, bitsPerFrame) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side;\r\n        var gr, ch;\r\n\r\n        l3_side = gfc.l3_side;\r\n        gfc.header[gfc.h_ptr].ptr = 0;\r\n        Arrays.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\r\n        if (gfp.out_samplerate < 16000)\r\n            writeheader(gfc, 0xffe, 12);\r\n        else\r\n            writeheader(gfc, 0xfff, 12);\r\n        writeheader(gfc, (gfp.version), 1);\r\n        writeheader(gfc, 4 - 3, 2);\r\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\r\n        writeheader(gfc, (gfc.bitrate_index), 4);\r\n        writeheader(gfc, (gfc.samplerate_index), 2);\r\n        writeheader(gfc, (gfc.padding), 1);\r\n        writeheader(gfc, (gfp.extension), 1);\r\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\r\n        writeheader(gfc, (gfc.mode_ext), 2);\r\n        writeheader(gfc, (gfp.copyright), 1);\r\n        writeheader(gfc, (gfp.original), 1);\r\n        writeheader(gfc, (gfp.emphasis), 2);\r\n        if (gfp.error_protection) {\r\n            writeheader(gfc, 0, 16);\r\n            /* dummy */\r\n        }\r\n\r\n        if (gfp.version == 1) {\r\n            /* MPEG1 */\r\n            writeheader(gfc, (l3_side.main_data_begin), 9);\r\n\r\n            if (gfc.channels_out == 2)\r\n                writeheader(gfc, l3_side.private_bits, 3);\r\n            else\r\n                writeheader(gfc, l3_side.private_bits, 5);\r\n\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                var band;\r\n                for (band = 0; band < 4; band++) {\r\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\r\n                }\r\n            }\r\n\r\n            for (gr = 0; gr < 2; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    var gi = l3_side.tt[gr][ch];\r\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\r\n                    writeheader(gfc, gi.big_values / 2, 9);\r\n                    writeheader(gfc, gi.global_gain, 8);\r\n                    writeheader(gfc, gi.scalefac_compress, 4);\r\n\r\n                    if (gi.block_type != Encoder.NORM_TYPE) {\r\n                        writeheader(gfc, 1, 1);\r\n                        /* window_switching_flag */\r\n                        writeheader(gfc, gi.block_type, 2);\r\n                        writeheader(gfc, gi.mixed_block_flag, 1);\r\n\r\n                        if (gi.table_select[0] == 14)\r\n                            gi.table_select[0] = 16;\r\n                        writeheader(gfc, gi.table_select[0], 5);\r\n                        if (gi.table_select[1] == 14)\r\n                            gi.table_select[1] = 16;\r\n                        writeheader(gfc, gi.table_select[1], 5);\r\n\r\n                        writeheader(gfc, gi.subblock_gain[0], 3);\r\n                        writeheader(gfc, gi.subblock_gain[1], 3);\r\n                        writeheader(gfc, gi.subblock_gain[2], 3);\r\n                    } else {\r\n                        writeheader(gfc, 0, 1);\r\n                        /* window_switching_flag */\r\n                        if (gi.table_select[0] == 14)\r\n                            gi.table_select[0] = 16;\r\n                        writeheader(gfc, gi.table_select[0], 5);\r\n                        if (gi.table_select[1] == 14)\r\n                            gi.table_select[1] = 16;\r\n                        writeheader(gfc, gi.table_select[1], 5);\r\n                        if (gi.table_select[2] == 14)\r\n                            gi.table_select[2] = 16;\r\n                        writeheader(gfc, gi.table_select[2], 5);\r\n\r\n                        writeheader(gfc, gi.region0_count, 4);\r\n                        writeheader(gfc, gi.region1_count, 3);\r\n                    }\r\n                    writeheader(gfc, gi.preflag, 1);\r\n                    writeheader(gfc, gi.scalefac_scale, 1);\r\n                    writeheader(gfc, gi.count1table_select, 1);\r\n                }\r\n            }\r\n        } else {\r\n            /* MPEG2 */\r\n            writeheader(gfc, (l3_side.main_data_begin), 8);\r\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\r\n\r\n            gr = 0;\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                var gi = l3_side.tt[gr][ch];\r\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\r\n                writeheader(gfc, gi.big_values / 2, 9);\r\n                writeheader(gfc, gi.global_gain, 8);\r\n                writeheader(gfc, gi.scalefac_compress, 9);\r\n\r\n                if (gi.block_type != Encoder.NORM_TYPE) {\r\n                    writeheader(gfc, 1, 1);\r\n                    /* window_switching_flag */\r\n                    writeheader(gfc, gi.block_type, 2);\r\n                    writeheader(gfc, gi.mixed_block_flag, 1);\r\n\r\n                    if (gi.table_select[0] == 14)\r\n                        gi.table_select[0] = 16;\r\n                    writeheader(gfc, gi.table_select[0], 5);\r\n                    if (gi.table_select[1] == 14)\r\n                        gi.table_select[1] = 16;\r\n                    writeheader(gfc, gi.table_select[1], 5);\r\n\r\n                    writeheader(gfc, gi.subblock_gain[0], 3);\r\n                    writeheader(gfc, gi.subblock_gain[1], 3);\r\n                    writeheader(gfc, gi.subblock_gain[2], 3);\r\n                } else {\r\n                    writeheader(gfc, 0, 1);\r\n                    /* window_switching_flag */\r\n                    if (gi.table_select[0] == 14)\r\n                        gi.table_select[0] = 16;\r\n                    writeheader(gfc, gi.table_select[0], 5);\r\n                    if (gi.table_select[1] == 14)\r\n                        gi.table_select[1] = 16;\r\n                    writeheader(gfc, gi.table_select[1], 5);\r\n                    if (gi.table_select[2] == 14)\r\n                        gi.table_select[2] = 16;\r\n                    writeheader(gfc, gi.table_select[2], 5);\r\n\r\n                    writeheader(gfc, gi.region0_count, 4);\r\n                    writeheader(gfc, gi.region1_count, 3);\r\n                }\r\n\r\n                writeheader(gfc, gi.scalefac_scale, 1);\r\n                writeheader(gfc, gi.count1table_select, 1);\r\n            }\r\n        }\r\n\r\n        if (gfp.error_protection) {\r\n            /* (jo) error_protection: add crc16 information to header */\r\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\r\n        }\r\n\r\n        {\r\n            var old = gfc.h_ptr;\r\n\r\n            gfc.h_ptr = (old + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\r\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\r\n                + bitsPerFrame;\r\n\r\n            if (gfc.h_ptr == gfc.w_ptr) {\r\n                /* yikes! we are out of header buffer space */\r\n                System.err\r\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function huffman_coder_count1(gfc, gi) {\r\n        /* Write count1 area */\r\n        var h = Tables.ht[gi.count1table_select + 32];\r\n        var i, bits = 0;\r\n\r\n        var ix = gi.big_values;\r\n        var xr = gi.big_values;\r\n\r\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\r\n            var huffbits = 0;\r\n            var p = 0, v;\r\n\r\n            v = gi.l3_enc[ix + 0];\r\n            if (v != 0) {\r\n                p += 8;\r\n                if (gi.xr[xr + 0] < 0)\r\n                    huffbits++;\r\n            }\r\n\r\n            v = gi.l3_enc[ix + 1];\r\n            if (v != 0) {\r\n                p += 4;\r\n                huffbits *= 2;\r\n                if (gi.xr[xr + 1] < 0)\r\n                    huffbits++;\r\n            }\r\n\r\n            v = gi.l3_enc[ix + 2];\r\n            if (v != 0) {\r\n                p += 2;\r\n                huffbits *= 2;\r\n                if (gi.xr[xr + 2] < 0)\r\n                    huffbits++;\r\n            }\r\n\r\n            v = gi.l3_enc[ix + 3];\r\n            if (v != 0) {\r\n                p++;\r\n                huffbits *= 2;\r\n                if (gi.xr[xr + 3] < 0)\r\n                    huffbits++;\r\n            }\r\n\r\n            ix += 4;\r\n            xr += 4;\r\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\r\n            bits += h.hlen[p];\r\n        }\r\n        return bits;\r\n    }\r\n\r\n    /**\r\n     * Implements the pseudocode of page 98 of the IS\r\n     */\r\n    function Huffmancode(gfc, tableindex, start, end, gi) {\r\n        var h = Tables.ht[tableindex];\r\n        var bits = 0;\r\n\r\n        if (0 == tableindex)\r\n            return bits;\r\n\r\n        for (var i = start; i < end; i += 2) {\r\n            var cbits = 0;\r\n            var xbits = 0;\r\n            var linbits = h.xlen;\r\n            var xlen = h.xlen;\r\n            var ext = 0;\r\n            var x1 = gi.l3_enc[i];\r\n            var x2 = gi.l3_enc[i + 1];\r\n\r\n            if (x1 != 0) {\r\n                if (gi.xr[i] < 0)\r\n                    ext++;\r\n                cbits--;\r\n            }\r\n\r\n            if (tableindex > 15) {\r\n                /* use ESC-words */\r\n                if (x1 > 14) {\r\n                    var linbits_x1 = x1 - 15;\r\n                    ext |= linbits_x1 << 1;\r\n                    xbits = linbits;\r\n                    x1 = 15;\r\n                }\r\n\r\n                if (x2 > 14) {\r\n                    var linbits_x2 = x2 - 15;\r\n                    ext <<= linbits;\r\n                    ext |= linbits_x2;\r\n                    xbits += linbits;\r\n                    x2 = 15;\r\n                }\r\n                xlen = 16;\r\n            }\r\n\r\n            if (x2 != 0) {\r\n                ext <<= 1;\r\n                if (gi.xr[i + 1] < 0)\r\n                    ext++;\r\n                cbits--;\r\n            }\r\n\r\n\r\n            x1 = x1 * xlen + x2;\r\n            xbits -= cbits;\r\n            cbits += h.hlen[x1];\r\n\r\n\r\n            putbits2(gfc, h.table[x1], cbits);\r\n            putbits2(gfc, ext, xbits);\r\n            bits += cbits + xbits;\r\n        }\r\n        return bits;\r\n    }\r\n\r\n    /**\r\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\r\n     * well as the definitions of the side information on pages 26 and 27.\r\n     */\r\n    function ShortHuffmancodebits(gfc, gi) {\r\n        var region1Start = 3 * gfc.scalefac_band.s[3];\r\n        if (region1Start > gi.big_values)\r\n            region1Start = gi.big_values;\r\n\r\n        /* short blocks do not have a region2 */\r\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\r\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\r\n            gi.big_values, gi);\r\n        return bits;\r\n    }\r\n\r\n    function LongHuffmancodebits(gfc, gi) {\r\n        var bigvalues, bits;\r\n        var region1Start, region2Start;\r\n\r\n        bigvalues = gi.big_values;\r\n\r\n        var i = gi.region0_count + 1;\r\n        region1Start = gfc.scalefac_band.l[i];\r\n        i += gi.region1_count + 1;\r\n        region2Start = gfc.scalefac_band.l[i];\r\n\r\n        if (region1Start > bigvalues)\r\n            region1Start = bigvalues;\r\n\r\n        if (region2Start > bigvalues)\r\n            region2Start = bigvalues;\r\n\r\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\r\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\r\n            region2Start, gi);\r\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\r\n            gi);\r\n        return bits;\r\n    }\r\n\r\n    function writeMainData(gfp) {\r\n        var gr, ch, sfb, data_bits, tot_bits = 0;\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side = gfc.l3_side;\r\n\r\n        if (gfp.version == 1) {\r\n            /* MPEG 1 */\r\n            for (gr = 0; gr < 2; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    var gi = l3_side.tt[gr][ch];\r\n                    var slen1 = Takehiro.slen1_tab[gi.scalefac_compress];\r\n                    var slen2 = Takehiro.slen2_tab[gi.scalefac_compress];\r\n                    data_bits = 0;\r\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\r\n                        if (gi.scalefac[sfb] == -1)\r\n                            continue;\r\n                        /* scfsi is used */\r\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\r\n                        data_bits += slen1;\r\n                    }\r\n                    for (; sfb < gi.sfbmax; sfb++) {\r\n                        if (gi.scalefac[sfb] == -1)\r\n                            continue;\r\n                        /* scfsi is used */\r\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\r\n                        data_bits += slen2;\r\n                    }\r\n\r\n                    if (gi.block_type == Encoder.SHORT_TYPE) {\r\n                        data_bits += ShortHuffmancodebits(gfc, gi);\r\n                    } else {\r\n                        data_bits += LongHuffmancodebits(gfc, gi);\r\n                    }\r\n                    data_bits += huffman_coder_count1(gfc, gi);\r\n                    /* does bitcount in quantize.c agree with actual bit count? */\r\n                    tot_bits += data_bits;\r\n                }\r\n                /* for ch */\r\n            }\r\n            /* for gr */\r\n        } else {\r\n            /* MPEG 2 */\r\n            gr = 0;\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                var gi = l3_side.tt[gr][ch];\r\n                var i, sfb_partition, scale_bits = 0;\r\n                data_bits = 0;\r\n                sfb = 0;\r\n                sfb_partition = 0;\r\n\r\n                if (gi.block_type == Encoder.SHORT_TYPE) {\r\n                    for (; sfb_partition < 4; sfb_partition++) {\r\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\r\n                        var slen = gi.slen[sfb_partition];\r\n                        for (i = 0; i < sfbs; i++, sfb++) {\r\n                            putbits2(gfc,\r\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\r\n                            putbits2(gfc,\r\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\r\n                            putbits2(gfc,\r\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\r\n                            scale_bits += 3 * slen;\r\n                        }\r\n                    }\r\n                    data_bits += ShortHuffmancodebits(gfc, gi);\r\n                } else {\r\n                    for (; sfb_partition < 4; sfb_partition++) {\r\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\r\n                        var slen = gi.slen[sfb_partition];\r\n                        for (i = 0; i < sfbs; i++, sfb++) {\r\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\r\n                            scale_bits += slen;\r\n                        }\r\n                    }\r\n                    data_bits += LongHuffmancodebits(gfc, gi);\r\n                }\r\n                data_bits += huffman_coder_count1(gfc, gi);\r\n                /* does bitcount in quantize.c agree with actual bit count? */\r\n                tot_bits += scale_bits + data_bits;\r\n            }\r\n            /* for ch */\r\n        }\r\n        /* for gf */\r\n        return tot_bits;\r\n    }\r\n\r\n    /* main_data */\r\n\r\n    function TotalBytes() {\r\n        this.total = 0;\r\n    }\r\n\r\n    /*\r\n     * compute the number of bits required to flush all mp3 frames currently in\r\n     * the buffer. This should be the same as the reservoir size. Only call this\r\n     * routine between frames - i.e. only after all headers and data have been\r\n     * added to the buffer by format_bitstream().\r\n     *\r\n     * Also compute total_bits_output = size of mp3 buffer (including frame\r\n     * headers which may not have yet been send to the mp3 buffer) + number of\r\n     * bits needed to flush all mp3 frames.\r\n     *\r\n     * total_bytes_output is the size of the mp3 output buffer if\r\n     * lame_encode_flush_nogap() was called right now.\r\n     */\r\n    function compute_flushbits(gfp, total_bytes_output) {\r\n        var gfc = gfp.internal_flags;\r\n        var flushbits, remaining_headers;\r\n        var bitsPerFrame;\r\n        var last_ptr, first_ptr;\r\n        first_ptr = gfc.w_ptr;\r\n        /* first header to add to bitstream */\r\n        last_ptr = gfc.h_ptr - 1;\r\n        /* last header to add to bitstream */\r\n        if (last_ptr == -1)\r\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\r\n\r\n        /* add this many bits to bitstream so we can flush all headers */\r\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\r\n        total_bytes_output.total = flushbits;\r\n\r\n        if (flushbits >= 0) {\r\n            /* if flushbits >= 0, some headers have not yet been written */\r\n            /* reduce flushbits by the size of the headers */\r\n            remaining_headers = 1 + last_ptr - first_ptr;\r\n            if (last_ptr < first_ptr)\r\n                remaining_headers = 1 + last_ptr - first_ptr\r\n                    + LameInternalFlags.MAX_HEADER_BUF;\r\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\r\n        }\r\n\r\n        /*\r\n         * finally, add some bits so that the last frame is complete these bits\r\n         * are not necessary to decode the last frame, but some decoders will\r\n         * ignore last frame if these bits are missing\r\n         */\r\n        bitsPerFrame = self.getframebits(gfp);\r\n        flushbits += bitsPerFrame;\r\n        total_bytes_output.total += bitsPerFrame;\r\n        /* round up: */\r\n        if ((total_bytes_output.total % 8) != 0)\r\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\r\n        else\r\n            total_bytes_output.total = (total_bytes_output.total / 8);\r\n        total_bytes_output.total += bufByteIdx + 1;\r\n\r\n        if (flushbits < 0) {\r\n            System.err.println(\"strange error flushing buffer ... \\n\");\r\n        }\r\n        return flushbits;\r\n    }\r\n\r\n    this.flush_bitstream = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side;\r\n        var flushbits;\r\n        var last_ptr = gfc.h_ptr - 1;\r\n        /* last header to add to bitstream */\r\n        if (last_ptr == -1)\r\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\r\n        l3_side = gfc.l3_side;\r\n\r\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\r\n            return;\r\n        drain_into_ancillary(gfp, flushbits);\r\n\r\n        /* check that the 100% of the last frame has been written to bitstream */\r\n\r\n        /*\r\n         * we have padded out all frames with ancillary data, which is the same\r\n         * as filling the bitreservoir with ancillary data, so :\r\n         */\r\n        gfc.ResvSize = 0;\r\n        l3_side.main_data_begin = 0;\r\n\r\n        /* save the ReplayGain value */\r\n        if (gfc.findReplayGain) {\r\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\r\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\r\n            /* round to nearest */\r\n        }\r\n\r\n        /* find the gain and scale change required for no clipping */\r\n        if (gfc.findPeakSample) {\r\n            gfc.noclipGainChange = Math.ceil(Math\r\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\r\n            /* round up */\r\n\r\n            if (gfc.noclipGainChange > 0) {\r\n                /* clipping occurs */\r\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\r\n                    gfc.noclipScale = (Math\r\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\r\n                /* round down */\r\n                else {\r\n                    /*\r\n                     * the user specified his own scaling factor. We could\r\n                     * suggest the scaling factor of\r\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\r\n                     * very inaccurate. So we'd rather not advice him on the\r\n                     * scaling factor.\r\n                     */\r\n                    gfc.noclipScale = -1;\r\n                }\r\n            } else\r\n            /* no clipping */\r\n                gfc.noclipScale = -1;\r\n        }\r\n    };\r\n\r\n    this.add_dummy_byte = function (gfp, val, n) {\r\n        var gfc = gfp.internal_flags;\r\n        var i;\r\n\r\n        while (n-- > 0) {\r\n            putbits_noheaders(gfc, val, 8);\r\n\r\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\r\n                gfc.header[i].write_timing += 8;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This is called after a frame of audio has been quantized and coded. It\r\n     * will write the encoded audio to the bitstream. Note that from a layer3\r\n     * encoder's perspective the bit stream is primarily a series of main_data()\r\n     * blocks, with header and side information inserted at the proper locations\r\n     * to maintain framing. (See Figure A.7 in the IS).\r\n     */\r\n    this.format_bitstream = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side;\r\n        l3_side = gfc.l3_side;\r\n\r\n        var bitsPerFrame = this.getframebits(gfp);\r\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\r\n\r\n        encodeSideInfo2(gfp, bitsPerFrame);\r\n        var bits = 8 * gfc.sideinfo_len;\r\n        bits += writeMainData(gfp);\r\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\r\n        bits += l3_side.resvDrain_post;\r\n\r\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\r\n\r\n        /*\r\n         * compare number of bits needed to clear all buffered mp3 frames with\r\n         * what we think the resvsize is:\r\n         */\r\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\r\n            System.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\r\n        }\r\n\r\n        /*\r\n         * compare main_data_begin for the next frame with what we think the\r\n         * resvsize is:\r\n         */\r\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\r\n            System.err.printf(\"bit reservoir error: \\n\"\r\n                + \"l3_side.main_data_begin: %d \\n\"\r\n                + \"Resvoir size:             %d \\n\"\r\n                + \"resv drain (post)         %d \\n\"\r\n                + \"resv drain (pre)          %d \\n\"\r\n                + \"header and sideinfo:      %d \\n\"\r\n                + \"data bits:                %d \\n\"\r\n                + \"total bits:               %d (remainder: %d) \\n\"\r\n                + \"bitsperframe:             %d \\n\",\r\n                8 * l3_side.main_data_begin, gfc.ResvSize,\r\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\r\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\r\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\r\n\r\n            System.err.println(\"This is a fatal error.  It has several possible causes:\");\r\n            System.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\r\n            System.err.println(\" 9%%  Your system is overclocked\");\r\n            System.err.println(\" 1%%  bug in LAME encoding library\");\r\n\r\n            gfc.ResvSize = l3_side.main_data_begin * 8;\r\n        }\r\n        //;\r\n\r\n        if (totbit > 1000000000) {\r\n            /*\r\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\r\n             * bit counter\r\n             */\r\n            var i;\r\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\r\n                gfc.header[i].write_timing -= totbit;\r\n            totbit = 0;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     * <PRE>\r\n     * copy data out of the internal MP3 bit buffer into a user supplied\r\n     *       unsigned char buffer.\r\n     *\r\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\r\n     *       mp3data=1      data is real mp3 frame data.\r\n     * </PRE>\r\n     */\r\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\r\n        var minimum = bufByteIdx + 1;\r\n        if (minimum <= 0)\r\n            return 0;\r\n        if (size != 0 && minimum > size) {\r\n            /* buffer is too small */\r\n            return -1;\r\n        }\r\n        System.arraycopy(buf, 0, buffer, bufferPos, minimum);\r\n        bufByteIdx = -1;\r\n        bufBitIdx = 0;\r\n\r\n        if (mp3data != 0) {\r\n            var crc = new_int(1);\r\n            crc[0] = gfc.nMusicCRC;\r\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\r\n            gfc.nMusicCRC = crc[0];\r\n\r\n            /**\r\n             * sum number of bytes belonging to the mp3 stream this info will be\r\n             * written into the Xing/LAME header for seeking\r\n             */\r\n            if (minimum > 0) {\r\n                gfc.VBR_seek_table.nBytesWritten += minimum;\r\n            }\r\n\r\n            if (gfc.decode_on_the_fly) { /* decode the frame */\r\n                var pcm_buf = new_float_n([2, 1152]);\r\n                var mp3_in = minimum;\r\n                var samples_out = -1;\r\n                var i;\r\n\r\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\r\n                while (samples_out != 0) {\r\n\r\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\r\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\r\n                    /*\r\n                     * samples_out = 0: need more data to decode samples_out =\r\n                     * -1: error. Lets assume 0 pcm output samples_out = number\r\n                     * of samples output\r\n                     */\r\n\r\n                    /*\r\n                     * set the lenght of the mp3 input buffer to zero, so that\r\n                     * in the next iteration of the loop we will be querying\r\n                     * mpglib about buffered data\r\n                     */\r\n                    mp3_in = 0;\r\n\r\n                    if (samples_out == -1) {\r\n                        /*\r\n                         * error decoding. Not fatal, but might screw up the\r\n                         * ReplayGain tag. What should we do? Ignore for now\r\n                         */\r\n                        samples_out = 0;\r\n                    }\r\n                    if (samples_out > 0) {\r\n                        /* process the PCM data */\r\n\r\n                        /*\r\n                         * this should not be possible, and indicates we have\r\n                         * overflown the pcm_buf buffer\r\n                         */\r\n\r\n                        if (gfc.findPeakSample) {\r\n                            for (i = 0; i < samples_out; i++) {\r\n                                if (pcm_buf[0][i] > gfc.PeakSample)\r\n                                    gfc.PeakSample = pcm_buf[0][i];\r\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\r\n                                    gfc.PeakSample = -pcm_buf[0][i];\r\n                            }\r\n                            if (gfc.channels_out > 1)\r\n                                for (i = 0; i < samples_out; i++) {\r\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\r\n                                        gfc.PeakSample = pcm_buf[1][i];\r\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\r\n                                        gfc.PeakSample = -pcm_buf[1][i];\r\n                                }\r\n                        }\r\n\r\n                        if (gfc.findReplayGain)\r\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\r\n                                    pcm_buf[1], 0, samples_out,\r\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\r\n                                return -6;\r\n\r\n                    }\r\n                    /* if (samples_out>0) */\r\n                }\r\n                /* while (samples_out!=0) */\r\n            }\r\n            /* if (gfc.decode_on_the_fly) */\r\n\r\n        }\r\n        /* if (mp3data) */\r\n        return minimum;\r\n    };\r\n\r\n    this.init_bit_stream_w = function (gfc) {\r\n        buf = new_byte(Lame.LAME_MAXMP3BUFFER);\r\n\r\n        gfc.h_ptr = gfc.w_ptr = 0;\r\n        gfc.header[gfc.h_ptr].write_timing = 0;\r\n        bufByteIdx = -1;\r\n        bufBitIdx = 0;\r\n        totbit = 0;\r\n    };\r\n\r\n    // From machine.h\r\n\r\n\r\n}\r\n\r\nfunction HuffCodeTab(len, max, tab, hl) {\r\n    this.xlen = len;\r\n    this.linmax = max;\r\n    this.table = tab;\r\n    this.hlen = hl;\r\n}\r\n\r\nvar Tables = {};\r\n\r\n\r\nTables.t1HB = [\r\n    1, 1,\r\n    1, 0\r\n];\r\n\r\nTables.t2HB = [\r\n    1, 2, 1,\r\n    3, 1, 1,\r\n    3, 2, 0\r\n];\r\n\r\nTables.t3HB = [\r\n    3, 2, 1,\r\n    1, 1, 1,\r\n    3, 2, 0\r\n];\r\n\r\nTables.t5HB = [\r\n    1, 2, 6, 5,\r\n    3, 1, 4, 4,\r\n    7, 5, 7, 1,\r\n    6, 1, 1, 0\r\n];\r\n\r\nTables.t6HB = [\r\n    7, 3, 5, 1,\r\n    6, 2, 3, 2,\r\n    5, 4, 4, 1,\r\n    3, 3, 2, 0\r\n];\r\n\r\nTables.t7HB = [\r\n    1, 2, 10, 19, 16, 10,\r\n    3, 3, 7, 10, 5, 3,\r\n    11, 4, 13, 17, 8, 4,\r\n    12, 11, 18, 15, 11, 2,\r\n    7, 6, 9, 14, 3, 1,\r\n    6, 4, 5, 3, 2, 0\r\n];\r\n\r\nTables.t8HB = [\r\n    3, 4, 6, 18, 12, 5,\r\n    5, 1, 2, 16, 9, 3,\r\n    7, 3, 5, 14, 7, 3,\r\n    19, 17, 15, 13, 10, 4,\r\n    13, 5, 8, 11, 5, 1,\r\n    12, 4, 4, 1, 1, 0\r\n];\r\n\r\nTables.t9HB = [\r\n    7, 5, 9, 14, 15, 7,\r\n    6, 4, 5, 5, 6, 7,\r\n    7, 6, 8, 8, 8, 5,\r\n    15, 6, 9, 10, 5, 1,\r\n    11, 7, 9, 6, 4, 1,\r\n    14, 4, 6, 2, 6, 0\r\n];\r\n\r\nTables.t10HB = [\r\n    1, 2, 10, 23, 35, 30, 12, 17,\r\n    3, 3, 8, 12, 18, 21, 12, 7,\r\n    11, 9, 15, 21, 32, 40, 19, 6,\r\n    14, 13, 22, 34, 46, 23, 18, 7,\r\n    20, 19, 33, 47, 27, 22, 9, 3,\r\n    31, 22, 41, 26, 21, 20, 5, 3,\r\n    14, 13, 10, 11, 16, 6, 5, 1,\r\n    9, 8, 7, 8, 4, 4, 2, 0\r\n];\r\n\r\nTables.t11HB = [\r\n    3, 4, 10, 24, 34, 33, 21, 15,\r\n    5, 3, 4, 10, 32, 17, 11, 10,\r\n    11, 7, 13, 18, 30, 31, 20, 5,\r\n    25, 11, 19, 59, 27, 18, 12, 5,\r\n    35, 33, 31, 58, 30, 16, 7, 5,\r\n    28, 26, 32, 19, 17, 15, 8, 14,\r\n    14, 12, 9, 13, 14, 9, 4, 1,\r\n    11, 4, 6, 6, 6, 3, 2, 0\r\n];\r\n\r\nTables.t12HB = [\r\n    9, 6, 16, 33, 41, 39, 38, 26,\r\n    7, 5, 6, 9, 23, 16, 26, 11,\r\n    17, 7, 11, 14, 21, 30, 10, 7,\r\n    17, 10, 15, 12, 18, 28, 14, 5,\r\n    32, 13, 22, 19, 18, 16, 9, 5,\r\n    40, 17, 31, 29, 17, 13, 4, 2,\r\n    27, 12, 11, 15, 10, 7, 4, 1,\r\n    27, 12, 8, 12, 6, 3, 1, 0\r\n];\r\n\r\nTables.t13HB = [\r\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\r\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\r\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\r\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\r\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\r\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\r\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\r\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\r\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\r\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\r\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\r\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\r\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\r\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\r\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\r\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\r\n];\r\n\r\nTables.t15HB = [\r\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\r\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\r\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\r\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\r\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\r\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\r\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\r\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\r\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\r\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\r\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\r\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\r\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\r\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\r\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\r\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\r\n];\r\n\r\nTables.t16HB = [\r\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\r\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\r\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\r\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\r\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\r\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\r\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\r\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\r\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\r\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\r\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\r\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\r\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\r\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\r\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\r\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\r\n];\r\n\r\nTables.t24HB = [\r\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\r\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\r\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\r\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\r\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\r\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\r\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\r\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\r\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\r\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\r\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\r\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\r\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\r\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\r\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\r\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\r\n];\r\n\r\nTables.t32HB = [\r\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\r\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\r\n];\r\n\r\nTables.t33HB = [\r\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\r\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\r\n];\r\n\r\nTables.t1l = [\r\n    1, 4,\r\n    3, 5\r\n];\r\n\r\nTables.t2l = [\r\n    1, 4, 7,\r\n    4, 5, 7,\r\n    6, 7, 8\r\n];\r\n\r\nTables.t3l = [\r\n    2, 3, 7,\r\n    4, 4, 7,\r\n    6, 7, 8\r\n];\r\n\r\nTables.t5l = [\r\n    1, 4, 7, 8,\r\n    4, 5, 8, 9,\r\n    7, 8, 9, 10,\r\n    8, 8, 9, 10\r\n];\r\n\r\nTables.t6l = [\r\n    3, 4, 6, 8,\r\n    4, 4, 6, 7,\r\n    5, 6, 7, 8,\r\n    7, 7, 8, 9\r\n];\r\n\r\nTables.t7l = [\r\n    1, 4, 7, 9, 9, 10,\r\n    4, 6, 8, 9, 9, 10,\r\n    7, 7, 9, 10, 10, 11,\r\n    8, 9, 10, 11, 11, 11,\r\n    8, 9, 10, 11, 11, 12,\r\n    9, 10, 11, 12, 12, 12\r\n];\r\n\r\nTables.t8l = [\r\n    2, 4, 7, 9, 9, 10,\r\n    4, 4, 6, 10, 10, 10,\r\n    7, 6, 8, 10, 10, 11,\r\n    9, 10, 10, 11, 11, 12,\r\n    9, 9, 10, 11, 12, 12,\r\n    10, 10, 11, 11, 13, 13\r\n];\r\n\r\nTables.t9l = [\r\n    3, 4, 6, 7, 9, 10,\r\n    4, 5, 6, 7, 8, 10,\r\n    5, 6, 7, 8, 9, 10,\r\n    7, 7, 8, 9, 9, 10,\r\n    8, 8, 9, 9, 10, 11,\r\n    9, 9, 10, 10, 11, 11\r\n];\r\n\r\nTables.t10l = [\r\n    1, 4, 7, 9, 10, 10, 10, 11,\r\n    4, 6, 8, 9, 10, 11, 10, 10,\r\n    7, 8, 9, 10, 11, 12, 11, 11,\r\n    8, 9, 10, 11, 12, 12, 11, 12,\r\n    9, 10, 11, 12, 12, 12, 12, 12,\r\n    10, 11, 12, 12, 13, 13, 12, 13,\r\n    9, 10, 11, 12, 12, 12, 13, 13,\r\n    10, 10, 11, 12, 12, 13, 13, 13\r\n];\r\n\r\nTables.t11l = [\r\n    2, 4, 6, 8, 9, 10, 9, 10,\r\n    4, 5, 6, 8, 10, 10, 9, 10,\r\n    6, 7, 8, 9, 10, 11, 10, 10,\r\n    8, 8, 9, 11, 10, 12, 10, 11,\r\n    9, 10, 10, 11, 11, 12, 11, 12,\r\n    9, 10, 11, 12, 12, 13, 12, 13,\r\n    9, 9, 9, 10, 11, 12, 12, 12,\r\n    9, 9, 10, 11, 12, 12, 12, 12\r\n];\r\n\r\nTables.t12l = [\r\n    4, 4, 6, 8, 9, 10, 10, 10,\r\n    4, 5, 6, 7, 9, 9, 10, 10,\r\n    6, 6, 7, 8, 9, 10, 9, 10,\r\n    7, 7, 8, 8, 9, 10, 10, 10,\r\n    8, 8, 9, 9, 10, 10, 10, 11,\r\n    9, 9, 10, 10, 10, 11, 10, 11,\r\n    9, 9, 9, 10, 10, 11, 11, 12,\r\n    10, 10, 10, 11, 11, 11, 11, 12\r\n];\r\n\r\nTables.t13l = [\r\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\r\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\r\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\r\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\r\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\r\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\r\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\r\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\r\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\r\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\r\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\r\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\r\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\r\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\r\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\r\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\r\n];\r\n\r\nTables.t15l = [\r\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\r\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\r\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\r\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\r\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\r\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\r\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\r\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\r\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\r\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\r\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\r\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\r\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\r\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\r\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\r\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\r\n];\r\n\r\nTables.t16_5l = [\r\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\r\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\r\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\r\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\r\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\r\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\r\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\r\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\r\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\r\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\r\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\r\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\r\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\r\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\r\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\r\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\r\n];\r\n\r\nTables.t16l = [\r\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\r\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\r\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\r\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\r\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\r\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\r\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\r\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\r\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\r\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\r\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\r\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\r\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\r\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\r\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\r\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\r\n];\r\n\r\nTables.t24l = [\r\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\r\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\r\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\r\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\r\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\r\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\r\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\r\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\r\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\r\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\r\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\r\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\r\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\r\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\r\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\r\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\r\n];\r\n\r\nTables.t32l = [\r\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\r\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\r\n];\r\n\r\nTables.t33l = [\r\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\r\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\r\n];\r\n\r\nTables.ht = [\r\n    /* xlen, linmax, table, hlen */\r\n    new HuffCodeTab(0, 0, null, null),\r\n    new HuffCodeTab(2, 0, Tables.t1HB, Tables.t1l),\r\n    new HuffCodeTab(3, 0, Tables.t2HB, Tables.t2l),\r\n    new HuffCodeTab(3, 0, Tables.t3HB, Tables.t3l),\r\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\r\n    new HuffCodeTab(4, 0, Tables.t5HB, Tables.t5l),\r\n    new HuffCodeTab(4, 0, Tables.t6HB, Tables.t6l),\r\n    new HuffCodeTab(6, 0, Tables.t7HB, Tables.t7l),\r\n    new HuffCodeTab(6, 0, Tables.t8HB, Tables.t8l),\r\n    new HuffCodeTab(6, 0, Tables.t9HB, Tables.t9l),\r\n    new HuffCodeTab(8, 0, Tables.t10HB, Tables.t10l),\r\n    new HuffCodeTab(8, 0, Tables.t11HB, Tables.t11l),\r\n    new HuffCodeTab(8, 0, Tables.t12HB, Tables.t12l),\r\n    new HuffCodeTab(16, 0, Tables.t13HB, Tables.t13l),\r\n    new HuffCodeTab(0, 0, null, Tables.t16_5l), /* Apparently not used */\r\n    new HuffCodeTab(16, 0, Tables.t15HB, Tables.t15l),\r\n\r\n    new HuffCodeTab(1, 1, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(2, 3, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(3, 7, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(4, 15, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(6, 63, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(8, 255, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(10, 1023, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(13, 8191, Tables.t16HB, Tables.t16l),\r\n\r\n    new HuffCodeTab(4, 15, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(5, 31, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(6, 63, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(7, 127, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(8, 255, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(9, 511, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(11, 2047, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(13, 8191, Tables.t24HB, Tables.t24l),\r\n\r\n    new HuffCodeTab(0, 0, Tables.t32HB, Tables.t32l),\r\n    new HuffCodeTab(0, 0, Tables.t33HB, Tables.t33l),\r\n];\r\n\r\n/**\r\n * <CODE>\r\n *  for (i = 0; i < 16*16; i++) [\r\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\r\n *  ]\r\n * </CODE>\r\n *\r\n */\r\nTables.largetbl = [\r\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\r\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\r\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\r\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\r\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\r\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\r\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\r\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\r\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\r\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\r\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\r\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\r\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\r\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\r\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\r\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\r\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\r\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\r\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\r\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\r\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\r\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\r\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\r\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\r\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\r\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\r\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\r\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\r\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\r\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\r\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\r\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\r\n];\r\n/**\r\n * <CODE>\r\n *  for (i = 0; i < 3*3; i++) [\r\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\r\n *  ]\r\n * </CODE>\r\n *\r\n */\r\nTables.table23 = [\r\n    0x010002, 0x040003, 0x070007,\r\n    0x040004, 0x050004, 0x070007,\r\n    0x060006, 0x070007, 0x080008\r\n];\r\n\r\n/**\r\n * <CODE>\r\n *  for (i = 0; i < 4*4; i++) [\r\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\r\n *   ]\r\n * </CODE>\r\n *\r\n */\r\nTables.table56 = [\r\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\r\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\r\n];\r\n\r\nTables.bitrate_table = [\r\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\r\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\r\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\r\n];\r\n\r\n/**\r\n * MPEG 2, MPEG 1, MPEG 2.5.\r\n */\r\nTables.samplerate_table = [\r\n    [22050, 24000, 16000, -1],\r\n    [44100, 48000, 32000, -1],\r\n    [11025, 12000, 8000, -1],\r\n];\r\n\r\n/**\r\n * This is the scfsi_band table from 2.4.2.7 of the IS.\r\n */\r\nTables.scfsi_band = [0, 6, 11, 16, 21];\r\n\r\nfunction MeanBits(meanBits) {\r\n    this.bits = meanBits;\r\n}\r\n\r\n//package mp3;\r\n\r\nfunction CalcNoiseResult() {\r\n    /**\r\n     * sum of quantization noise > masking\r\n     */\r\n    this.over_noise = 0.;\r\n    /**\r\n     * sum of all quantization noise\r\n     */\r\n    this.tot_noise = 0.;\r\n    /**\r\n     * max quantization noise\r\n     */\r\n    this.max_noise = 0.;\r\n    /**\r\n     * number of quantization noise > masking\r\n     */\r\n    this.over_count = 0;\r\n    /**\r\n     * SSD-like cost of distorted bands\r\n     */\r\n    this.over_SSD = 0;\r\n    this.bits = 0;\r\n}\r\n\r\nfunction VBRQuantize() {\r\n    var qupvt;\r\n    var tak;\r\n\r\n    this.setModules = function (_qupvt, _tk) {\r\n        qupvt = _qupvt;\r\n        tak = _tk;\r\n    }\r\n    //TODO\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * ATH related stuff, if something new ATH related has to be added, please plug\r\n * it here into the ATH.\r\n */\r\nfunction ATH() {\r\n    /**\r\n     * Method for the auto adjustment.\r\n     */\r\n    this.useAdjust = 0;\r\n    /**\r\n     * factor for tuning the (sample power) point below which adaptive threshold\r\n     * of hearing adjustment occurs\r\n     */\r\n    this.aaSensitivityP = 0.;\r\n    /**\r\n     * Lowering based on peak volume, 1 = no lowering.\r\n     */\r\n    this.adjust = 0.;\r\n    /**\r\n     * Limit for dynamic ATH adjust.\r\n     */\r\n    this.adjustLimit = 0.;\r\n    /**\r\n     * Determined to lower x dB each second.\r\n     */\r\n    this.decay = 0.;\r\n    /**\r\n     * Lowest ATH value.\r\n     */\r\n    this.floor = 0.;\r\n    /**\r\n     * ATH for sfbs in long blocks.\r\n     */\r\n    this.l = new_float(Encoder.SBMAX_l);\r\n    /**\r\n     * ATH for sfbs in short blocks.\r\n     */\r\n    this.s = new_float(Encoder.SBMAX_s);\r\n    /**\r\n     * ATH for partitioned sfb21 in long blocks.\r\n     */\r\n    this.psfb21 = new_float(Encoder.PSFB21);\r\n    /**\r\n     * ATH for partitioned sfb12 in short blocks.\r\n     */\r\n    this.psfb12 = new_float(Encoder.PSFB12);\r\n    /**\r\n     * ATH for long block convolution bands.\r\n     */\r\n    this.cb_l = new_float(Encoder.CBANDS);\r\n    /**\r\n     * ATH for short block convolution bands.\r\n     */\r\n    this.cb_s = new_float(Encoder.CBANDS);\r\n    /**\r\n     * Equal loudness weights (based on ATH).\r\n     */\r\n    this.eql_w = new_float(Encoder.BLKSIZE / 2);\r\n}\r\n\r\n\r\nfunction LameGlobalFlags() {\r\n\r\n    this.class_id = 0;\r\n\r\n    /* input description */\r\n\r\n    /**\r\n     * number of samples. default=-1\r\n     */\r\n    this.num_samples = 0;\r\n    /**\r\n     * input number of channels. default=2\r\n     */\r\n    this.num_channels = 0;\r\n    /**\r\n     * input_samp_rate in Hz. default=44.1 kHz\r\n     */\r\n    this.in_samplerate = 0;\r\n    /**\r\n     * output_samp_rate. default: LAME picks best value at least not used for\r\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\r\n     */\r\n    this.out_samplerate = 0;\r\n    /**\r\n     * scale input by this amount before encoding at least not used for MP3\r\n     * decoding\r\n     */\r\n    this.scale = 0.;\r\n    /**\r\n     * scale input of channel 0 (left) by this amount before encoding\r\n     */\r\n    this.scale_left = 0.;\r\n    /**\r\n     * scale input of channel 1 (right) by this amount before encoding\r\n     */\r\n    this.scale_right = 0.;\r\n\r\n    /* general control params */\r\n    /**\r\n     * collect data for a MP3 frame analyzer?\r\n     */\r\n    this.analysis = false;\r\n    /**\r\n     * add Xing VBR tag?\r\n     */\r\n    this.bWriteVbrTag = false;\r\n\r\n    /**\r\n     * use lame/mpglib to convert mp3 to wav\r\n     */\r\n    this.decode_only = false;\r\n    /**\r\n     * quality setting 0=best, 9=worst default=5\r\n     */\r\n    this.quality = 0;\r\n    /**\r\n     * see enum default = LAME picks best value\r\n     */\r\n    this.mode = MPEGMode.STEREO;\r\n    /**\r\n     * force M/S mode. requires mode=1\r\n     */\r\n    this.force_ms = false;\r\n    /**\r\n     * use free format? default=0\r\n     */\r\n    this.free_format = false;\r\n    /**\r\n     * find the RG value? default=0\r\n     */\r\n    this.findReplayGain = false;\r\n    /**\r\n     * decode on the fly? default=0\r\n     */\r\n    this.decode_on_the_fly = false;\r\n    /**\r\n     * 1 (default) writes ID3 tags, 0 not\r\n     */\r\n    this.write_id3tag_automatic = false;\r\n\r\n    /*\r\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\r\n     * the variable not set. Default is compression_ratio = 11.025\r\n     */\r\n    /**\r\n     * bitrate\r\n     */\r\n    this.brate = 0;\r\n    /**\r\n     * sizeof(wav file)/sizeof(mp3 file)\r\n     */\r\n    this.compression_ratio = 0.;\r\n\r\n    /* frame params */\r\n    /**\r\n     * mark as copyright. default=0\r\n     */\r\n    this.copyright = 0;\r\n    /**\r\n     * mark as original. default=1\r\n     */\r\n    this.original = 0;\r\n    /**\r\n     * the MP3 'private extension' bit. Meaningless\r\n     */\r\n    this.extension = 0;\r\n    /**\r\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\r\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\r\n     * take it into account, and last but not least many decoders don't care\r\n     * about these bits\r\n     */\r\n    this.emphasis = 0;\r\n    /**\r\n     * use 2 bytes per frame for a CRC checksum. default=0\r\n     */\r\n    this.error_protection = 0;\r\n    /**\r\n     * enforce ISO spec as much as possible\r\n     */\r\n    this.strict_ISO = false;\r\n\r\n    /**\r\n     * use bit reservoir?\r\n     */\r\n    this.disable_reservoir = false;\r\n\r\n    /* quantization/noise shaping */\r\n    this.quant_comp = 0;\r\n    this.quant_comp_short = 0;\r\n    this.experimentalY = false;\r\n    this.experimentalZ = 0;\r\n    this.exp_nspsytune = 0;\r\n\r\n    this.preset = 0;\r\n\r\n    /* VBR control */\r\n    this.VBR = null;\r\n    /**\r\n     * Range [0,...,1[\r\n     */\r\n    this.VBR_q_frac = 0.;\r\n    /**\r\n     * Range [0,...,9]\r\n     */\r\n    this.VBR_q = 0;\r\n    this.VBR_mean_bitrate_kbps = 0;\r\n    this.VBR_min_bitrate_kbps = 0;\r\n    this.VBR_max_bitrate_kbps = 0;\r\n    /**\r\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\r\n     * silence\r\n     */\r\n    this.VBR_hard_min = 0;\r\n\r\n    /* resampling and filtering */\r\n\r\n    /**\r\n     * freq in Hz. 0=lame choses. -1=no filter\r\n     */\r\n    this.lowpassfreq = 0;\r\n    /**\r\n     * freq in Hz. 0=lame choses. -1=no filter\r\n     */\r\n    this.highpassfreq = 0;\r\n    /**\r\n     * freq width of filter, in Hz (default=15%)\r\n     */\r\n    this.lowpasswidth = 0;\r\n    /**\r\n     * freq width of filter, in Hz (default=15%)\r\n     */\r\n    this.highpasswidth = 0;\r\n\r\n    /*\r\n     * psycho acoustics and other arguments which you should not change unless\r\n     * you know what you are doing\r\n     */\r\n\r\n    this.maskingadjust = 0.;\r\n    this.maskingadjust_short = 0.;\r\n    /**\r\n     * only use ATH\r\n     */\r\n    this.ATHonly = false;\r\n    /**\r\n     * only use ATH for short blocks\r\n     */\r\n    this.ATHshort = false;\r\n    /**\r\n     * disable ATH\r\n     */\r\n    this.noATH = false;\r\n    /**\r\n     * select ATH formula\r\n     */\r\n    this.ATHtype = 0;\r\n    /**\r\n     * change ATH formula 4 shape\r\n     */\r\n    this.ATHcurve = 0.;\r\n    /**\r\n     * lower ATH by this many db\r\n     */\r\n    this.ATHlower = 0.;\r\n    /**\r\n     * select ATH auto-adjust scheme\r\n     */\r\n    this.athaa_type = 0;\r\n    /**\r\n     * select ATH auto-adjust loudness calc\r\n     */\r\n    this.athaa_loudapprox = 0;\r\n    /**\r\n     * dB, tune active region of auto-level\r\n     */\r\n    this.athaa_sensitivity = 0.;\r\n    this.short_blocks = null;\r\n    /**\r\n     * use temporal masking effect\r\n     */\r\n    this.useTemporal = false;\r\n    this.interChRatio = 0.;\r\n    /**\r\n     * Naoki's adjustment of Mid/Side maskings\r\n     */\r\n    this.msfix = 0.;\r\n\r\n    /**\r\n     * 0 off, 1 on\r\n     */\r\n    this.tune = false;\r\n    /**\r\n     * used to pass values for debugging and stuff\r\n     */\r\n    this.tune_value_a = 0.;\r\n\r\n    /************************************************************************/\r\n    /* internal variables, do not set... */\r\n    /* provided because they may be of use to calling application */\r\n    /************************************************************************/\r\n\r\n    /**\r\n     * 0=MPEG-2/2.5 1=MPEG-1\r\n     */\r\n    this.version = 0;\r\n    this.encoder_delay = 0;\r\n    /**\r\n     * number of samples of padding appended to input\r\n     */\r\n    this.encoder_padding = 0;\r\n    this.framesize = 0;\r\n    /**\r\n     * number of frames encoded\r\n     */\r\n    this.frameNum = 0;\r\n    /**\r\n     * is this struct owned by calling program or lame?\r\n     */\r\n    this.lame_allocated_gfp = 0;\r\n    /**************************************************************************/\r\n    /* more internal variables are stored in this structure: */\r\n    /**************************************************************************/\r\n    this.internal_flags = null;\r\n}\r\n\r\n\r\n\r\nfunction CBRNewIterationLoop(_quantize)  {\r\n    var quantize = _quantize;\r\n    this.quantize = quantize;\r\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\r\n\t\tvar gfc = gfp.internal_flags;\r\n        var l3_xmin = new_float(L3Side.SFBMAX);\r\n\t\tvar xrpow = new_float(576);\r\n\t\tvar targ_bits = new_int(2);\r\n\t\tvar mean_bits = 0, max_bits;\r\n\t\tvar l3_side = gfc.l3_side;\r\n\r\n\t\tvar mb = new MeanBits(mean_bits);\r\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\r\n\t\tmean_bits = mb.bits;\r\n\r\n\t\t/* quantize! */\r\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n\r\n\t\t\t/*\r\n\t\t\t * calculate needed bits\r\n\t\t\t */\r\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\r\n\t\t\t\t\tgr, gr);\r\n\r\n\t\t\tif (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\r\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\r\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\r\n\t\t\t\t\t\tmean_bits, max_bits);\r\n\t\t\t}\r\n\r\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\r\n\t\t\t\tvar adjust, masking_lower_db;\r\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\r\n\r\n\t\t\t\tif (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n\t\t\t\t\t// NORM, START or STOP type\r\n\t\t\t\t\tadjust = 0;\r\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadjust = 0;\r\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\r\n\t\t\t\t}\r\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\r\n\t\t\t\t\t\tmasking_lower_db * 0.1);\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\r\n\t\t\t\t */\r\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\r\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\r\n\t\t\t\t\t * masking abilities find some good quantization in\r\n\t\t\t\t\t * outer_loop\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\r\n\t\t\t\t\t\t\tl3_xmin);\r\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\r\n\t\t\t\t\t\t\ttarg_bits[ch]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\r\n\t\t\t} /* for ch */\r\n\t\t} /* for gr */\r\n\r\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\r\n\t}\r\n}\r\n\r\n\r\nfunction ReplayGain() {\r\n    this.linprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\r\n    /**\r\n     * left input samples, with pre-buffer\r\n     */\r\n    this.linpre = 0;\r\n    this.lstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\r\n    /**\r\n     * left \"first step\" (i.e. post first filter) samples\r\n     */\r\n    this.lstep = 0;\r\n    this.loutbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\r\n    /**\r\n     * left \"out\" (i.e. post second filter) samples\r\n     */\r\n    this.lout = 0;\r\n    this.rinprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\r\n    /**\r\n     * right input samples ...\r\n     */\r\n    this.rinpre = 0;\r\n    this.rstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\r\n    this.rstep = 0;\r\n    this.routbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\r\n    this.rout = 0;\r\n    /**\r\n     * number of samples required to reach number of milliseconds required\r\n     * for RMS window\r\n     */\r\n    this.sampleWindow = 0;\r\n    this.totsamp = 0;\r\n    this.lsum = 0.;\r\n    this.rsum = 0.;\r\n    this.freqindex = 0;\r\n    this.first = 0;\r\n    this.A = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\r\n    this.B = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\r\n\r\n}\r\n\r\n//package mp3;\r\n\r\n/**\r\n * Layer III side information.\r\n *\r\n * @author Ken\r\n *\r\n */\r\n\r\n\r\n\r\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\r\n\r\n    this.l = new_int(1 + Encoder.SBMAX_l);\r\n    this.s = new_int(1 + Encoder.SBMAX_s);\r\n    this.psfb21 = new_int(1 + Encoder.PSFB21);\r\n    this.psfb12 = new_int(1 + Encoder.PSFB12);\r\n    var l = this.l;\r\n    var s = this.s;\r\n\r\n    if (arguments.length == 4) {\r\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\r\n        //    final int[] arr12) {\r\n        this.arrL = arguments[0];\r\n        this.arrS = arguments[1];\r\n        this.arr21 = arguments[2];\r\n        this.arr12 = arguments[3];\r\n\r\n        System.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\r\n        System.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\r\n        System.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\r\n        System.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\r\n    }\r\n}\r\n\r\n/*\r\n *      quantize_pvt source file\r\n *\r\n *      Copyright (c) 1999-2002 Takehiro Tominaga\r\n *      Copyright (c) 2000-2002 Robert Hegemann\r\n *      Copyright (c) 2001 Naoki Shibata\r\n *      Copyright (c) 2002-2005 Gabriel Bouvigne\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: QuantizePVT.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n\r\nQuantizePVT.Q_MAX = (256 + 1);\r\nQuantizePVT.Q_MAX2 = 116;\r\nQuantizePVT.LARGE_BITS = 100000;\r\nQuantizePVT.IXMAX_VAL = 8206;\r\n\r\nfunction QuantizePVT() {\r\n\r\n    var tak = null;\r\n    var rv = null;\r\n    var psy = null;\r\n\r\n    this.setModules = function (_tk, _rv, _psy) {\r\n        tak = _tk;\r\n        rv = _rv;\r\n        psy = _psy;\r\n    };\r\n\r\n    function POW20(x) {\r\n        return pow20[x + QuantizePVT.Q_MAX2];\r\n    }\r\n\r\n    this.IPOW20 = function (x) {\r\n        return ipow20[x];\r\n    }\r\n\r\n    /**\r\n     * smallest such that 1.0+DBL_EPSILON != 1.0\r\n     */\r\n    var DBL_EPSILON = 2.2204460492503131e-016;\r\n\r\n    /**\r\n     * ix always <= 8191+15. see count_bits()\r\n     */\r\n    var IXMAX_VAL = QuantizePVT.IXMAX_VAL;\r\n\r\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\r\n\r\n    var Q_MAX = QuantizePVT.Q_MAX;\r\n\r\n\r\n    /**\r\n     * <CODE>\r\n     * minimum possible number of\r\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\r\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\r\n     *\r\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\r\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\r\n     * </CODE>\r\n     */\r\n    var Q_MAX2 = QuantizePVT.Q_MAX2;\r\n\r\n    var LARGE_BITS = QuantizePVT.LARGE_BITS;\r\n\r\n\r\n    /**\r\n     * Assuming dynamic range=96dB, this value should be 92\r\n     */\r\n    var NSATHSCALE = 100;\r\n\r\n    /**\r\n     * The following table is used to implement the scalefactor partitioning for\r\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\r\n     * to the way the tables are presented in the IS:\r\n     *\r\n     * [table_number][row_in_table][column of nr_of_sfb]\r\n     */\r\n    this.nr_of_sfb_block = [\r\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\r\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\r\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\r\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\r\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\r\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\r\n\r\n    /**\r\n     * Table B.6: layer3 preemphasis\r\n     */\r\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\r\n        2, 2, 3, 3, 3, 2, 0];\r\n    this.pretab = pretab;\r\n\r\n    /**\r\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\r\n     * bands. <BR>\r\n     * Index into this using a method such as:<BR>\r\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\r\n     */\r\n    this.sfBandIndex = [\r\n        // Table B.2.b: 22.05 kHz\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\r\n                522, 576],\r\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\r\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\r\n        ),\r\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\r\n                540, 576],\r\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* Table B.2.a: 16 kHz */\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\r\n                522, 576],\r\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* Table B.8.b: 44.1 kHz */\r\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\r\n                576],\r\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* Table B.8.c: 48 kHz */\r\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\r\n                576],\r\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* Table B.8.a: 32 kHz */\r\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\r\n                576],\r\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* MPEG-2.5 11.025 kHz */\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\r\n                522, 576],\r\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\r\n                402 / 3, 522 / 3, 576 / 3]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* MPEG-2.5 12 kHz */\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\r\n                522, 576],\r\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\r\n                402 / 3, 522 / 3, 576 / 3]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* MPEG-2.5 8 kHz */\r\n        new ScaleFac([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\r\n                572, 574, 576],\r\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\r\n                492 / 3, 498 / 3, 576 / 3]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        )\r\n    ];\r\n\r\n    var pow20 = new_float(Q_MAX + Q_MAX2 + 1);\r\n    var ipow20 = new_float(Q_MAX);\r\n    var pow43 = new_float(PRECALC_SIZE);\r\n\r\n    var adj43 = new_float(PRECALC_SIZE);\r\n    this.adj43 = adj43;\r\n\r\n    /**\r\n     * <PRE>\r\n     * compute the ATH for each scalefactor band cd range: 0..96db\r\n     *\r\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\r\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\r\n     * -9db 0db\r\n     *\r\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\r\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\r\n     *\r\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\r\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\r\n     *\r\n     *\r\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\r\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\r\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\r\n     * -11 - 96 = -107db = ATH at 3.3kHz.\r\n     *\r\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\r\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\r\n     * </PRE>\r\n     */\r\n    function ATHmdct(gfp, f) {\r\n        var ath = psy.ATHformula(f, gfp);\r\n\r\n        ath -= NSATHSCALE;\r\n\r\n        /* modify the MDCT scaling for the ATH and convert to energy */\r\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\r\n        return ath;\r\n    }\r\n\r\n    function compute_ath(gfp) {\r\n        var ATH_l = gfp.internal_flags.ATH.l;\r\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\r\n        var ATH_s = gfp.internal_flags.ATH.s;\r\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\r\n        var gfc = gfp.internal_flags;\r\n        var samp_freq = gfp.out_samplerate;\r\n\r\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\r\n            var start = gfc.scalefac_band.l[sfb];\r\n            var end = gfc.scalefac_band.l[sfb + 1];\r\n            ATH_l[sfb] = Float.MAX_VALUE;\r\n            for (var i = start; i < end; i++) {\r\n                var freq = i * samp_freq / (2 * 576);\r\n                var ATH_f = ATHmdct(gfp, freq);\r\n                /* freq in kHz */\r\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\r\n            }\r\n        }\r\n\r\n        for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\r\n            var start = gfc.scalefac_band.psfb21[sfb];\r\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\r\n            ATH_psfb21[sfb] = Float.MAX_VALUE;\r\n            for (var i = start; i < end; i++) {\r\n                var freq = i * samp_freq / (2 * 576);\r\n                var ATH_f = ATHmdct(gfp, freq);\r\n                /* freq in kHz */\r\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\r\n            }\r\n        }\r\n\r\n        for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\r\n            var start = gfc.scalefac_band.s[sfb];\r\n            var end = gfc.scalefac_band.s[sfb + 1];\r\n            ATH_s[sfb] = Float.MAX_VALUE;\r\n            for (var i = start; i < end; i++) {\r\n                var freq = i * samp_freq / (2 * 192);\r\n                var ATH_f = ATHmdct(gfp, freq);\r\n                /* freq in kHz */\r\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\r\n            }\r\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\r\n        }\r\n\r\n        for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\r\n            var start = gfc.scalefac_band.psfb12[sfb];\r\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\r\n            ATH_psfb12[sfb] = Float.MAX_VALUE;\r\n            for (var i = start; i < end; i++) {\r\n                var freq = i * samp_freq / (2 * 192);\r\n                var ATH_f = ATHmdct(gfp, freq);\r\n                /* freq in kHz */\r\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\r\n            }\r\n            /* not sure about the following */\r\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\r\n        }\r\n\r\n        /*\r\n         * no-ATH mode: reduce ATH to -200 dB\r\n         */\r\n        if (gfp.noATH) {\r\n            for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\r\n                ATH_l[sfb] = 1E-20;\r\n            }\r\n            for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\r\n                ATH_psfb21[sfb] = 1E-20;\r\n            }\r\n            for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\r\n                ATH_s[sfb] = 1E-20;\r\n            }\r\n            for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\r\n                ATH_psfb12[sfb] = 1E-20;\r\n            }\r\n        }\r\n\r\n        /*\r\n         * work in progress, don't rely on it too much\r\n         */\r\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\r\n    }\r\n\r\n    /**\r\n     * initialization for iteration_loop\r\n     */\r\n    this.iteration_init = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side = gfc.l3_side;\r\n        var i;\r\n\r\n        if (gfc.iteration_init_init == 0) {\r\n            gfc.iteration_init_init = 1;\r\n\r\n            l3_side.main_data_begin = 0;\r\n            compute_ath(gfp);\r\n\r\n            pow43[0] = 0.0;\r\n            for (i = 1; i < PRECALC_SIZE; i++)\r\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\r\n\r\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\r\n                adj43[i] = ((i + 1) - Math.pow(\r\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\r\n            adj43[i] = 0.5;\r\n\r\n            for (i = 0; i < Q_MAX; i++)\r\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\r\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\r\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\r\n\r\n            tak.huffman_init(gfc);\r\n\r\n            {\r\n                var bass, alto, treble, sfb21;\r\n\r\n                i = (gfp.exp_nspsytune >> 2) & 63;\r\n                if (i >= 32)\r\n                    i -= 64;\r\n                bass = Math.pow(10, i / 4.0 / 10.0);\r\n\r\n                i = (gfp.exp_nspsytune >> 8) & 63;\r\n                if (i >= 32)\r\n                    i -= 64;\r\n                alto = Math.pow(10, i / 4.0 / 10.0);\r\n\r\n                i = (gfp.exp_nspsytune >> 14) & 63;\r\n                if (i >= 32)\r\n                    i -= 64;\r\n                treble = Math.pow(10, i / 4.0 / 10.0);\r\n\r\n                /*\r\n                 * to be compatible with Naoki's original code, the next 6 bits\r\n                 * define only the amount of changing treble for sfb21\r\n                 */\r\n                i = (gfp.exp_nspsytune >> 20) & 63;\r\n                if (i >= 32)\r\n                    i -= 64;\r\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\r\n                for (i = 0; i < Encoder.SBMAX_l; i++) {\r\n                    var f;\r\n                    if (i <= 6)\r\n                        f = bass;\r\n                    else if (i <= 13)\r\n                        f = alto;\r\n                    else if (i <= 20)\r\n                        f = treble;\r\n                    else\r\n                        f = sfb21;\r\n\r\n                    gfc.nsPsy.longfact[i] = f;\r\n                }\r\n                for (i = 0; i < Encoder.SBMAX_s; i++) {\r\n                    var f;\r\n                    if (i <= 5)\r\n                        f = bass;\r\n                    else if (i <= 10)\r\n                        f = alto;\r\n                    else if (i <= 11)\r\n                        f = treble;\r\n                    else\r\n                        f = sfb21;\r\n\r\n                    gfc.nsPsy.shortfact[i] = f;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * allocate bits among 2 channels based on PE<BR>\r\n     * mt 6/99<BR>\r\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\r\n     */\r\n    this.on_pe = function (gfp, pe,\r\n                           targ_bits, mean_bits, gr, cbr) {\r\n        var gfc = gfp.internal_flags;\r\n        var tbits = 0, bits;\r\n        var add_bits = new_int(2);\r\n        var ch;\r\n\r\n        /* allocate targ_bits for granule */\r\n        var mb = new MeanBits(tbits);\r\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\r\n        tbits = mb.bits;\r\n        /* maximum allowed bits for this granule */\r\n        var max_bits = tbits + extra_bits;\r\n        if (max_bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\r\n            // hard limit per granule\r\n            max_bits = LameInternalFlags.MAX_BITS_PER_GRANULE;\r\n        }\r\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\r\n            /******************************************************************\r\n             * allocate bits for each channel\r\n             ******************************************************************/\r\n            targ_bits[ch] = Math.min(LameInternalFlags.MAX_BITS_PER_CHANNEL,\r\n                tbits / gfc.channels_out);\r\n\r\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\r\n\r\n            /* at most increase bits by 1.5*average */\r\n            if (add_bits[ch] > mean_bits * 3 / 4)\r\n                add_bits[ch] = mean_bits * 3 / 4;\r\n\r\n            if (add_bits[ch] < 0)\r\n                add_bits[ch] = 0;\r\n\r\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\r\n                add_bits[ch] = Math.max(0,\r\n                    LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\r\n\r\n            bits += add_bits[ch];\r\n        }\r\n        if (bits > extra_bits) {\r\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\r\n            }\r\n        }\r\n\r\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n            targ_bits[ch] += add_bits[ch];\r\n            extra_bits -= add_bits[ch];\r\n        }\r\n\r\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\r\n            bits += targ_bits[ch];\r\n        }\r\n        if (bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\r\n            var sum = 0;\r\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n                targ_bits[ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\r\n                targ_bits[ch] /= bits;\r\n                sum += targ_bits[ch];\r\n            }\r\n        }\r\n\r\n        return max_bits;\r\n    }\r\n\r\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\r\n\r\n        /*\r\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\r\n         * allocate 50/50 mid/side fac= 0\r\n         */\r\n        /* 75/25 split is fac=.5 */\r\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\r\n        if (fac < 0)\r\n            fac = 0;\r\n        if (fac > .5)\r\n            fac = .5;\r\n\r\n        /* number of bits to move from side channel to mid channel */\r\n        /* move_bits = fac*targ_bits[1]; */\r\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\r\n\r\n        if (move_bits > LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\r\n            move_bits = LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0];\r\n        }\r\n        if (move_bits < 0)\r\n            move_bits = 0;\r\n\r\n        if (targ_bits[1] >= 125) {\r\n            /* dont reduce side channel below 125 bits */\r\n            if (targ_bits[1] - move_bits > 125) {\r\n\r\n                /* if mid channel already has 2x more than average, dont bother */\r\n                /* mean_bits = bits per granule (for both channels) */\r\n                if (targ_bits[0] < mean_bits)\r\n                    targ_bits[0] += move_bits;\r\n                targ_bits[1] -= move_bits;\r\n            } else {\r\n                targ_bits[0] += targ_bits[1] - 125;\r\n                targ_bits[1] = 125;\r\n            }\r\n        }\r\n\r\n        move_bits = targ_bits[0] + targ_bits[1];\r\n        if (move_bits > max_bits) {\r\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\r\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *  Robert Hegemann 2001-04-27:\r\n     *  this adjusts the ATH, keeping the original noise floor\r\n     *  affects the higher frequencies more than the lower ones\r\n     */\r\n    this.athAdjust = function (a, x, athFloor) {\r\n        /*\r\n         * work in progress\r\n         */\r\n        var o = 90.30873362;\r\n        var p = 94.82444863;\r\n        var u = Util.FAST_LOG10_X(x, 10.0);\r\n        var v = a * a;\r\n        var w = 0.0;\r\n        u -= athFloor;\r\n        /* undo scaling */\r\n        if (v > 1E-20)\r\n            w = 1. + Util.FAST_LOG10_X(v, 10.0 / o);\r\n        if (w < 0)\r\n            w = 0.;\r\n        u *= w;\r\n        u += athFloor + o - p;\r\n        /* redo scaling */\r\n\r\n        return Math.pow(10., 0.1 * u);\r\n    };\r\n\r\n    /**\r\n     * Calculate the allowed distortion for each scalefactor band, as determined\r\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\r\n     *\r\n     * returns number of sfb's with energy > ATH\r\n     */\r\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\r\n        var pxminPos = 0;\r\n        var gfc = gfp.internal_flags;\r\n        var gsfb, j = 0, ath_over = 0;\r\n        var ATH = gfc.ATH;\r\n        var xr = cod_info.xr;\r\n        var enable_athaa_fix = (gfp.VBR == VbrMode.vbr_mtrh) ? 1 : 0;\r\n        var masking_lower = gfc.masking_lower;\r\n\r\n        if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\r\n            /* was already done in PSY-Model */\r\n            masking_lower = 1.0;\r\n        }\r\n\r\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\r\n            var en0, xmin;\r\n            var rh1, rh2;\r\n            var width, l;\r\n\r\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\r\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\r\n            else\r\n                xmin = ATH.adjust * ATH.l[gsfb];\r\n\r\n            width = cod_info.width[gsfb];\r\n            rh1 = xmin / width;\r\n            rh2 = DBL_EPSILON;\r\n            l = width >> 1;\r\n            en0 = 0.0;\r\n            do {\r\n                var xa, xb;\r\n                xa = xr[j] * xr[j];\r\n                en0 += xa;\r\n                rh2 += (xa < rh1) ? xa : rh1;\r\n                j++;\r\n                xb = xr[j] * xr[j];\r\n                en0 += xb;\r\n                rh2 += (xb < rh1) ? xb : rh1;\r\n                j++;\r\n            } while (--l > 0);\r\n            if (en0 > xmin)\r\n                ath_over++;\r\n\r\n            if (gsfb == Encoder.SBPSY_l) {\r\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\r\n                if (rh2 < x) {\r\n                    rh2 = x;\r\n                }\r\n            }\r\n            if (enable_athaa_fix != 0) {\r\n                xmin = rh2;\r\n            }\r\n            if (!gfp.ATHonly) {\r\n                var e = ratio.en.l[gsfb];\r\n                if (e > 0.0) {\r\n                    var x;\r\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\r\n                    if (enable_athaa_fix != 0)\r\n                        x *= gfc.nsPsy.longfact[gsfb];\r\n                    if (xmin < x)\r\n                        xmin = x;\r\n                }\r\n            }\r\n            if (enable_athaa_fix != 0)\r\n                pxmin[pxminPos++] = xmin;\r\n            else\r\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\r\n        }\r\n        /* end of long block loop */\r\n\r\n        /* use this function to determine the highest non-zero coeff */\r\n        var max_nonzero = 575;\r\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n            // NORM, START or STOP type, but not SHORT\r\n            var k = 576;\r\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\r\n                max_nonzero = k;\r\n            }\r\n        }\r\n        cod_info.max_nonzero_coeff = max_nonzero;\r\n\r\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\r\n            var width, b;\r\n            var tmpATH;\r\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\r\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\r\n            else\r\n                tmpATH = ATH.adjust * ATH.s[sfb];\r\n\r\n            width = cod_info.width[gsfb];\r\n            for (b = 0; b < 3; b++) {\r\n                var en0 = 0.0, xmin;\r\n                var rh1, rh2;\r\n                var l = width >> 1;\r\n\r\n                rh1 = tmpATH / width;\r\n                rh2 = DBL_EPSILON;\r\n                do {\r\n                    var xa, xb;\r\n                    xa = xr[j] * xr[j];\r\n                    en0 += xa;\r\n                    rh2 += (xa < rh1) ? xa : rh1;\r\n                    j++;\r\n                    xb = xr[j] * xr[j];\r\n                    en0 += xb;\r\n                    rh2 += (xb < rh1) ? xb : rh1;\r\n                    j++;\r\n                } while (--l > 0);\r\n                if (en0 > tmpATH)\r\n                    ath_over++;\r\n                if (sfb == Encoder.SBPSY_s) {\r\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\r\n                    if (rh2 < x) {\r\n                        rh2 = x;\r\n                    }\r\n                }\r\n                if (enable_athaa_fix != 0)\r\n                    xmin = rh2;\r\n                else\r\n                    xmin = tmpATH;\r\n\r\n                if (!gfp.ATHonly && !gfp.ATHshort) {\r\n                    var e = ratio.en.s[sfb][b];\r\n                    if (e > 0.0) {\r\n                        var x;\r\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\r\n                        if (enable_athaa_fix != 0)\r\n                            x *= gfc.nsPsy.shortfact[sfb];\r\n                        if (xmin < x)\r\n                            xmin = x;\r\n                    }\r\n                }\r\n                if (enable_athaa_fix != 0)\r\n                    pxmin[pxminPos++] = xmin;\r\n                else\r\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\r\n            }\r\n            /* b */\r\n            if (gfp.useTemporal) {\r\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\r\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\r\n                        * gfc.decay;\r\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\r\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\r\n                        * gfc.decay;\r\n            }\r\n        }\r\n        /* end of short block sfb loop */\r\n\r\n        return ath_over;\r\n    };\r\n\r\n    function StartLine(j) {\r\n        this.s = j;\r\n    }\r\n\r\n    this.calc_noise_core = function (cod_info, startline, l, step) {\r\n        var noise = 0;\r\n        var j = startline.s;\r\n        var ix = cod_info.l3_enc;\r\n\r\n        if (j > cod_info.count1) {\r\n            while ((l--) != 0) {\r\n                var temp;\r\n                temp = cod_info.xr[j];\r\n                j++;\r\n                noise += temp * temp;\r\n                temp = cod_info.xr[j];\r\n                j++;\r\n                noise += temp * temp;\r\n            }\r\n        } else if (j > cod_info.big_values) {\r\n            var ix01 = new_float(2);\r\n            ix01[0] = 0;\r\n            ix01[1] = step;\r\n            while ((l--) != 0) {\r\n                var temp;\r\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\r\n                j++;\r\n                noise += temp * temp;\r\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\r\n                j++;\r\n                noise += temp * temp;\r\n            }\r\n        } else {\r\n            while ((l--) != 0) {\r\n                var temp;\r\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\r\n                j++;\r\n                noise += temp * temp;\r\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\r\n                j++;\r\n                noise += temp * temp;\r\n            }\r\n        }\r\n\r\n        startline.s = j;\r\n        return noise;\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     * -oo dB  =>  -1.00\r\n     * - 6 dB  =>  -0.97\r\n     * - 3 dB  =>  -0.80\r\n     * - 2 dB  =>  -0.64\r\n     * - 1 dB  =>  -0.38\r\n     *   0 dB  =>   0.00\r\n     * + 1 dB  =>  +0.49\r\n     * + 2 dB  =>  +1.06\r\n     * + 3 dB  =>  +1.68\r\n     * + 6 dB  =>  +3.69\r\n     * +10 dB  =>  +6.45\r\n     * </PRE>\r\n     */\r\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\r\n        var distortPos = 0;\r\n        var l3_xminPos = 0;\r\n        var sfb, l, over = 0;\r\n        var over_noise_db = 0;\r\n        /* 0 dB relative to masking */\r\n        var tot_noise_db = 0;\r\n        /* -200 dB relative to masking */\r\n        var max_noise = -20.0;\r\n        var j = 0;\r\n        var scalefac = cod_info.scalefac;\r\n        var scalefacPos = 0;\r\n\r\n        res.over_SSD = 0;\r\n\r\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\r\n            var s = cod_info.global_gain\r\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\r\n                    : 0)) << (cod_info.scalefac_scale + 1))\r\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\r\n            var noise = 0.0;\r\n\r\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\r\n\r\n                /* use previously computed values */\r\n                noise = prev_noise.noise[sfb];\r\n                j += cod_info.width[sfb];\r\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\r\n\r\n                noise = prev_noise.noise_log[sfb];\r\n\r\n            } else {\r\n                var step = POW20(s);\r\n                l = cod_info.width[sfb] >> 1;\r\n\r\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\r\n                    var usefullsize;\r\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\r\n\r\n                    if (usefullsize > 0)\r\n                        l = usefullsize >> 1;\r\n                    else\r\n                        l = 0;\r\n                }\r\n\r\n                var sl = new StartLine(j);\r\n                noise = this.calc_noise_core(cod_info, sl, l, step);\r\n                j = sl.s;\r\n\r\n                if (prev_noise != null) {\r\n                    /* save noise values */\r\n                    prev_noise.step[sfb] = s;\r\n                    prev_noise.noise[sfb] = noise;\r\n                }\r\n\r\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\r\n\r\n                /* multiplying here is adding in dB, but can overflow */\r\n                noise = Util.FAST_LOG10(Math.max(noise, 1E-20));\r\n\r\n                if (prev_noise != null) {\r\n                    /* save noise values */\r\n                    prev_noise.noise_log[sfb] = noise;\r\n                }\r\n            }\r\n\r\n            if (prev_noise != null) {\r\n                /* save noise values */\r\n                prev_noise.global_gain = cod_info.global_gain;\r\n            }\r\n\r\n            tot_noise_db += noise;\r\n\r\n            if (noise > 0.0) {\r\n                var tmp;\r\n\r\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\r\n                res.over_SSD += tmp * tmp;\r\n\r\n                over++;\r\n                /* multiplying here is adding in dB -but can overflow */\r\n                /* over_noise *= noise; */\r\n                over_noise_db += noise;\r\n            }\r\n            max_noise = Math.max(max_noise, noise);\r\n\r\n        }\r\n\r\n        res.over_count = over;\r\n        res.tot_noise = tot_noise_db;\r\n        res.over_noise = over_noise_db;\r\n        res.max_noise = max_noise;\r\n\r\n        return over;\r\n    }\r\n\r\n    /**\r\n     * updates plotting data\r\n     *\r\n     * Mark Taylor 2000-??-??\r\n     *\r\n     * Robert Hegemann: moved noise/distortion calc into it\r\n     */\r\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\r\n        var gfc = gfp.internal_flags;\r\n        var sfb, sfb2;\r\n        var l;\r\n        var en0, en1;\r\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\r\n        var scalefac = cod_info.scalefac;\r\n\r\n        var l3_xmin = new_float(L3Side.SFBMAX);\r\n        var xfsf = new_float(L3Side.SFBMAX);\r\n        var noise = new CalcNoiseResult();\r\n\r\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\r\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\r\n\r\n        var j = 0;\r\n        sfb2 = cod_info.sfb_lmax;\r\n        if (cod_info.block_type != Encoder.SHORT_TYPE\r\n            && 0 == cod_info.mixed_block_flag)\r\n            sfb2 = 22;\r\n        for (sfb = 0; sfb < sfb2; sfb++) {\r\n            var start = gfc.scalefac_band.l[sfb];\r\n            var end = gfc.scalefac_band.l[sfb + 1];\r\n            var bw = end - start;\r\n            for (en0 = 0.0; j < end; j++)\r\n                en0 += cod_info.xr[j] * cod_info.xr[j];\r\n            en0 /= bw;\r\n            /* convert to MDCT units */\r\n            /* scaling so it shows up on FFT plot */\r\n            en1 = 1e15;\r\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\r\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\r\n\r\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\r\n                en0 = en0 / ratio.en.l[sfb];\r\n            else\r\n                en0 = 0.0;\r\n\r\n            gfc.pinfo.thr[gr][ch][sfb] = en1\r\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\r\n\r\n            /* there is no scalefactor bands >= SBPSY_l */\r\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\r\n            if (cod_info.preflag != 0 && sfb >= 11)\r\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\r\n\r\n            if (sfb < Encoder.SBPSY_l) {\r\n                /* scfsi should be decoded by caller side */\r\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\r\n            }\r\n        }\r\n        /* for sfb */\r\n\r\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n            sfb2 = sfb;\r\n            for (sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\r\n                var start = gfc.scalefac_band.s[sfb];\r\n                var end = gfc.scalefac_band.s[sfb + 1];\r\n                var bw = end - start;\r\n                for (var i = 0; i < 3; i++) {\r\n                    for (en0 = 0.0, l = start; l < end; l++) {\r\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\r\n                        j++;\r\n                    }\r\n                    en0 = Math.max(en0 / bw, 1e-20);\r\n                    /* convert to MDCT units */\r\n                    /* scaling so it shows up on FFT plot */\r\n                    en1 = 1e15;\r\n\r\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\r\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\r\n                        * xfsf[sfb2] / bw;\r\n                    if (ratio.en.s[sfb][i] > 0)\r\n                        en0 = en0 / ratio.en.s[sfb][i];\r\n                    else\r\n                        en0 = 0.0;\r\n                    if (gfp.ATHonly || gfp.ATHshort)\r\n                        en0 = 0;\r\n\r\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\r\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\r\n                            gfc.ATH.s[sfb]);\r\n\r\n                    /* there is no scalefactor bands >= SBPSY_s */\r\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\r\n                        * cod_info.subblock_gain[i];\r\n                    if (sfb < Encoder.SBPSY_s) {\r\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\r\n                            * scalefac[sfb2];\r\n                    }\r\n                    sfb2++;\r\n                }\r\n            }\r\n        }\r\n        /* block type short */\r\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\r\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\r\n            + cod_info.part2_length;\r\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\r\n\r\n        gfc.pinfo.over[gr][ch] = noise.over_count;\r\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\r\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\r\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\r\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\r\n    }\r\n\r\n    /**\r\n     * updates plotting data for a whole frame\r\n     *\r\n     * Robert Hegemann 2000-10-21\r\n     */\r\n    function set_frame_pinfo(gfp, ratio) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        gfc.masking_lower = 1.0;\r\n\r\n        /*\r\n         * for every granule and channel patch l3_enc and set info\r\n         */\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                var cod_info = gfc.l3_side.tt[gr][ch];\r\n                var scalefac_sav = new_int(L3Side.SFBMAX);\r\n                System.arraycopy(cod_info.scalefac, 0, scalefac_sav, 0,\r\n                    scalefac_sav.length);\r\n\r\n                /*\r\n                 * reconstruct the scalefactors in case SCFSI was used\r\n                 */\r\n                if (gr == 1) {\r\n                    var sfb;\r\n                    for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\r\n                        if (cod_info.scalefac[sfb] < 0) /* scfsi */\r\n                            cod_info.scalefac[sfb] = gfc.l3_side.tt[0][ch].scalefac[sfb];\r\n                    }\r\n                }\r\n\r\n                set_pinfo(gfp, cod_info, ratio[gr][ch], gr, ch);\r\n                System.arraycopy(scalefac_sav, 0, cod_info.scalefac, 0,\r\n                    scalefac_sav.length);\r\n            }\r\n            /* for ch */\r\n        }\r\n        /* for gr */\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction CalcNoiseData() {\r\n    this.global_gain = 0;\r\n    this.sfb_count1 = 0;\r\n    this.step = new_int(39);\r\n    this.noise = new_float(39);\r\n    this.noise_log = new_float(39);\r\n}\r\n\r\n//package mp3;\r\n\r\n\r\nfunction GrInfo() {\r\n    //float xr[] = new float[576];\r\n    this.xr = new_float(576);\r\n    //int l3_enc[] = new int[576];\r\n    this.l3_enc = new_int(576);\r\n    //int scalefac[] = new int[L3Side.SFBMAX];\r\n    this.scalefac = new_int(L3Side.SFBMAX);\r\n    this.xrpow_max = 0.;\r\n\r\n    this.part2_3_length = 0;\r\n    this.big_values = 0;\r\n    this.count1 = 0;\r\n    this.global_gain = 0;\r\n    this.scalefac_compress = 0;\r\n    this.block_type = 0;\r\n    this.mixed_block_flag = 0;\r\n    this.table_select = new_int(3);\r\n    this.subblock_gain = new_int(3 + 1);\r\n    this.region0_count = 0;\r\n    this.region1_count = 0;\r\n    this.preflag = 0;\r\n    this.scalefac_scale = 0;\r\n    this.count1table_select = 0;\r\n\r\n    this.part2_length = 0;\r\n    this.sfb_lmax = 0;\r\n    this.sfb_smin = 0;\r\n    this.psy_lmax = 0;\r\n    this.sfbmax = 0;\r\n    this.psymax = 0;\r\n    this.sfbdivide = 0;\r\n    this.width = new_int(L3Side.SFBMAX);\r\n    this.window = new_int(L3Side.SFBMAX);\r\n    this.count1bits = 0;\r\n    /**\r\n     * added for LSF\r\n     */\r\n    this.sfb_partition_table = null;\r\n    this.slen = new_int(4);\r\n\r\n    this.max_nonzero_coeff = 0;\r\n\r\n    var self = this;\r\n    function clone_int(array) {\r\n        return new Int32Array(array);\r\n    }\r\n    function clone_float(array) {\r\n        return new Float32Array(array);\r\n    }\r\n    this.assign = function (other) {\r\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\r\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\r\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\r\n        self.xrpow_max = other.xrpow_max;\r\n\r\n        self.part2_3_length = other.part2_3_length;\r\n        self.big_values = other.big_values;\r\n        self.count1 = other.count1;\r\n        self.global_gain = other.global_gain;\r\n        self.scalefac_compress = other.scalefac_compress;\r\n        self.block_type = other.block_type;\r\n        self.mixed_block_flag = other.mixed_block_flag;\r\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\r\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\r\n        self.region0_count = other.region0_count;\r\n        self.region1_count = other.region1_count;\r\n        self.preflag = other.preflag;\r\n        self.scalefac_scale = other.scalefac_scale;\r\n        self.count1table_select = other.count1table_select;\r\n\r\n        self.part2_length = other.part2_length;\r\n        self.sfb_lmax = other.sfb_lmax;\r\n        self.sfb_smin = other.sfb_smin;\r\n        self.psy_lmax = other.psy_lmax;\r\n        self.sfbmax = other.sfbmax;\r\n        self.psymax = other.psymax;\r\n        self.sfbdivide = other.sfbdivide;\r\n        self.width = clone_int(other.width); //.slice(0); //.clone();\r\n        self.window = clone_int(other.window); //.slice(0); //.clone();\r\n        self.count1bits = other.count1bits;\r\n\r\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\r\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\r\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\r\n    }\r\n}\r\n\r\n\r\nvar L3Side = {};\r\n\r\n\r\n\t/**\r\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\r\n\t */\r\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\r\n\r\n/*\r\n * MP3 quantization\r\n *\r\n *      Copyright (c) 1999-2000 Mark Taylor\r\n *      Copyright (c) 1999-2003 Takehiro Tominaga\r\n *      Copyright (c) 2000-2007 Robert Hegemann\r\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n//package mp3;\r\n\r\n//import java.util.Arrays;\r\n\r\n\r\nfunction Quantize() {\r\n    var bs;\r\n    this.rv = null;\r\n    var rv;\r\n    this.qupvt = null;\r\n    var qupvt;\r\n\r\n    var vbr = new VBRQuantize();\r\n    var tk;\r\n\r\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\r\n        bs = _bs;\r\n        rv = _rv;\r\n        this.rv = _rv;\r\n        qupvt = _qupvt;\r\n        this.qupvt = _qupvt;\r\n        tk = _tk;\r\n        vbr.setModules(qupvt, tk);\r\n    }\r\n\r\n    /**\r\n     * convert from L/R <. Mid/Side\r\n     */\r\n    this.ms_convert = function (l3_side, gr) {\r\n        for (var i = 0; i < 576; ++i) {\r\n            var l = l3_side.tt[gr][0].xr[i];\r\n            var r = l3_side.tt[gr][1].xr[i];\r\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util.SQRT2 * 0.5);\r\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util.SQRT2 * 0.5);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * mt 6/99\r\n     *\r\n     * initializes cod_info, scalefac and xrpow\r\n     *\r\n     * returns 0 if all energies in xr are zero, else 1\r\n     */\r\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\r\n        sum = 0;\r\n        for (var i = 0; i <= upper; ++i) {\r\n            var tmp = Math.abs(cod_info.xr[i]);\r\n            sum += tmp;\r\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\r\n\r\n            if (xrpow[i] > cod_info.xrpow_max)\r\n                cod_info.xrpow_max = xrpow[i];\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\r\n        var sum = 0;\r\n        var upper = 0 | cod_info.max_nonzero_coeff;\r\n\r\n        cod_info.xrpow_max = 0;\r\n\r\n        /*\r\n         * check if there is some energy we have to quantize and calculate xrpow\r\n         * matching our fresh scalefactors\r\n         */\r\n\r\n        Arrays.fill(xrpow, upper, 576, 0);\r\n\r\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\r\n\r\n        /*\r\n         * return 1 if we have something to quantize, else 0\r\n         */\r\n        if (sum > 1E-20) {\r\n            var j = 0;\r\n            if ((gfc.substep_shaping & 2) != 0)\r\n                j = 1;\r\n\r\n            for (var i = 0; i < cod_info.psymax; i++)\r\n                gfc.pseudohalf[i] = j;\r\n\r\n            return true;\r\n        }\r\n\r\n        Arrays.fill(cod_info.l3_enc, 0, 576, 0);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gabriel Bouvigne feb/apr 2003<BR>\r\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\r\n     *\r\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\r\n     * stops on the first coeff higher than ath.\r\n     */\r\n    function psfb21_analogsilence(gfc, cod_info) {\r\n        var ath = gfc.ATH;\r\n        var xr = cod_info.xr;\r\n\r\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n            /* NORM, START or STOP type, but not SHORT blocks */\r\n            var stop = false;\r\n            for (var gsfb = Encoder.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\r\n                var start = gfc.scalefac_band.psfb21[gsfb];\r\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\r\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\r\n                    ath.floor);\r\n\r\n                if (gfc.nsPsy.longfact[21] > 1e-12)\r\n                    ath21 *= gfc.nsPsy.longfact[21];\r\n\r\n                for (var j = end - 1; j >= start; j--) {\r\n                    if (Math.abs(xr[j]) < ath21)\r\n                        xr[j] = 0;\r\n                    else {\r\n                        stop = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            /* note: short blocks coeffs are reordered */\r\n            for (var block = 0; block < 3; block++) {\r\n                var stop = false;\r\n                for (var gsfb = Encoder.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\r\n                    var start = gfc.scalefac_band.s[12]\r\n                        * 3\r\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\r\n                        * block\r\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\r\n                    var end = start\r\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\r\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\r\n                        ath.floor);\r\n\r\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\r\n                        ath12 *= gfc.nsPsy.shortfact[12];\r\n\r\n                    for (var j = end - 1; j >= start; j--) {\r\n                        if (Math.abs(xr[j]) < ath12)\r\n                            xr[j] = 0;\r\n                        else {\r\n                            stop = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    this.init_outer_loop = function (gfc, cod_info) {\r\n        /*\r\n         * initialize fresh cod_info\r\n         */\r\n        cod_info.part2_3_length = 0;\r\n        cod_info.big_values = 0;\r\n        cod_info.count1 = 0;\r\n        cod_info.global_gain = 210;\r\n        cod_info.scalefac_compress = 0;\r\n        /* mixed_block_flag, block_type was set in psymodel.c */\r\n        cod_info.table_select[0] = 0;\r\n        cod_info.table_select[1] = 0;\r\n        cod_info.table_select[2] = 0;\r\n        cod_info.subblock_gain[0] = 0;\r\n        cod_info.subblock_gain[1] = 0;\r\n        cod_info.subblock_gain[2] = 0;\r\n        cod_info.subblock_gain[3] = 0;\r\n        /* this one is always 0 */\r\n        cod_info.region0_count = 0;\r\n        cod_info.region1_count = 0;\r\n        cod_info.preflag = 0;\r\n        cod_info.scalefac_scale = 0;\r\n        cod_info.count1table_select = 0;\r\n        cod_info.part2_length = 0;\r\n        cod_info.sfb_lmax = Encoder.SBPSY_l;\r\n        cod_info.sfb_smin = Encoder.SBPSY_s;\r\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder.SBMAX_l : Encoder.SBPSY_l;\r\n        cod_info.psymax = cod_info.psy_lmax;\r\n        cod_info.sfbmax = cod_info.sfb_lmax;\r\n        cod_info.sfbdivide = 11;\r\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\r\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\r\n                - gfc.scalefac_band.l[sfb];\r\n            /* which is always 0. */\r\n            cod_info.window[sfb] = 3;\r\n        }\r\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n            var ixwork = new_float(576);\r\n\r\n            cod_info.sfb_smin = 0;\r\n            cod_info.sfb_lmax = 0;\r\n            if (cod_info.mixed_block_flag != 0) {\r\n                /*\r\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\r\n                 * sfbs 0-5 long block, 3-12 short blocks\r\n                 */\r\n                cod_info.sfb_smin = 3;\r\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\r\n            }\r\n            cod_info.psymax = cod_info.sfb_lmax\r\n                + 3\r\n                * ((gfc.sfb21_extra ? Encoder.SBMAX_s : Encoder.SBPSY_s) - cod_info.sfb_smin);\r\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\r\n                * (Encoder.SBPSY_s - cod_info.sfb_smin);\r\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\r\n            cod_info.psy_lmax = cod_info.sfb_lmax;\r\n            /* re-order the short blocks, for more efficient encoding below */\r\n            /* By Takehiro TOMINAGA */\r\n            /*\r\n             * Within each scalefactor band, data is given for successive time\r\n             * windows, beginning with window 0 and ending with window 2. Within\r\n             * each window, the quantized values are then arranged in order of\r\n             * increasing frequency...\r\n             */\r\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\r\n            System.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\r\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\r\n                var start = gfc.scalefac_band.s[sfb];\r\n                var end = gfc.scalefac_band.s[sfb + 1];\r\n                for (var window = 0; window < 3; window++) {\r\n                    for (var l = start; l < end; l++) {\r\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\r\n                    }\r\n                }\r\n            }\r\n\r\n            var j = cod_info.sfb_lmax;\r\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\r\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\r\n                    - gfc.scalefac_band.s[sfb];\r\n                cod_info.window[j] = 0;\r\n                cod_info.window[j + 1] = 1;\r\n                cod_info.window[j + 2] = 2;\r\n                j += 3;\r\n            }\r\n        }\r\n\r\n        cod_info.count1bits = 0;\r\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\r\n        cod_info.slen[0] = 0;\r\n        cod_info.slen[1] = 0;\r\n        cod_info.slen[2] = 0;\r\n        cod_info.slen[3] = 0;\r\n\r\n        cod_info.max_nonzero_coeff = 575;\r\n\r\n        /*\r\n         * fresh scalefactors are all zero\r\n         */\r\n        Arrays.fill(cod_info.scalefac, 0);\r\n\r\n        psfb21_analogsilence(gfc, cod_info);\r\n    };\r\n\r\n    function BinSearchDirection(ordinal) {\r\n        this.ordinal = ordinal;\r\n    }\r\n\r\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\r\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\r\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\r\n\r\n    /**\r\n     * author/date??\r\n     *\r\n     * binary step size search used by outer_loop to get a quantizer step size\r\n     * to start with\r\n     */\r\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\r\n        var nBits;\r\n        var CurrentStep = gfc.CurrentStep[ch];\r\n        var flagGoneOver = false;\r\n        var start = gfc.OldValue[ch];\r\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\r\n        cod_info.global_gain = start;\r\n        desired_rate -= cod_info.part2_length;\r\n\r\n        for (; ;) {\r\n            var step;\r\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\r\n\r\n            if (CurrentStep == 1 || nBits == desired_rate)\r\n                break;\r\n            /* nothing to adjust anymore */\r\n\r\n            if (nBits > desired_rate) {\r\n                /* increase Quantize_StepSize */\r\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\r\n                    flagGoneOver = true;\r\n\r\n                if (flagGoneOver)\r\n                    CurrentStep /= 2;\r\n                Direction = BinSearchDirection.BINSEARCH_UP;\r\n                step = CurrentStep;\r\n            } else {\r\n                /* decrease Quantize_StepSize */\r\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\r\n                    flagGoneOver = true;\r\n\r\n                if (flagGoneOver)\r\n                    CurrentStep /= 2;\r\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\r\n                step = -CurrentStep;\r\n            }\r\n            cod_info.global_gain += step;\r\n            if (cod_info.global_gain < 0) {\r\n                cod_info.global_gain = 0;\r\n                flagGoneOver = true;\r\n            }\r\n            if (cod_info.global_gain > 255) {\r\n                cod_info.global_gain = 255;\r\n                flagGoneOver = true;\r\n            }\r\n        }\r\n\r\n\r\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\r\n            cod_info.global_gain++;\r\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\r\n        }\r\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\r\n        gfc.OldValue[ch] = cod_info.global_gain;\r\n        cod_info.part2_3_length = nBits;\r\n        return nBits;\r\n    }\r\n\r\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\r\n        var distort = new_float(L3Side.SFBMAX);\r\n\r\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder.SHORT_TYPE)\r\n            || (gfc.substep_shaping & 0x80) != 0)\r\n            return;\r\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult(), null);\r\n        for (var j = 0; j < 576; j++) {\r\n            var xr = 0.0;\r\n            if (gi.l3_enc[j] != 0)\r\n                xr = Math.abs(gi.xr[j]);\r\n            work[j] = xr;\r\n        }\r\n\r\n        var j = 0;\r\n        var sfb = 8;\r\n        if (gi.block_type == Encoder.SHORT_TYPE)\r\n            sfb = 6;\r\n        do {\r\n            var allowedNoise, trancateThreshold;\r\n            var nsame, start;\r\n\r\n            var width = gi.width[sfb];\r\n            j += width;\r\n            if (distort[sfb] >= 1.0)\r\n                continue;\r\n\r\n            Arrays.sort(work, j - width, width);\r\n            if (BitStream.EQ(work[j - 1], 0.0))\r\n                continue;\r\n            /* all zero sfb */\r\n\r\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\r\n            trancateThreshold = 0.0;\r\n            start = 0;\r\n            do {\r\n                var noise;\r\n                for (nsame = 1; start + nsame < width; nsame++)\r\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\r\n                        + nsame - width]))\r\n                        break;\r\n\r\n                noise = work[start + j - width] * work[start + j - width]\r\n                    * nsame;\r\n                if (allowedNoise < noise) {\r\n                    if (start != 0)\r\n                        trancateThreshold = work[start + j - width - 1];\r\n                    break;\r\n                }\r\n                allowedNoise -= noise;\r\n                start += nsame;\r\n            } while (start < width);\r\n            if (BitStream.EQ(trancateThreshold, 0.0))\r\n                continue;\r\n\r\n            do {\r\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\r\n                    gi.l3_enc[j - width] = 0;\r\n            } while (--width > 0);\r\n        } while (++sfb < gi.psymax);\r\n\r\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\r\n    };\r\n\r\n    /**\r\n     * author/date??\r\n     *\r\n     * Function: Returns zero if there is a scalefac which has not been\r\n     * amplified. Otherwise it returns one.\r\n     */\r\n    function loop_break(cod_info) {\r\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\r\n            if (cod_info.scalefac[sfb]\r\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\r\n                return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\r\n\r\n    function penalties(noise) {\r\n        return Util.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\r\n    }\r\n\r\n    /**\r\n     * author/date??\r\n     *\r\n     * several different codes to decide which quantization is better\r\n     */\r\n    function get_klemm_noise(distort, gi) {\r\n        var klemm_noise = 1E-37;\r\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\r\n            klemm_noise += penalties(distort[sfb]);\r\n\r\n        return Math.max(1e-20, klemm_noise);\r\n    }\r\n\r\n    function quant_compare(quant_comp, best, calc, gi, distort) {\r\n        /**\r\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\r\n         *\r\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\r\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\r\n         * max_noise: max quantization noise\r\n         */\r\n        var better;\r\n\r\n        switch (quant_comp) {\r\n            default:\r\n            case 9:\r\n            {\r\n                if (best.over_count > 0) {\r\n                    /* there are distorted sfb */\r\n                    better = calc.over_SSD <= best.over_SSD;\r\n                    if (calc.over_SSD == best.over_SSD)\r\n                        better = calc.bits < best.bits;\r\n                } else {\r\n                    /* no distorted sfb */\r\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\r\n                }\r\n                break;\r\n            }\r\n\r\n            case 0:\r\n                better = calc.over_count < best.over_count\r\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\r\n                    || (calc.over_count == best.over_count\r\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\r\n                break;\r\n\r\n            case 8:\r\n                calc.max_noise = get_klemm_noise(distort, gi);\r\n            //$FALL-THROUGH$\r\n            case 1:\r\n                better = calc.max_noise < best.max_noise;\r\n                break;\r\n            case 2:\r\n                better = calc.tot_noise < best.tot_noise;\r\n                break;\r\n            case 3:\r\n                better = (calc.tot_noise < best.tot_noise)\r\n                    && (calc.max_noise < best.max_noise);\r\n                break;\r\n            case 4:\r\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\r\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\r\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\r\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\r\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\r\n                    + best.over_noise)\r\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\r\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\r\n                    + calc.over_noise < best.tot_noise\r\n                    + best.over_noise)\r\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\r\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\r\n                    + calc.over_noise + calc.over_noise < best.tot_noise\r\n                    + best.over_noise + best.over_noise);\r\n                break;\r\n            case 5:\r\n                better = calc.over_noise < best.over_noise\r\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\r\n                break;\r\n            case 6:\r\n                better = calc.over_noise < best.over_noise\r\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\r\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\r\n                break;\r\n            case 7:\r\n                better = calc.over_count < best.over_count\r\n                    || calc.over_noise < best.over_noise;\r\n                break;\r\n        }\r\n\r\n        if (best.over_count == 0) {\r\n            /*\r\n             * If no distorted bands, only use this quantization if it is\r\n             * better, and if it uses less bits. Unfortunately, part2_3_length\r\n             * is sometimes a poor estimator of the final size at low bitrates.\r\n             */\r\n            better = better && calc.bits < best.bits;\r\n        }\r\n\r\n        return better;\r\n    }\r\n\r\n    /**\r\n     * author/date??\r\n     *\r\n     * <PRE>\r\n     *  Amplify the scalefactor bands that violate the masking threshold.\r\n     *  See ISO 11172-3 Section C.1.5.4.3.5\r\n     *\r\n     *  distort[] = noise/masking\r\n     *  distort[] > 1   ==> noise is not masked\r\n     *  distort[] < 1   ==> noise is masked\r\n     *  max_dist = maximum value of distort[]\r\n     *\r\n     *  Three algorithms:\r\n     *  noise_shaping_amp\r\n     *        0             Amplify all bands with distort[]>1.\r\n     *\r\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\r\n     *                     ( 50% in the db scale)\r\n     *\r\n     *        2             Amplify first band with distort[] >= max_dist;\r\n     *\r\n     *\r\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\r\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\r\n     *  amplify at least one band.\r\n     * </PRE>\r\n     */\r\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\r\n        var gfc = gfp.internal_flags;\r\n        var ifqstep34;\r\n\r\n        if (cod_info.scalefac_scale == 0) {\r\n            ifqstep34 = 1.29683955465100964055;\r\n            /* 2**(.75*.5) */\r\n        } else {\r\n            ifqstep34 = 1.68179283050742922612;\r\n            /* 2**(.75*1) */\r\n        }\r\n\r\n        /* compute maximum value of distort[] */\r\n        var trigger = 0;\r\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\r\n            if (trigger < distort[sfb])\r\n                trigger = distort[sfb];\r\n        }\r\n\r\n        var noise_shaping_amp = gfc.noise_shaping_amp;\r\n        if (noise_shaping_amp == 3) {\r\n            if (bRefine)\r\n                noise_shaping_amp = 2;\r\n            else\r\n                noise_shaping_amp = 1;\r\n        }\r\n        switch (noise_shaping_amp) {\r\n            case 2:\r\n                /* amplify exactly 1 band */\r\n                break;\r\n\r\n            case 1:\r\n                /* amplify bands within 50% of max (on db scale) */\r\n                if (trigger > 1.0)\r\n                    trigger = Math.pow(trigger, .5);\r\n                else\r\n                    trigger *= .95;\r\n                break;\r\n\r\n            case 0:\r\n            default:\r\n                /* ISO algorithm. amplify all bands with distort>1 */\r\n                if (trigger > 1.0)\r\n                    trigger = 1.0;\r\n                else\r\n                    trigger *= .95;\r\n                break;\r\n        }\r\n\r\n        var j = 0;\r\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\r\n            var width = cod_info.width[sfb];\r\n            var l;\r\n            j += width;\r\n            if (distort[sfb] < trigger)\r\n                continue;\r\n\r\n            if ((gfc.substep_shaping & 2) != 0) {\r\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\r\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\r\n                    return;\r\n            }\r\n            cod_info.scalefac[sfb]++;\r\n            for (l = -width; l < 0; l++) {\r\n                xrpow[j + l] *= ifqstep34;\r\n                if (xrpow[j + l] > cod_info.xrpow_max)\r\n                    cod_info.xrpow_max = xrpow[j + l];\r\n            }\r\n\r\n            if (gfc.noise_shaping_amp == 2)\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Takehiro Tominaga 2000-xx-xx\r\n     *\r\n     * turns on scalefac scale and adjusts scalefactors\r\n     */\r\n    function inc_scalefac_scale(cod_info, xrpow) {\r\n        var ifqstep34 = 1.29683955465100964055;\r\n\r\n        var j = 0;\r\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\r\n            var width = cod_info.width[sfb];\r\n            var s = cod_info.scalefac[sfb];\r\n            if (cod_info.preflag != 0)\r\n                s += qupvt.pretab[sfb];\r\n            j += width;\r\n            if ((s & 1) != 0) {\r\n                s++;\r\n                for (var l = -width; l < 0; l++) {\r\n                    xrpow[j + l] *= ifqstep34;\r\n                    if (xrpow[j + l] > cod_info.xrpow_max)\r\n                        cod_info.xrpow_max = xrpow[j + l];\r\n                }\r\n            }\r\n            cod_info.scalefac[sfb] = s >> 1;\r\n        }\r\n        cod_info.preflag = 0;\r\n        cod_info.scalefac_scale = 1;\r\n    }\r\n\r\n    /**\r\n     * Takehiro Tominaga 2000-xx-xx\r\n     *\r\n     * increases the subblock gain and adjusts scalefactors\r\n     */\r\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\r\n        var sfb;\r\n        var scalefac = cod_info.scalefac;\r\n\r\n        /* subbloc_gain can't do anything in the long block region */\r\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\r\n            if (scalefac[sfb] >= 16)\r\n                return true;\r\n        }\r\n\r\n        for (var window = 0; window < 3; window++) {\r\n            var s1 = 0;\r\n            var s2 = 0;\r\n\r\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\r\n                if (s1 < scalefac[sfb])\r\n                    s1 = scalefac[sfb];\r\n            }\r\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\r\n                if (s2 < scalefac[sfb])\r\n                    s2 = scalefac[sfb];\r\n            }\r\n\r\n            if (s1 < 16 && s2 < 8)\r\n                continue;\r\n\r\n            if (cod_info.subblock_gain[window] >= 7)\r\n                return true;\r\n\r\n            /*\r\n             * even though there is no scalefactor for sfb12 subblock gain\r\n             * affects upper frequencies too, that's why we have to go up to\r\n             * SBMAX_s\r\n             */\r\n            cod_info.subblock_gain[window]++;\r\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\r\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\r\n                var amp;\r\n                var width = cod_info.width[sfb];\r\n                var s = scalefac[sfb];\r\n                s = s - (4 >> cod_info.scalefac_scale);\r\n                if (s >= 0) {\r\n                    scalefac[sfb] = s;\r\n                    j += width * 3;\r\n                    continue;\r\n                }\r\n\r\n                scalefac[sfb] = 0;\r\n                {\r\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\r\n                    amp = qupvt.IPOW20(gain);\r\n                }\r\n                j += width * (window + 1);\r\n                for (var l = -width; l < 0; l++) {\r\n                    xrpow[j + l] *= amp;\r\n                    if (xrpow[j + l] > cod_info.xrpow_max)\r\n                        cod_info.xrpow_max = xrpow[j + l];\r\n                }\r\n                j += width * (3 - window - 1);\r\n            }\r\n\r\n            {\r\n                var amp = qupvt.IPOW20(202);\r\n                j += cod_info.width[sfb] * (window + 1);\r\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\r\n                    xrpow[j + l] *= amp;\r\n                    if (xrpow[j + l] > cod_info.xrpow_max)\r\n                        cod_info.xrpow_max = xrpow[j + l];\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *  Takehiro Tominaga /date??\r\n     *  Robert Hegemann 2000-09-06: made a function of it\r\n     *\r\n     *  amplifies scalefactor bands,\r\n     *   - if all are already amplified returns 0\r\n     *   - if some bands are amplified too much:\r\n     *      * try to increase scalefac_scale\r\n     *      * if already scalefac_scale was set\r\n     *          try on short blocks to increase subblock gain\r\n     * </PRE>\r\n     */\r\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\r\n\r\n        /*\r\n         * check to make sure we have not amplified too much loop_break returns\r\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\r\n         * scalefactors are too large\r\n         */\r\n\r\n        var status = loop_break(cod_info);\r\n\r\n        if (status)\r\n            return false;\r\n        /* all bands amplified */\r\n\r\n        /*\r\n         * not all scalefactors have been amplified. so these scalefacs are\r\n         * possibly valid. encode them:\r\n         */\r\n        if (gfc.mode_gr == 2)\r\n            status = tk.scale_bitcount(cod_info);\r\n        else\r\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\r\n\r\n        if (!status)\r\n            return true;\r\n        /* amplified some bands not exceeding limits */\r\n\r\n        /*\r\n         * some scalefactors are too large. lets try setting scalefac_scale=1\r\n         */\r\n        if (gfc.noise_shaping > 1) {\r\n            Arrays.fill(gfc.pseudohalf, 0);\r\n            if (0 == cod_info.scalefac_scale) {\r\n                inc_scalefac_scale(cod_info, xrpow);\r\n                status = false;\r\n            } else {\r\n                if (cod_info.block_type == Encoder.SHORT_TYPE\r\n                    && gfc.subblock_gain > 0) {\r\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!status) {\r\n            if (gfc.mode_gr == 2)\r\n                status = tk.scale_bitcount(cod_info);\r\n            else\r\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\r\n        }\r\n        return !status;\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *  Function: The outer iteration loop controls the masking conditions\r\n     *  of all scalefactorbands. It computes the best scalefac and\r\n     *  global gain. This module calls the inner iteration loop\r\n     *\r\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\r\n     *  mid/side channels with L/R or mid/side masking thresholds,\r\n     *  and chooses best quantization instead of last quantization when\r\n     *  no distortion free quantization can be found.\r\n     *\r\n     *  added VBR support mt 5/99\r\n\r\n     *\r\n     *  some code shuffle rh 9/00\r\n     * </PRE>\r\n     *\r\n     * @param l3_xmin\r\n     *            allowed distortion\r\n     * @param xrpow\r\n     *            coloured magnitudes of spectral\r\n     * @param targ_bits\r\n     *            maximum allowed bits\r\n     */\r\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\r\n        var gfc = gfp.internal_flags;\r\n        var cod_info_w = new GrInfo();\r\n        var save_xrpow = new_float(576);\r\n        var distort = new_float(L3Side.SFBMAX);\r\n        var best_noise_info = new CalcNoiseResult();\r\n        var better;\r\n        var prev_noise = new CalcNoiseData();\r\n        var best_part2_3_length = 9999999;\r\n        var bEndOfSearch = false;\r\n        var bRefine = false;\r\n        var best_ggain_pass1 = 0;\r\n\r\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\r\n\r\n        if (0 == gfc.noise_shaping)\r\n        /* fast mode, no noise shaping, we are ready */\r\n            return 100;\r\n        /* default noise_info.over_count */\r\n\r\n        /* compute the distortion in this quantization */\r\n        /* coefficients and thresholds both l/r (or both mid/side) */\r\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\r\n            prev_noise);\r\n        best_noise_info.bits = cod_info.part2_3_length;\r\n\r\n        cod_info_w.assign(cod_info);\r\n        var age = 0;\r\n        System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\r\n\r\n        while (!bEndOfSearch) {\r\n            /* BEGIN MAIN LOOP */\r\n            do {\r\n                var noise_info = new CalcNoiseResult();\r\n                var search_limit;\r\n                var maxggain = 255;\r\n\r\n                /*\r\n                 * When quantization with no distorted bands is found, allow up\r\n                 * to X new unsuccesful tries in serial. This gives us more\r\n                 * possibilities for different quant_compare modes. Much more\r\n                 * than 3 makes not a big difference, it is only slower.\r\n                 */\r\n\r\n                if ((gfc.substep_shaping & 2) != 0) {\r\n                    search_limit = 20;\r\n                } else {\r\n                    search_limit = 3;\r\n                }\r\n\r\n                /*\r\n                 * Check if the last scalefactor band is distorted. in VBR mode\r\n                 * we can't get rid of the distortion, so quit now and VBR mode\r\n                 * will try again with more bits. (makes a 10% speed increase,\r\n                 * the files I tested were binary identical, 2000/05/20 Robert\r\n                 * Hegemann) distort[] > 1 means noise > allowed noise\r\n                 */\r\n                if (gfc.sfb21_extra) {\r\n                    if (distort[cod_info_w.sfbmax] > 1.0)\r\n                        break;\r\n                    if (cod_info_w.block_type == Encoder.SHORT_TYPE\r\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\r\n                        break;\r\n                }\r\n\r\n                /* try a new scalefactor conbination on cod_info_w */\r\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\r\n                    break;\r\n                if (cod_info_w.scalefac_scale != 0)\r\n                    maxggain = 254;\r\n\r\n                /*\r\n                 * inner_loop starts with the initial quantization step computed\r\n                 * above and slowly increases until the bits < huff_bits. Thus\r\n                 * it is important not to start with too large of an inital\r\n                 * quantization step. Too small is ok, but inner_loop will take\r\n                 * longer\r\n                 */\r\n                var huff_bits = targ_bits - cod_info_w.part2_length;\r\n                if (huff_bits <= 0)\r\n                    break;\r\n\r\n                /*\r\n                 * increase quantizer stepsize until needed bits are below\r\n                 * maximum\r\n                 */\r\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\r\n                    cod_info_w, prev_noise)) > huff_bits\r\n                && cod_info_w.global_gain <= maxggain)\r\n                    cod_info_w.global_gain++;\r\n\r\n                if (cod_info_w.global_gain > maxggain)\r\n                    break;\r\n\r\n                if (best_noise_info.over_count == 0) {\r\n\r\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\r\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\r\n                    && cod_info_w.global_gain <= maxggain)\r\n                        cod_info_w.global_gain++;\r\n\r\n                    if (cod_info_w.global_gain > maxggain)\r\n                        break;\r\n                }\r\n\r\n                /* compute the distortion in this quantization */\r\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\r\n                    prev_noise);\r\n                noise_info.bits = cod_info_w.part2_3_length;\r\n\r\n                /*\r\n                 * check if this quantization is better than our saved\r\n                 * quantization\r\n                 */\r\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n                    // NORM, START or STOP type\r\n                    better = gfp.quant_comp;\r\n                } else\r\n                    better = gfp.quant_comp_short;\r\n\r\n                better = quant_compare(better, best_noise_info, noise_info,\r\n                    cod_info_w, distort) ? 1 : 0;\r\n\r\n                /* save data so we can restore this quantization later */\r\n                if (better != 0) {\r\n                    best_part2_3_length = cod_info.part2_3_length;\r\n                    best_noise_info = noise_info;\r\n                    cod_info.assign(cod_info_w);\r\n                    age = 0;\r\n                    /* save data so we can restore this quantization later */\r\n                    /* store for later reuse */\r\n                    System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\r\n                } else {\r\n                    /* early stop? */\r\n                    if (gfc.full_outer_loop == 0) {\r\n                        if (++age > search_limit\r\n                            && best_noise_info.over_count == 0)\r\n                            break;\r\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\r\n                            break;\r\n                        if ((gfc.noise_shaping_amp == 3)\r\n                            && bRefine\r\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\r\n                            break;\r\n                    }\r\n                }\r\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\r\n\r\n            if (gfc.noise_shaping_amp == 3) {\r\n                if (!bRefine) {\r\n                    /* refine search */\r\n                    cod_info_w.assign(cod_info);\r\n                    System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\r\n                    age = 0;\r\n                    best_ggain_pass1 = cod_info_w.global_gain;\r\n\r\n                    bRefine = true;\r\n                } else {\r\n                    /* search already refined, stop */\r\n                    bEndOfSearch = true;\r\n                }\r\n\r\n            } else {\r\n                bEndOfSearch = true;\r\n            }\r\n        }\r\n\r\n        /*\r\n         * finish up\r\n         */\r\n        if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\r\n        /* restore for reuse on next try */\r\n            System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\r\n        /*\r\n         * do the 'substep shaping'\r\n         */\r\n        else if ((gfc.substep_shaping & 1) != 0)\r\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\r\n\r\n        return best_noise_info.over_count;\r\n    }\r\n\r\n    /**\r\n     * Robert Hegemann 2000-09-06\r\n     *\r\n     * update reservoir status after FINAL quantization/bitrate\r\n     */\r\n    this.iteration_finish_one = function (gfc, gr, ch) {\r\n        var l3_side = gfc.l3_side;\r\n        var cod_info = l3_side.tt[gr][ch];\r\n\r\n        /*\r\n         * try some better scalefac storage\r\n         */\r\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\r\n\r\n        /*\r\n         * best huffman_divide may save some bits too\r\n         */\r\n        if (gfc.use_best_huffman == 1)\r\n            tk.best_huffman_divide(gfc, cod_info);\r\n\r\n        /*\r\n         * update reservoir status after FINAL quantization/bitrate\r\n         */\r\n        rv.ResvAdjust(gfc, cod_info);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * 2000-09-04 Robert Hegemann\r\n     *\r\n     * @param l3_xmin\r\n     *            allowed distortion of the scalefactor\r\n     * @param xrpow\r\n     *            coloured magnitudes of spectral values\r\n     */\r\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\r\n        var gfc = gfp.internal_flags;\r\n        var bst_cod_info = new GrInfo();\r\n        var bst_xrpow = new_float(576);\r\n        var Max_bits = max_bits;\r\n        var real_bits = max_bits + 1;\r\n        var this_bits = (max_bits + min_bits) / 2;\r\n        var dbits, over, found = 0;\r\n        var sfb21_extra = gfc.sfb21_extra;\r\n\r\n        Arrays.fill(bst_cod_info.l3_enc, 0);\r\n\r\n        /*\r\n         * search within round about 40 bits of optimal\r\n         */\r\n        do {\r\n\r\n            if (this_bits > Max_bits - 42)\r\n                gfc.sfb21_extra = false;\r\n            else\r\n                gfc.sfb21_extra = sfb21_extra;\r\n\r\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\r\n\r\n            /*\r\n             * is quantization as good as we are looking for ? in this case: is\r\n             * no scalefactor band distorted?\r\n             */\r\n            if (over <= 0) {\r\n                found = 1;\r\n                /*\r\n                 * now we know it can be done with \"real_bits\" and maybe we can\r\n                 * skip some iterations\r\n                 */\r\n                real_bits = cod_info.part2_3_length;\r\n\r\n                /*\r\n                 * store best quantization so far\r\n                 */\r\n                bst_cod_info.assign(cod_info);\r\n                System.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\r\n\r\n                /*\r\n                 * try with fewer bits\r\n                 */\r\n                max_bits = real_bits - 32;\r\n                dbits = max_bits - min_bits;\r\n                this_bits = (max_bits + min_bits) / 2;\r\n            } else {\r\n                /*\r\n                 * try with more bits\r\n                 */\r\n                min_bits = this_bits + 32;\r\n                dbits = max_bits - min_bits;\r\n                this_bits = (max_bits + min_bits) / 2;\r\n\r\n                if (found != 0) {\r\n                    found = 2;\r\n                    /*\r\n                     * start again with best quantization so far\r\n                     */\r\n                    cod_info.assign(bst_cod_info);\r\n                    System.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\r\n                }\r\n            }\r\n        } while (dbits > 12);\r\n\r\n        gfc.sfb21_extra = sfb21_extra;\r\n\r\n        /*\r\n         * found=0 => nothing found, use last one found=1 => we just found the\r\n         * best and left the loop found=2 => we restored a good one and have now\r\n         * l3_enc to restore too\r\n         */\r\n        if (found == 2) {\r\n            System.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Robert Hegemann 2000-09-05\r\n     *\r\n     * calculates * how many bits are available for analog silent granules * how\r\n     * many bits to use for the lowest allowed bitrate * how many bits each\r\n     * bitrate would provide\r\n     */\r\n    this.get_framebits = function (gfp, frameBits) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /*\r\n         * always use at least this many bits per granule per channel unless we\r\n         * detect analog silence, see below\r\n         */\r\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\r\n        var bitsPerFrame = bs.getframebits(gfp);\r\n\r\n        /*\r\n         * bits for analog silence\r\n         */\r\n        gfc.bitrate_index = 1;\r\n        bitsPerFrame = bs.getframebits(gfp);\r\n\r\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\r\n            gfc.bitrate_index = i;\r\n            var mb = new MeanBits(bitsPerFrame);\r\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\r\n            bitsPerFrame = mb.bits;\r\n        }\r\n    };\r\n\r\n    /* RH: this one needs to be overhauled sometime */\r\n\r\n    /**\r\n     * <PRE>\r\n     *  2000-09-04 Robert Hegemann\r\n     *\r\n     *  * converts LR to MS coding when necessary\r\n     *  * calculates allowed/adjusted quantization noise amounts\r\n     *  * detects analog silent frames\r\n     *\r\n     *  some remarks:\r\n     *  - lower masking depending on Quality setting\r\n     *  - quality control together with adjusted ATH MDCT scaling\r\n     *    on lower quality setting allocate more noise from\r\n     *    ATH masking, and on higher quality setting allocate\r\n     *    less noise from ATH masking.\r\n     *  - experiments show that going more than 2dB over GPSYCHO's\r\n     *    limits ends up in very annoying artefacts\r\n     * </PRE>\r\n     */\r\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\r\n                                     max_bits, bands) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        var masking_lower_db, adjust = 0.0;\r\n        var analog_silence = 1;\r\n        var bits = 0;\r\n\r\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\r\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\r\n\r\n        get_framebits(gfp, frameBits);\r\n\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\r\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\r\n                ms_convert(gfc.l3_side, gr);\r\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\r\n            }\r\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\r\n                var cod_info = gfc.l3_side.tt[gr][ch];\r\n\r\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n                    // NORM, START or STOP type\r\n                    adjust = 1.28 / (1 + Math\r\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\r\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\r\n                } else {\r\n                    adjust = 2.56 / (1 + Math\r\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\r\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\r\n                }\r\n                gfc.masking_lower = Math.pow(10.0,\r\n                    masking_lower_db * 0.1);\r\n\r\n                init_outer_loop(gfc, cod_info);\r\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\r\n                    l3_xmin[gr][ch]);\r\n                if (bands[gr][ch] != 0)\r\n                    analog_silence = 0;\r\n\r\n                min_bits[gr][ch] = 126;\r\n\r\n                bits += max_bits[gr][ch];\r\n            }\r\n        }\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\r\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\r\n                    max_bits[gr][ch] /= bits;\r\n                }\r\n                if (min_bits[gr][ch] > max_bits[gr][ch])\r\n                    min_bits[gr][ch] = max_bits[gr][ch];\r\n\r\n            }\r\n            /* for ch */\r\n        }\r\n        /* for gr */\r\n\r\n        return analog_silence;\r\n    };\r\n\r\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                var gi = gfc.l3_side.tt[gr][ch];\r\n                var pxmin = l3_xmin[gr][ch];\r\n                var pxminPos = 0;\r\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\r\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\r\n                        / Encoder.SBMAX_l / Encoder.SBMAX_l;\r\n\r\n                if (gi.block_type == Encoder.SHORT_TYPE) {\r\n                    for (var sfb = gi.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\r\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\r\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\r\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\r\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\r\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\r\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\r\n                    }\r\n                }\r\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\r\n                        0.9 * max_bits[gr][ch]);\r\n            }\r\n        }\r\n    };\r\n\r\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        var analog_silence = 1;\r\n        var avg = 0, bits = 0;\r\n        var maximum_framebits;\r\n\r\n        if (!gfp.free_format) {\r\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\r\n\r\n            var mb = new MeanBits(avg);\r\n            rv.ResvFrameBegin(gfp, mb);\r\n            avg = mb.bits;\r\n\r\n            get_framebits(gfp, frameBits);\r\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\r\n        } else {\r\n            gfc.bitrate_index = 0;\r\n            var mb = new MeanBits(avg);\r\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\r\n            avg = mb.bits;\r\n            frameBits[0] = maximum_framebits;\r\n        }\r\n\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\r\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\r\n                ms_convert(gfc.l3_side, gr);\r\n            }\r\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\r\n                var cod_info = gfc.l3_side.tt[gr][ch];\r\n\r\n                gfc.masking_lower = Math.pow(10.0,\r\n                    gfc.PSY.mask_adjust * 0.1);\r\n\r\n                init_outer_loop(gfc, cod_info);\r\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\r\n                        l3_xmin[gr][ch]))\r\n                    analog_silence = 0;\r\n\r\n                bits += max_bits[gr][ch];\r\n            }\r\n        }\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                if (bits > maximum_framebits) {\r\n                    max_bits[gr][ch] *= maximum_framebits;\r\n                    max_bits[gr][ch] /= bits;\r\n                }\r\n\r\n            }\r\n            /* for ch */\r\n        }\r\n        /* for gr */\r\n\r\n        return analog_silence;\r\n    };\r\n\r\n    /**\r\n     * calculates target bits for ABR encoding\r\n     *\r\n     * mt 2000/05/31\r\n     */\r\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side = gfc.l3_side;\r\n        var res_factor;\r\n        var gr, ch, totbits, mean_bits = 0;\r\n\r\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\r\n        var mb = new MeanBits(mean_bits);\r\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\r\n        mean_bits = mb.bits;\r\n\r\n        gfc.bitrate_index = 1;\r\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\r\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\r\n\r\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\r\n        if ((gfc.substep_shaping & 1) != 0)\r\n            mean_bits *= 1.09;\r\n        mean_bits /= gfp.out_samplerate;\r\n        mean_bits -= gfc.sideinfo_len * 8;\r\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\r\n\r\n        /**\r\n         * <PRE>\r\n         *           res_factor is the percentage of the target bitrate that should\r\n         *           be used on average.  the remaining bits are added to the\r\n         *           bitreservoir and used for difficult to encode frames.\r\n         *\r\n         *           Since we are tracking the average bitrate, we should adjust\r\n         *           res_factor \"on the fly\", increasing it if the average bitrate\r\n         *           is greater than the requested bitrate, and decreasing it\r\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\r\n         *\r\n         *           Until we get the above suggestion working, we use the following\r\n         *           tuning:\r\n         *           compression ratio    res_factor\r\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\r\n         *           11   (128kbps)         .93      7% held for reservoir\r\n         *\r\n         *           with linear interpolation for other values.\r\n         * </PRE>\r\n         */\r\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\r\n            / (11.0 - 5.5);\r\n        if (res_factor < .90)\r\n            res_factor = .90;\r\n        if (res_factor > 1.00)\r\n            res_factor = 1.00;\r\n\r\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n            var sum = 0;\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\r\n\r\n                if (pe[gr][ch] > 700) {\r\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\r\n\r\n                    var cod_info = l3_side.tt[gr][ch];\r\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\r\n\r\n                    /* short blocks use a little extra, no matter what the pe */\r\n                    if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n                        if (add_bits < mean_bits / 2)\r\n                            add_bits = mean_bits / 2;\r\n                    }\r\n                    /* at most increase bits by 1.5*average */\r\n                    if (add_bits > mean_bits * 3 / 2)\r\n                        add_bits = mean_bits * 3 / 2;\r\n                    else if (add_bits < 0)\r\n                        add_bits = 0;\r\n\r\n                    targ_bits[gr][ch] += add_bits;\r\n                }\r\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\r\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\r\n                }\r\n                sum += targ_bits[gr][ch];\r\n            }\r\n            /* for ch */\r\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\r\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\r\n                    targ_bits[gr][ch] /= sum;\r\n                }\r\n            }\r\n        }\r\n        /* for gr */\r\n\r\n        if (gfc.mode_ext == Encoder.MPG_MD_MS_LR)\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\r\n                    * gfc.channels_out,\r\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\r\n            }\r\n\r\n        /*\r\n         * sum target bits\r\n         */\r\n        totbits = 0;\r\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\r\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\r\n                totbits += targ_bits[gr][ch];\r\n            }\r\n        }\r\n\r\n        /*\r\n         * repartion target bits if needed\r\n         */\r\n        if (totbits > max_frame_bits[0]) {\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    targ_bits[gr][ch] *= max_frame_bits[0];\r\n                    targ_bits[gr][ch] /= totbits;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/*\r\n *      MP3 window subband -> subband filtering -> mdct routine\r\n *\r\n *      Copyright (c) 1999-2000 Takehiro Tominaga\r\n *\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Library General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n/*\r\n *         Special Thanks to Patrick De Smet for your advices.\r\n */\r\n\r\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n//package mp3;\r\n\r\n//import java.util.Arrays;\r\n\r\n\r\n\r\nfunction NewMDCT() {\r\n\r\n\tvar enwindow = [\r\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\r\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\r\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\r\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\r\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\r\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\r\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\r\n\r\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\r\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\r\n\r\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\r\n\t\t\t1.414213562373095e+00,\r\n\r\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\r\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\r\n\r\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\r\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\r\n\r\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\r\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\r\n\r\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\r\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\r\n\r\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\r\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\r\n\r\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\r\n\r\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\r\n\r\n\t\t\t3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\r\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\r\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\r\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\r\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\r\n\t];\r\n\r\n\tvar NS = 12;\r\n\tvar NL = 36;\r\n\r\n\tvar win = [\r\n\t    [\r\n\t     2.382191739347913e-13,\r\n\t     6.423305872147834e-13,\r\n\t     9.400849094049688e-13,\r\n\t     1.122435026096556e-12,\r\n\t     1.183840321267481e-12,\r\n\t     1.122435026096556e-12,\r\n\t     9.400849094049690e-13,\r\n\t     6.423305872147839e-13,\r\n\t     2.382191739347918e-13,\r\n\r\n\t     5.456116108943412e-12,\r\n\t     4.878985199565852e-12,\r\n\t     4.240448995017367e-12,\r\n\t     3.559909094758252e-12,\r\n\t     2.858043359288075e-12,\r\n\t     2.156177623817898e-12,\r\n\t     1.475637723558783e-12,\r\n\t     8.371015190102974e-13,\r\n\t     2.599706096327376e-13,\r\n\r\n\t     -5.456116108943412e-12,\r\n\t     -4.878985199565852e-12,\r\n\t     -4.240448995017367e-12,\r\n\t     -3.559909094758252e-12,\r\n\t     -2.858043359288076e-12,\r\n\t     -2.156177623817898e-12,\r\n\t     -1.475637723558783e-12,\r\n\t     -8.371015190102975e-13,\r\n\t     -2.599706096327376e-13,\r\n\r\n\t     -2.382191739347923e-13,\r\n\t     -6.423305872147843e-13,\r\n\t     -9.400849094049696e-13,\r\n\t     -1.122435026096556e-12,\r\n\t     -1.183840321267481e-12,\r\n\t     -1.122435026096556e-12,\r\n\t     -9.400849094049694e-13,\r\n\t     -6.423305872147840e-13,\r\n\t     -2.382191739347918e-13,\r\n\t     ],\r\n\t    [\r\n\t     2.382191739347913e-13,\r\n\t     6.423305872147834e-13,\r\n\t     9.400849094049688e-13,\r\n\t     1.122435026096556e-12,\r\n\t     1.183840321267481e-12,\r\n\t     1.122435026096556e-12,\r\n\t     9.400849094049688e-13,\r\n\t     6.423305872147841e-13,\r\n\t     2.382191739347918e-13,\r\n\r\n\t     5.456116108943413e-12,\r\n\t     4.878985199565852e-12,\r\n\t     4.240448995017367e-12,\r\n\t     3.559909094758253e-12,\r\n\t     2.858043359288075e-12,\r\n\t     2.156177623817898e-12,\r\n\t     1.475637723558782e-12,\r\n\t     8.371015190102975e-13,\r\n\t     2.599706096327376e-13,\r\n\r\n\t     -5.461314069809755e-12,\r\n\t     -4.921085770524055e-12,\r\n\t     -4.343405037091838e-12,\r\n\t     -3.732668368707687e-12,\r\n\t     -3.093523840190885e-12,\r\n\t     -2.430835727329465e-12,\r\n\t     -1.734679010007751e-12,\r\n\t     -9.748253656609281e-13,\r\n\t     -2.797435120168326e-13,\r\n\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     -2.283748241799531e-13,\r\n\t     -4.037858874020686e-13,\r\n\t     -2.146547464825323e-13,\r\n\t     ],\r\n\t    [\r\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\r\n\t     4.142135623730950e-01,\r\n\t     7.673269879789602e-01,\r\n\r\n\t     1.091308501069271e+00, /* tantab_l */\r\n\t     1.303225372841206e+00,\r\n\t     1.569685577117490e+00,\r\n\t     1.920982126971166e+00,\r\n\t     2.414213562373094e+00,\r\n\t     3.171594802363212e+00,\r\n\t     4.510708503662055e+00,\r\n\t     7.595754112725146e+00,\r\n\t     2.290376554843115e+01,\r\n\r\n\t     0.98480775301220802032, /* cx */\r\n\t     0.64278760968653936292,\r\n\t     0.34202014332566882393,\r\n\t     0.93969262078590842791,\r\n\t     -0.17364817766693030343,\r\n\t     -0.76604444311897790243,\r\n\t     0.86602540378443870761,\r\n\t     0.500000000000000e+00,\r\n\r\n\t     -5.144957554275265e-01, /* ca */\r\n\t     -4.717319685649723e-01,\r\n\t     -3.133774542039019e-01,\r\n\t     -1.819131996109812e-01,\r\n\t     -9.457419252642064e-02,\r\n\t     -4.096558288530405e-02,\r\n\t     -1.419856857247115e-02,\r\n\t     -3.699974673760037e-03,\r\n\r\n\t     8.574929257125442e-01, /* cs */\r\n\t     8.817419973177052e-01,\r\n\t     9.496286491027329e-01,\r\n\t     9.833145924917901e-01,\r\n\t     9.955178160675857e-01,\r\n\t     9.991605581781475e-01,\r\n\t     9.998991952444470e-01,\r\n\t     9.999931550702802e-01,\r\n\t     ],\r\n\t    [\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     2.283748241799531e-13,\r\n\t     4.037858874020686e-13,\r\n\t     2.146547464825323e-13,\r\n\r\n\t     5.461314069809755e-12,\r\n\t     4.921085770524055e-12,\r\n\t     4.343405037091838e-12,\r\n\t     3.732668368707687e-12,\r\n\t     3.093523840190885e-12,\r\n\t     2.430835727329466e-12,\r\n\t     1.734679010007751e-12,\r\n\t     9.748253656609281e-13,\r\n\t     2.797435120168326e-13,\r\n\r\n\t     -5.456116108943413e-12,\r\n\t     -4.878985199565852e-12,\r\n\t     -4.240448995017367e-12,\r\n\t     -3.559909094758253e-12,\r\n\t     -2.858043359288075e-12,\r\n\t     -2.156177623817898e-12,\r\n\t     -1.475637723558782e-12,\r\n\t     -8.371015190102975e-13,\r\n\t     -2.599706096327376e-13,\r\n\r\n\t     -2.382191739347913e-13,\r\n\t     -6.423305872147834e-13,\r\n\t     -9.400849094049688e-13,\r\n\t     -1.122435026096556e-12,\r\n\t     -1.183840321267481e-12,\r\n\t     -1.122435026096556e-12,\r\n\t     -9.400849094049688e-13,\r\n\t     -6.423305872147841e-13,\r\n\t     -2.382191739347918e-13,\r\n\t     ]\r\n\t];\r\n\r\n\tvar tantab_l = win[Encoder.SHORT_TYPE];\r\n\tvar cx = win[Encoder.SHORT_TYPE];\r\n\tvar ca = win[Encoder.SHORT_TYPE];\r\n\tvar cs = win[Encoder.SHORT_TYPE];\r\n\r\n\t/**\r\n\t * new IDCT routine written by Takehiro TOMINAGA\r\n\t *\r\n\t * PURPOSE: Overlapping window on PCM samples<BR>\r\n\t *\r\n\t * SEMANTICS:<BR>\r\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\r\n\t * concatenated to the end of the window buffer #x#. The updated window\r\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\r\n\t * windowed sample #z#\r\n\t */\r\n\tvar order = [\r\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\r\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\r\n\t];\r\n\r\n\t/**\r\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\r\n\t */\r\n\tfunction window_subband(x1, x1Pos, a) {\r\n\t\tvar wp = 10;\r\n\r\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\r\n\r\n\t\tfor (var i = -15; i < 0; i++) {\r\n\t\t\tvar w, s, t;\r\n\r\n\t\t\tw = enwindow[wp + -10];\r\n\t\t\ts = x1[x2 + -224] * w;\r\n\t\t\tt = x1[x1Pos + 224] * w;\r\n\t\t\tw = enwindow[wp + -9];\r\n\t\t\ts += x1[x2 + -160] * w;\r\n\t\t\tt += x1[x1Pos + 160] * w;\r\n\t\t\tw = enwindow[wp + -8];\r\n\t\t\ts += x1[x2 + -96] * w;\r\n\t\t\tt += x1[x1Pos + 96] * w;\r\n\t\t\tw = enwindow[wp + -7];\r\n\t\t\ts += x1[x2 + -32] * w;\r\n\t\t\tt += x1[x1Pos + 32] * w;\r\n\t\t\tw = enwindow[wp + -6];\r\n\t\t\ts += x1[x2 + 32] * w;\r\n\t\t\tt += x1[x1Pos + -32] * w;\r\n\t\t\tw = enwindow[wp + -5];\r\n\t\t\ts += x1[x2 + 96] * w;\r\n\t\t\tt += x1[x1Pos + -96] * w;\r\n\t\t\tw = enwindow[wp + -4];\r\n\t\t\ts += x1[x2 + 160] * w;\r\n\t\t\tt += x1[x1Pos + -160] * w;\r\n\t\t\tw = enwindow[wp + -3];\r\n\t\t\ts += x1[x2 + 224] * w;\r\n\t\t\tt += x1[x1Pos + -224] * w;\r\n\r\n\t\t\tw = enwindow[wp + -2];\r\n\t\t\ts += x1[x1Pos + -256] * w;\r\n\t\t\tt -= x1[x2 + 256] * w;\r\n\t\t\tw = enwindow[wp + -1];\r\n\t\t\ts += x1[x1Pos + -192] * w;\r\n\t\t\tt -= x1[x2 + 192] * w;\r\n\t\t\tw = enwindow[wp + 0];\r\n\t\t\ts += x1[x1Pos + -128] * w;\r\n\t\t\tt -= x1[x2 + 128] * w;\r\n\t\t\tw = enwindow[wp + 1];\r\n\t\t\ts += x1[x1Pos + -64] * w;\r\n\t\t\tt -= x1[x2 + 64] * w;\r\n\t\t\tw = enwindow[wp + 2];\r\n\t\t\ts += x1[x1Pos + 0] * w;\r\n\t\t\tt -= x1[x2 + 0] * w;\r\n\t\t\tw = enwindow[wp + 3];\r\n\t\t\ts += x1[x1Pos + 64] * w;\r\n\t\t\tt -= x1[x2 + -64] * w;\r\n\t\t\tw = enwindow[wp + 4];\r\n\t\t\ts += x1[x1Pos + 128] * w;\r\n\t\t\tt -= x1[x2 + -128] * w;\r\n\t\t\tw = enwindow[wp + 5];\r\n\t\t\ts += x1[x1Pos + 192] * w;\r\n\t\t\tt -= x1[x2 + -192] * w;\r\n\r\n\t\t\t/*\r\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\r\n\t\t\t * data. thinking about the data cache performance, I think we\r\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\r\n\t\t\t */\r\n\t\t\ts *= enwindow[wp + 6];\r\n\t\t\tw = t - s;\r\n\t\t\ta[30 + i * 2] = t + s;\r\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\r\n\t\t\twp += 18;\r\n\t\t\tx1Pos--;\r\n\t\t\tx2++;\r\n\t\t}\r\n\t\t{\r\n\t\t\tvar s, t, u, v;\r\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\r\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\r\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\r\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\r\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\r\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\r\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\r\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\r\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\r\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\r\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\r\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\r\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\r\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\r\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\r\n\t\t\ts -= x1[x1Pos + 224];\r\n\r\n\t\t\tu = s - t;\r\n\t\t\tv = s + t;\r\n\r\n\t\t\tt = a[14];\r\n\t\t\ts = a[15] - t;\r\n\r\n\t\t\ta[31] = v + t; /* A0 */\r\n\t\t\ta[30] = u + s; /* A1 */\r\n\t\t\ta[15] = u - s; /* A2 */\r\n\t\t\ta[14] = v - t; /* A3 */\r\n\t\t}\r\n\t\t{\r\n\t\t\tvar xr;\r\n\t\t\txr = a[28] - a[0];\r\n\t\t\ta[0] += a[28];\r\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\r\n\t\t\txr = a[29] - a[1];\r\n\t\t\ta[1] += a[29];\r\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\r\n\r\n\t\t\txr = a[26] - a[2];\r\n\t\t\ta[2] += a[26];\r\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\r\n\t\t\txr = a[27] - a[3];\r\n\t\t\ta[3] += a[27];\r\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\r\n\r\n\t\t\txr = a[24] - a[4];\r\n\t\t\ta[4] += a[24];\r\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\r\n\t\t\txr = a[25] - a[5];\r\n\t\t\ta[5] += a[25];\r\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\r\n\r\n\t\t\txr = a[22] - a[6];\r\n\t\t\ta[6] += a[22];\r\n\t\t\ta[22] = xr * Util.SQRT2;\r\n\t\t\txr = a[23] - a[7];\r\n\t\t\ta[7] += a[23];\r\n\t\t\ta[23] = xr * Util.SQRT2 - a[7];\r\n\t\t\ta[7] -= a[6];\r\n\t\t\ta[22] -= a[7];\r\n\t\t\ta[23] -= a[22];\r\n\r\n\t\t\txr = a[6];\r\n\t\t\ta[6] = a[31] - xr;\r\n\t\t\ta[31] = a[31] + xr;\r\n\t\t\txr = a[7];\r\n\t\t\ta[7] = a[30] - xr;\r\n\t\t\ta[30] = a[30] + xr;\r\n\t\t\txr = a[22];\r\n\t\t\ta[22] = a[15] - xr;\r\n\t\t\ta[15] = a[15] + xr;\r\n\t\t\txr = a[23];\r\n\t\t\ta[23] = a[14] - xr;\r\n\t\t\ta[14] = a[14] + xr;\r\n\r\n\t\t\txr = a[20] - a[8];\r\n\t\t\ta[8] += a[20];\r\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\r\n\t\t\txr = a[21] - a[9];\r\n\t\t\ta[9] += a[21];\r\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\r\n\r\n\t\t\txr = a[18] - a[10];\r\n\t\t\ta[10] += a[18];\r\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\r\n\t\t\txr = a[19] - a[11];\r\n\t\t\ta[11] += a[19];\r\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\r\n\r\n\t\t\txr = a[16] - a[12];\r\n\t\t\ta[12] += a[16];\r\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\r\n\t\t\txr = a[17] - a[13];\r\n\t\t\ta[13] += a[17];\r\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\r\n\r\n\t\t\txr = -a[20] + a[24];\r\n\t\t\ta[20] += a[24];\r\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\r\n\t\t\txr = -a[21] + a[25];\r\n\t\t\ta[21] += a[25];\r\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\r\n\r\n\t\t\txr = a[4] - a[8];\r\n\t\t\ta[4] += a[8];\r\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\r\n\t\t\txr = a[5] - a[9];\r\n\t\t\ta[5] += a[9];\r\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\r\n\r\n\t\t\txr = a[0] - a[12];\r\n\t\t\ta[0] += a[12];\r\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\r\n\t\t\txr = a[1] - a[13];\r\n\t\t\ta[1] += a[13];\r\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\r\n\t\t\txr = a[16] - a[28];\r\n\t\t\ta[16] += a[28];\r\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\r\n\t\t\txr = -a[17] + a[29];\r\n\t\t\ta[17] += a[29];\r\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\r\n\r\n\t\t\txr = Util.SQRT2 * (a[2] - a[10]);\r\n\t\t\ta[2] += a[10];\r\n\t\t\ta[10] = xr;\r\n\t\t\txr = Util.SQRT2 * (a[3] - a[11]);\r\n\t\t\ta[3] += a[11];\r\n\t\t\ta[11] = xr;\r\n\t\t\txr = Util.SQRT2 * (-a[18] + a[26]);\r\n\t\t\ta[18] += a[26];\r\n\t\t\ta[26] = xr - a[18];\r\n\t\t\txr = Util.SQRT2 * (-a[19] + a[27]);\r\n\t\t\ta[19] += a[27];\r\n\t\t\ta[27] = xr - a[19];\r\n\r\n\t\t\txr = a[2];\r\n\t\t\ta[19] -= a[3];\r\n\t\t\ta[3] -= xr;\r\n\t\t\ta[2] = a[31] - xr;\r\n\t\t\ta[31] += xr;\r\n\t\t\txr = a[3];\r\n\t\t\ta[11] -= a[19];\r\n\t\t\ta[18] -= xr;\r\n\t\t\ta[3] = a[30] - xr;\r\n\t\t\ta[30] += xr;\r\n\t\t\txr = a[18];\r\n\t\t\ta[27] -= a[11];\r\n\t\t\ta[19] -= xr;\r\n\t\t\ta[18] = a[15] - xr;\r\n\t\t\ta[15] += xr;\r\n\r\n\t\t\txr = a[19];\r\n\t\t\ta[10] -= xr;\r\n\t\t\ta[19] = a[14] - xr;\r\n\t\t\ta[14] += xr;\r\n\t\t\txr = a[10];\r\n\t\t\ta[11] -= xr;\r\n\t\t\ta[10] = a[23] - xr;\r\n\t\t\ta[23] += xr;\r\n\t\t\txr = a[11];\r\n\t\t\ta[26] -= xr;\r\n\t\t\ta[11] = a[22] - xr;\r\n\t\t\ta[22] += xr;\r\n\t\t\txr = a[26];\r\n\t\t\ta[27] -= xr;\r\n\t\t\ta[26] = a[7] - xr;\r\n\t\t\ta[7] += xr;\r\n\r\n\t\t\txr = a[27];\r\n\t\t\ta[27] = a[6] - xr;\r\n\t\t\ta[6] += xr;\r\n\r\n\t\t\txr = Util.SQRT2 * (a[0] - a[4]);\r\n\t\t\ta[0] += a[4];\r\n\t\t\ta[4] = xr;\r\n\t\t\txr = Util.SQRT2 * (a[1] - a[5]);\r\n\t\t\ta[1] += a[5];\r\n\t\t\ta[5] = xr;\r\n\t\t\txr = Util.SQRT2 * (a[16] - a[20]);\r\n\t\t\ta[16] += a[20];\r\n\t\t\ta[20] = xr;\r\n\t\t\txr = Util.SQRT2 * (a[17] - a[21]);\r\n\t\t\ta[17] += a[21];\r\n\t\t\ta[21] = xr;\r\n\r\n\t\t\txr = -Util.SQRT2 * (a[8] - a[12]);\r\n\t\t\ta[8] += a[12];\r\n\t\t\ta[12] = xr - a[8];\r\n\t\t\txr = -Util.SQRT2 * (a[9] - a[13]);\r\n\t\t\ta[9] += a[13];\r\n\t\t\ta[13] = xr - a[9];\r\n\t\t\txr = -Util.SQRT2 * (a[25] - a[29]);\r\n\t\t\ta[25] += a[29];\r\n\t\t\ta[29] = xr - a[25];\r\n\t\t\txr = -Util.SQRT2 * (a[24] + a[28]);\r\n\t\t\ta[24] -= a[28];\r\n\t\t\ta[28] = xr - a[24];\r\n\r\n\t\t\txr = a[24] - a[16];\r\n\t\t\ta[24] = xr;\r\n\t\t\txr = a[20] - xr;\r\n\t\t\ta[20] = xr;\r\n\t\t\txr = a[28] - xr;\r\n\t\t\ta[28] = xr;\r\n\r\n\t\t\txr = a[25] - a[17];\r\n\t\t\ta[25] = xr;\r\n\t\t\txr = a[21] - xr;\r\n\t\t\ta[21] = xr;\r\n\t\t\txr = a[29] - xr;\r\n\t\t\ta[29] = xr;\r\n\r\n\t\t\txr = a[17] - a[1];\r\n\t\t\ta[17] = xr;\r\n\t\t\txr = a[9] - xr;\r\n\t\t\ta[9] = xr;\r\n\t\t\txr = a[25] - xr;\r\n\t\t\ta[25] = xr;\r\n\t\t\txr = a[5] - xr;\r\n\t\t\ta[5] = xr;\r\n\t\t\txr = a[21] - xr;\r\n\t\t\ta[21] = xr;\r\n\t\t\txr = a[13] - xr;\r\n\t\t\ta[13] = xr;\r\n\t\t\txr = a[29] - xr;\r\n\t\t\ta[29] = xr;\r\n\r\n\t\t\txr = a[1] - a[0];\r\n\t\t\ta[1] = xr;\r\n\t\t\txr = a[16] - xr;\r\n\t\t\ta[16] = xr;\r\n\t\t\txr = a[17] - xr;\r\n\t\t\ta[17] = xr;\r\n\t\t\txr = a[8] - xr;\r\n\t\t\ta[8] = xr;\r\n\t\t\txr = a[9] - xr;\r\n\t\t\ta[9] = xr;\r\n\t\t\txr = a[24] - xr;\r\n\t\t\ta[24] = xr;\r\n\t\t\txr = a[25] - xr;\r\n\t\t\ta[25] = xr;\r\n\t\t\txr = a[4] - xr;\r\n\t\t\ta[4] = xr;\r\n\t\t\txr = a[5] - xr;\r\n\t\t\ta[5] = xr;\r\n\t\t\txr = a[20] - xr;\r\n\t\t\ta[20] = xr;\r\n\t\t\txr = a[21] - xr;\r\n\t\t\ta[21] = xr;\r\n\t\t\txr = a[12] - xr;\r\n\t\t\ta[12] = xr;\r\n\t\t\txr = a[13] - xr;\r\n\t\t\ta[13] = xr;\r\n\t\t\txr = a[28] - xr;\r\n\t\t\ta[28] = xr;\r\n\t\t\txr = a[29] - xr;\r\n\t\t\ta[29] = xr;\r\n\r\n\t\t\txr = a[0];\r\n\t\t\ta[0] += a[31];\r\n\t\t\ta[31] -= xr;\r\n\t\t\txr = a[1];\r\n\t\t\ta[1] += a[30];\r\n\t\t\ta[30] -= xr;\r\n\t\t\txr = a[16];\r\n\t\t\ta[16] += a[15];\r\n\t\t\ta[15] -= xr;\r\n\t\t\txr = a[17];\r\n\t\t\ta[17] += a[14];\r\n\t\t\ta[14] -= xr;\r\n\t\t\txr = a[8];\r\n\t\t\ta[8] += a[23];\r\n\t\t\ta[23] -= xr;\r\n\t\t\txr = a[9];\r\n\t\t\ta[9] += a[22];\r\n\t\t\ta[22] -= xr;\r\n\t\t\txr = a[24];\r\n\t\t\ta[24] += a[7];\r\n\t\t\ta[7] -= xr;\r\n\t\t\txr = a[25];\r\n\t\t\ta[25] += a[6];\r\n\t\t\ta[6] -= xr;\r\n\t\t\txr = a[4];\r\n\t\t\ta[4] += a[27];\r\n\t\t\ta[27] -= xr;\r\n\t\t\txr = a[5];\r\n\t\t\ta[5] += a[26];\r\n\t\t\ta[26] -= xr;\r\n\t\t\txr = a[20];\r\n\t\t\ta[20] += a[11];\r\n\t\t\ta[11] -= xr;\r\n\t\t\txr = a[21];\r\n\t\t\ta[21] += a[10];\r\n\t\t\ta[10] -= xr;\r\n\t\t\txr = a[12];\r\n\t\t\ta[12] += a[19];\r\n\t\t\ta[19] -= xr;\r\n\t\t\txr = a[13];\r\n\t\t\ta[13] += a[18];\r\n\t\t\ta[18] -= xr;\r\n\t\t\txr = a[28];\r\n\t\t\ta[28] += a[3];\r\n\t\t\ta[3] -= xr;\r\n\t\t\txr = a[29];\r\n\t\t\ta[29] += a[2];\r\n\t\t\ta[2] -= xr;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\r\n\t * there are 36 coefficents in the time domain and 18 in the frequency\r\n\t * domain.<BR>\r\n\t * In the case of short blocks (type 2) there are 3 transformations with\r\n\t * short length. This leads to 12 coefficents in the time and 6 in the\r\n\t * frequency domain. In this case the results are stored side by side in the\r\n\t * vector out[].\r\n\t *\r\n\t * New layer3\r\n\t */\r\n\tfunction mdct_short(inout, inoutPos) {\r\n\t\tfor (var l = 0; l < 3; l++) {\r\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\r\n\r\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0]\r\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\r\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2]\r\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\r\n\t\t\ttc1 = ts0 + tc0;\r\n\t\t\ttc2 = ts0 - tc0;\r\n\r\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0]\r\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\r\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2]\r\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\r\n\t\t\tts1 = ts0 + tc0;\r\n\t\t\tts2 = -ts0 + tc0;\r\n\r\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\r\n\t\t\t/*\r\n\t\t\t * tritab_s [ 1 ]\r\n\t\t\t */\r\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\r\n\t\t\t/*\r\n\t\t\t * tritab_s [ 1 ]\r\n\t\t\t */\r\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\r\n\t\t\t/*\r\n\t\t\t * tritab_s[ 2 ]\r\n\t\t\t */\r\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\r\n\t\t\t/*\r\n\t\t\t * tritab_s[0 ]\r\n\t\t\t */\r\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\r\n\t\t\t/*\r\n\t\t\t * tritab_s[ 2]\r\n\t\t\t */\r\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\r\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\r\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\r\n\r\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\r\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\r\n\t\t\t/*\r\n\t\t\t * tritab_s[ 0]\r\n\t\t\t */\r\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\r\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\r\n\r\n\t\t\tinoutPos++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction mdct_long(out, outPos, _in) {\r\n\t\tvar ct, st;\r\n\t\t{\r\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\r\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\r\n\t\t\ttc1 = _in[17] - _in[9];\r\n\t\t\ttc3 = _in[15] - _in[11];\r\n\t\t\ttc4 = _in[14] - _in[12];\r\n\t\t\tts5 = _in[0] + _in[8];\r\n\t\t\tts6 = _in[1] + _in[7];\r\n\t\t\tts7 = _in[2] + _in[6];\r\n\t\t\tts8 = _in[3] + _in[5];\r\n\r\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\r\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\r\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\r\n\t\t\tout[outPos + 5] = ct + st;\r\n\t\t\tout[outPos + 6] = ct - st;\r\n\r\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\r\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\r\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\r\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\r\n\t\t\tout[outPos + 1] = ct + st;\r\n\t\t\tout[outPos + 2] = ct - st;\r\n\r\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\r\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\r\n\t\t\tout[outPos + 9] = ct + st;\r\n\t\t\tout[outPos + 10] = ct - st;\r\n\r\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\r\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\r\n\t\t\tout[outPos + 13] = ct + st;\r\n\t\t\tout[outPos + 14] = ct - st;\r\n\t\t}\r\n\t\t{\r\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\r\n\r\n\t\t\tts1 = _in[8] - _in[0];\r\n\t\t\tts3 = _in[6] - _in[2];\r\n\t\t\tts4 = _in[5] - _in[3];\r\n\t\t\ttc5 = _in[17] + _in[9];\r\n\t\t\ttc6 = _in[16] + _in[10];\r\n\t\t\ttc7 = _in[15] + _in[11];\r\n\t\t\ttc8 = _in[14] + _in[12];\r\n\r\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\r\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\r\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\r\n\t\t\tout[outPos + 11] = ct + st;\r\n\t\t\tout[outPos + 12] = ct - st;\r\n\r\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\r\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\r\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\r\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\r\n\t\t\tout[outPos + 3] = ct + st;\r\n\t\t\tout[outPos + 4] = ct - st;\r\n\r\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\r\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\r\n\t\t\tout[outPos + 7] = ct + st;\r\n\t\t\tout[outPos + 8] = ct - st;\r\n\r\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\r\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\r\n\t\t\tout[outPos + 15] = ct + st;\r\n\t\t\tout[outPos + 16] = ct - st;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\r\n\t\tvar wk = w0;\r\n\t\tvar wkPos = 286;\r\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\r\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\r\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n\t\t\t\tvar band;\r\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\r\n\t\t\t\tvar mdct_enc = gi.xr;\r\n\t\t\t\tvar mdct_encPos = 0;\r\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\r\n\t\t\t\tvar sampPos = 0;\r\n\r\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\r\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\r\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\r\n\t\t\t\t\tsampPos += 2;\r\n\t\t\t\t\twkPos += 64;\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Compensate for inversion in the analysis filter\r\n\t\t\t\t\t */\r\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\r\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\r\n\t\t\t\t * subband samples\r\n\t\t\t\t */\r\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\r\n\t\t\t\t\tvar type = gi.block_type;\r\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\r\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\r\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\r\n\t\t\t\t\t\ttype = 0;\r\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\r\n\t\t\t\t\t\tArrays.fill(mdct_enc, mdct_encPos + 0,\r\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\r\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\r\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (type == Encoder.SHORT_TYPE) {\r\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\r\n\t\t\t\t\t\t\t\tvar w = win[Encoder.SHORT_TYPE][k + 3];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar work = new_float(18);\r\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\r\n\t\t\t\t\t\t\t\tvar a, b;\r\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\r\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\r\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\r\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\r\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\r\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\r\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\r\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Perform aliasing reduction butterfly\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (type != Encoder.SHORT_TYPE && band != 0) {\r\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\r\n\t\t\t\t\t\t\tvar bu, bd;\r\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\r\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\r\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\r\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\r\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\r\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\r\n\r\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\r\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twk = w1;\r\n\t\t\twkPos = 286;\r\n\t\t\tif (gfc.mode_gr == 1) {\r\n\t\t\t\tfor (var i = 0; i < 18; i++) {\r\n\t\t\t\t\tSystem.arraycopy(gfc.sb_sample[ch][1][i], 0,\r\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//package mp3;\r\n\r\n\r\nfunction III_psy_ratio() {\r\n\tthis.thm = new III_psy_xmin();\r\n\tthis.en = new III_psy_xmin();\r\n}\r\n\r\n\r\n/**\r\n * ENCDELAY The encoder delay.\r\n *\r\n * Minimum allowed is MDCTDELAY (see below)\r\n *\r\n * The first 96 samples will be attenuated, so using a value less than 96\r\n * will result in corrupt data for the first 96-ENCDELAY samples.\r\n *\r\n * suggested: 576 set to 1160 to sync with FhG.\r\n */\r\nEncoder.ENCDELAY = 576;\r\n/**\r\n * make sure there is at least one complete frame after the last frame\r\n * containing real data\r\n *\r\n * Using a value of 288 would be sufficient for a a very sophisticated\r\n * decoder that can decode granule-by-granule instead of frame by frame. But\r\n * lets not assume this, and assume the decoder will not decode frame N\r\n * unless it also has data for frame N+1\r\n */\r\nEncoder.POSTDELAY = 1152;\r\n\r\n/**\r\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\r\n * 528! Takehiro's routines:\r\n */\r\nEncoder.MDCTDELAY = 48;\r\nEncoder.FFTOFFSET = (224 + Encoder.MDCTDELAY);\r\n\r\n/**\r\n * Most decoders, including the one we use, have a delay of 528 samples.\r\n */\r\nEncoder.DECDELAY = 528;\r\n\r\n/**\r\n * number of subbands\r\n */\r\nEncoder.SBLIMIT = 32;\r\n\r\n/**\r\n * parition bands bands\r\n */\r\nEncoder.CBANDS = 64;\r\n\r\n/**\r\n * number of critical bands/scale factor bands where masking is computed\r\n */\r\nEncoder.SBPSY_l = 21;\r\nEncoder.SBPSY_s = 12;\r\n\r\n/**\r\n * total number of scalefactor bands encoded\r\n */\r\nEncoder.SBMAX_l = 22;\r\nEncoder.SBMAX_s = 13;\r\nEncoder.PSFB21 = 6;\r\nEncoder.PSFB12 = 6;\r\n\r\n/**\r\n * FFT sizes\r\n */\r\nEncoder.BLKSIZE = 1024;\r\nEncoder.HBLKSIZE = (Encoder.BLKSIZE / 2 + 1);\r\nEncoder.BLKSIZE_s = 256;\r\nEncoder.HBLKSIZE_s = (Encoder.BLKSIZE_s / 2 + 1);\r\n\r\nEncoder.NORM_TYPE = 0;\r\nEncoder.START_TYPE = 1;\r\nEncoder.SHORT_TYPE = 2;\r\nEncoder.STOP_TYPE = 3;\r\n\r\n/**\r\n * <PRE>\r\n * Mode Extention:\r\n * When we are in stereo mode, there are 4 possible methods to store these\r\n * two channels. The stereo modes -m? are using a subset of them.\r\n *\r\n *  -ms: MPG_MD_LR_LR\r\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\r\n *  -mf: MPG_MD_MS_LR\r\n *  -mi: all\r\n * </PRE>\r\n */\r\nEncoder.MPG_MD_LR_LR = 0;\r\nEncoder.MPG_MD_LR_I = 1;\r\nEncoder.MPG_MD_MS_LR = 2;\r\nEncoder.MPG_MD_MS_I = 3;\r\n\r\nEncoder.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\r\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\r\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\r\n\r\nfunction Encoder() {\r\n\r\n    var FFTOFFSET = Encoder.FFTOFFSET;\r\n    var MPG_MD_MS_LR = Encoder.MPG_MD_MS_LR;\r\n    //BitStream bs;\r\n    //PsyModel psy;\r\n    //VBRTag vbr;\r\n    //QuantizePVT qupvt;\r\n    var bs = null;\r\n    this.psy = null;\r\n    var psy = null;\r\n    var vbr = null;\r\n    var qupvt = null;\r\n\r\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\r\n    //    VBRTag vbr) {\r\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\r\n        bs = _bs;\r\n        this.psy = _psy;\r\n        psy = _psy;\r\n        vbr = _vbr;\r\n        qupvt = _qupvt;\r\n    };\r\n\r\n    var newMDCT = new NewMDCT();\r\n\r\n    /***********************************************************************\r\n     *\r\n     * encoder and decoder delays\r\n     *\r\n     ***********************************************************************/\r\n\r\n    /**\r\n     * <PRE>\r\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\r\n     * layer  II enc->dec delay:   480  (481?)   (observed)\r\n     *\r\n     * polyphase 256-16             (dec or enc)        = 240\r\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\r\n     * total:    512+16\r\n     *\r\n     * My guess is that delay of polyphase filterbank is actualy 240.5\r\n     * (there are technical reasons for this, see postings in mp3encoder).\r\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\r\n     * </PRE>\r\n     */\r\n\r\n\r\n    /**\r\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\r\n     *\r\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\r\n     */\r\n//private void adjust_ATH(final LameInternalFlags gfc) {\r\n    function adjust_ATH(gfc) {\r\n        var gr2_max, max_pow;\r\n\r\n        if (gfc.ATH.useAdjust == 0) {\r\n            gfc.ATH.adjust = 1.0;\r\n            /* no adjustment */\r\n            return;\r\n        }\r\n\r\n        /* jd - 2001 mar 12, 27, jun 30 */\r\n        /* loudness based on equal loudness curve; */\r\n        /* use granule with maximum combined loudness */\r\n        max_pow = gfc.loudness_sq[0][0];\r\n        gr2_max = gfc.loudness_sq[1][0];\r\n        if (gfc.channels_out == 2) {\r\n            max_pow += gfc.loudness_sq[0][1];\r\n            gr2_max += gfc.loudness_sq[1][1];\r\n        } else {\r\n            max_pow += max_pow;\r\n            gr2_max += gr2_max;\r\n        }\r\n        if (gfc.mode_gr == 2) {\r\n            max_pow = Math.max(max_pow, gr2_max);\r\n        }\r\n        max_pow *= 0.5;\r\n        /* max_pow approaches 1.0 for full band noise */\r\n\r\n        /* jd - 2001 mar 31, jun 30 */\r\n        /* user tuning of ATH adjustment region */\r\n        max_pow *= gfc.ATH.aaSensitivityP;\r\n\r\n        /*\r\n         * adjust ATH depending on range of maximum value\r\n         */\r\n\r\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\r\n        /* continuous curves based on approximation */\r\n        /* to GB's original values. */\r\n        /* For an increase in approximate loudness, */\r\n        /* set ATH adjust to adjust_limit immediately */\r\n        /* after a delay of one frame. */\r\n        /* For a loudness decrease, reduce ATH adjust */\r\n        /* towards adjust_limit gradually. */\r\n        /* max_pow is a loudness squared or a power. */\r\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\r\n            if (gfc.ATH.adjust >= 1.0) {\r\n                gfc.ATH.adjust = 1.0;\r\n            } else {\r\n                /* preceding frame has lower ATH adjust; */\r\n                /* ascend only to the preceding adjust_limit */\r\n                /* in case there is leading low volume */\r\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\r\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\r\n                }\r\n            }\r\n            gfc.ATH.adjustLimit = 1.0;\r\n        } else { /* adjustment curve */\r\n            /* about 32 dB maximum adjust (0.000625) */\r\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\r\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\r\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\r\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\r\n                    gfc.ATH.adjust = adj_lim_new;\r\n                }\r\n            } else { /* ascend */\r\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\r\n                    gfc.ATH.adjust = adj_lim_new;\r\n                } else {\r\n                    /* preceding frame has lower ATH adjust; */\r\n                    /* ascend only to the preceding adjust_limit */\r\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\r\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\r\n                    }\r\n                }\r\n            }\r\n            gfc.ATH.adjustLimit = adj_lim_new;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *  some simple statistics\r\n     *\r\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\r\n     *  : bitrates, kbps depending on MPEG version\r\n     *  bitrate index 15: forbidden\r\n     *\r\n     *  mode_ext:\r\n     *  0:  LR\r\n     *  1:  LR-i\r\n     *  2:  MS\r\n     *  3:  MS-i\r\n     * </PRE>\r\n     */\r\n    function updateStats(gfc) {\r\n        var gr, ch;\r\n\r\n        /* count bitrate indices */\r\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\r\n        gfc.bitrate_stereoMode_Hist[15][4]++;\r\n\r\n        /* count 'em for every mode extension in case of 2 channel encoding */\r\n        if (gfc.channels_out == 2) {\r\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\r\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\r\n        }\r\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\r\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\r\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\r\n                    bt = 4;\r\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\r\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\r\n                gfc.bitrate_blockType_Hist[15][bt]++;\r\n                gfc.bitrate_blockType_Hist[15][5]++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function lame_encode_frame_init(gfp, inbuf) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        var ch, gr;\r\n\r\n        if (gfc.lame_encode_frame_init == 0) {\r\n            /* prime the MDCT/polyphase filterbank with a short block */\r\n            var i, j;\r\n            var primebuff0 = new_float(286 + 1152 + 576);\r\n            var primebuff1 = new_float(286 + 1152 + 576);\r\n            gfc.lame_encode_frame_init = 1;\r\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\r\n                if (i < 576 * gfc.mode_gr) {\r\n                    primebuff0[i] = 0;\r\n                    if (gfc.channels_out == 2)\r\n                        primebuff1[i] = 0;\r\n                } else {\r\n                    primebuff0[i] = inbuf[0][j];\r\n                    if (gfc.channels_out == 2)\r\n                        primebuff1[i] = inbuf[1][j];\r\n                    ++j;\r\n                }\r\n            }\r\n            /* polyphase filtering / mdct */\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.SHORT_TYPE;\r\n                }\r\n            }\r\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\r\n\r\n            /* check FFT will not use a negative starting offset */\r\n            /* check if we have enough data for FFT */\r\n            /* check if we have enough data for polyphase filterbank */\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     * encodeframe()           Layer 3\r\n     *\r\n     * encode a single frame\r\n     *\r\n     *\r\n     *    lame_encode_frame()\r\n     *\r\n     *\r\n     *                           gr 0            gr 1\r\n     *    inbuf:           |--------------|--------------|--------------|\r\n     *\r\n     *\r\n     *    Polyphase (18 windows, each shifted 32)\r\n     *    gr 0:\r\n     *    window1          <----512---.\r\n     *    window18                 <----512---.\r\n     *\r\n     *    gr 1:\r\n     *    window1                         <----512---.\r\n     *    window18                                <----512---.\r\n     *\r\n     *\r\n     *\r\n     *    MDCT output:  |--------------|--------------|--------------|\r\n     *\r\n     *    FFT's                    <---------1024---------.\r\n     *                                             <---------1024-------.\r\n     *\r\n     *\r\n     *\r\n     *        inbuf = buffer of PCM data size=MP3 framesize\r\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\r\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\r\n     *\r\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\r\n     *        next granule.\r\n     *        FFT is centered over granule:  224+576+224\r\n     *        So FFT starts at:   576-224-MDCTDELAY\r\n     *\r\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\r\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\r\n     *\r\n     *        MPEG2:  polyphase first window:  [0..511]\r\n     *                          18th window:   [544..1055]          (1056)\r\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\r\n     *                data needed:  512+framesize-32\r\n     *\r\n     *        A close look newmdct.c shows that the polyphase filterbank\r\n     *        only uses data from [0..510] for each window.  Perhaps because the window\r\n     *        used by the filterbank is zero for the last point, so Takehiro's\r\n     *        code doesn't bother to compute with it.\r\n     *\r\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\r\n     *\r\n     * </PRE>\r\n     */\r\n\r\n\r\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\r\n        var mp3count;\r\n        var masking_LR = new_array_n([2, 2]);\r\n        /*\r\n         * LR masking &\r\n         * energy\r\n         */\r\n        masking_LR[0][0] = new III_psy_ratio();\r\n        masking_LR[0][1] = new III_psy_ratio();\r\n        masking_LR[1][0] = new III_psy_ratio();\r\n        masking_LR[1][1] = new III_psy_ratio();\r\n        var masking_MS = new_array_n([2, 2]);\r\n        /* MS masking & energy */\r\n        masking_MS[0][0] = new III_psy_ratio();\r\n        masking_MS[0][1] = new III_psy_ratio();\r\n        masking_MS[1][0] = new III_psy_ratio();\r\n        masking_MS[1][1] = new III_psy_ratio();\r\n        //III_psy_ratio masking[][];\r\n        var masking;\r\n        /* pointer to selected maskings */\r\n        var inbuf = [null, null];\r\n        var gfc = gfp.internal_flags;\r\n\r\n        var tot_ener = new_float_n([2, 4]);\r\n        var ms_ener_ratio = [.5, .5];\r\n        var pe = [[0., 0.], [0., 0.]];\r\n        var pe_MS = [[0., 0.], [0., 0.]];\r\n\r\n//float[][] pe_use;\r\n        var pe_use;\r\n\r\n        var ch, gr;\r\n\r\n        inbuf[0] = inbuf_l;\r\n        inbuf[1] = inbuf_r;\r\n\r\n        if (gfc.lame_encode_frame_init == 0) {\r\n            /* first run? */\r\n            lame_encode_frame_init(gfp, inbuf);\r\n\r\n        }\r\n\r\n        /********************** padding *****************************/\r\n        /**\r\n         * <PRE>\r\n         * padding method as described in\r\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\r\n         * by Martin Sieler, Ralph Sperschneider\r\n         *\r\n         * note: there is no padding for the very first frame\r\n         *\r\n         * Robert Hegemann 2000-06-22\r\n         * </PRE>\r\n         */\r\n        gfc.padding = 0;\r\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\r\n            gfc.slot_lag += gfp.out_samplerate;\r\n            gfc.padding = 1;\r\n        }\r\n\r\n        /****************************************\r\n         * Stage 1: psychoacoustic model *\r\n         ****************************************/\r\n\r\n        if (gfc.psymodel != 0) {\r\n            /*\r\n             * psychoacoustic model psy model has a 1 granule (576) delay that\r\n             * we must compensate for (mt 6/99).\r\n             */\r\n            var ret;\r\n            var bufp = [null, null];\r\n            /* address of beginning of left & right granule */\r\n            var bufpPos = 0;\r\n            /* address of beginning of left & right granule */\r\n            var blocktype = new_int(2);\r\n\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    bufp[ch] = inbuf[ch];\r\n                    bufpPos = 576 + gr * 576 - Encoder.FFTOFFSET;\r\n                }\r\n                if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\r\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\r\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\r\n                        tot_ener[gr], blocktype);\r\n                } else {\r\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\r\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\r\n                        tot_ener[gr], blocktype);\r\n                }\r\n                if (ret != 0)\r\n                    return -4;\r\n\r\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\r\n                    if (ms_ener_ratio[gr] > 0)\r\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\r\n                }\r\n\r\n                /* block type flags */\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    var cod_info = gfc.l3_side.tt[gr][ch];\r\n                    cod_info.block_type = blocktype[ch];\r\n                    cod_info.mixed_block_flag = 0;\r\n                }\r\n            }\r\n        } else {\r\n            /* no psy model */\r\n            for (gr = 0; gr < gfc.mode_gr; gr++)\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.NORM_TYPE;\r\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\r\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\r\n                }\r\n        }\r\n\r\n        /* auto-adjust of ATH, useful for low volume */\r\n        adjust_ATH(gfc);\r\n\r\n        /****************************************\r\n         * Stage 2: MDCT *\r\n         ****************************************/\r\n\r\n        /* polyphase filtering / mdct */\r\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\r\n\r\n        /****************************************\r\n         * Stage 3: MS/LR decision *\r\n         ****************************************/\r\n\r\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\r\n        gfc.mode_ext = Encoder.MPG_MD_LR_LR;\r\n\r\n        if (gfp.force_ms) {\r\n            gfc.mode_ext = Encoder.MPG_MD_MS_LR;\r\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n            /*\r\n             * ms_ratio = is scaled, for historical reasons, to look like a\r\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\r\n             * uncorrelated\r\n             */\r\n\r\n            /**\r\n             * <PRE>\r\n             * [0] and [1] are the results for the two granules in MPEG-1,\r\n             * in MPEG-2 it's only a faked averaging of the same value\r\n             * _prev is the value of the last granule of the previous frame\r\n             * _next is the value of the first granule of the next frame\r\n             * </PRE>\r\n             */\r\n\r\n            var sum_pe_MS = 0.;\r\n            var sum_pe_LR = 0.;\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    sum_pe_MS += pe_MS[gr][ch];\r\n                    sum_pe_LR += pe[gr][ch];\r\n                }\r\n            }\r\n\r\n            /* based on PE: M/S coding would not use much more bits than L/R */\r\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\r\n\r\n                var gi0 = gfc.l3_side.tt[0];\r\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\r\n\r\n                if (gi0[0].block_type == gi0[1].block_type\r\n                    && gi1[0].block_type == gi1[1].block_type) {\r\n\r\n                    gfc.mode_ext = Encoder.MPG_MD_MS_LR;\r\n                }\r\n            }\r\n        }\r\n\r\n        /* bit and noise allocation */\r\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\r\n            masking = masking_MS;\r\n            /* use MS masking */\r\n            pe_use = pe_MS;\r\n        } else {\r\n            masking = masking_LR;\r\n            /* use LR masking */\r\n            pe_use = pe;\r\n        }\r\n\r\n        /* copy data for MP3 frame analyzer */\r\n        if (gfp.analysis && gfc.pinfo != null) {\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\r\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\r\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\r\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\r\n                    System.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\r\n                        gfc.pinfo.xr[gr][ch], 0, 576);\r\n                    /*\r\n                     * in psymodel, LR and MS data was stored in pinfo. switch\r\n                     * to MS data:\r\n                     */\r\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\r\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\r\n                        System.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\r\n                            gfc.pinfo.energy[gr][ch], 0,\r\n                            gfc.pinfo.energy[gr][ch].length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /****************************************\r\n         * Stage 4: quantization loop *\r\n         ****************************************/\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr) {\r\n\r\n            var i;\r\n            var f;\r\n\r\n            for (i = 0; i < 18; i++)\r\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\r\n\r\n            f = 0.0;\r\n            for (gr = 0; gr < gfc.mode_gr; gr++)\r\n                for (ch = 0; ch < gfc.channels_out; ch++)\r\n                    f += pe_use[gr][ch];\r\n            gfc.nsPsy.pefirbuf[18] = f;\r\n\r\n            f = gfc.nsPsy.pefirbuf[9];\r\n            for (i = 0; i < 9; i++)\r\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\r\n                    * Encoder.fircoef[i];\r\n\r\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    pe_use[gr][ch] *= f;\r\n                }\r\n            }\r\n        }\r\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\r\n\r\n        /****************************************\r\n         * Stage 5: bitstream formatting *\r\n         ****************************************/\r\n\r\n        /* write the frame to the bitstream */\r\n        bs.format_bitstream(gfp);\r\n\r\n        /* copy mp3 bit buffer into array */\r\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\r\n\r\n        if (gfp.bWriteVbrTag)\r\n            vbr.addVbrFrame(gfp);\r\n\r\n        if (gfp.analysis && gfc.pinfo != null) {\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                var j;\r\n                for (j = 0; j < FFTOFFSET; j++)\r\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\r\n                    + gfp.framesize];\r\n                for (j = FFTOFFSET; j < 1600; j++) {\r\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\r\n                }\r\n            }\r\n            qupvt.set_frame_pinfo(gfp, masking);\r\n        }\r\n\r\n        updateStats(gfc);\r\n\r\n        return mp3count;\r\n    }\r\n}\r\n\r\n\r\n//package mp3;\r\n\r\nfunction VBRSeekInfo() {\r\n    /**\r\n     * What we have seen so far.\r\n     */\r\n    this.sum = 0;\r\n    /**\r\n     * How many frames we have seen in this chunk.\r\n     */\r\n    this.seen = 0;\r\n    /**\r\n     * How many frames we want to collect into one chunk.\r\n     */\r\n    this.want = 0;\r\n    /**\r\n     * Actual position in our bag.\r\n     */\r\n    this.pos = 0;\r\n    /**\r\n     * Size of our bag.\r\n     */\r\n    this.size = 0;\r\n    /**\r\n     * Pointer to our bag.\r\n     */\r\n    this.bag = null;\r\n    this.nVbrNumFrames = 0;\r\n    this.nBytesWritten = 0;\r\n    /* VBR tag data */\r\n    this.TotalFrameSize = 0;\r\n}\r\n\r\n\r\n\r\nfunction IIISideInfo() {\r\n    this.tt = [[null, null], [null, null]];\r\n    this.main_data_begin = 0;\r\n    this.private_bits = 0;\r\n    this.resvDrain_pre = 0;\r\n    this.resvDrain_post = 0;\r\n    this.scfsi = [new_int(4), new_int(4)];\r\n\r\n    for (var gr = 0; gr < 2; gr++) {\r\n        for (var ch = 0; ch < 2; ch++) {\r\n            this.tt[gr][ch] = new GrInfo();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction III_psy_xmin() {\r\n    this.l = new_float(Encoder.SBMAX_l);\r\n    this.s = new_float_n([Encoder.SBMAX_s, 3]);\r\n\r\n    var self = this;\r\n    this.assign = function (iii_psy_xmin) {\r\n        System.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder.SBMAX_l);\r\n        for (var i = 0; i < Encoder.SBMAX_s; i++) {\r\n            for (var j = 0; j < 3; j++) {\r\n                self.s[i][j] = iii_psy_xmin.s[i][j];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n//package mp3;\r\n\r\n/**\r\n * Variables used for --nspsytune\r\n *\r\n * @author Ken\r\n *\r\n */\r\nfunction NsPsy() {\r\n    this.last_en_subshort = new_float_n([4, 9]);\r\n    this.lastAttacks = new_int(4);\r\n    this.pefirbuf = new_float(19);\r\n    this.longfact = new_float(Encoder.SBMAX_l);\r\n    this.shortfact = new_float(Encoder.SBMAX_s);\r\n\r\n    /**\r\n     * short block tuning\r\n     */\r\n    this.attackthre = 0.;\r\n    this.attackthre_s = 0.;\r\n}\r\n\r\n\r\n\r\n\r\nLameInternalFlags.MFSIZE = (3 * 1152 + Encoder.ENCDELAY - Encoder.MDCTDELAY);\r\nLameInternalFlags.MAX_HEADER_BUF = 256;\r\nLameInternalFlags.MAX_BITS_PER_CHANNEL = 4095;\r\nLameInternalFlags.MAX_BITS_PER_GRANULE = 7680;\r\nLameInternalFlags.BPC = 320;\r\n\r\nfunction LameInternalFlags() {\r\n    var MAX_HEADER_LEN = 40;\r\n\r\n\r\n    /********************************************************************\r\n     * internal variables NOT set by calling program, and should not be *\r\n     * modified by the calling program *\r\n     ********************************************************************/\r\n\r\n    /**\r\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\r\n     * pointer to this struct. It is very unlikely that a pointer to\r\n     * lame_global_flags has the same 32 bits in it's structure (large and other\r\n     * special properties, for instance prime).\r\n     *\r\n     * To test that the structure is right and initialized, use: if ( gfc .\r\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\r\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\r\n     * NOT \"if (flag)\". Unintended modification of this element will be\r\n     * otherwise misinterpreted as an init.\r\n     */\r\n    this.Class_ID = 0;\r\n\r\n    this.lame_encode_frame_init = 0;\r\n    this.iteration_init_init = 0;\r\n    this.fill_buffer_resample_init = 0;\r\n\r\n    //public float mfbuf[][] = new float[2][MFSIZE];\r\n    this.mfbuf = new_float_n([2, LameInternalFlags.MFSIZE]);\r\n\r\n    /**\r\n     * granules per frame\r\n     */\r\n    this.mode_gr = 0;\r\n    /**\r\n     * number of channels in the input data stream (PCM or decoded PCM)\r\n     */\r\n    this.channels_in = 0;\r\n    /**\r\n     * number of channels in the output data stream (not used for decoding)\r\n     */\r\n    this.channels_out = 0;\r\n    /**\r\n     * input_samp_rate/output_samp_rate\r\n     */\r\n        //public double resample_ratio;\r\n    this.resample_ratio = 0.;\r\n\r\n    this.mf_samples_to_encode = 0;\r\n    this.mf_size = 0;\r\n    /**\r\n     * min bitrate index\r\n     */\r\n    this.VBR_min_bitrate = 0;\r\n    /**\r\n     * max bitrate index\r\n     */\r\n    this.VBR_max_bitrate = 0;\r\n    this.bitrate_index = 0;\r\n    this.samplerate_index = 0;\r\n    this.mode_ext = 0;\r\n\r\n    /* lowpass and highpass filter control */\r\n    /**\r\n     * normalized frequency bounds of passband\r\n     */\r\n    this.lowpass1 = 0.;\r\n    this.lowpass2 = 0.;\r\n    /**\r\n     * normalized frequency bounds of passband\r\n     */\r\n    this.highpass1 = 0.;\r\n    this.highpass2 = 0.;\r\n\r\n    /**\r\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\r\n     */\r\n    this.noise_shaping = 0;\r\n\r\n    /**\r\n     * 0 = ISO model: amplify all distorted bands<BR>\r\n     * 1 = amplify within 50% of max (on db scale)<BR>\r\n     * 2 = amplify only most distorted band<BR>\r\n     * 3 = method 1 and refine with method 2<BR>\r\n     */\r\n    this.noise_shaping_amp = 0;\r\n    /**\r\n     * 0 = no substep<BR>\r\n     * 1 = use substep shaping at last step(VBR only)<BR>\r\n     * (not implemented yet)<BR>\r\n     * 2 = use substep inside loop<BR>\r\n     * 3 = use substep inside loop and last step<BR>\r\n     */\r\n    this.substep_shaping = 0;\r\n\r\n    /**\r\n     * 1 = gpsycho. 0 = none\r\n     */\r\n    this.psymodel = 0;\r\n    /**\r\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\r\n     * a scalefac has reached max value<BR>\r\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\r\n     * 2 = stop when all scalefacs amplified\r\n     */\r\n    this.noise_shaping_stop = 0;\r\n\r\n    /**\r\n     * 0 = no, 1 = yes\r\n     */\r\n    this.subblock_gain = 0;\r\n    /**\r\n     * 0 = no. 1=outside loop 2=inside loop(slow)\r\n     */\r\n    this.use_best_huffman = 0;\r\n\r\n    /**\r\n     * 0 = stop early after 0 distortion found. 1 = full search\r\n     */\r\n    this.full_outer_loop = 0;\r\n\r\n    //public IIISideInfo l3_side = new IIISideInfo();\r\n    this.l3_side = new IIISideInfo();\r\n    this.ms_ratio = new_float(2);\r\n\r\n    /* used for padding */\r\n    /**\r\n     * padding for the current frame?\r\n     */\r\n    this.padding = 0;\r\n    this.frac_SpF = 0;\r\n    this.slot_lag = 0;\r\n\r\n    /**\r\n     * optional ID3 tags\r\n     */\r\n        //public ID3TagSpec tag_spec;\r\n    this.tag_spec = null;\r\n    this.nMusicCRC = 0;\r\n\r\n    /* variables used by Quantize */\r\n    //public int OldValue[] = new int[2];\r\n    this.OldValue = new_int(2);\r\n    //public int CurrentStep[] = new int[2];\r\n    this.CurrentStep = new_int(2);\r\n\r\n    this.masking_lower = 0.;\r\n    //public int bv_scf[] = new int[576];\r\n    this.bv_scf = new_int(576);\r\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\r\n    this.pseudohalf = new_int(L3Side.SFBMAX);\r\n\r\n    /**\r\n     * will be set in lame_init_params\r\n     */\r\n    this.sfb21_extra = false;\r\n\r\n    /* BPC = maximum number of filter convolution windows to precompute */\r\n    //public float[][] inbuf_old = new float[2][];\r\n    this.inbuf_old = new Array(2);\r\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\r\n    this.blackfilt = new Array(2 * LameInternalFlags.BPC + 1);\r\n    //public double itime[] = new double[2];\r\n    this.itime = new_double(2);\r\n    this.sideinfo_len = 0;\r\n\r\n    /* variables for newmdct.c */\r\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\r\n    this.sb_sample = new_float_n([2, 2, 18, Encoder.SBLIMIT]);\r\n    this.amp_filter = new_float(32);\r\n\r\n    /* variables for BitStream */\r\n\r\n    /**\r\n     * <PRE>\r\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\r\n     * max number of frames in reservoir:  8\r\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\r\n     * with VBR, if you are encoding all silence, it is possible to\r\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\r\n     * to buffer up to 255 headers!\r\n     * </PRE>\r\n     */\r\n    /**\r\n     * also, max_header_buf has to be a power of two\r\n     */\r\n    /**\r\n     * max size of header is 38\r\n     */\r\n\r\n    function Header() {\r\n        this.write_timing = 0;\r\n        this.ptr = 0;\r\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\r\n        this.buf = new_byte(MAX_HEADER_LEN);\r\n    }\r\n\r\n    this.header = new Array(LameInternalFlags.MAX_HEADER_BUF);\r\n\r\n    this.h_ptr = 0;\r\n    this.w_ptr = 0;\r\n    this.ancillary_flag = 0;\r\n\r\n    /* variables for Reservoir */\r\n    /**\r\n     * in bits\r\n     */\r\n    this.ResvSize = 0;\r\n    /**\r\n     * in bits\r\n     */\r\n    this.ResvMax = 0;\r\n\r\n    //public ScaleFac scalefac_band = new ScaleFac();\r\n    this.scalefac_band = new ScaleFac();\r\n\r\n    /* daa from PsyModel */\r\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\r\n    /* to be remembered for the unpredictability measure. For \"r\" and */\r\n    /* \"phi_sav\", the first index from the left is the channel select and */\r\n    /* the second index is the \"age\" of the data. */\r\n    this.minval_l = new_float(Encoder.CBANDS);\r\n    this.minval_s = new_float(Encoder.CBANDS);\r\n    this.nb_1 = new_float_n([4, Encoder.CBANDS]);\r\n    this.nb_2 = new_float_n([4, Encoder.CBANDS]);\r\n    this.nb_s1 = new_float_n([4, Encoder.CBANDS]);\r\n    this.nb_s2 = new_float_n([4, Encoder.CBANDS]);\r\n    this.s3_ss = null;\r\n    this.s3_ll = null;\r\n    this.decay = 0.;\r\n\r\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\r\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\r\n    this.thm = new Array(4);\r\n    this.en = new Array(4);\r\n\r\n    /**\r\n     * fft and energy calculation\r\n     */\r\n    this.tot_ener = new_float(4);\r\n\r\n    /* loudness calculation (for adaptive threshold of hearing) */\r\n    /**\r\n     * loudness^2 approx. per granule and channel\r\n     */\r\n    this.loudness_sq = new_float_n([2, 2]);\r\n    /**\r\n     * account for granule delay of L3psycho_anal\r\n     */\r\n    this.loudness_sq_save = new_float(2);\r\n\r\n    /**\r\n     * Scale Factor Bands\r\n     */\r\n    this.mld_l = new_float(Encoder.SBMAX_l);\r\n    this.mld_s = new_float(Encoder.SBMAX_s);\r\n    this.bm_l = new_int(Encoder.SBMAX_l);\r\n    this.bo_l = new_int(Encoder.SBMAX_l);\r\n    this.bm_s = new_int(Encoder.SBMAX_s);\r\n    this.bo_s = new_int(Encoder.SBMAX_s);\r\n    this.npart_l = 0;\r\n    this.npart_s = 0;\r\n\r\n    this.s3ind = new_int_n([Encoder.CBANDS, 2]);\r\n    this.s3ind_s = new_int_n([Encoder.CBANDS, 2]);\r\n\r\n    this.numlines_s = new_int(Encoder.CBANDS);\r\n    this.numlines_l = new_int(Encoder.CBANDS);\r\n    this.rnumlines_l = new_float(Encoder.CBANDS);\r\n    this.mld_cb_l = new_float(Encoder.CBANDS);\r\n    this.mld_cb_s = new_float(Encoder.CBANDS);\r\n    this.numlines_s_num1 = 0;\r\n    this.numlines_l_num1 = 0;\r\n\r\n    /* ratios */\r\n    this.pe = new_float(4);\r\n    this.ms_ratio_s_old = 0.;\r\n    this.ms_ratio_l_old = 0.;\r\n    this.ms_ener_ratio_old = 0.;\r\n\r\n    /**\r\n     * block type\r\n     */\r\n    this.blocktype_old = new_int(2);\r\n\r\n    /**\r\n     * variables used for --nspsytune\r\n     */\r\n    this.nsPsy = new NsPsy();\r\n\r\n    /**\r\n     * used for Xing VBR header\r\n     */\r\n    this.VBR_seek_table = new VBRSeekInfo();\r\n\r\n    /**\r\n     * all ATH related stuff\r\n     */\r\n        //public ATH ATH;\r\n    this.ATH = null;\r\n\r\n    this.PSY = null;\r\n\r\n    this.nogap_total = 0;\r\n    this.nogap_current = 0;\r\n\r\n    /* ReplayGain */\r\n    this.decode_on_the_fly = true;\r\n    this.findReplayGain = true;\r\n    this.findPeakSample = true;\r\n    this.PeakSample = 0.;\r\n    this.RadioGain = 0;\r\n    this.AudiophileGain = 0;\r\n    //public ReplayGain rgdata;\r\n    this.rgdata = null;\r\n\r\n    /**\r\n     * gain change required for preventing clipping\r\n     */\r\n    this.noclipGainChange = 0;\r\n    /**\r\n     * user-specified scale factor required for preventing clipping\r\n     */\r\n    this.noclipScale = 0.;\r\n\r\n    /* simple statistics */\r\n    this.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\r\n    /**\r\n     * norm/start/short/stop/mixed(short)/sum\r\n     */\r\n    this.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\r\n\r\n    //public PlottingData pinfo;\r\n    //public MPGLib.mpstr_tag hip;\r\n    this.pinfo = null;\r\n    this.hip = null;\r\n\r\n    this.in_buffer_nsamples = 0;\r\n    //public float[] in_buffer_0;\r\n    //public float[] in_buffer_1;\r\n    this.in_buffer_0 = null;\r\n    this.in_buffer_1 = null;\r\n\r\n    //public IIterationLoop iteration_loop;\r\n    this.iteration_loop = null;\r\n\r\n    for (var i = 0; i < this.en.length; i++) {\r\n        this.en[i] = new III_psy_xmin();\r\n    }\r\n    for (var i = 0; i < this.thm.length; i++) {\r\n        this.thm[i] = new III_psy_xmin();\r\n    }\r\n    for (var i = 0; i < this.header.length; i++) {\r\n        this.header[i] = new Header();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction FFT() {\r\n\r\n    var window = new_float(Encoder.BLKSIZE);\r\n    var window_s = new_float(Encoder.BLKSIZE_s / 2);\r\n\r\n    var costab = [\r\n        9.238795325112867e-01, 3.826834323650898e-01,\r\n        9.951847266721969e-01, 9.801714032956060e-02,\r\n        9.996988186962042e-01, 2.454122852291229e-02,\r\n        9.999811752826011e-01, 6.135884649154475e-03\r\n    ];\r\n\r\n    function fht(fz, fzPos, n) {\r\n        var tri = 0;\r\n        var k4;\r\n        var fi;\r\n        var gi;\r\n\r\n        n <<= 1;\r\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\r\n        var fn = fzPos + n;\r\n        k4 = 4;\r\n        do {\r\n            var s1, c1;\r\n            var i, k1, k2, k3, kx;\r\n            kx = k4 >> 1;\r\n            k1 = k4;\r\n            k2 = k4 << 1;\r\n            k3 = k2 + k1;\r\n            k4 = k2 << 1;\r\n            fi = fzPos;\r\n            gi = fi + kx;\r\n            do {\r\n                var f0, f1, f2, f3;\r\n                f1 = fz[fi + 0] - fz[fi + k1];\r\n                f0 = fz[fi + 0] + fz[fi + k1];\r\n                f3 = fz[fi + k2] - fz[fi + k3];\r\n                f2 = fz[fi + k2] + fz[fi + k3];\r\n                fz[fi + k2] = f0 - f2;\r\n                fz[fi + 0] = f0 + f2;\r\n                fz[fi + k3] = f1 - f3;\r\n                fz[fi + k1] = f1 + f3;\r\n                f1 = fz[gi + 0] - fz[gi + k1];\r\n                f0 = fz[gi + 0] + fz[gi + k1];\r\n                f3 = (Util.SQRT2 * fz[gi + k3]);\r\n                f2 = (Util.SQRT2 * fz[gi + k2]);\r\n                fz[gi + k2] = f0 - f2;\r\n                fz[gi + 0] = f0 + f2;\r\n                fz[gi + k3] = f1 - f3;\r\n                fz[gi + k1] = f1 + f3;\r\n                gi += k4;\r\n                fi += k4;\r\n            } while (fi < fn);\r\n            c1 = costab[tri + 0];\r\n            s1 = costab[tri + 1];\r\n            for (i = 1; i < kx; i++) {\r\n                var c2, s2;\r\n                c2 = 1 - (2 * s1) * s1;\r\n                s2 = (2 * s1) * c1;\r\n                fi = fzPos + i;\r\n                gi = fzPos + k1 - i;\r\n                do {\r\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\r\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\r\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\r\n                    f1 = fz[fi + 0] - a;\r\n                    f0 = fz[fi + 0] + a;\r\n                    g1 = fz[gi + 0] - b;\r\n                    g0 = fz[gi + 0] + b;\r\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\r\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\r\n                    f3 = fz[fi + k2] - a;\r\n                    f2 = fz[fi + k2] + a;\r\n                    g3 = fz[gi + k2] - b;\r\n                    g2 = fz[gi + k2] + b;\r\n                    b = s1 * f2 - c1 * g3;\r\n                    a = c1 * f2 + s1 * g3;\r\n                    fz[fi + k2] = f0 - a;\r\n                    fz[fi + 0] = f0 + a;\r\n                    fz[gi + k3] = g1 - b;\r\n                    fz[gi + k1] = g1 + b;\r\n                    b = c1 * g2 - s1 * f3;\r\n                    a = s1 * g2 + c1 * f3;\r\n                    fz[gi + k2] = g0 - a;\r\n                    fz[gi + 0] = g0 + a;\r\n                    fz[fi + k3] = f1 - b;\r\n                    fz[fi + k1] = f1 + b;\r\n                    gi += k4;\r\n                    fi += k4;\r\n                } while (fi < fn);\r\n                c2 = c1;\r\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\r\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\r\n            }\r\n            tri += 2;\r\n        } while (k4 < n);\r\n    }\r\n\r\n    var rv_tbl = [0x00, 0x80, 0x40,\r\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\r\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\r\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\r\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\r\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\r\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\r\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\r\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\r\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\r\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\r\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\r\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\r\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\r\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\r\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\r\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\r\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\r\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\r\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\r\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\r\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\r\n\r\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\r\n        for (var b = 0; b < 3; b++) {\r\n            var x = Encoder.BLKSIZE_s / 2;\r\n            var k = 0xffff & ((576 / 3) * (b + 1));\r\n            var j = Encoder.BLKSIZE_s / 8 - 1;\r\n            do {\r\n                var f0, f1, f2, f3, w;\r\n                var i = rv_tbl[j << 2] & 0xff;\r\n\r\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\r\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\r\n                f1 = f0 - w;\r\n                f0 = f0 + w;\r\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\r\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\r\n                f3 = f2 - w;\r\n                f2 = f2 + w;\r\n\r\n                x -= 4;\r\n                x_real[b][x + 0] = f0 + f2;\r\n                x_real[b][x + 2] = f0 - f2;\r\n                x_real[b][x + 1] = f1 + f3;\r\n                x_real[b][x + 3] = f1 - f3;\r\n\r\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\r\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\r\n                f1 = f0 - w;\r\n                f0 = f0 + w;\r\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\r\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\r\n                f3 = f2 - w;\r\n                f2 = f2 + w;\r\n\r\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 0] = f0 + f2;\r\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 2] = f0 - f2;\r\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 1] = f1 + f3;\r\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 3] = f1 - f3;\r\n            } while (--j >= 0);\r\n\r\n            fht(x_real[b], x, Encoder.BLKSIZE_s / 2);\r\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\r\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\r\n        }\r\n    }\r\n\r\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\r\n        var jj = Encoder.BLKSIZE / 8 - 1;\r\n        var x = Encoder.BLKSIZE / 2;\r\n\r\n        do {\r\n            var f0, f1, f2, f3, w;\r\n            var i = rv_tbl[jj] & 0xff;\r\n            f0 = window[i] * buffer[chn][bufPos + i];\r\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\r\n            f1 = f0 - w;\r\n            f0 = f0 + w;\r\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\r\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\r\n            f3 = f2 - w;\r\n            f2 = f2 + w;\r\n\r\n            x -= 4;\r\n            y[x + 0] = f0 + f2;\r\n            y[x + 2] = f0 - f2;\r\n            y[x + 1] = f1 + f3;\r\n            y[x + 3] = f1 - f3;\r\n\r\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\r\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\r\n            f1 = f0 - w;\r\n            f0 = f0 + w;\r\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\r\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\r\n            f3 = f2 - w;\r\n            f2 = f2 + w;\r\n\r\n            y[x + Encoder.BLKSIZE / 2 + 0] = f0 + f2;\r\n            y[x + Encoder.BLKSIZE / 2 + 2] = f0 - f2;\r\n            y[x + Encoder.BLKSIZE / 2 + 1] = f1 + f3;\r\n            y[x + Encoder.BLKSIZE / 2 + 3] = f1 - f3;\r\n        } while (--jj >= 0);\r\n\r\n        fht(y, x, Encoder.BLKSIZE / 2);\r\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\r\n    }\r\n\r\n    this.init_fft = function (gfc) {\r\n        /* The type of window used here will make no real difference, but */\r\n        /*\r\n         * in the interest of merging nspsytune stuff - switch to blackman\r\n         * window\r\n         */\r\n        for (var i = 0; i < Encoder.BLKSIZE; i++)\r\n            /* blackman window */\r\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\r\n                / Encoder.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\r\n                / Encoder.BLKSIZE));\r\n\r\n        for (var i = 0; i < Encoder.BLKSIZE_s / 2; i++)\r\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\r\n                * (i + 0.5) / Encoder.BLKSIZE_s)));\r\n\r\n    }\r\n\r\n}\r\n\r\n/*\r\n *      psymodel.c\r\n *\r\n *      Copyright (c) 1999-2000 Mark Taylor\r\n *      Copyright (c) 2001-2002 Naoki Shibata\r\n *      Copyright (c) 2000-2003 Takehiro Tominaga\r\n *      Copyright (c) 2000-2008 Robert Hegemann\r\n *      Copyright (c) 2000-2005 Gabriel Bouvigne\r\n *      Copyright (c) 2000-2005 Alexander Leidinger\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: PsyModel.java,v 1.27 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n\r\n/*\r\n PSYCHO ACOUSTICS\r\n\r\n\r\n This routine computes the psycho acoustics, delayed by one granule.\r\n\r\n Input: buffer of PCM data (1024 samples).\r\n\r\n This window should be centered over the 576 sample granule window.\r\n The routine will compute the psycho acoustics for\r\n this granule, but return the psycho acoustics computed\r\n for the *previous* granule.  This is because the block\r\n type of the previous granule can only be determined\r\n after we have computed the psycho acoustics for the following\r\n granule.\r\n\r\n Output:  maskings and energies for each scalefactor band.\r\n block type, PE, and some correlation measures.\r\n The PE is used by CBR modes to determine if extra bits\r\n from the bit reservoir should be used.  The correlation\r\n measures are used to determine mid/side or regular stereo.\r\n */\r\n/*\r\n Notation:\r\n\r\n barks:  a non-linear frequency scale.  Mapping from frequency to\r\n barks is given by freq2bark()\r\n\r\n scalefactor bands: The spectrum (frequencies) are broken into\r\n SBMAX \"scalefactor bands\".  Thes bands\r\n are determined by the MPEG ISO spec.  In\r\n the noise shaping/quantization code, we allocate\r\n bits among the partition bands to achieve the\r\n best possible quality\r\n\r\n partition bands:   The spectrum is also broken into about\r\n 64 \"partition bands\".  Each partition\r\n band is about .34 barks wide.  There are about 2-5\r\n partition bands for each scalefactor band.\r\n\r\n LAME computes all psycho acoustic information for each partition\r\n band.  Then at the end of the computations, this information\r\n is mapped to scalefactor bands.  The energy in each scalefactor\r\n band is taken as the sum of the energy in all partition bands\r\n which overlap the scalefactor band.  The maskings can be computed\r\n in the same way (and thus represent the average masking in that band)\r\n or by taking the minmum value multiplied by the number of\r\n partition bands used (which represents a minimum masking in that band).\r\n */\r\n/*\r\n The general outline is as follows:\r\n\r\n 1. compute the energy in each partition band\r\n 2. compute the tonality in each partition band\r\n 3. compute the strength of each partion band \"masker\"\r\n 4. compute the masking (via the spreading function applied to each masker)\r\n 5. Modifications for mid/side masking.\r\n\r\n Each partition band is considiered a \"masker\".  The strength\r\n of the i'th masker in band j is given by:\r\n\r\n s3(bark(i)-bark(j))*strength(i)\r\n\r\n The strength of the masker is a function of the energy and tonality.\r\n The more tonal, the less masking.  LAME uses a simple linear formula\r\n (controlled by NMT and TMN) which says the strength is given by the\r\n energy divided by a linear function of the tonality.\r\n */\r\n/*\r\n s3() is the \"spreading function\".  It is given by a formula\r\n determined via listening tests.\r\n\r\n The total masking in the j'th partition band is the sum over\r\n all maskings i.  It is thus given by the convolution of\r\n the strength with s3(), the \"spreading function.\"\r\n\r\n masking(j) = sum_over_i  s3(i-j)*strength(i)  = s3 o strength\r\n\r\n where \"o\" = convolution operator.  s3 is given by a formula determined\r\n via listening tests.  It is normalized so that s3 o 1 = 1.\r\n\r\n Note: instead of a simple convolution, LAME also has the\r\n option of using \"additive masking\"\r\n\r\n The most critical part is step 2, computing the tonality of each\r\n partition band.  LAME has two tonality estimators.  The first\r\n is based on the ISO spec, and measures how predictiable the\r\n signal is over time.  The more predictable, the more tonal.\r\n The second measure is based on looking at the spectrum of\r\n a single granule.  The more peaky the spectrum, the more\r\n tonal.  By most indications, the latter approach is better.\r\n\r\n Finally, in step 5, the maskings for the mid and side\r\n channel are possibly increased.  Under certain circumstances,\r\n noise in the mid & side channels is assumed to also\r\n be masked by strong maskers in the L or R channels.\r\n\r\n\r\n Other data computed by the psy-model:\r\n\r\n ms_ratio        side-channel / mid-channel masking ratio (for previous granule)\r\n ms_ratio_next   side-channel / mid-channel masking ratio for this granule\r\n\r\n percep_entropy[2]     L and R values (prev granule) of PE - A measure of how\r\n much pre-echo is in the previous granule\r\n percep_entropy_MS[2]  mid and side channel values (prev granule) of percep_entropy\r\n energy[4]             L,R,M,S energy in each channel, prev granule\r\n blocktype_d[2]        block type to use for previous granule\r\n */\r\n//package mp3;\r\n\r\n//import java.util.Arrays;\r\n\r\n\r\nfunction PsyModel() {\r\n\r\n    var fft = new FFT();\r\n\r\n    var LOG10 = 2.30258509299404568402;\r\n\r\n    var rpelev = 2;\r\n    var rpelev2 = 16;\r\n    var rpelev_s = 2;\r\n    var rpelev2_s = 16;\r\n\r\n    /* size of each partition band, in barks: */\r\n    var DELBARK = .34;\r\n\r\n    /* tuned for output level (sensitive to energy scale) */\r\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder.BLKSIZE / 2));\r\n\r\n    var temporalmask_sustain_sec = 0.01;\r\n\r\n    var NS_PREECHO_ATT0 = 0.8;\r\n    var NS_PREECHO_ATT1 = 0.6;\r\n    var NS_PREECHO_ATT2 = 0.3;\r\n\r\n    var NS_MSFIX = 3.5;\r\n\r\n    var NSATTACKTHRE = 4.4;\r\n    var NSATTACKTHRE_S = 25;\r\n\r\n    var NSFIRLEN = 21;\r\n\r\n    /* size of each partition band, in barks: */\r\n    var LN_TO_LOG10 = 0.2302585093;\r\n\r\n    function NON_LINEAR_SCALE_ENERGY(x) {\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *       L3psycho_anal.  Compute psycho acoustics.\r\n     *\r\n     *       Data returned to the calling program must be delayed by one\r\n     *       granule.\r\n     *\r\n     *       This is done in two places.\r\n     *       If we do not need to know the blocktype, the copying\r\n     *       can be done here at the top of the program: we copy the data for\r\n     *       the last granule (computed during the last call) before it is\r\n     *       overwritten with the new data.  It looks like this:\r\n     *\r\n     *       0. static psymodel_data\r\n     *       1. calling_program_data = psymodel_data\r\n     *       2. compute psymodel_data\r\n     *\r\n     *       For data which needs to know the blocktype, the copying must be\r\n     *       done at the end of this loop, and the old values must be saved:\r\n     *\r\n     *       0. static psymodel_data_old\r\n     *       1. compute psymodel_data\r\n     *       2. compute possible block type of this granule\r\n     *       3. compute final block type of previous granule based on #2.\r\n     *       4. calling_program_data = psymodel_data_old\r\n     *       5. psymodel_data_old = psymodel_data\r\n     *     psycho_loudness_approx\r\n     *       jd - 2001 mar 12\r\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\r\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\r\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\r\n     *             of 1.0 for signals near clipping.\r\n     *    notes:   When calibrated, feeding this function binary white noise at sample\r\n     *             values +32767 or -32768 should return values that approach 3.\r\n     *             ATHformula is used to approximate an equal loudness curve.\r\n     *    future:  Data indicates that the shape of the equal loudness curve varies\r\n     *             with intensity.  This function might be improved by using an equal\r\n     *             loudness curve shaped for typical playback levels (instead of the\r\n     *             ATH, that is shaped for the threshold).  A flexible realization might\r\n     *             simply bend the existing ATH curve to achieve the desired shape.\r\n     *             However, the potential gain may not be enough to justify an effort.\r\n     * </PRE>\r\n     */\r\n    function psycho_loudness_approx(energy, gfc) {\r\n        var loudness_power = 0.0;\r\n        /* apply weights to power in freq. bands */\r\n        for (var i = 0; i < Encoder.BLKSIZE / 2; ++i)\r\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\r\n        loudness_power *= VO_SCALE;\r\n\r\n        return loudness_power;\r\n    }\r\n\r\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\r\n        var gfc = gfp.internal_flags;\r\n        if (chn < 2) {\r\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\r\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\r\n        }\r\n        /* FFT data for mid and side channel is derived from L & R */\r\n        else if (chn == 2) {\r\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\r\n                var l = wsamp_l[wsamp_lPos + 0][j];\r\n                var r = wsamp_l[wsamp_lPos + 1][j];\r\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\r\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\r\n            }\r\n            for (var b = 2; b >= 0; --b) {\r\n                for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\r\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\r\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\r\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util.SQRT2 * 0.5;\r\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util.SQRT2 * 0.5;\r\n                }\r\n            }\r\n        }\r\n\r\n        /*********************************************************************\r\n         * compute energies\r\n         *********************************************************************/\r\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\r\n        fftenergy[0] *= fftenergy[0];\r\n\r\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\r\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 - j];\r\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 + j];\r\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\r\n                * re + im * im) * 0.5);\r\n        }\r\n        for (var b = 2; b >= 0; --b) {\r\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\r\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\r\n            for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\r\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\r\n                / 2 - j];\r\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\r\n                / 2 + j];\r\n                fftenergy_s[b][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\r\n                    * re + im * im) * 0.5);\r\n            }\r\n        }\r\n        /* total energy */\r\n        {\r\n            var totalenergy = 0.0;\r\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\r\n                totalenergy += fftenergy[j];\r\n\r\n            gfc.tot_ener[chn] = totalenergy;\r\n        }\r\n\r\n        if (gfp.analysis) {\r\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\r\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\r\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\r\n            }\r\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\r\n        }\r\n\r\n        /*********************************************************************\r\n         * compute loudness approximation (used for ATH auto-level adjustment)\r\n         *********************************************************************/\r\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\r\n            // no loudness for mid/side ch\r\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\r\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\r\n        }\r\n    }\r\n\r\n    /* mask_add optimization */\r\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\r\n\r\n    /**\r\n     * <PRE>\r\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\r\n     *\r\n     * abs(i)>8 is equivalent (as i is an integer) to\r\n     * abs(i)>=9\r\n     * i>=9 || i<=-9\r\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\r\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\r\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\r\n     * exp10 is strictly increasing thus this is equivalent to\r\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\r\n     * </PRE>\r\n     */\r\n\r\n    /**\r\n     * as in if(i>8)\r\n     */\r\n    var I1LIMIT = 8;\r\n    /**\r\n     * as in if(i>24) . changed 23\r\n     */\r\n    var I2LIMIT = 23;\r\n    /**\r\n     * as in if(m<15)\r\n     */\r\n    var MLIMIT = 15;\r\n\r\n    var ma_max_i1;\r\n    var ma_max_i2;\r\n    var ma_max_m;\r\n\r\n    /**\r\n     * This is the masking table:<BR>\r\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\r\n     * After additive masking computation, 8dB are added, so final values are\r\n     * going from 8dB to 17.3dB\r\n     *\r\n     * pow(10, -0.0..-0.6)\r\n     */\r\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\r\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\r\n\r\n    function init_mask_add_max_values() {\r\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\r\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\r\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\r\n    }\r\n\r\n    var table1 = [3.3246 * 3.3246,\r\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\r\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\r\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\r\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\r\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\r\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\r\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\r\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\r\n\r\n    var table2 = [1.33352 * 1.33352,\r\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\r\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\r\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\r\n\r\n    var table3 = [2.35364 * 2.35364,\r\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\r\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\r\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\r\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\r\n        1.03826 * 1.03826];\r\n\r\n    /**\r\n     * addition of simultaneous masking Naoki Shibata 2000/7\r\n     */\r\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\r\n        var ratio;\r\n\r\n        if (m2 > m1) {\r\n            if (m2 < (m1 * ma_max_i2))\r\n                ratio = m2 / m1;\r\n            else\r\n                return (m1 + m2);\r\n        } else {\r\n            if (m1 >= (m2 * ma_max_i2))\r\n                return (m1 + m2);\r\n            ratio = m1 / m2;\r\n        }\r\n\r\n        /* Should always be true, just checking */\r\n\r\n        m1 += m2;\r\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\r\n        if ((b + 3) <= 3 + 3) {\r\n            /* approximately, 1 bark = 3 partitions */\r\n            /* 65% of the cases */\r\n            /* originally 'if(i > 8)' */\r\n            if (ratio >= ma_max_i1) {\r\n                /* 43% of the total */\r\n                return m1;\r\n            }\r\n\r\n            /* 22% of the total */\r\n            var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\r\n            return m1 * table2[i];\r\n        }\r\n\r\n        /**\r\n         * <PRE>\r\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\r\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\r\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\r\n         * </PRE>\r\n         */\r\n        var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\r\n        if (shortblock != 0) {\r\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\r\n        } else {\r\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\r\n        }\r\n        if (m1 < ma_max_m * m2) {\r\n            /* 3% of the total */\r\n            /* Originally if (m > 0) { */\r\n            if (m1 > m2) {\r\n                var f, r;\r\n\r\n                f = 1.0;\r\n                if (i <= 13)\r\n                    f = table3[i];\r\n\r\n                r = Util.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\r\n                return m1 * ((table1[i] - f) * r + f);\r\n            }\r\n\r\n            if (i > 13)\r\n                return m1;\r\n\r\n            return m1 * table3[i];\r\n        }\r\n\r\n        /* 10% of total */\r\n        return m1 * table1[i];\r\n    }\r\n\r\n    var table2_ = [1.33352 * 1.33352,\r\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\r\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\r\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\r\n\r\n    /**\r\n     * addition of simultaneous masking Naoki Shibata 2000/7\r\n     */\r\n    function vbrpsy_mask_add(m1, m2, b) {\r\n        var ratio;\r\n\r\n        if (m1 < 0) {\r\n            m1 = 0;\r\n        }\r\n        if (m2 < 0) {\r\n            m2 = 0;\r\n        }\r\n        if (m1 <= 0) {\r\n            return m2;\r\n        }\r\n        if (m2 <= 0) {\r\n            return m1;\r\n        }\r\n        if (m2 > m1) {\r\n            ratio = m2 / m1;\r\n        } else {\r\n            ratio = m1 / m2;\r\n        }\r\n        if (-2 <= b && b <= 2) {\r\n            /* approximately, 1 bark = 3 partitions */\r\n            /* originally 'if(i > 8)' */\r\n            if (ratio >= ma_max_i1) {\r\n                return m1 + m2;\r\n            } else {\r\n                var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\r\n                return (m1 + m2) * table2_[i];\r\n            }\r\n        }\r\n        if (ratio < ma_max_i2) {\r\n            return m1 + m2;\r\n        }\r\n        if (m1 < m2) {\r\n            m1 = m2;\r\n        }\r\n        return m1;\r\n    }\r\n\r\n    /**\r\n     * compute interchannel masking effects\r\n     */\r\n    function calc_interchannel_masking(gfp, ratio) {\r\n        var gfc = gfp.internal_flags;\r\n        if (gfc.channels_out > 1) {\r\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\r\n                var l = gfc.thm[0].l[sb];\r\n                var r = gfc.thm[1].l[sb];\r\n                gfc.thm[0].l[sb] += r * ratio;\r\n                gfc.thm[1].l[sb] += l * ratio;\r\n            }\r\n            for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n                for (var sblock = 0; sblock < 3; sblock++) {\r\n                    var l = gfc.thm[0].s[sb][sblock];\r\n                    var r = gfc.thm[1].s[sb][sblock];\r\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\r\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\r\n     */\r\n    function msfix1(gfc) {\r\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\r\n            /* use this fix if L & R masking differs by 2db or less */\r\n            /* if db = 10*log10(x2/x1) < 2 */\r\n            /* if (x2 < 1.58*x1) { */\r\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\r\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\r\n                continue;\r\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\r\n            var rmid = Math.max(gfc.thm[2].l[sb],\r\n                Math.min(gfc.thm[3].l[sb], mld));\r\n\r\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\r\n            var rside = Math.max(gfc.thm[3].l[sb],\r\n                Math.min(gfc.thm[2].l[sb], mld));\r\n            gfc.thm[2].l[sb] = rmid;\r\n            gfc.thm[3].l[sb] = rside;\r\n        }\r\n\r\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n            for (var sblock = 0; sblock < 3; sblock++) {\r\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\r\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\r\n                    continue;\r\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\r\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\r\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\r\n\r\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\r\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\r\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\r\n\r\n                gfc.thm[2].s[sb][sblock] = rmid;\r\n                gfc.thm[3].s[sb][sblock] = rside;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adjust M/S maskings if user set \"msfix\"\r\n     *\r\n     * Naoki Shibata 2000\r\n     */\r\n    function ns_msfix(gfc, msfix, athadjust) {\r\n        var msfix2 = msfix;\r\n        var athlower = Math.pow(10, athadjust);\r\n\r\n        msfix *= 2.0;\r\n        msfix2 *= 2.0;\r\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\r\n            var thmLR, thmM, thmS, ath;\r\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\r\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\r\n                Math.max(gfc.thm[1].l[sb], ath));\r\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\r\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\r\n            if (thmLR * msfix < thmM + thmS) {\r\n                var f = thmLR * msfix2 / (thmM + thmS);\r\n                thmM *= f;\r\n                thmS *= f;\r\n            }\r\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\r\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\r\n        }\r\n\r\n        athlower *= ( Encoder.BLKSIZE_s / Encoder.BLKSIZE);\r\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n            for (var sblock = 0; sblock < 3; sblock++) {\r\n                var thmLR, thmM, thmS, ath;\r\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\r\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\r\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\r\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\r\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\r\n\r\n                if (thmLR * msfix < thmM + thmS) {\r\n                    var f = thmLR * msfix / (thmM + thmS);\r\n                    thmM *= f;\r\n                    thmS *= f;\r\n                }\r\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\r\n                    thmM);\r\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\r\n                    thmS);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * short block threshold calculation (part 2)\r\n     *\r\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\r\n     * to the next one sfb+1; enn and thmm have to be split between them\r\n     */\r\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\r\n        var sb, b;\r\n        var enn = 0.0;\r\n        var thmm = 0.0;\r\n        for (sb = b = 0; sb < Encoder.SBMAX_s; ++b, ++sb) {\r\n            var bo_s_sb = gfc.bo_s[sb];\r\n            var npart_s = gfc.npart_s;\r\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\r\n            while (b < b_lim) {\r\n                // iff failed, it may indicate some index error elsewhere\r\n                enn += eb[b];\r\n                thmm += thr[b];\r\n                b++;\r\n            }\r\n            gfc.en[chn].s[sb][sblock] = enn;\r\n            gfc.thm[chn].s[sb][sblock] = thmm;\r\n\r\n            if (b >= npart_s) {\r\n                ++sb;\r\n                break;\r\n            }\r\n            // iff failed, it may indicate some index error elsewhere\r\n            {\r\n                /* at transition sfb . sfb+1 */\r\n                var w_curr = gfc.PSY.bo_s_weight[sb];\r\n                var w_next = 1.0 - w_curr;\r\n                enn = w_curr * eb[b];\r\n                thmm = w_curr * thr[b];\r\n                gfc.en[chn].s[sb][sblock] += enn;\r\n                gfc.thm[chn].s[sb][sblock] += thmm;\r\n                enn = w_next * eb[b];\r\n                thmm = w_next * thr[b];\r\n            }\r\n        }\r\n        /* zero initialize the rest */\r\n        for (; sb < Encoder.SBMAX_s; ++sb) {\r\n            gfc.en[chn].s[sb][sblock] = 0;\r\n            gfc.thm[chn].s[sb][sblock] = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * longblock threshold calculation (part 2)\r\n     */\r\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\r\n        var sb, b;\r\n        var enn = 0.0;\r\n        var thmm = 0.0;\r\n        for (sb = b = 0; sb < Encoder.SBMAX_l; ++b, ++sb) {\r\n            var bo_l_sb = gfc.bo_l[sb];\r\n            var npart_l = gfc.npart_l;\r\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\r\n            while (b < b_lim) {\r\n                // iff failed, it may indicate some index error elsewhere\r\n                enn += eb[b];\r\n                thmm += thr[b];\r\n                b++;\r\n            }\r\n            gfc.en[chn].l[sb] = enn;\r\n            gfc.thm[chn].l[sb] = thmm;\r\n\r\n            if (b >= npart_l) {\r\n                ++sb;\r\n                break;\r\n            }\r\n            {\r\n                /* at transition sfb . sfb+1 */\r\n                var w_curr = gfc.PSY.bo_l_weight[sb];\r\n                var w_next = 1.0 - w_curr;\r\n                enn = w_curr * eb[b];\r\n                thmm = w_curr * thr[b];\r\n                gfc.en[chn].l[sb] += enn;\r\n                gfc.thm[chn].l[sb] += thmm;\r\n                enn = w_next * eb[b];\r\n                thmm = w_next * thr[b];\r\n            }\r\n        }\r\n        /* zero initialize the rest */\r\n        for (; sb < Encoder.SBMAX_l; ++sb) {\r\n            gfc.en[chn].l[sb] = 0;\r\n            gfc.thm[chn].l[sb] = 0;\r\n        }\r\n    }\r\n\r\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\r\n        var gfc = gfp.internal_flags;\r\n        var j, b;\r\n\r\n        for (b = j = 0; b < gfc.npart_s; ++b) {\r\n            var ebb = 0, m = 0;\r\n            var n = gfc.numlines_s[b];\r\n            for (var i = 0; i < n; ++i, ++j) {\r\n                var el = fftenergy_s[sblock][j];\r\n                ebb += el;\r\n                if (m < el)\r\n                    m = el;\r\n            }\r\n            eb[b] = ebb;\r\n        }\r\n        for (j = b = 0; b < gfc.npart_s; b++) {\r\n            var kk = gfc.s3ind_s[b][0];\r\n            var ecb = gfc.s3_ss[j++] * eb[kk];\r\n            ++kk;\r\n            while (kk <= gfc.s3ind_s[b][1]) {\r\n                ecb += gfc.s3_ss[j] * eb[kk];\r\n                ++j;\r\n                ++kk;\r\n            }\r\n\r\n            { /* limit calculated threshold by previous granule */\r\n                var x = rpelev_s * gfc.nb_s1[chn][b];\r\n                thr[b] = Math.min(ecb, x);\r\n            }\r\n            if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) {\r\n                /* limit calculated threshold by even older granule */\r\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\r\n                var y = thr[b];\r\n                thr[b] = Math.min(x, y);\r\n            }\r\n\r\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\r\n            gfc.nb_s1[chn][b] = ecb;\r\n        }\r\n        for (; b <= Encoder.CBANDS; ++b) {\r\n            eb[b] = 0;\r\n            thr[b] = 0;\r\n        }\r\n    }\r\n\r\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\r\n                /* force both channels to use the same block type */\r\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\r\n                /* But even without ms_stereo, FhG does this */\r\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\r\n            uselongblock[0] = uselongblock[1] = 0;\r\n\r\n        /*\r\n         * update the blocktype of the previous granule, since it depends on\r\n         * what happend in this granule\r\n         */\r\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\r\n            blocktype[chn] = Encoder.NORM_TYPE;\r\n            /* disable short blocks */\r\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed)\r\n                uselongblock[chn] = 1;\r\n            if (gfp.short_blocks == ShortBlock.short_block_forced)\r\n                uselongblock[chn] = 0;\r\n\r\n            if (uselongblock[chn] != 0) {\r\n                /* no attack : use long blocks */\r\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\r\n                    blocktype[chn] = Encoder.STOP_TYPE;\r\n            } else {\r\n                /* attack : use short blocks */\r\n                blocktype[chn] = Encoder.SHORT_TYPE;\r\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\r\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\r\n                }\r\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\r\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\r\n            }\r\n\r\n            blocktype_d[chn] = gfc.blocktype_old[chn];\r\n            // value returned to calling program\r\n            gfc.blocktype_old[chn] = blocktype[chn];\r\n            // save for next call to l3psy_anal\r\n        }\r\n    }\r\n\r\n    function NS_INTERP(x, y, r) {\r\n        /* was pow((x),(r))*pow((y),1-(r)) */\r\n        if (r >= 1.0) {\r\n            /* 99.7% of the time */\r\n            return x;\r\n        }\r\n        if (r <= 0.0)\r\n            return y;\r\n        if (y > 0.0) {\r\n            /* rest of the time */\r\n            return (Math.pow(x / y, r) * y);\r\n        }\r\n        /* never happens */\r\n        return 0.0;\r\n    }\r\n\r\n    /**\r\n     * these values are tuned only for 44.1kHz...\r\n     */\r\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\r\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\r\n        /* 255.8 */\r\n    ];\r\n\r\n    function pecalc_s(mr, masking_lower) {\r\n        var pe_s = 1236.28 / 4;\r\n        for (var sb = 0; sb < Encoder.SBMAX_s - 1; sb++) {\r\n            for (var sblock = 0; sblock < 3; sblock++) {\r\n                var thm = mr.thm.s[sb][sblock];\r\n                if (thm > 0.0) {\r\n                    var x = thm * masking_lower;\r\n                    var en = mr.en.s[sb][sblock];\r\n                    if (en > x) {\r\n                        if (en > x * 1e10) {\r\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\r\n                        } else {\r\n                            pe_s += regcoef_s[sb] * Util.FAST_LOG10(en / x);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return pe_s;\r\n    }\r\n\r\n    /**\r\n     * these values are tuned only for 44.1kHz...\r\n     */\r\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\r\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\r\n        60.7, 73.9, 85.7, 93.4, 126.1,\r\n        /* 241.3 */\r\n    ];\r\n\r\n    function pecalc_l(mr, masking_lower) {\r\n        var pe_l = 1124.23 / 4;\r\n        for (var sb = 0; sb < Encoder.SBMAX_l - 1; sb++) {\r\n            var thm = mr.thm.l[sb];\r\n            if (thm > 0.0) {\r\n                var x = thm * masking_lower;\r\n                var en = mr.en.l[sb];\r\n                if (en > x) {\r\n                    if (en > x * 1e10) {\r\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\r\n                    } else {\r\n                        pe_l += regcoef_l[sb] * Util.FAST_LOG10(en / x);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return pe_l;\r\n    }\r\n\r\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\r\n        var b, j;\r\n\r\n        for (b = j = 0; b < gfc.npart_l; ++b) {\r\n            var ebb = 0, m = 0;\r\n            var i;\r\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\r\n                var el = fftenergy[j];\r\n                ebb += el;\r\n                if (m < el)\r\n                    m = el;\r\n            }\r\n            eb[b] = ebb;\r\n            max[b] = m;\r\n            avg[b] = ebb * gfc.rnumlines_l[b];\r\n        }\r\n    }\r\n\r\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\r\n        var last_tab_entry = tab.length - 1;\r\n        var b = 0;\r\n        var a = avg[b] + avg[b + 1];\r\n        if (a > 0.0) {\r\n            var m = max[b];\r\n            if (m < max[b + 1])\r\n                m = max[b + 1];\r\n            a = 20.0 * (m * 2.0 - a)\r\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\r\n            var k = 0 | a;\r\n            if (k > last_tab_entry)\r\n                k = last_tab_entry;\r\n            mask_idx[b] = k;\r\n        } else {\r\n            mask_idx[b] = 0;\r\n        }\r\n\r\n        for (b = 1; b < gfc.npart_l - 1; b++) {\r\n            a = avg[b - 1] + avg[b] + avg[b + 1];\r\n            if (a > 0.0) {\r\n                var m = max[b - 1];\r\n                if (m < max[b])\r\n                    m = max[b];\r\n                if (m < max[b + 1])\r\n                    m = max[b + 1];\r\n                a = 20.0\r\n                    * (m * 3.0 - a)\r\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\r\n                    + gfc.numlines_l[b + 1] - 1));\r\n                var k = 0 | a;\r\n                if (k > last_tab_entry)\r\n                    k = last_tab_entry;\r\n                mask_idx[b] = k;\r\n            } else {\r\n                mask_idx[b] = 0;\r\n            }\r\n        }\r\n\r\n        a = avg[b - 1] + avg[b];\r\n        if (a > 0.0) {\r\n            var m = max[b - 1];\r\n            if (m < max[b])\r\n                m = max[b];\r\n            a = 20.0 * (m * 2.0 - a)\r\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\r\n            var k = 0 | a;\r\n            if (k > last_tab_entry)\r\n                k = last_tab_entry;\r\n            mask_idx[b] = k;\r\n        } else {\r\n            mask_idx[b] = 0;\r\n        }\r\n    }\r\n\r\n    var fircoef = [\r\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\r\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\r\n        -5.52212e-17 * 2, -0.313819 * 2\r\n    ];\r\n\r\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\r\n        /*\r\n         * to get a good cache performance, one has to think about the sequence,\r\n         * in which the variables are used.\r\n         */\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /* fft and energy calculation */\r\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\r\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\r\n\r\n        /* convolution */\r\n        var eb_l = new_float(Encoder.CBANDS + 1);\r\n        var eb_s = new_float(Encoder.CBANDS + 1);\r\n        var thr = new_float(Encoder.CBANDS + 2);\r\n\r\n        /* block type */\r\n        var blocktype = new_int(2), uselongblock = new_int(2);\r\n\r\n        /* usual variables like loop indices, etc.. */\r\n        var numchn, chn;\r\n        var b, i, j, k;\r\n        var sb, sblock;\r\n\r\n        /* variables used for --nspsytune */\r\n        var ns_hpfsmpl = new_float_n([2, 576]);\r\n        var pcfact;\r\n        var mask_idx_l = new_int(Encoder.CBANDS + 2), mask_idx_s = new_int(Encoder.CBANDS + 2);\r\n\r\n        Arrays.fill(mask_idx_s, 0);\r\n\r\n        numchn = gfc.channels_out;\r\n        /* chn=2 and 3 = Mid and Side channels */\r\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\r\n            numchn = 4;\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off)\r\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\r\n            / gfc.ResvMax * 0.5;\r\n        else if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh\r\n            || gfp.VBR == VbrMode.vbr_mt) {\r\n            pcfact = 0.6;\r\n        } else\r\n            pcfact = 1.0;\r\n\r\n        /**********************************************************************\r\n         * Apply HPF of fs/4 to the input signal. This is used for attack\r\n         * detection / handling.\r\n         **********************************************************************/\r\n        /* Don't copy the input buffer into a temporary buffer */\r\n        /* unroll the loop 2 times */\r\n        for (chn = 0; chn < gfc.channels_out; chn++) {\r\n            /* apply high pass filter of fs/4 */\r\n            var firbuf = buffer[chn];\r\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\r\n            for (i = 0; i < 576; i++) {\r\n                var sum1, sum2;\r\n                sum1 = firbuf[firbufPos + i + 10];\r\n                sum2 = 0.0;\r\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\r\n                    sum1 += fircoef[j]\r\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\r\n                        + NSFIRLEN - j]);\r\n                    sum2 += fircoef[j + 1]\r\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\r\n                        + i + NSFIRLEN - j - 1]);\r\n                }\r\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\r\n            }\r\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\r\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\r\n            if (numchn > 2) {\r\n                /* MS maskings */\r\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\r\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\r\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\r\n            }\r\n        }\r\n\r\n        for (chn = 0; chn < numchn; chn++) {\r\n            var wsamp_l;\r\n            var wsamp_s;\r\n            var en_subshort = new_float(12);\r\n            var en_short = [0, 0, 0, 0];\r\n            var attack_intensity = new_float(12);\r\n            var ns_uselongblock = 1;\r\n            var attackThreshold;\r\n            var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\r\n            var ns_attacks = [0, 0, 0, 0];\r\n            var fftenergy = new_float(Encoder.HBLKSIZE);\r\n            var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\r\n\r\n            /*\r\n             * rh 20040301: the following loops do access one off the limits so\r\n             * I increase the array dimensions by one and initialize the\r\n             * accessed values to zero\r\n             */\r\n\r\n            /***************************************************************\r\n             * determine the block type (window type)\r\n             ***************************************************************/\r\n            /* calculate energies of each sub-shortblocks */\r\n            for (i = 0; i < 3; i++) {\r\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\r\n                attack_intensity[i] = en_subshort[i]\r\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\r\n                en_short[0] += en_subshort[i];\r\n            }\r\n\r\n            if (chn == 2) {\r\n                for (i = 0; i < 576; i++) {\r\n                    var l, r;\r\n                    l = ns_hpfsmpl[0][i];\r\n                    r = ns_hpfsmpl[1][i];\r\n                    ns_hpfsmpl[0][i] = l + r;\r\n                    ns_hpfsmpl[1][i] = l - r;\r\n                }\r\n            }\r\n            {\r\n                var pf = ns_hpfsmpl[chn & 1];\r\n                var pfPos = 0;\r\n                for (i = 0; i < 9; i++) {\r\n                    var pfe = pfPos + 576 / 9;\r\n                    var p = 1.;\r\n                    for (; pfPos < pfe; pfPos++)\r\n                        if (p < Math.abs(pf[pfPos]))\r\n                            p = Math.abs(pf[pfPos]);\r\n\r\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\r\n                    en_short[1 + i / 3] += p;\r\n                    if (p > en_subshort[i + 3 - 2]) {\r\n                        p = p / en_subshort[i + 3 - 2];\r\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\r\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\r\n                    } else\r\n                        p = 0.0;\r\n                    attack_intensity[i + 3] = p;\r\n                }\r\n            }\r\n\r\n            if (gfp.analysis) {\r\n                var x = attack_intensity[0];\r\n                for (i = 1; i < 12; i++)\r\n                    if (x < attack_intensity[i])\r\n                        x = attack_intensity[i];\r\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\r\n                gfc.pinfo.ers_save[chn] = x;\r\n            }\r\n\r\n            /* compare energies between sub-shortblocks */\r\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\r\n                : gfc.nsPsy.attackthre;\r\n            for (i = 0; i < 12; i++)\r\n                if (0 == ns_attacks[i / 3]\r\n                    && attack_intensity[i] > attackThreshold)\r\n                    ns_attacks[i / 3] = (i % 3) + 1;\r\n\r\n            /*\r\n             * should have energy change between short blocks, in order to avoid\r\n             * periodic signals\r\n             */\r\n            for (i = 1; i < 4; i++) {\r\n                var ratio;\r\n                if (en_short[i - 1] > en_short[i]) {\r\n                    ratio = en_short[i - 1] / en_short[i];\r\n                } else {\r\n                    ratio = en_short[i] / en_short[i - 1];\r\n                }\r\n                if (ratio < 1.7) {\r\n                    ns_attacks[i] = 0;\r\n                    if (i == 1)\r\n                        ns_attacks[0] = 0;\r\n                }\r\n            }\r\n\r\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\r\n                ns_attacks[0] = 0;\r\n\r\n            if (gfc.nsPsy.lastAttacks[chn] == 3\r\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\r\n                ns_uselongblock = 0;\r\n\r\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\r\n                    ns_attacks[1] = 0;\r\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\r\n                    ns_attacks[2] = 0;\r\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\r\n                    ns_attacks[3] = 0;\r\n            }\r\n\r\n            if (chn < 2) {\r\n                uselongblock[chn] = ns_uselongblock;\r\n            } else {\r\n                if (ns_uselongblock == 0) {\r\n                    uselongblock[0] = uselongblock[1] = 0;\r\n                }\r\n            }\r\n\r\n            /*\r\n             * there is a one granule delay. Copy maskings computed last call\r\n             * into masking_ratio to return to calling program.\r\n             */\r\n            energy[chn] = gfc.tot_ener[chn];\r\n\r\n            /*********************************************************************\r\n             * compute FFTs\r\n             *********************************************************************/\r\n            wsamp_s = wsamp_S;\r\n            wsamp_l = wsamp_L;\r\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\r\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\r\n\r\n            /*********************************************************************\r\n             * Calculate the energy and the tonality of each partition.\r\n             *********************************************************************/\r\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\r\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\r\n            /* compute masking thresholds for short blocks */\r\n            for (sblock = 0; sblock < 3; sblock++) {\r\n                var enn, thmm;\r\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\r\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\r\n                /**** short block pre-echo control ****/\r\n                for (sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n                    thmm = gfc.thm[chn].s[sb][sblock];\r\n\r\n                    thmm *= NS_PREECHO_ATT0;\r\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\r\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\r\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                            NS_PREECHO_ATT1 * pcfact);\r\n                        thmm = Math.min(thmm, p);\r\n                    }\r\n\r\n                    if (ns_attacks[sblock] == 1) {\r\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\r\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                            NS_PREECHO_ATT2 * pcfact);\r\n                        thmm = Math.min(thmm, p);\r\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\r\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\r\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\r\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                            NS_PREECHO_ATT2 * pcfact);\r\n                        thmm = Math.min(thmm, p);\r\n                    }\r\n\r\n                    /* pulse like signal detection for fatboy.wav and so on */\r\n                    enn = en_subshort[sblock * 3 + 3]\r\n                        + en_subshort[sblock * 3 + 4]\r\n                        + en_subshort[sblock * 3 + 5];\r\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\r\n                        thmm *= 0.5;\r\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\r\n                            thmm *= 0.5;\r\n                    }\r\n\r\n                    gfc.thm[chn].s[sb][sblock] = thmm;\r\n                }\r\n            }\r\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\r\n\r\n            /*********************************************************************\r\n             * convolve the partitioned energy and unpredictability with the\r\n             * spreading function, s3_l[b][k]\r\n             ********************************************************************/\r\n            k = 0;\r\n            {\r\n                for (b = 0; b < gfc.npart_l; b++) {\r\n                    /*\r\n                     * convolve the partitioned energy with the spreading\r\n                     * function\r\n                     */\r\n                    var kk = gfc.s3ind[b][0];\r\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\r\n                    var ecb = gfc.s3_ll[k++] * eb2;\r\n                    while (++kk <= gfc.s3ind[b][1]) {\r\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\r\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\r\n                            gfc, 0);\r\n                    }\r\n                    ecb *= 0.158489319246111;\r\n                    /* pow(10,-0.8) */\r\n\r\n                    /**** long block pre-echo control ****/\r\n                    /**\r\n                     * <PRE>\r\n                     * dont use long block pre-echo control if previous granule was\r\n                     * a short block.  This is to avoid the situation:\r\n                     * frame0:  quiet (very low masking)\r\n                     * frame1:  surge  (triggers short blocks)\r\n                     * frame2:  regular frame.  looks like pre-echo when compared to\r\n                     *          frame0, but all pre-echo was in frame1.\r\n                     * </PRE>\r\n                     */\r\n                    /*\r\n                     * chn=0,1 L and R channels\r\n                     *\r\n                     * chn=2,3 S and M channels.\r\n                     */\r\n\r\n                    if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE)\r\n                        thr[b] = ecb;\r\n                    else\r\n                        thr[b] = NS_INTERP(\r\n                            Math.min(ecb, Math.min(rpelev\r\n                                * gfc.nb_1[chn][b], rpelev2\r\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\r\n\r\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\r\n                    gfc.nb_1[chn][b] = ecb;\r\n                }\r\n            }\r\n            for (; b <= Encoder.CBANDS; ++b) {\r\n                eb_l[b] = 0;\r\n                thr[b] = 0;\r\n            }\r\n            /* compute masking thresholds for long blocks */\r\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\r\n        }\r\n        /* end loop over chn */\r\n\r\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\r\n            if (gfp.interChRatio > 0.0) {\r\n                calc_interchannel_masking(gfp, gfp.interChRatio);\r\n            }\r\n        }\r\n\r\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n            var msfix;\r\n            msfix1(gfc);\r\n            msfix = gfp.msfix;\r\n            if (Math.abs(msfix) > 0.0)\r\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\r\n        }\r\n\r\n        /***************************************************************\r\n         * determine final block type\r\n         ***************************************************************/\r\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\r\n\r\n        /*********************************************************************\r\n         * compute the value of PE to return ... no delay and advance\r\n         *********************************************************************/\r\n        for (chn = 0; chn < numchn; chn++) {\r\n            var ppe;\r\n            var ppePos = 0;\r\n            var type;\r\n            var mr;\r\n\r\n            if (chn > 1) {\r\n                ppe = percep_MS_entropy;\r\n                ppePos = -2;\r\n                type = Encoder.NORM_TYPE;\r\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\r\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\r\n                    type = Encoder.SHORT_TYPE;\r\n                mr = masking_MS_ratio[gr_out][chn - 2];\r\n            } else {\r\n                ppe = percep_entropy;\r\n                ppePos = 0;\r\n                type = blocktype_d[chn];\r\n                mr = masking_ratio[gr_out][chn];\r\n            }\r\n\r\n            if (type == Encoder.SHORT_TYPE)\r\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\r\n            else\r\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\r\n\r\n            if (gfp.analysis)\r\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\r\n\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\r\n        var gfc = gfp.internal_flags;\r\n        if (chn < 2) {\r\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\r\n        } else if (chn == 2) {\r\n            /* FFT data for mid and side channel is derived from L & R */\r\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\r\n                var l = wsamp_l[wsamp_lPos + 0][j];\r\n                var r = wsamp_l[wsamp_lPos + 1][j];\r\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\r\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\r\n            }\r\n        }\r\n\r\n        /*********************************************************************\r\n         * compute energies\r\n         *********************************************************************/\r\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\r\n        fftenergy[0] *= fftenergy[0];\r\n\r\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\r\n            var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\r\n            var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\r\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\r\n                * re + im * im) * 0.5);\r\n        }\r\n        /* total energy */\r\n        {\r\n            var totalenergy = 0.0;\r\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\r\n                totalenergy += fftenergy[j];\r\n\r\n            gfc.tot_ener[chn] = totalenergy;\r\n        }\r\n\r\n        if (gfp.analysis) {\r\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\r\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\r\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\r\n            }\r\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\r\n        }\r\n    }\r\n\r\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (sblock == 0 && chn < 2) {\r\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\r\n        }\r\n        if (chn == 2) {\r\n            /* FFT data for mid and side channel is derived from L & R */\r\n            for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\r\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\r\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\r\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util.SQRT2 * 0.5;\r\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util.SQRT2 * 0.5;\r\n            }\r\n        }\r\n\r\n        /*********************************************************************\r\n         * compute energies\r\n         *********************************************************************/\r\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\r\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\r\n        for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\r\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 - j];\r\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 + j];\r\n            fftenergy_s[sblock][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\r\n                * re + im * im) * 0.5);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute loudness approximation (used for ATH auto-level adjustment)\r\n     */\r\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\r\n        var gfc = gfp.internal_flags;\r\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\r\n            // no loudness for mid/side ch\r\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\r\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\r\n        }\r\n    }\r\n\r\n    var fircoef_ = [-8.65163e-18 * 2,\r\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\r\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\r\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\r\n\r\n    /**\r\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\r\n     * / handling.\r\n     */\r\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\r\n        var ns_hpfsmpl = new_float_n([2, 576]);\r\n        var gfc = gfp.internal_flags;\r\n        var n_chn_out = gfc.channels_out;\r\n        /* chn=2 and 3 = Mid and Side channels */\r\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\r\n        /* Don't copy the input buffer into a temporary buffer */\r\n        /* unroll the loop 2 times */\r\n        for (var chn = 0; chn < n_chn_out; chn++) {\r\n            /* apply high pass filter of fs/4 */\r\n            firbuf = buffer[chn];\r\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\r\n            for (var i = 0; i < 576; i++) {\r\n                var sum1, sum2;\r\n                sum1 = firbuf[firbufPos + i + 10];\r\n                sum2 = 0.0;\r\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\r\n                    sum1 += fircoef_[j]\r\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\r\n                        + NSFIRLEN - j]);\r\n                    sum2 += fircoef_[j + 1]\r\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\r\n                        + i + NSFIRLEN - j - 1]);\r\n                }\r\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\r\n            }\r\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\r\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\r\n            if (n_chn_psy > 2) {\r\n                /* MS maskings */\r\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\r\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\r\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\r\n            }\r\n        }\r\n        for (var chn = 0; chn < n_chn_psy; chn++) {\r\n            var attack_intensity = new_float(12);\r\n            var en_subshort = new_float(12);\r\n            var en_short = [0, 0, 0, 0];\r\n            var pf = ns_hpfsmpl[chn & 1];\r\n            var pfPos = 0;\r\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\r\n                : gfc.nsPsy.attackthre;\r\n            var ns_uselongblock = 1;\r\n\r\n            if (chn == 2) {\r\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\r\n                    var l = ns_hpfsmpl[0][i];\r\n                    var r = ns_hpfsmpl[1][i];\r\n                    ns_hpfsmpl[0][i] = l + r;\r\n                    ns_hpfsmpl[1][i] = l - r;\r\n                }\r\n            }\r\n            /***************************************************************\r\n             * determine the block type (window type)\r\n             ***************************************************************/\r\n            /* calculate energies of each sub-shortblocks */\r\n            for (var i = 0; i < 3; i++) {\r\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\r\n                attack_intensity[i] = en_subshort[i]\r\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\r\n                en_short[0] += en_subshort[i];\r\n            }\r\n\r\n            for (var i = 0; i < 9; i++) {\r\n                var pfe = pfPos + 576 / 9;\r\n                var p = 1.;\r\n                for (; pfPos < pfe; pfPos++)\r\n                    if (p < Math.abs(pf[pfPos]))\r\n                        p = Math.abs(pf[pfPos]);\r\n\r\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\r\n                en_short[1 + i / 3] += p;\r\n                if (p > en_subshort[i + 3 - 2]) {\r\n                    p = p / en_subshort[i + 3 - 2];\r\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\r\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\r\n                } else {\r\n                    p = 0.0;\r\n                }\r\n                attack_intensity[i + 3] = p;\r\n            }\r\n            /* pulse like signal detection for fatboy.wav and so on */\r\n            for (var i = 0; i < 3; ++i) {\r\n                var enn = en_subshort[i * 3 + 3]\r\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\r\n                var factor = 1.;\r\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\r\n                    factor *= 0.5;\r\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\r\n                        factor *= 0.5;\r\n                    }\r\n                }\r\n                sub_short_factor[chn][i] = factor;\r\n            }\r\n\r\n            if (gfp.analysis) {\r\n                var x = attack_intensity[0];\r\n                for (var i = 1; i < 12; i++) {\r\n                    if (x < attack_intensity[i]) {\r\n                        x = attack_intensity[i];\r\n                    }\r\n                }\r\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\r\n                gfc.pinfo.ers_save[chn] = x;\r\n            }\r\n\r\n            /* compare energies between sub-shortblocks */\r\n            for (var i = 0; i < 12; i++) {\r\n                if (0 == ns_attacks[chn][i / 3]\r\n                    && attack_intensity[i] > attackThreshold) {\r\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\r\n                }\r\n            }\r\n\r\n            /*\r\n             * should have energy change between short blocks, in order to avoid\r\n             * periodic signals\r\n             */\r\n            /* Good samples to show the effect are Trumpet test songs */\r\n            /*\r\n             * GB: tuned (1) to avoid too many short blocks for test sample\r\n             * TRUMPET\r\n             */\r\n            /*\r\n             * RH: tuned (2) to let enough short blocks through for test sample\r\n             * FSOL and SNAPS\r\n             */\r\n            for (var i = 1; i < 4; i++) {\r\n                var u = en_short[i - 1];\r\n                var v = en_short[i];\r\n                var m = Math.max(u, v);\r\n                if (m < 40000) { /* (2) */\r\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\r\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\r\n                            ns_attacks[chn][0] = 0;\r\n                        }\r\n                        ns_attacks[chn][i] = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\r\n                ns_attacks[chn][0] = 0;\r\n            }\r\n\r\n            if (gfc.nsPsy.lastAttacks[chn] == 3\r\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\r\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\r\n                ns_uselongblock = 0;\r\n\r\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\r\n                    ns_attacks[chn][1] = 0;\r\n                }\r\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\r\n                    ns_attacks[chn][2] = 0;\r\n                }\r\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\r\n                    ns_attacks[chn][3] = 0;\r\n                }\r\n            }\r\n            if (chn < 2) {\r\n                uselongblock[chn] = ns_uselongblock;\r\n            } else {\r\n                if (ns_uselongblock == 0) {\r\n                    uselongblock[0] = uselongblock[1] = 0;\r\n                }\r\n            }\r\n\r\n            /*\r\n             * there is a one granule delay. Copy maskings computed last call\r\n             * into masking_ratio to return to calling program.\r\n             */\r\n            energy[chn] = gfc.tot_ener[chn];\r\n        }\r\n    }\r\n\r\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\r\n        if (sblock == 0) {\r\n            for (var b = 0; b < gfc.npart_s; b++) {\r\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\r\n                gfc.nb_s1[chn][b] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function vbrpsy_skip_masking_l(gfc, chn) {\r\n        for (var b = 0; b < gfc.npart_l; b++) {\r\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\r\n            gfc.nb_1[chn][b] = 0;\r\n        }\r\n    }\r\n\r\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\r\n        var last_tab_entry = tab.length - 1;\r\n        var b = 0;\r\n        var a = avg[b] + avg[b + 1];\r\n        if (a > 0.0) {\r\n            var m = max[b];\r\n            if (m < max[b + 1])\r\n                m = max[b + 1];\r\n            a = 20.0 * (m * 2.0 - a)\r\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\r\n            var k = 0 | a;\r\n            if (k > last_tab_entry)\r\n                k = last_tab_entry;\r\n            mask_idx[b] = k;\r\n        } else {\r\n            mask_idx[b] = 0;\r\n        }\r\n\r\n        for (b = 1; b < gfc.npart_s - 1; b++) {\r\n            a = avg[b - 1] + avg[b] + avg[b + 1];\r\n            if (a > 0.0) {\r\n                var m = max[b - 1];\r\n                if (m < max[b])\r\n                    m = max[b];\r\n                if (m < max[b + 1])\r\n                    m = max[b + 1];\r\n                a = 20.0\r\n                    * (m * 3.0 - a)\r\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\r\n                    + gfc.numlines_s[b + 1] - 1));\r\n                var k = 0 | a;\r\n                if (k > last_tab_entry)\r\n                    k = last_tab_entry;\r\n                mask_idx[b] = k;\r\n            } else {\r\n                mask_idx[b] = 0;\r\n            }\r\n        }\r\n\r\n        a = avg[b - 1] + avg[b];\r\n        if (a > 0.0) {\r\n            var m = max[b - 1];\r\n            if (m < max[b])\r\n                m = max[b];\r\n            a = 20.0 * (m * 2.0 - a)\r\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\r\n            var k = 0 | a;\r\n            if (k > last_tab_entry)\r\n                k = last_tab_entry;\r\n            mask_idx[b] = k;\r\n        } else {\r\n            mask_idx[b] = 0;\r\n        }\r\n    }\r\n\r\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\r\n        var gfc = gfp.internal_flags;\r\n        var max = new float[Encoder.CBANDS], avg = new_float(Encoder.CBANDS);\r\n        var i, j, b;\r\n        var mask_idx_s = new int[Encoder.CBANDS];\r\n\r\n        for (b = j = 0; b < gfc.npart_s; ++b) {\r\n            var ebb = 0, m = 0;\r\n            var n = gfc.numlines_s[b];\r\n            for (i = 0; i < n; ++i, ++j) {\r\n                var el = fftenergy_s[sblock][j];\r\n                ebb += el;\r\n                if (m < el)\r\n                    m = el;\r\n            }\r\n            eb[b] = ebb;\r\n            max[b] = m;\r\n            avg[b] = ebb / n;\r\n        }\r\n        for (; b < Encoder.CBANDS; ++b) {\r\n            max[b] = 0;\r\n            avg[b] = 0;\r\n        }\r\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\r\n        for (j = b = 0; b < gfc.npart_s; b++) {\r\n            var kk = gfc.s3ind_s[b][0];\r\n            var last = gfc.s3ind_s[b][1];\r\n            var dd, dd_n;\r\n            var x, ecb, avg_mask;\r\n            dd = mask_idx_s[kk];\r\n            dd_n = 1;\r\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\r\n            ++j;\r\n            ++kk;\r\n            while (kk <= last) {\r\n                dd += mask_idx_s[kk];\r\n                dd_n += 1;\r\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\r\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\r\n                ++j;\r\n                ++kk;\r\n            }\r\n            dd = (1 + 2 * dd) / (2 * dd_n);\r\n            avg_mask = tab[dd] * 0.5;\r\n            ecb *= avg_mask;\r\n            thr[b] = ecb;\r\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\r\n            gfc.nb_s1[chn][b] = ecb;\r\n            {\r\n                /*\r\n                 * if THR exceeds EB, the quantization routines will take the\r\n                 * difference from other bands. in case of strong tonal samples\r\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\r\n                 * we limit THR here.\r\n                 */\r\n                x = max[b];\r\n                x *= gfc.minval_s[b];\r\n                x *= avg_mask;\r\n                if (thr[b] > x) {\r\n                    thr[b] = x;\r\n                }\r\n            }\r\n            if (gfc.masking_lower > 1) {\r\n                thr[b] *= gfc.masking_lower;\r\n            }\r\n            if (thr[b] > eb[b]) {\r\n                thr[b] = eb[b];\r\n            }\r\n            if (gfc.masking_lower < 1) {\r\n                thr[b] *= gfc.masking_lower;\r\n            }\r\n\r\n        }\r\n        for (; b < Encoder.CBANDS; ++b) {\r\n            eb[b] = 0;\r\n            thr[b] = 0;\r\n        }\r\n    }\r\n\r\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\r\n        var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\r\n        var mask_idx_l = new_int(Encoder.CBANDS + 2);\r\n        var b;\r\n\r\n        /*********************************************************************\r\n         * Calculate the energy and the tonality of each partition.\r\n         *********************************************************************/\r\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\r\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\r\n\r\n        /*********************************************************************\r\n         * convolve the partitioned energy and unpredictability with the\r\n         * spreading function, s3_l[b][k]\r\n         ********************************************************************/\r\n        var k = 0;\r\n        for (b = 0; b < gfc.npart_l; b++) {\r\n            var x, ecb, avg_mask, t;\r\n            /* convolve the partitioned energy with the spreading function */\r\n            var kk = gfc.s3ind[b][0];\r\n            var last = gfc.s3ind[b][1];\r\n            var dd = 0, dd_n = 0;\r\n            dd = mask_idx_l[kk];\r\n            dd_n += 1;\r\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\r\n            ++k;\r\n            ++kk;\r\n            while (kk <= last) {\r\n                dd += mask_idx_l[kk];\r\n                dd_n += 1;\r\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\r\n                t = vbrpsy_mask_add(ecb, x, kk - b);\r\n                ecb = t;\r\n                ++k;\r\n                ++kk;\r\n            }\r\n            dd = (1 + 2 * dd) / (2 * dd_n);\r\n            avg_mask = tab[dd] * 0.5;\r\n            ecb *= avg_mask;\r\n\r\n            /**** long block pre-echo control ****/\r\n            /**\r\n             * <PRE>\r\n             * dont use long block pre-echo control if previous granule was\r\n             * a short block.  This is to avoid the situation:\r\n             * frame0:  quiet (very low masking)\r\n             * frame1:  surge  (triggers short blocks)\r\n             * frame2:  regular frame.  looks like pre-echo when compared to\r\n             *          frame0, but all pre-echo was in frame1.\r\n             * </PRE>\r\n             */\r\n            /*\r\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\r\n             */\r\n            if (gfc.blocktype_old[chn & 0x01] == Encoder.SHORT_TYPE) {\r\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\r\n                if (ecb_limit > 0) {\r\n                    thr[b] = Math.min(ecb, ecb_limit);\r\n                } else {\r\n                    /**\r\n                     * <PRE>\r\n                     * Robert 071209:\r\n                     * Because we don't calculate long block psy when we know a granule\r\n                     * should be of short blocks, we don't have any clue how the granule\r\n                     * before would have looked like as a long block. So we have to guess\r\n                     * a little bit for this END_TYPE block.\r\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\r\n                     * The speed increase is worth it.\r\n                     * </PRE>\r\n                     */\r\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\r\n                }\r\n            } else {\r\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\r\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\r\n                var ecb_limit;\r\n                if (ecb_limit_2 <= 0) {\r\n                    ecb_limit_2 = ecb;\r\n                }\r\n                if (ecb_limit_1 <= 0) {\r\n                    ecb_limit_1 = ecb;\r\n                }\r\n                if (gfc.blocktype_old[chn & 0x01] == Encoder.NORM_TYPE) {\r\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\r\n                } else {\r\n                    ecb_limit = ecb_limit_1;\r\n                }\r\n                thr[b] = Math.min(ecb, ecb_limit);\r\n            }\r\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\r\n            gfc.nb_1[chn][b] = ecb;\r\n            {\r\n                /*\r\n                 * if THR exceeds EB, the quantization routines will take the\r\n                 * difference from other bands. in case of strong tonal samples\r\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\r\n                 * we limit THR here.\r\n                 */\r\n                x = max[b];\r\n                x *= gfc.minval_l[b];\r\n                x *= avg_mask;\r\n                if (thr[b] > x) {\r\n                    thr[b] = x;\r\n                }\r\n            }\r\n            if (gfc.masking_lower > 1) {\r\n                thr[b] *= gfc.masking_lower;\r\n            }\r\n            if (thr[b] > eb_l[b]) {\r\n                thr[b] = eb_l[b];\r\n            }\r\n            if (gfc.masking_lower < 1) {\r\n                thr[b] *= gfc.masking_lower;\r\n            }\r\n        }\r\n        for (; b < Encoder.CBANDS; ++b) {\r\n            eb_l[b] = 0;\r\n            thr[b] = 0;\r\n        }\r\n    }\r\n\r\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\r\n                /* force both channels to use the same block type */\r\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\r\n                /* But even without ms_stereo, FhG does this */\r\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\r\n            uselongblock[0] = uselongblock[1] = 0;\r\n\r\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\r\n            /* disable short blocks */\r\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed) {\r\n                uselongblock[chn] = 1;\r\n            }\r\n            if (gfp.short_blocks == ShortBlock.short_block_forced) {\r\n                uselongblock[chn] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /*\r\n         * update the blocktype of the previous granule, since it depends on\r\n         * what happend in this granule\r\n         */\r\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\r\n            var blocktype = Encoder.NORM_TYPE;\r\n            /* disable short blocks */\r\n\r\n            if (uselongblock[chn] != 0) {\r\n                /* no attack : use long blocks */\r\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\r\n                    blocktype = Encoder.STOP_TYPE;\r\n            } else {\r\n                /* attack : use short blocks */\r\n                blocktype = Encoder.SHORT_TYPE;\r\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\r\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\r\n                }\r\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\r\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\r\n            }\r\n\r\n            blocktype_d[chn] = gfc.blocktype_old[chn];\r\n            // value returned to calling program\r\n            gfc.blocktype_old[chn] = blocktype;\r\n            // save for next call to l3psy_anal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\r\n     */\r\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\r\n        var msfix2 = msfix * 2;\r\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\r\n        var rside, rmid;\r\n        for (var b = 0; b < n; ++b) {\r\n            var ebM = eb[2][b];\r\n            var ebS = eb[3][b];\r\n            var thmL = thr[0][b];\r\n            var thmR = thr[1][b];\r\n            var thmM = thr[2][b];\r\n            var thmS = thr[3][b];\r\n\r\n            /* use this fix if L & R masking differs by 2db or less */\r\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\r\n                var mld_m = cb_mld[b] * ebS;\r\n                var mld_s = cb_mld[b] * ebM;\r\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\r\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\r\n            } else {\r\n                rmid = thmM;\r\n                rside = thmS;\r\n            }\r\n            if (msfix > 0) {\r\n                /***************************************************************/\r\n                /* Adjust M/S maskings if user set \"msfix\" */\r\n                /***************************************************************/\r\n                /* Naoki Shibata 2000 */\r\n                var thmLR, thmMS;\r\n                var ath = ath_cb[b] * athlower;\r\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\r\n                thmM = Math.max(rmid, ath);\r\n                thmS = Math.max(rside, ath);\r\n                thmMS = thmM + thmS;\r\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\r\n                    var f = thmLR * msfix2 / thmMS;\r\n                    thmM *= f;\r\n                    thmS *= f;\r\n                }\r\n                rmid = Math.min(thmM, rmid);\r\n                rside = Math.min(thmS, rside);\r\n            }\r\n            if (rmid > ebM) {\r\n                rmid = ebM;\r\n            }\r\n            if (rside > ebS) {\r\n                rside = ebS;\r\n            }\r\n            thr[2][b] = rmid;\r\n            thr[3][b] = rside;\r\n        }\r\n    }\r\n\r\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /* fft and energy calculation */\r\n        var wsamp_l;\r\n        var wsamp_s;\r\n        var fftenergy = new_float(Encoder.HBLKSIZE);\r\n        var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\r\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\r\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\r\n        var eb = new_float_n([4, Encoder.CBANDS]), thr = new_float_n([4, Encoder.CBANDS]);\r\n        var sub_short_factor = new_float_n([4, 3]);\r\n        var pcfact = 0.6;\r\n\r\n        /* block type */\r\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\r\n            [0, 0, 0, 0]];\r\n        var uselongblock = new_int(2);\r\n\r\n        /* usual variables like loop indices, etc.. */\r\n\r\n        /* chn=2 and 3 = Mid and Side channels */\r\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\r\n            : gfc.channels_out;\r\n\r\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\r\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\r\n            uselongblock);\r\n\r\n        vbrpsy_compute_block_type(gfp, uselongblock);\r\n\r\n        /* LONG BLOCK CASE */\r\n        {\r\n            for (var chn = 0; chn < n_chn_psy; chn++) {\r\n                var ch01 = chn & 0x01;\r\n                wsamp_l = wsamp_L;\r\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\r\n                    fftenergy, wsamp_l, ch01);\r\n\r\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\r\n                    fftenergy);\r\n\r\n                if (uselongblock[ch01] != 0) {\r\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\r\n                        chn);\r\n                } else {\r\n                    vbrpsy_skip_masking_l(gfc, chn);\r\n                }\r\n            }\r\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\r\n                /* M/S channel */\r\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\r\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\r\n                        gfp.msfix, gfc.npart_l);\r\n                }\r\n            }\r\n            /* TODO: apply adaptive ATH masking here ?? */\r\n            for (var chn = 0; chn < n_chn_psy; chn++) {\r\n                var ch01 = chn & 0x01;\r\n                if (uselongblock[ch01] != 0) {\r\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* SHORT BLOCKS CASE */\r\n        {\r\n            for (var sblock = 0; sblock < 3; sblock++) {\r\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\r\n                    var ch01 = chn & 0x01;\r\n\r\n                    if (uselongblock[ch01] != 0) {\r\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\r\n                    } else {\r\n                        /* compute masking thresholds for short blocks */\r\n                        wsamp_s = wsamp_S;\r\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\r\n                            fftenergy_s, wsamp_s, ch01);\r\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\r\n                            thr[chn], chn, sblock);\r\n                    }\r\n                }\r\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\r\n                    /* M/S channel */\r\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\r\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\r\n                            gfp.msfix, gfc.npart_s);\r\n                    }\r\n                    /* L/R channel */\r\n                }\r\n                /* TODO: apply adaptive ATH masking here ?? */\r\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\r\n                    var ch01 = chn & 0x01;\r\n                    if (0 == uselongblock[ch01]) {\r\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\r\n                            chn, sblock);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**** short block pre-echo control ****/\r\n            for (var chn = 0; chn < n_chn_psy; chn++) {\r\n                var ch01 = chn & 0x01;\r\n\r\n                if (uselongblock[ch01] != 0) {\r\n                    continue;\r\n                }\r\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n                    var new_thmm = new_float(3);\r\n                    for (var sblock = 0; sblock < 3; sblock++) {\r\n                        var thmm = gfc.thm[chn].s[sb][sblock];\r\n                        thmm *= NS_PREECHO_ATT0;\r\n\r\n                        if (ns_attacks[chn][sblock] >= 2\r\n                            || ns_attacks[chn][sblock + 1] == 1) {\r\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\r\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                                NS_PREECHO_ATT1 * pcfact);\r\n                            thmm = Math.min(thmm, p);\r\n                        } else if (ns_attacks[chn][sblock] == 1) {\r\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\r\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                                NS_PREECHO_ATT2 * pcfact);\r\n                            thmm = Math.min(thmm, p);\r\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\r\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\r\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\r\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                                NS_PREECHO_ATT2 * pcfact);\r\n                            thmm = Math.min(thmm, p);\r\n                        }\r\n\r\n                        /* pulse like signal detection for fatboy.wav and so on */\r\n                        thmm *= sub_short_factor[chn][sblock];\r\n\r\n                        new_thmm[sblock] = thmm;\r\n                    }\r\n                    for (var sblock = 0; sblock < 3; sblock++) {\r\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (var chn = 0; chn < n_chn_psy; chn++) {\r\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\r\n        }\r\n\r\n        /***************************************************************\r\n         * determine final block type\r\n         ***************************************************************/\r\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\r\n\r\n        /*********************************************************************\r\n         * compute the value of PE to return ... no delay and advance\r\n         *********************************************************************/\r\n        for (var chn = 0; chn < n_chn_psy; chn++) {\r\n            var ppe;\r\n            var ppePos;\r\n            var type;\r\n            var mr;\r\n\r\n            if (chn > 1) {\r\n                ppe = percep_MS_entropy;\r\n                ppePos = -2;\r\n                type = Encoder.NORM_TYPE;\r\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\r\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\r\n                    type = Encoder.SHORT_TYPE;\r\n                mr = masking_MS_ratio[gr_out][chn - 2];\r\n            } else {\r\n                ppe = percep_entropy;\r\n                ppePos = 0;\r\n                type = blocktype_d[chn];\r\n                mr = masking_ratio[gr_out][chn];\r\n            }\r\n\r\n            if (type == Encoder.SHORT_TYPE) {\r\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\r\n            } else {\r\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\r\n            }\r\n\r\n            if (gfp.analysis) {\r\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function s3_func_x(bark, hf_slope) {\r\n        var tempx = bark, tempy;\r\n\r\n        if (tempx >= 0) {\r\n            tempy = -tempx * 27;\r\n        } else {\r\n            tempy = tempx * hf_slope;\r\n        }\r\n        if (tempy <= -72.0) {\r\n            return 0;\r\n        }\r\n        return Math.exp(tempy * LN_TO_LOG10);\r\n    }\r\n\r\n    function norm_s3_func_x(hf_slope) {\r\n        var lim_a = 0, lim_b = 0;\r\n        {\r\n            var x = 0, l, h;\r\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\r\n                ;\r\n            l = x;\r\n            h = 0;\r\n            while (Math.abs(h - l) > 1e-12) {\r\n                x = (h + l) / 2;\r\n                if (s3_func_x(x, hf_slope) > 0) {\r\n                    h = x;\r\n                } else {\r\n                    l = x;\r\n                }\r\n            }\r\n            lim_a = l;\r\n        }\r\n        {\r\n            var x = 0, l, h;\r\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\r\n                ;\r\n            l = 0;\r\n            h = x;\r\n            while (Math.abs(h - l) > 1e-12) {\r\n                x = (h + l) / 2;\r\n                if (s3_func_x(x, hf_slope) > 0) {\r\n                    l = x;\r\n                } else {\r\n                    h = x;\r\n                }\r\n            }\r\n            lim_b = h;\r\n        }\r\n        {\r\n            var sum = 0;\r\n            var m = 1000;\r\n            var i;\r\n            for (i = 0; i <= m; ++i) {\r\n                var x = lim_a + i * (lim_b - lim_a) / m;\r\n                var y = s3_func_x(x, hf_slope);\r\n                sum += y;\r\n            }\r\n            {\r\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\r\n                /* printf( \"norm = %lf\\n\",norm); */\r\n                return norm;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *   The spreading function.  Values returned in units of energy\r\n     */\r\n    function s3_func(bark) {\r\n        var tempx, x, tempy, temp;\r\n        tempx = bark;\r\n        if (tempx >= 0)\r\n            tempx *= 3;\r\n        else\r\n            tempx *= 1.5;\r\n\r\n        if (tempx >= 0.5 && tempx <= 2.5) {\r\n            temp = tempx - 0.5;\r\n            x = 8.0 * (temp * temp - 2.0 * temp);\r\n        } else\r\n            x = 0.0;\r\n        tempx += 0.474;\r\n        tempy = 15.811389 + 7.5 * tempx - 17.5\r\n            * Math.sqrt(1.0 + tempx * tempx);\r\n\r\n        if (tempy <= -60.0)\r\n            return 0.0;\r\n\r\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\r\n\r\n        /**\r\n         * <PRE>\r\n         * Normalization.  The spreading function should be normalized so that:\r\n         * +inf\r\n         * /\r\n         * |  s3 [ bark ]  d(bark)   =  1\r\n         * /\r\n         * -inf\r\n         * </PRE>\r\n         */\r\n        tempx /= .6609193;\r\n        return tempx;\r\n    }\r\n\r\n    /**\r\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\r\n     */\r\n    function freq2bark(freq) {\r\n        /* input: freq in hz output: barks */\r\n        if (freq < 0)\r\n            freq = 0;\r\n        freq = freq * 0.001;\r\n        return 13.0 * Math.atan(.76 * freq) + 3.5\r\n            * Math.atan(freq * freq / (7.5 * 7.5));\r\n    }\r\n\r\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\r\n        var b_frq = new_float(Encoder.CBANDS + 1);\r\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\r\n        var partition = new_int(Encoder.HBLKSIZE);\r\n        var i;\r\n        sfreq /= blksize;\r\n        var j = 0;\r\n        var ni = 0;\r\n        /* compute numlines, the number of spectral lines in each partition band */\r\n        /* each partition band should be about DELBARK wide. */\r\n        for (i = 0; i < Encoder.CBANDS; i++) {\r\n            var bark1;\r\n            var j2;\r\n            bark1 = freq2bark(sfreq * j);\r\n\r\n            b_frq[i] = sfreq * j;\r\n\r\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\r\n            && j2 <= blksize / 2; j2++)\r\n                ;\r\n\r\n            numlines[i] = j2 - j;\r\n            ni = i + 1;\r\n\r\n            while (j < j2) {\r\n                partition[j++] = i;\r\n            }\r\n            if (j > blksize / 2) {\r\n                j = blksize / 2;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        b_frq[i] = sfreq * j;\r\n\r\n        for (var sfb = 0; sfb < sbmax; sfb++) {\r\n            var i1, i2, start, end;\r\n            var arg;\r\n            start = scalepos[sfb];\r\n            end = scalepos[sfb + 1];\r\n\r\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\r\n            if (i1 < 0)\r\n                i1 = 0;\r\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\r\n\r\n            if (i2 > blksize / 2)\r\n                i2 = blksize / 2;\r\n\r\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\r\n            bo[sfb] = partition[i2];\r\n            var f_tmp = sample_freq_frac * end;\r\n            /*\r\n             * calculate how much of this band belongs to current scalefactor\r\n             * band\r\n             */\r\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\r\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\r\n            if (bo_w[sfb] < 0) {\r\n                bo_w[sfb] = 0;\r\n            } else {\r\n                if (bo_w[sfb] > 1) {\r\n                    bo_w[sfb] = 1;\r\n                }\r\n            }\r\n            /* setup stereo demasking thresholds */\r\n            /* formula reverse enginerred from plot in paper */\r\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\r\n            arg = ( Math.min(arg, 15.5) / 15.5);\r\n\r\n            mld[sfb] = Math.pow(10.0,\r\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\r\n        }\r\n\r\n        /* compute bark values of each critical band */\r\n        j = 0;\r\n        for (var k = 0; k < ni; k++) {\r\n            var w = numlines[k];\r\n            var bark1, bark2;\r\n\r\n            bark1 = freq2bark(sfreq * (j));\r\n            bark2 = freq2bark(sfreq * (j + w - 1));\r\n            bval[k] = .5 * (bark1 + bark2);\r\n\r\n            bark1 = freq2bark(sfreq * (j - .5));\r\n            bark2 = freq2bark(sfreq * (j + w - .5));\r\n            bval_width[k] = bark2 - bark1;\r\n            j += w;\r\n        }\r\n\r\n        return ni;\r\n    }\r\n\r\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\r\n        var s3 = new_float_n([Encoder.CBANDS, Encoder.CBANDS]);\r\n        /*\r\n         * The s3 array is not linear in the bark scale.\r\n         *\r\n         * bval[x] should be used to get the bark value.\r\n         */\r\n        var j;\r\n        var numberOfNoneZero = 0;\r\n\r\n        /**\r\n         * <PRE>\r\n         * s[i][j], the value of the spreading function,\r\n         * centered at band j (masker), for band i (maskee)\r\n         *\r\n         * i.e.: sum over j to spread into signal barkval=i\r\n         * NOTE: i and j are used opposite as in the ISO docs\r\n         * </PRE>\r\n         */\r\n        if (use_old_s3) {\r\n            for (var i = 0; i < npart; i++) {\r\n                for (j = 0; j < npart; j++) {\r\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\r\n                    s3[i][j] = v * norm[i];\r\n                }\r\n            }\r\n        } else {\r\n            for (j = 0; j < npart; j++) {\r\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\r\n                var s3_x_norm = norm_s3_func_x(hf_slope);\r\n                for (var i = 0; i < npart; i++) {\r\n                    var v = s3_x_norm\r\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\r\n                        * bval_width[j];\r\n                    s3[i][j] = v * norm[i];\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < npart; i++) {\r\n            for (j = 0; j < npart; j++) {\r\n                if (s3[i][j] > 0.0)\r\n                    break;\r\n            }\r\n            s3ind[i][0] = j;\r\n\r\n            for (j = npart - 1; j > 0; j--) {\r\n                if (s3[i][j] > 0.0)\r\n                    break;\r\n            }\r\n            s3ind[i][1] = j;\r\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\r\n        }\r\n\r\n        var p = new_float(numberOfNoneZero);\r\n        var k = 0;\r\n        for (var i = 0; i < npart; i++)\r\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\r\n                p[k++] = s3[i][j];\r\n\r\n        return p;\r\n    }\r\n\r\n    function stereo_demask(f) {\r\n        /* setup stereo demasking thresholds */\r\n        /* formula reverse enginerred from plot in paper */\r\n        var arg = freq2bark(f);\r\n        arg = (Math.min(arg, 15.5) / 15.5);\r\n\r\n        return Math.pow(10.0,\r\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\r\n    }\r\n\r\n    /**\r\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\r\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\r\n     * does not use this feature. (Robert 071216)\r\n     */\r\n    this.psymodel_init = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var i;\r\n        var useOldS3 = true;\r\n        var bvl_a = 13, bvl_b = 24;\r\n        var snr_l_a = 0, snr_l_b = 0;\r\n        var snr_s_a = -8.25, snr_s_b = -4.5;\r\n        var bval = new_float(Encoder.CBANDS);\r\n        var bval_width = new_float(Encoder.CBANDS);\r\n        var norm = new_float(Encoder.CBANDS);\r\n        var sfreq = gfp.out_samplerate;\r\n\r\n        switch (gfp.experimentalZ) {\r\n            default:\r\n            case 0:\r\n                useOldS3 = true;\r\n                break;\r\n            case 1:\r\n                useOldS3 = (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) ? false\r\n                    : true;\r\n                break;\r\n            case 2:\r\n                useOldS3 = false;\r\n                break;\r\n            case 3:\r\n                bvl_a = 8;\r\n                snr_l_a = -1.75;\r\n                snr_l_b = -0.0125;\r\n                snr_s_a = -8.25;\r\n                snr_s_b = -2.25;\r\n                break;\r\n        }\r\n        gfc.ms_ener_ratio_old = .25;\r\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder.NORM_TYPE;\r\n        // the vbr header is long blocks\r\n\r\n        for (i = 0; i < 4; ++i) {\r\n            for (var j = 0; j < Encoder.CBANDS; ++j) {\r\n                gfc.nb_1[i][j] = 1e20;\r\n                gfc.nb_2[i][j] = 1e20;\r\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\r\n            }\r\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\r\n                gfc.en[i].l[sb] = 1e20;\r\n                gfc.thm[i].l[sb] = 1e20;\r\n            }\r\n            for (var j = 0; j < 3; ++j) {\r\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n                    gfc.en[i].s[sb][j] = 1e20;\r\n                    gfc.thm[i].s[sb][j] = 1e20;\r\n                }\r\n                gfc.nsPsy.lastAttacks[i] = 0;\r\n            }\r\n            for (var j = 0; j < 9; j++)\r\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\r\n        }\r\n\r\n        /* init. for loudness approx. -jd 2001 mar 27 */\r\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\r\n\r\n        /*************************************************************************\r\n         * now compute the psychoacoustic model specific constants\r\n         ************************************************************************/\r\n        /* compute numlines, bo, bm, bval, bval_width, mld */\r\n\r\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\r\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\r\n            Encoder.BLKSIZE, gfc.scalefac_band.l, Encoder.BLKSIZE\r\n            / (2.0 * 576), Encoder.SBMAX_l);\r\n        /* compute the spreading function */\r\n        for (i = 0; i < gfc.npart_l; i++) {\r\n            var snr = snr_l_a;\r\n            if (bval[i] >= bvl_a) {\r\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\r\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\r\n            }\r\n            norm[i] = Math.pow(10.0, snr / 10.0);\r\n            if (gfc.numlines_l[i] > 0) {\r\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\r\n            } else {\r\n                gfc.rnumlines_l[i] = 0;\r\n            }\r\n        }\r\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\r\n            norm, useOldS3);\r\n\r\n        /* compute long block specific values, ATH and MINVAL */\r\n        var j = 0;\r\n        for (i = 0; i < gfc.npart_l; i++) {\r\n            var x;\r\n\r\n            /* ATH */\r\n            x = Float.MAX_VALUE;\r\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\r\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE);\r\n                var level;\r\n                /*\r\n                 * ATH below 100 Hz constant, not further climbing\r\n                 */\r\n                level = this.ATHformula(freq * 1000, gfp) - 20;\r\n                // scale to FFT units; returned value is in dB\r\n                level = Math.pow(10., 0.1 * level);\r\n                // convert from dB . energy\r\n                level *= gfc.numlines_l[i];\r\n                if (x > level)\r\n                    x = level;\r\n            }\r\n            gfc.ATH.cb_l[i] = x;\r\n\r\n            /*\r\n             * MINVAL. For low freq, the strength of the masking is limited by\r\n             * minval this is an ISO MPEG1 thing, dont know if it is really\r\n             * needed\r\n             */\r\n            /*\r\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\r\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\r\n             * TODO: Further refinement of the shape of this hack.\r\n             */\r\n            x = -20 + bval[i] * 20 / 10;\r\n            if (x > 6) {\r\n                x = 100;\r\n            }\r\n            if (x < -15) {\r\n                x = -15;\r\n            }\r\n            x -= 8.;\r\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\r\n        }\r\n\r\n        /************************************************************************\r\n         * do the same things for short blocks\r\n         ************************************************************************/\r\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\r\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\r\n            Encoder.BLKSIZE_s, gfc.scalefac_band.s, Encoder.BLKSIZE_s\r\n            / (2.0 * 192), Encoder.SBMAX_s);\r\n\r\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\r\n        j = 0;\r\n        for (i = 0; i < gfc.npart_s; i++) {\r\n            var x;\r\n            var snr = snr_s_a;\r\n            if (bval[i] >= bvl_a) {\r\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\r\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\r\n            }\r\n            norm[i] = Math.pow(10.0, snr / 10.0);\r\n\r\n            /* ATH */\r\n            x = Float.MAX_VALUE;\r\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\r\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE_s);\r\n                var level;\r\n                /* freq = Min(.1,freq); */\r\n                /*\r\n                 * ATH below 100 Hz constant, not\r\n                 * further climbing\r\n                 */\r\n                level = this.ATHformula(freq * 1000, gfp) - 20;\r\n                // scale to FFT units; returned value is in dB\r\n                level = Math.pow(10., 0.1 * level);\r\n                // convert from dB . energy\r\n                level *= gfc.numlines_s[i];\r\n                if (x > level)\r\n                    x = level;\r\n            }\r\n            gfc.ATH.cb_s[i] = x;\r\n\r\n            /*\r\n             * MINVAL. For low freq, the strength of the masking is limited by\r\n             * minval this is an ISO MPEG1 thing, dont know if it is really\r\n             * needed\r\n             */\r\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\r\n            if (bval[i] > 12) {\r\n                x *= 1 + Math.log(1 + x) * 3.1;\r\n            }\r\n            if (bval[i] < 12) {\r\n                x *= 1 + Math.log(1 - x) * 2.3;\r\n            }\r\n            if (x < -15) {\r\n                x = -15;\r\n            }\r\n            x -= 8;\r\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\r\n                * gfc.numlines_s[i];\r\n        }\r\n\r\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\r\n            norm, useOldS3);\r\n\r\n        init_mask_add_max_values();\r\n        fft.init_fft(gfc);\r\n\r\n        /* setup temporal masking */\r\n        gfc.decay = Math.exp(-1.0 * LOG10\r\n            / (temporalmask_sustain_sec * sfreq / 192.0));\r\n\r\n        {\r\n            var msfix;\r\n            msfix = NS_MSFIX;\r\n            if ((gfp.exp_nspsytune & 2) != 0)\r\n                msfix = 1.0;\r\n            if (Math.abs(gfp.msfix) > 0.0)\r\n                msfix = gfp.msfix;\r\n            gfp.msfix = msfix;\r\n\r\n            /*\r\n             * spread only from npart_l bands. Normally, we use the spreading\r\n             * function to convolve from npart_l down to npart_l bands\r\n             */\r\n            for (var b = 0; b < gfc.npart_l; b++)\r\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\r\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\r\n        }\r\n\r\n        /*\r\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\r\n         * per second\r\n         */\r\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\r\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\r\n        gfc.ATH.adjust = 0.01;\r\n        /* minimum, for leading low loudness */\r\n        gfc.ATH.adjustLimit = 1.0;\r\n        /* on lead, allow adjust up to maximum */\r\n\r\n\r\n        if (gfp.ATHtype != -1) {\r\n            /* compute equal loudness weights (eql_w) */\r\n            var freq;\r\n            var freq_inc = gfp.out_samplerate\r\n                / (Encoder.BLKSIZE);\r\n            var eql_balance = 0.0;\r\n            freq = 0.0;\r\n            for (i = 0; i < Encoder.BLKSIZE / 2; ++i) {\r\n                /* convert ATH dB to relative power (not dB) */\r\n                /* to determine eql_w */\r\n                freq += freq_inc;\r\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\r\n                eql_balance += gfc.ATH.eql_w[i];\r\n            }\r\n            eql_balance = 1.0 / eql_balance;\r\n            for (i = Encoder.BLKSIZE / 2; --i >= 0;) { /* scale weights */\r\n                gfc.ATH.eql_w[i] *= eql_balance;\r\n            }\r\n        }\r\n        {\r\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\r\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\r\n                    ++j;\r\n                }\r\n            }\r\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\r\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\r\n                    ++j;\r\n                }\r\n            }\r\n        }\r\n        j = 0;\r\n        for (i = 0; i < gfc.npart_l; i++) {\r\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder.BLKSIZE);\r\n            gfc.mld_cb_l[i] = stereo_demask(freq);\r\n            j += gfc.numlines_l[i];\r\n        }\r\n        for (; i < Encoder.CBANDS; ++i) {\r\n            gfc.mld_cb_l[i] = 1;\r\n        }\r\n        j = 0;\r\n        for (i = 0; i < gfc.npart_s; i++) {\r\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder.BLKSIZE_s);\r\n            gfc.mld_cb_s[i] = stereo_demask(freq);\r\n            j += gfc.numlines_s[i];\r\n        }\r\n        for (; i < Encoder.CBANDS; ++i) {\r\n            gfc.mld_cb_s[i] = 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Those ATH formulas are returning their minimum value for input = -1\r\n     */\r\n    function ATHformula_GB(f, value) {\r\n        /**\r\n         * <PRE>\r\n         *  from Painter & Spanias\r\n         *           modified by Gabriel Bouvigne to better fit the reality\r\n         *           ath =    3.640 * pow(f,-0.8)\r\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\r\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\r\n         *           + 0.6* 0.001 * pow(f,4.0);\r\n         *\r\n         *\r\n         *           In the past LAME was using the Painter &Spanias formula.\r\n         *           But we had some recurrent problems with HF content.\r\n         *           We measured real ATH values, and found the older formula\r\n         *           to be inaccurate in the higher part. So we made this new\r\n         *           formula and this solved most of HF problematic test cases.\r\n         *           The tradeoff is that in VBR mode it increases a lot the\r\n         *           bitrate.\r\n         * </PRE>\r\n         */\r\n\r\n        /*\r\n         * This curve can be adjusted according to the VBR scale: it adjusts\r\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\r\n         * formula for V0. This way the VBR bitrate is more balanced according\r\n         * to the -V value.\r\n         */\r\n\r\n        // the following Hack allows to ask for the lowest value\r\n        if (f < -.3)\r\n            f = 3410;\r\n\r\n        // convert to khz\r\n        f /= 1000;\r\n        f = Math.max(0.1, f);\r\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\r\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\r\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\r\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\r\n        return ath;\r\n    }\r\n\r\n    this.ATHformula = function (f, gfp) {\r\n        var ath;\r\n        switch (gfp.ATHtype) {\r\n            case 0:\r\n                ath = ATHformula_GB(f, 9);\r\n                break;\r\n            case 1:\r\n                // over sensitive, should probably be removed\r\n                ath = ATHformula_GB(f, -1);\r\n                break;\r\n            case 2:\r\n                ath = ATHformula_GB(f, 0);\r\n                break;\r\n            case 3:\r\n                // modification of GB formula by Roel\r\n                ath = ATHformula_GB(f, 1) + 6;\r\n                break;\r\n            case 4:\r\n                ath = ATHformula_GB(f, gfp.ATHcurve);\r\n                break;\r\n            default:\r\n                ath = ATHformula_GB(f, 0);\r\n                break;\r\n        }\r\n        return ath;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction Lame() {\r\n    var self = this;\r\n    var LAME_MAXALBUMART = (128 * 1024);\r\n\r\n    Lame.V9 = 410;\r\n    Lame.V8 = 420;\r\n    Lame.V7 = 430;\r\n    Lame.V6 = 440;\r\n    Lame.V5 = 450;\r\n    Lame.V4 = 460;\r\n    Lame.V3 = 470;\r\n    Lame.V2 = 480;\r\n    Lame.V1 = 490;\r\n    Lame.V0 = 500;\r\n\r\n    /* still there for compatibility */\r\n\r\n    Lame.R3MIX = 1000;\r\n    Lame.STANDARD = 1001;\r\n    Lame.EXTREME = 1002;\r\n    Lame.INSANE = 1003;\r\n    Lame.STANDARD_FAST = 1004;\r\n    Lame.EXTREME_FAST = 1005;\r\n    Lame.MEDIUM = 1006;\r\n    Lame.MEDIUM_FAST = 1007;\r\n\r\n    /**\r\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\r\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\r\n     * (LAME_MAXMP3BUFFER is now obsolete)\r\n     */\r\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\r\n    Lame.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\r\n\r\n    var ga;\r\n    var bs;\r\n    var p;\r\n    var qupvt;\r\n    var qu;\r\n    var psy = new PsyModel();\r\n    var vbr;\r\n    var ver;\r\n    var id3;\r\n    var mpglib;\r\n    this.enc = new Encoder();\r\n\r\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\r\n        ga = _ga;\r\n        bs = _bs;\r\n        p = _p;\r\n        qupvt = _qupvt;\r\n        qu = _qu;\r\n        vbr = _vbr;\r\n        ver = _ver;\r\n        id3 = _id3;\r\n        mpglib = _mpglib;\r\n        this.enc.setModules(bs, psy, qupvt, vbr);\r\n    }\r\n\r\n    /**\r\n     * PSY Model related stuff\r\n     */\r\n    function PSY() {\r\n        /**\r\n         * The dbQ stuff.\r\n         */\r\n        this.mask_adjust = 0.;\r\n        /**\r\n         * The dbQ stuff.\r\n         */\r\n        this.mask_adjust_short = 0.;\r\n        /* at transition from one scalefactor band to next */\r\n        /**\r\n         * Band weight long scalefactor bands.\r\n         */\r\n        this.bo_l_weight = new_float(Encoder.SBMAX_l);\r\n        /**\r\n         * Band weight short scalefactor bands.\r\n         */\r\n        this.bo_s_weight = new_float(Encoder.SBMAX_s);\r\n    }\r\n\r\n    function LowPassHighPass() {\r\n        this.lowerlimit = 0.;\r\n    }\r\n\r\n    function BandPass(bitrate, lPass) {\r\n        this.lowpass = lPass;\r\n    }\r\n\r\n    var LAME_ID = 0xFFF88E3B;\r\n\r\n    function lame_init_old(gfp) {\r\n        var gfc;\r\n\r\n        gfp.class_id = LAME_ID;\r\n\r\n        gfc = gfp.internal_flags = new LameInternalFlags();\r\n\r\n        /* Global flags. set defaults here for non-zero values */\r\n        /* see lame.h for description */\r\n        /*\r\n         * set integer values to -1 to mean that LAME will compute the best\r\n         * value, UNLESS the calling program as set it (and the value is no\r\n         * longer -1)\r\n         */\r\n\r\n        gfp.mode = MPEGMode.NOT_SET;\r\n        gfp.original = 1;\r\n        gfp.in_samplerate = 44100;\r\n        gfp.num_channels = 2;\r\n        gfp.num_samples = -1;\r\n\r\n        gfp.bWriteVbrTag = true;\r\n        gfp.quality = -1;\r\n        gfp.short_blocks = null;\r\n        gfc.subblock_gain = -1;\r\n\r\n        gfp.lowpassfreq = 0;\r\n        gfp.highpassfreq = 0;\r\n        gfp.lowpasswidth = -1;\r\n        gfp.highpasswidth = -1;\r\n\r\n        gfp.VBR = VbrMode.vbr_off;\r\n        gfp.VBR_q = 4;\r\n        gfp.ATHcurve = -1;\r\n        gfp.VBR_mean_bitrate_kbps = 128;\r\n        gfp.VBR_min_bitrate_kbps = 0;\r\n        gfp.VBR_max_bitrate_kbps = 0;\r\n        gfp.VBR_hard_min = 0;\r\n        gfc.VBR_min_bitrate = 1;\r\n        /* not 0 ????? */\r\n        gfc.VBR_max_bitrate = 13;\r\n        /* not 14 ????? */\r\n\r\n        gfp.quant_comp = -1;\r\n        gfp.quant_comp_short = -1;\r\n\r\n        gfp.msfix = -1;\r\n\r\n        gfc.resample_ratio = 1;\r\n\r\n        gfc.OldValue[0] = 180;\r\n        gfc.OldValue[1] = 180;\r\n        gfc.CurrentStep[0] = 4;\r\n        gfc.CurrentStep[1] = 4;\r\n        gfc.masking_lower = 1;\r\n        gfc.nsPsy.attackthre = -1;\r\n        gfc.nsPsy.attackthre_s = -1;\r\n\r\n        gfp.scale = -1;\r\n\r\n        gfp.athaa_type = -1;\r\n        gfp.ATHtype = -1;\r\n        /* default = -1 = set in lame_init_params */\r\n        gfp.athaa_loudapprox = -1;\r\n        /* 1 = flat loudness approx. (total energy) */\r\n        /* 2 = equal loudness curve */\r\n        gfp.athaa_sensitivity = 0.0;\r\n        /* no offset */\r\n        gfp.useTemporal = null;\r\n        gfp.interChRatio = -1;\r\n\r\n        /*\r\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\r\n         * ENCDELAY = internal encoder delay. And then we have to add\r\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\r\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\r\n         * this granule we need the previous granule for the first 288 samples\r\n         * (no problem), and the next granule for the next 288 samples (not\r\n         * possible if this is last granule). So we need to pad with 288 samples\r\n         * to make sure we can encode the 576 samples we are interested in.\r\n         */\r\n        gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\r\n        gfp.encoder_padding = 0;\r\n        gfc.mf_size = Encoder.ENCDELAY - Encoder.MDCTDELAY;\r\n        /*\r\n         * we pad input with this many 0's\r\n         */\r\n\r\n        gfp.findReplayGain = false;\r\n        gfp.decode_on_the_fly = false;\r\n\r\n        gfc.decode_on_the_fly = false;\r\n        gfc.findReplayGain = false;\r\n        gfc.findPeakSample = false;\r\n\r\n        gfc.RadioGain = 0;\r\n        gfc.AudiophileGain = 0;\r\n        gfc.noclipGainChange = 0;\r\n        gfc.noclipScale = -1.0;\r\n\r\n        gfp.preset = 0;\r\n\r\n        gfp.write_id3tag_automatic = true;\r\n        return 0;\r\n    }\r\n\r\n    this.lame_init = function () {\r\n        var gfp = new LameGlobalFlags();\r\n\r\n        var ret = lame_init_old(gfp);\r\n        if (ret != 0) {\r\n            return null;\r\n        }\r\n\r\n        gfp.lame_allocated_gfp = 1;\r\n        return gfp;\r\n    }\r\n\r\n    function filter_coef(x) {\r\n        if (x > 1.0)\r\n            return 0.0;\r\n        if (x <= 0.0)\r\n            return 1.0;\r\n\r\n        return Math.cos(Math.PI / 2 * x);\r\n    }\r\n\r\n    this.nearestBitrateFullIndex = function (bitrate) {\r\n        /* borrowed from DM abr presets */\r\n\r\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\r\n            96, 112, 128, 160, 192, 224, 256, 320];\r\n\r\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\r\n\r\n        /* We assume specified bitrate will be 320kbps */\r\n        upper_range_kbps = full_bitrate_table[16];\r\n        upper_range = 16;\r\n        lower_range_kbps = full_bitrate_table[16];\r\n        lower_range = 16;\r\n\r\n        /*\r\n         * Determine which significant bitrates the value specified falls\r\n         * between, if loop ends without breaking then we were correct above\r\n         * that the value was 320\r\n         */\r\n        for (var b = 0; b < 16; b++) {\r\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\r\n                upper_range_kbps = full_bitrate_table[b + 1];\r\n                upper_range = b + 1;\r\n                lower_range_kbps = full_bitrate_table[b];\r\n                lower_range = (b);\r\n                break;\r\n                /* We found upper range */\r\n            }\r\n        }\r\n\r\n        /* Determine which range the value specified is closer to */\r\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\r\n            return lower_range;\r\n        }\r\n        return upper_range;\r\n    }\r\n\r\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\r\n        /*\r\n         * Rules:\r\n         *\r\n         * - if possible, sfb21 should NOT be used\r\n         */\r\n        var suggested_samplefreq = 44100;\r\n\r\n        if (input_samplefreq >= 48000)\r\n            suggested_samplefreq = 48000;\r\n        else if (input_samplefreq >= 44100)\r\n            suggested_samplefreq = 44100;\r\n        else if (input_samplefreq >= 32000)\r\n            suggested_samplefreq = 32000;\r\n        else if (input_samplefreq >= 24000)\r\n            suggested_samplefreq = 24000;\r\n        else if (input_samplefreq >= 22050)\r\n            suggested_samplefreq = 22050;\r\n        else if (input_samplefreq >= 16000)\r\n            suggested_samplefreq = 16000;\r\n        else if (input_samplefreq >= 12000)\r\n            suggested_samplefreq = 12000;\r\n        else if (input_samplefreq >= 11025)\r\n            suggested_samplefreq = 11025;\r\n        else if (input_samplefreq >= 8000)\r\n            suggested_samplefreq = 8000;\r\n\r\n        if (lowpassfreq == -1)\r\n            return suggested_samplefreq;\r\n\r\n        if (lowpassfreq <= 15960)\r\n            suggested_samplefreq = 44100;\r\n        if (lowpassfreq <= 15250)\r\n            suggested_samplefreq = 32000;\r\n        if (lowpassfreq <= 11220)\r\n            suggested_samplefreq = 24000;\r\n        if (lowpassfreq <= 9970)\r\n            suggested_samplefreq = 22050;\r\n        if (lowpassfreq <= 7230)\r\n            suggested_samplefreq = 16000;\r\n        if (lowpassfreq <= 5420)\r\n            suggested_samplefreq = 12000;\r\n        if (lowpassfreq <= 4510)\r\n            suggested_samplefreq = 11025;\r\n        if (lowpassfreq <= 3970)\r\n            suggested_samplefreq = 8000;\r\n\r\n        if (input_samplefreq < suggested_samplefreq) {\r\n            /*\r\n             * choose a valid MPEG sample frequency above the input sample\r\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\r\n             */\r\n            if (input_samplefreq > 44100) {\r\n                return 48000;\r\n            }\r\n            if (input_samplefreq > 32000) {\r\n                return 44100;\r\n            }\r\n            if (input_samplefreq > 24000) {\r\n                return 32000;\r\n            }\r\n            if (input_samplefreq > 22050) {\r\n                return 24000;\r\n            }\r\n            if (input_samplefreq > 16000) {\r\n                return 22050;\r\n            }\r\n            if (input_samplefreq > 12000) {\r\n                return 16000;\r\n            }\r\n            if (input_samplefreq > 11025) {\r\n                return 12000;\r\n            }\r\n            if (input_samplefreq > 8000) {\r\n                return 11025;\r\n            }\r\n            return 8000;\r\n        }\r\n        return suggested_samplefreq;\r\n    }\r\n\r\n    /**\r\n     * convert samp freq in Hz to index\r\n     */\r\n    function SmpFrqIndex(sample_freq, gpf) {\r\n        switch (sample_freq) {\r\n            case 44100:\r\n                gpf.version = 1;\r\n                return 0;\r\n            case 48000:\r\n                gpf.version = 1;\r\n                return 1;\r\n            case 32000:\r\n                gpf.version = 1;\r\n                return 2;\r\n            case 22050:\r\n                gpf.version = 0;\r\n                return 0;\r\n            case 24000:\r\n                gpf.version = 0;\r\n                return 1;\r\n            case 16000:\r\n                gpf.version = 0;\r\n                return 2;\r\n            case 11025:\r\n                gpf.version = 0;\r\n                return 0;\r\n            case 12000:\r\n                gpf.version = 0;\r\n                return 1;\r\n            case 8000:\r\n                gpf.version = 0;\r\n                return 2;\r\n            default:\r\n                gpf.version = 0;\r\n                return -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param bRate\r\n     *            legal rates from 8 to 320\r\n     */\r\n    function FindNearestBitrate(bRate, version, samplerate) {\r\n        /* MPEG-1 or MPEG-2 LSF */\r\n        if (samplerate < 16000)\r\n            version = 2;\r\n\r\n        var bitrate = Tables.bitrate_table[version][1];\r\n\r\n        for (var i = 2; i <= 14; i++) {\r\n            if (Tables.bitrate_table[version][i] > 0) {\r\n                if (Math.abs(Tables.bitrate_table[version][i] - bRate) < Math\r\n                        .abs(bitrate - bRate))\r\n                    bitrate = Tables.bitrate_table[version][i];\r\n            }\r\n        }\r\n        return bitrate;\r\n    }\r\n\r\n    /**\r\n     * @param bRate\r\n     *            legal rates from 32 to 448 kbps\r\n     * @param version\r\n     *            MPEG-1 or MPEG-2/2.5 LSF\r\n     */\r\n    function BitrateIndex(bRate, version, samplerate) {\r\n        /* convert bitrate in kbps to index */\r\n        if (samplerate < 16000)\r\n            version = 2;\r\n        for (var i = 0; i <= 14; i++) {\r\n            if (Tables.bitrate_table[version][i] > 0) {\r\n                if (Tables.bitrate_table[version][i] == bRate) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    function optimum_bandwidth(lh, bitrate) {\r\n        /**\r\n         * <PRE>\r\n         *  Input:\r\n         *      bitrate     total bitrate in kbps\r\n         *\r\n         *   Output:\r\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\r\n         *      upperlimit: best highpass frequency limit for input filter in Hz\r\n         * </PRE>\r\n         */\r\n        var freq_map = [new BandPass(8, 2000),\r\n            new BandPass(16, 3700), new BandPass(24, 3900),\r\n            new BandPass(32, 5500), new BandPass(40, 7000),\r\n            new BandPass(48, 7500), new BandPass(56, 10000),\r\n            new BandPass(64, 11000), new BandPass(80, 13500),\r\n            new BandPass(96, 15100), new BandPass(112, 15600),\r\n            new BandPass(128, 17000), new BandPass(160, 17500),\r\n            new BandPass(192, 18600), new BandPass(224, 19400),\r\n            new BandPass(256, 19700), new BandPass(320, 20500)];\r\n\r\n        var table_index = self.nearestBitrateFullIndex(bitrate);\r\n        lh.lowerlimit = freq_map[table_index].lowpass;\r\n    }\r\n\r\n    function lame_init_params_ppflt(gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        /***************************************************************/\r\n        /* compute info needed for polyphase filter (filter type==0, default) */\r\n        /***************************************************************/\r\n\r\n        var lowpass_band = 32;\r\n        var highpass_band = -1;\r\n\r\n        if (gfc.lowpass1 > 0) {\r\n            var minband = 999;\r\n            for (var band = 0; band <= 31; band++) {\r\n                var freq = (band / 31.0);\r\n                /* this band and above will be zeroed: */\r\n                if (freq >= gfc.lowpass2) {\r\n                    lowpass_band = Math.min(lowpass_band, band);\r\n                }\r\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\r\n                    minband = Math.min(minband, band);\r\n                }\r\n            }\r\n\r\n            /*\r\n             * compute the *actual* transition band implemented by the polyphase\r\n             * filter\r\n             */\r\n            if (minband == 999) {\r\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\r\n            } else {\r\n                gfc.lowpass1 = (minband - .75) / 31.0;\r\n            }\r\n            gfc.lowpass2 = lowpass_band / 31.0;\r\n        }\r\n\r\n        /*\r\n         * make sure highpass filter is within 90% of what the effective\r\n         * highpass frequency will be\r\n         */\r\n        if (gfc.highpass2 > 0) {\r\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\r\n                gfc.highpass1 = 0;\r\n                gfc.highpass2 = 0;\r\n                System.err.println(\"Warning: highpass filter disabled.  \"\r\n                    + \"highpass frequency too small\\n\");\r\n            }\r\n        }\r\n\r\n        if (gfc.highpass2 > 0) {\r\n            var maxband = -1;\r\n            for (var band = 0; band <= 31; band++) {\r\n                var freq = band / 31.0;\r\n                /* this band and below will be zereod */\r\n                if (freq <= gfc.highpass1) {\r\n                    highpass_band = Math.max(highpass_band, band);\r\n                }\r\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\r\n                    maxband = Math.max(maxband, band);\r\n                }\r\n            }\r\n            /*\r\n             * compute the *actual* transition band implemented by the polyphase\r\n             * filter\r\n             */\r\n            gfc.highpass1 = highpass_band / 31.0;\r\n            if (maxband == -1) {\r\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\r\n            } else {\r\n                gfc.highpass2 = (maxband + .75) / 31.0;\r\n            }\r\n        }\r\n\r\n        for (var band = 0; band < 32; band++) {\r\n            var fc1, fc2;\r\n            var freq = band / 31.0;\r\n            if (gfc.highpass2 > gfc.highpass1) {\r\n                fc1 = filter_coef((gfc.highpass2 - freq)\r\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\r\n            } else {\r\n                fc1 = 1.0;\r\n            }\r\n            if (gfc.lowpass2 > gfc.lowpass1) {\r\n                fc2 = filter_coef((freq - gfc.lowpass1)\r\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\r\n            } else {\r\n                fc2 = 1.0;\r\n            }\r\n            gfc.amp_filter[band] = (fc1 * fc2);\r\n        }\r\n    }\r\n\r\n    function lame_init_qval(gfp) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        switch (gfp.quality) {\r\n            default:\r\n            case 9: /* no psymodel, no noise shaping */\r\n                gfc.psymodel = 0;\r\n                gfc.noise_shaping = 0;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                gfc.use_best_huffman = 0;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 8:\r\n                gfp.quality = 7;\r\n            //$FALL-THROUGH$\r\n            case 7:\r\n                /*\r\n                 * use psymodel (for short block and m/s switching), but no noise\r\n                 * shapping\r\n                 */\r\n                gfc.psymodel = 1;\r\n                gfc.noise_shaping = 0;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                gfc.use_best_huffman = 0;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 6:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 0;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 5:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 0;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 4:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 3:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                gfc.noise_shaping_amp = 1;\r\n                gfc.noise_shaping_stop = 1;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 2:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                if (gfc.substep_shaping == 0)\r\n                    gfc.substep_shaping = 2;\r\n                gfc.noise_shaping_amp = 1;\r\n                gfc.noise_shaping_stop = 1;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                /* inner loop */\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 1:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                if (gfc.substep_shaping == 0)\r\n                    gfc.substep_shaping = 2;\r\n                gfc.noise_shaping_amp = 2;\r\n                gfc.noise_shaping_stop = 1;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 0:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                if (gfc.substep_shaping == 0)\r\n                    gfc.substep_shaping = 2;\r\n                gfc.noise_shaping_amp = 2;\r\n                gfc.noise_shaping_stop = 1;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                /*\r\n                 * type 2 disabled because of it slowness, in favor of full outer\r\n                 * loop search\r\n                 */\r\n                gfc.full_outer_loop = 0;\r\n                /*\r\n                 * full outer loop search disabled because of audible distortions it\r\n                 * may generate rh 060629\r\n                 */\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    function lame_init_bitstream(gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        gfp.frameNum = 0;\r\n\r\n        if (gfp.write_id3tag_automatic) {\r\n            id3.id3tag_write_v2(gfp);\r\n        }\r\n        /* initialize histogram data optionally used by frontend */\r\n\r\n        gfc.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\r\n        gfc.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\r\n\r\n        gfc.PeakSample = 0.0;\r\n\r\n        /* Write initial VBR Header to bitstream and init VBR data */\r\n        if (gfp.bWriteVbrTag)\r\n            vbr.InitVbrTag(gfp);\r\n    }\r\n\r\n    /********************************************************************\r\n     * initialize internal params based on data in gf (globalflags struct filled\r\n     * in by calling program)\r\n     *\r\n     * OUTLINE:\r\n     *\r\n     * We first have some complex code to determine bitrate, output samplerate\r\n     * and mode. It is complicated by the fact that we allow the user to set\r\n     * some or all of these parameters, and need to determine best possible\r\n     * values for the rest of them:\r\n     *\r\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\r\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\r\n     * set compression ratio user may have set a bitrate user may have set a\r\n     * output samplerate 4. set some options which depend on output samplerate\r\n     * 5. compute the actual compression ratio 6. set mode based on compression\r\n     * ratio\r\n     *\r\n     * The remaining code is much simpler - it just sets options based on the\r\n     * mode & compression ratio:\r\n     *\r\n     * set allow_diff_short based on mode select lowpass filter based on\r\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\r\n     * VBR modes disable VBR tag if it is not appropriate initialize the\r\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\r\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\r\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\r\n     * frames (based on a lot of data)\r\n     *\r\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\r\n     * code\r\n     *\r\n     * Finally, we set the algorithm flags based on the gfp.quality value\r\n     * lame_init_qval(gfp);\r\n     *\r\n     ********************************************************************/\r\n    this.lame_init_params = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        gfc.Class_ID = 0;\r\n        if (gfc.ATH == null)\r\n            gfc.ATH = new ATH();\r\n        if (gfc.PSY == null)\r\n            gfc.PSY = new PSY();\r\n        if (gfc.rgdata == null)\r\n            gfc.rgdata = new ReplayGain();\r\n\r\n        gfc.channels_in = gfp.num_channels;\r\n        if (gfc.channels_in == 1)\r\n            gfp.mode = MPEGMode.MONO;\r\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\r\n        gfc.mode_ext = Encoder.MPG_MD_MS_LR;\r\n        if (gfp.mode == MPEGMode.MONO)\r\n            gfp.force_ms = false;\r\n        /*\r\n         * don't allow forced mid/side stereo for mono output\r\n         */\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\r\n            && gfp.brate == 0)\r\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_mtrh\r\n            || gfp.VBR == VbrMode.vbr_mt) {\r\n            /* these modes can handle free format condition */\r\n        } else {\r\n            gfp.free_format = false;\r\n            /* mode can't be mixed with free format */\r\n        }\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off && gfp.brate == 0) {\r\n            /* no bitrate or compression ratio specified, use 11.025 */\r\n            if (BitStream.EQ(gfp.compression_ratio, 0))\r\n                gfp.compression_ratio = 11.025;\r\n            /*\r\n             * rate to compress a CD down to exactly 128000 bps\r\n             */\r\n        }\r\n\r\n        /* find bitrate if user specify a compression ratio */\r\n        if (gfp.VBR == VbrMode.vbr_off && gfp.compression_ratio > 0) {\r\n\r\n            if (gfp.out_samplerate == 0)\r\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\r\n            /*\r\n             * round up with a margin of 3 %\r\n             */\r\n\r\n            /*\r\n             * choose a bitrate for the output samplerate which achieves\r\n             * specified compression ratio\r\n             */\r\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\r\n\r\n            /* we need the version for the bitrate table look up */\r\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\r\n\r\n            if (!gfp.free_format) /*\r\n             * for non Free Format find the nearest allowed\r\n             * bitrate\r\n             */\r\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\r\n                    gfp.out_samplerate);\r\n        }\r\n\r\n        if (gfp.out_samplerate != 0) {\r\n            if (gfp.out_samplerate < 16000) {\r\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\r\n                    8);\r\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\r\n                    64);\r\n            } else if (gfp.out_samplerate < 32000) {\r\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\r\n                    8);\r\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\r\n                    160);\r\n            } else {\r\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\r\n                    32);\r\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\r\n                    320);\r\n            }\r\n        }\r\n\r\n        /****************************************************************/\r\n        /* if a filter has not been enabled, see if we should add one: */\r\n        /****************************************************************/\r\n        if (gfp.lowpassfreq == 0) {\r\n            var lowpass = 16000.;\r\n\r\n            switch (gfp.VBR) {\r\n                case VbrMode.vbr_off:\r\n                {\r\n                    var lh = new LowPassHighPass();\r\n                    optimum_bandwidth(lh, gfp.brate);\r\n                    lowpass = lh.lowerlimit;\r\n                    break;\r\n                }\r\n                case VbrMode.vbr_abr:\r\n                {\r\n                    var lh = new LowPassHighPass();\r\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\r\n                    lowpass = lh.lowerlimit;\r\n                    break;\r\n                }\r\n                case VbrMode.vbr_rh:\r\n                {\r\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\r\n                        15600, 14900, 12500, 10000, 3950];\r\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\r\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\r\n                        lowpass = linear_int(a, b, m);\r\n                    } else {\r\n                        lowpass = 19500;\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                {\r\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\r\n                        15500, 14500, 12500, 9500, 3950];\r\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\r\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\r\n                        lowpass = linear_int(a, b, m);\r\n                    } else {\r\n                        lowpass = 19500;\r\n                    }\r\n                }\r\n            }\r\n            if (gfp.mode == MPEGMode.MONO\r\n                && (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr))\r\n                lowpass *= 1.5;\r\n\r\n            gfp.lowpassfreq = lowpass | 0;\r\n        }\r\n\r\n        if (gfp.out_samplerate == 0) {\r\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\r\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\r\n            }\r\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\r\n                gfp.in_samplerate);\r\n        }\r\n\r\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\r\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off) {\r\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\r\n                / (1.e3 * gfp.brate);\r\n        }\r\n        if (gfp.VBR == VbrMode.vbr_abr) {\r\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\r\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\r\n        }\r\n\r\n        /*\r\n         * do not compute ReplayGain values and do not find the peak sample if\r\n         * we can't store them\r\n         */\r\n        if (!gfp.bWriteVbrTag) {\r\n            gfp.findReplayGain = false;\r\n            gfp.decode_on_the_fly = false;\r\n            gfc.findPeakSample = false;\r\n        }\r\n        gfc.findReplayGain = gfp.findReplayGain;\r\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\r\n\r\n        if (gfc.decode_on_the_fly)\r\n            gfc.findPeakSample = true;\r\n\r\n        if (gfc.findReplayGain) {\r\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\r\n                gfp.internal_flags = null;\r\n                return -6;\r\n            }\r\n        }\r\n\r\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\r\n            if (gfc.hip != null) {\r\n                mpglib.hip_decode_exit(gfc.hip);\r\n            }\r\n            gfc.hip = mpglib.hip_decode_init();\r\n        }\r\n\r\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\r\n        /*\r\n         * Number of granules per frame\r\n         */\r\n        gfp.framesize = 576 * gfc.mode_gr;\r\n        gfp.encoder_delay = Encoder.ENCDELAY;\r\n\r\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\r\n\r\n        /**\r\n         * <PRE>\r\n         *  sample freq       bitrate     compression ratio\r\n         *     [kHz]      [kbps/channel]   for 16 bit input\r\n         *     44.1            56               12.6\r\n         *     44.1            64               11.025\r\n         *     44.1            80                8.82\r\n         *     22.05           24               14.7\r\n         *     22.05           32               11.025\r\n         *     22.05           40                8.82\r\n         *     16              16               16.0\r\n         *     16              24               10.667\r\n         * </PRE>\r\n         */\r\n        /**\r\n         * <PRE>\r\n         *  For VBR, take a guess at the compression_ratio.\r\n         *  For example:\r\n         *\r\n         *    VBR_q    compression     like\r\n         *     -        4.4         320 kbps/44 kHz\r\n         *   0...1      5.5         256 kbps/44 kHz\r\n         *     2        7.3         192 kbps/44 kHz\r\n         *     4        8.8         160 kbps/44 kHz\r\n         *     6       11           128 kbps/44 kHz\r\n         *     9       14.7          96 kbps\r\n         *\r\n         *  for lower bitrates, downsample with --resample\r\n         * </PRE>\r\n         */\r\n        switch (gfp.VBR) {\r\n            case VbrMode.vbr_mt:\r\n            case VbrMode.vbr_rh:\r\n            case VbrMode.vbr_mtrh:\r\n            {\r\n                /* numbers are a bit strange, but they determine the lowpass value */\r\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\r\n                    15, 16.5];\r\n                gfp.compression_ratio = cmp[gfp.VBR_q];\r\n            }\r\n                break;\r\n            case VbrMode.vbr_abr:\r\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\r\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\r\n                break;\r\n            default:\r\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\r\n                    / (1.e3 * gfp.brate);\r\n                break;\r\n        }\r\n\r\n        /*\r\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\r\n         * channel). If mode has not been set, then select J-STEREO\r\n         */\r\n        if (gfp.mode == MPEGMode.NOT_SET) {\r\n            gfp.mode = MPEGMode.JOINT_STEREO;\r\n        }\r\n\r\n        /* apply user driven high pass filter */\r\n        if (gfp.highpassfreq > 0) {\r\n            gfc.highpass1 = 2. * gfp.highpassfreq;\r\n\r\n            if (gfp.highpasswidth >= 0)\r\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\r\n            else\r\n            /* 0% above on default */\r\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\r\n\r\n            gfc.highpass1 /= gfp.out_samplerate;\r\n            gfc.highpass2 /= gfp.out_samplerate;\r\n        } else {\r\n            gfc.highpass1 = 0;\r\n            gfc.highpass2 = 0;\r\n        }\r\n        /* apply user driven low pass filter */\r\n        if (gfp.lowpassfreq > 0) {\r\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\r\n            if (gfp.lowpasswidth >= 0) {\r\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\r\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\r\n                    gfc.lowpass1 = 0;\r\n            } else { /* 0% below on default */\r\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\r\n            }\r\n            gfc.lowpass1 /= gfp.out_samplerate;\r\n            gfc.lowpass2 /= gfp.out_samplerate;\r\n        } else {\r\n            gfc.lowpass1 = 0;\r\n            gfc.lowpass2 = 0;\r\n        }\r\n\r\n        /**********************************************************************/\r\n        /* compute info needed for polyphase filter (filter type==0, default) */\r\n        /**********************************************************************/\r\n        lame_init_params_ppflt(gfp);\r\n        /*******************************************************\r\n         * samplerate and bitrate index\r\n         *******************************************************/\r\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\r\n        if (gfc.samplerate_index < 0) {\r\n            gfp.internal_flags = null;\r\n            return -1;\r\n        }\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off) {\r\n            if (gfp.free_format) {\r\n                gfc.bitrate_index = 0;\r\n            } else {\r\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\r\n                    gfp.out_samplerate);\r\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\r\n                    gfp.out_samplerate);\r\n                if (gfc.bitrate_index <= 0) {\r\n                    gfp.internal_flags = null;\r\n                    return -1;\r\n                }\r\n            }\r\n        } else {\r\n            gfc.bitrate_index = 1;\r\n        }\r\n\r\n        /* for CBR, we will write an \"info\" tag. */\r\n\r\n        if (gfp.analysis)\r\n            gfp.bWriteVbrTag = false;\r\n\r\n        /* some file options not allowed if output is: not specified or stdout */\r\n        if (gfc.pinfo != null)\r\n            gfp.bWriteVbrTag = false;\r\n        /* disable Xing VBR tag */\r\n\r\n        bs.init_bit_stream_w(gfc);\r\n\r\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\r\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\r\n        for (var i = 0; i < Encoder.SBMAX_l + 1; i++)\r\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\r\n\r\n        for (var i = 0; i < Encoder.PSFB21 + 1; i++) {\r\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\r\n                / Encoder.PSFB21;\r\n            var start = gfc.scalefac_band.l[21] + i * size;\r\n            gfc.scalefac_band.psfb21[i] = start;\r\n        }\r\n        gfc.scalefac_band.psfb21[Encoder.PSFB21] = 576;\r\n\r\n        for (var i = 0; i < Encoder.SBMAX_s + 1; i++)\r\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\r\n\r\n        for (var i = 0; i < Encoder.PSFB12 + 1; i++) {\r\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\r\n                / Encoder.PSFB12;\r\n            var start = gfc.scalefac_band.s[12] + i * size;\r\n            gfc.scalefac_band.psfb12[i] = start;\r\n        }\r\n        gfc.scalefac_band.psfb12[Encoder.PSFB12] = 192;\r\n        /* determine the mean bitrate for main data */\r\n        if (gfp.version == 1) /* MPEG 1 */\r\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\r\n        else\r\n        /* MPEG 2 */\r\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\r\n\r\n        if (gfp.error_protection)\r\n            gfc.sideinfo_len += 2;\r\n\r\n        lame_init_bitstream(gfp);\r\n\r\n        gfc.Class_ID = LAME_ID;\r\n\r\n        {\r\n            var k;\r\n\r\n            for (k = 0; k < 19; k++)\r\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\r\n\r\n            if (gfp.ATHtype == -1)\r\n                gfp.ATHtype = 4;\r\n        }\r\n\r\n        switch (gfp.VBR) {\r\n\r\n            case VbrMode.vbr_mt:\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n            //$FALL-THROUGH$\r\n            case VbrMode.vbr_mtrh:\r\n            {\r\n                if (gfp.useTemporal == null) {\r\n                    gfp.useTemporal = false;\r\n                    /* off by default for this VBR mode */\r\n                }\r\n\r\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\r\n                /**\r\n                 * <PRE>\r\n                 *   The newer VBR code supports only a limited\r\n                 *     subset of quality levels:\r\n                 *     9-5=5 are the same, uses x^3/4 quantization\r\n                 *   4-0=0 are the same  5 plus best huffman divide code\r\n                 * </PRE>\r\n                 */\r\n                if (gfp.quality < 0)\r\n                    gfp.quality = LAME_DEFAULT_QUALITY;\r\n                if (gfp.quality < 5)\r\n                    gfp.quality = 0;\r\n                if (gfp.quality > 5)\r\n                    gfp.quality = 5;\r\n\r\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\r\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\r\n\r\n                /*\r\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\r\n                 */\r\n                if (gfp.experimentalY)\r\n                    gfc.sfb21_extra = false;\r\n                else\r\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\r\n\r\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\r\n                break;\r\n\r\n            }\r\n            case VbrMode.vbr_rh:\r\n            {\r\n\r\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\r\n\r\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\r\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\r\n\r\n                /*\r\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\r\n                 */\r\n                if (gfp.experimentalY)\r\n                    gfc.sfb21_extra = false;\r\n                else\r\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\r\n\r\n                /*\r\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\r\n                 * that by setting a minimum quality level, actually level 6 does\r\n                 * it. down to level 6\r\n                 */\r\n                if (gfp.quality > 6)\r\n                    gfp.quality = 6;\r\n\r\n                if (gfp.quality < 0)\r\n                    gfp.quality = LAME_DEFAULT_QUALITY;\r\n\r\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\r\n                break;\r\n            }\r\n\r\n            default: /* cbr/abr */\r\n            {\r\n                var vbrmode;\r\n\r\n                /*\r\n                 * no sfb21 extra with CBR code\r\n                 */\r\n                gfc.sfb21_extra = false;\r\n\r\n                if (gfp.quality < 0)\r\n                    gfp.quality = LAME_DEFAULT_QUALITY;\r\n\r\n                vbrmode = gfp.VBR;\r\n                if (vbrmode == VbrMode.vbr_off)\r\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\r\n                /* second, set parameters depending on bitrate */\r\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\r\n                gfp.VBR = vbrmode;\r\n\r\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\r\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\r\n\r\n                if (vbrmode == VbrMode.vbr_off) {\r\n                    gfc.iteration_loop = new CBRNewIterationLoop(qu);\r\n                } else {\r\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        /* initialize default values common for all modes */\r\n\r\n        if (gfp.VBR != VbrMode.vbr_off) { /* choose a min/max bitrate for VBR */\r\n            /* if the user didn't specify VBR_max_bitrate: */\r\n            gfc.VBR_min_bitrate = 1;\r\n            /*\r\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\r\n             */\r\n            gfc.VBR_max_bitrate = 14;\r\n            /*\r\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\r\n             */\r\n            if (gfp.out_samplerate < 16000)\r\n                gfc.VBR_max_bitrate = 8;\r\n            /* default: allow 64 kbps (MPEG-2.5) */\r\n            if (gfp.VBR_min_bitrate_kbps != 0) {\r\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\r\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\r\n                    gfp.out_samplerate);\r\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\r\n                    gfp.version, gfp.out_samplerate);\r\n                if (gfc.VBR_min_bitrate < 0)\r\n                    return -1;\r\n            }\r\n            if (gfp.VBR_max_bitrate_kbps != 0) {\r\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\r\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\r\n                    gfp.out_samplerate);\r\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\r\n                    gfp.version, gfp.out_samplerate);\r\n                if (gfc.VBR_max_bitrate < 0)\r\n                    return -1;\r\n            }\r\n            gfp.VBR_min_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\r\n            gfp.VBR_max_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\r\n            gfp.VBR_mean_bitrate_kbps = Math.min(\r\n                Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\r\n                gfp.VBR_mean_bitrate_kbps);\r\n            gfp.VBR_mean_bitrate_kbps = Math.max(\r\n                Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\r\n                gfp.VBR_mean_bitrate_kbps);\r\n        }\r\n\r\n        /* just another daily changing developer switch */\r\n        if (gfp.tune) {\r\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\r\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\r\n        }\r\n\r\n        /* initialize internal qval settings */\r\n        lame_init_qval(gfp);\r\n        /*\r\n         * automatic ATH adjustment on\r\n         */\r\n        if (gfp.athaa_type < 0)\r\n            gfc.ATH.useAdjust = 3;\r\n        else\r\n            gfc.ATH.useAdjust = gfp.athaa_type;\r\n\r\n        /* initialize internal adaptive ATH settings -jd */\r\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\r\n            / -10.0);\r\n\r\n        if (gfp.short_blocks == null) {\r\n            gfp.short_blocks = ShortBlock.short_block_allowed;\r\n        }\r\n\r\n        /*\r\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\r\n         * regular stereo mode unless they are coupled (same type in both\r\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\r\n         * use uncoupled short blocks, so lets turn them off until we decide how\r\n         * to handle this. No other encoders allow uncoupled short blocks, even\r\n         * though it is in the standard.\r\n         */\r\n        /*\r\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\r\n         */\r\n        if (gfp.short_blocks == ShortBlock.short_block_allowed\r\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\r\n            gfp.short_blocks = ShortBlock.short_block_coupled;\r\n        }\r\n\r\n        if (gfp.quant_comp < 0)\r\n            gfp.quant_comp = 1;\r\n        if (gfp.quant_comp_short < 0)\r\n            gfp.quant_comp_short = 0;\r\n\r\n        if (gfp.msfix < 0)\r\n            gfp.msfix = 0;\r\n\r\n        /* select psychoacoustic model */\r\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\r\n\r\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\r\n            gfp.internal_flags.nsPsy.attackthre = PsyModel.NSATTACKTHRE;\r\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\r\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel.NSATTACKTHRE_S;\r\n\r\n\r\n        if (gfp.scale < 0)\r\n            gfp.scale = 1;\r\n\r\n        if (gfp.ATHtype < 0)\r\n            gfp.ATHtype = 4;\r\n\r\n        if (gfp.ATHcurve < 0)\r\n            gfp.ATHcurve = 4;\r\n\r\n        if (gfp.athaa_loudapprox < 0)\r\n            gfp.athaa_loudapprox = 2;\r\n\r\n        if (gfp.interChRatio < 0)\r\n            gfp.interChRatio = 0;\r\n\r\n        if (gfp.useTemporal == null)\r\n            gfp.useTemporal = true;\r\n        /* on by default */\r\n\r\n        /*\r\n         * padding method as described in\r\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\r\n         * Sperschneider\r\n         *\r\n         * note: there is no padding for the very first frame\r\n         *\r\n         * Robert Hegemann 2000-06-22\r\n         */\r\n        gfc.slot_lag = gfc.frac_SpF = 0;\r\n        if (gfp.VBR == VbrMode.vbr_off)\r\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\r\n\r\n        qupvt.iteration_init(gfp);\r\n        psy.psymodel_init(gfp);\r\n        return 0;\r\n    }\r\n\r\n    function update_inbuffer_size(gfc, nsamples) {\r\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\r\n            gfc.in_buffer_0 = new_float(nsamples);\r\n            gfc.in_buffer_1 = new_float(nsamples);\r\n            gfc.in_buffer_nsamples = nsamples;\r\n        }\r\n    }\r\n\r\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\r\n        var gfc = gfp.internal_flags;\r\n        var buffer = new_short_n([2, 1152]);\r\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\r\n\r\n        /*\r\n         * we always add POSTDELAY=288 padding to make sure granule with real\r\n         * data can be complety decoded (because of 50% overlap with next\r\n         * granule\r\n         */\r\n        var end_padding;\r\n        var frames_left;\r\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder.POSTDELAY;\r\n        var mf_needed = calcNeeded(gfp);\r\n\r\n        /* Was flush already called? */\r\n        if (gfc.mf_samples_to_encode < 1) {\r\n            return 0;\r\n        }\r\n        mp3count = 0;\r\n\r\n        if (gfp.in_samplerate != gfp.out_samplerate) {\r\n            /*\r\n             * delay due to resampling; needs to be fixed, if resampling code\r\n             * gets changed\r\n             */\r\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\r\n        }\r\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\r\n        if (end_padding < 576)\r\n            end_padding += gfp.framesize;\r\n        gfp.encoder_padding = end_padding;\r\n\r\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\r\n\r\n        /*\r\n         * send in a frame of 0 padding until all internal sample buffers are\r\n         * flushed\r\n         */\r\n        while (frames_left > 0 && imp3 >= 0) {\r\n            var bunch = mf_needed - gfc.mf_size;\r\n            var frame_num = gfp.frameNum;\r\n\r\n            bunch *= gfp.in_samplerate;\r\n            bunch /= gfp.out_samplerate;\r\n            if (bunch > 1152)\r\n                bunch = 1152;\r\n            if (bunch < 1)\r\n                bunch = 1;\r\n\r\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\r\n\r\n            /* if user specifed buffer size = 0, dont check size */\r\n            if (mp3buffer_size == 0)\r\n                mp3buffer_size_remaining = 0;\r\n\r\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\r\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\r\n\r\n            mp3bufferPos += imp3;\r\n            mp3count += imp3;\r\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\r\n        }\r\n        /*\r\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\r\n         * calling it more than once in a row.\r\n         */\r\n        gfc.mf_samples_to_encode = 0;\r\n\r\n        if (imp3 < 0) {\r\n            /* some type of fatal error */\r\n            return imp3;\r\n        }\r\n\r\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\r\n        /* if user specifed buffer size = 0, dont check size */\r\n        if (mp3buffer_size == 0)\r\n            mp3buffer_size_remaining = 0;\r\n\r\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\r\n        bs.flush_bitstream(gfp);\r\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\r\n            mp3buffer_size_remaining, 1);\r\n        if (imp3 < 0) {\r\n            /* some type of fatal error */\r\n            return imp3;\r\n        }\r\n        mp3bufferPos += imp3;\r\n        mp3count += imp3;\r\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\r\n        /* if user specifed buffer size = 0, dont check size */\r\n        if (mp3buffer_size == 0)\r\n            mp3buffer_size_remaining = 0;\r\n\r\n        if (gfp.write_id3tag_automatic) {\r\n            /* write a id3 tag to the bitstream */\r\n            id3.id3tag_write_v1(gfp);\r\n\r\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\r\n                mp3buffer_size_remaining, 0);\r\n\r\n            if (imp3 < 0) {\r\n                return imp3;\r\n            }\r\n            mp3count += imp3;\r\n        }\r\n        return mp3count;\r\n    };\r\n\r\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\r\n        var gfc = gfp.internal_flags;\r\n        var in_buffer = [null, null];\r\n\r\n        if (gfc.Class_ID != LAME_ID)\r\n            return -3;\r\n\r\n        if (nsamples == 0)\r\n            return 0;\r\n\r\n        update_inbuffer_size(gfc, nsamples);\r\n\r\n        in_buffer[0] = gfc.in_buffer_0;\r\n        in_buffer[1] = gfc.in_buffer_1;\r\n\r\n        /* make a copy of input buffer, changing type to sample_t */\r\n        for (var i = 0; i < nsamples; i++) {\r\n            in_buffer[0][i] = buffer_l[i];\r\n            if (gfc.channels_in > 1)\r\n                in_buffer[1][i] = buffer_r[i];\r\n        }\r\n\r\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\r\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\r\n    }\r\n\r\n    function calcNeeded(gfp) {\r\n        var mf_needed = Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET;\r\n        /*\r\n         * amount needed for FFT\r\n         */\r\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\r\n\r\n        return mf_needed;\r\n    }\r\n\r\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\r\n        var gfc = gfp.internal_flags;\r\n        var mp3size = 0, ret, i, ch, mf_needed;\r\n        var mp3out;\r\n        var mfbuf = [null, null];\r\n        var in_buffer = [null, null];\r\n\r\n        if (gfc.Class_ID != LAME_ID)\r\n            return -3;\r\n\r\n        if (nsamples == 0)\r\n            return 0;\r\n\r\n        /* copy out any tags that may have been written into bitstream */\r\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\r\n        if (mp3out < 0)\r\n            return mp3out;\r\n        /* not enough buffer space */\r\n        mp3bufPos += mp3out;\r\n        mp3size += mp3out;\r\n\r\n        in_buffer[0] = buffer_l;\r\n        in_buffer[1] = buffer_r;\r\n\r\n        /* Apply user defined re-scaling */\r\n\r\n        /* user selected scaling of the samples */\r\n        if (BitStream.NEQ(gfp.scale, 0) && BitStream.NEQ(gfp.scale, 1.0)) {\r\n            for (i = 0; i < nsamples; ++i) {\r\n                in_buffer[0][i] *= gfp.scale;\r\n                if (gfc.channels_out == 2)\r\n                    in_buffer[1][i] *= gfp.scale;\r\n            }\r\n        }\r\n\r\n        /* user selected scaling of the channel 0 (left) samples */\r\n        if (BitStream.NEQ(gfp.scale_left, 0)\r\n            && BitStream.NEQ(gfp.scale_left, 1.0)) {\r\n            for (i = 0; i < nsamples; ++i) {\r\n                in_buffer[0][i] *= gfp.scale_left;\r\n            }\r\n        }\r\n\r\n        /* user selected scaling of the channel 1 (right) samples */\r\n        if (BitStream.NEQ(gfp.scale_right, 0)\r\n            && BitStream.NEQ(gfp.scale_right, 1.0)) {\r\n            for (i = 0; i < nsamples; ++i) {\r\n                in_buffer[1][i] *= gfp.scale_right;\r\n            }\r\n        }\r\n\r\n        /* Downsample to Mono if 2 channels in and 1 channel out */\r\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\r\n            for (i = 0; i < nsamples; ++i) {\r\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\r\n                in_buffer[1][i] = 0.0;\r\n            }\r\n        }\r\n\r\n        mf_needed = calcNeeded(gfp);\r\n\r\n        mfbuf[0] = gfc.mfbuf[0];\r\n        mfbuf[1] = gfc.mfbuf[1];\r\n\r\n        var in_bufferPos = 0;\r\n        while (nsamples > 0) {\r\n            var in_buffer_ptr = [null, null];\r\n            var n_in = 0;\r\n            /* number of input samples processed with fill_buffer */\r\n            var n_out = 0;\r\n            /* number of samples output with fill_buffer */\r\n            /* n_in <> n_out if we are resampling */\r\n\r\n            in_buffer_ptr[0] = in_buffer[0];\r\n            in_buffer_ptr[1] = in_buffer[1];\r\n            /* copy in new samples into mfbuf, with resampling */\r\n            var inOut = new InOut();\r\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\r\n                inOut);\r\n            n_in = inOut.n_in;\r\n            n_out = inOut.n_out;\r\n\r\n            /* compute ReplayGain of resampled input if requested */\r\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\r\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\r\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\r\n                    return -6;\r\n\r\n            /* update in_buffer counters */\r\n            nsamples -= n_in;\r\n            in_bufferPos += n_in;\r\n            if (gfc.channels_out == 2)\r\n                ;// in_bufferPos += n_in;\r\n\r\n            /* update mfbuf[] counters */\r\n            gfc.mf_size += n_out;\r\n\r\n            /*\r\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\r\n             * have to reinitialize it here when that happened.\r\n             */\r\n            if (gfc.mf_samples_to_encode < 1) {\r\n                gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\r\n            }\r\n            gfc.mf_samples_to_encode += n_out;\r\n\r\n            if (gfc.mf_size >= mf_needed) {\r\n                /* encode the frame. */\r\n                /* mp3buf = pointer to current location in buffer */\r\n                /* mp3buf_size = size of original mp3 output buffer */\r\n                /* = 0 if we should not worry about the */\r\n                /* buffer size because calling program is */\r\n                /* to lazy to compute it */\r\n                /* mp3size = size of data written to buffer so far */\r\n                /* mp3buf_size-mp3size = amount of space avalable */\r\n\r\n                var buf_size = mp3buf_size - mp3size;\r\n                if (mp3buf_size == 0)\r\n                    buf_size = 0;\r\n\r\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\r\n                    mp3bufPos, buf_size);\r\n\r\n                if (ret < 0)\r\n                    return ret;\r\n                mp3bufPos += ret;\r\n                mp3size += ret;\r\n\r\n                /* shift out old samples */\r\n                gfc.mf_size -= gfp.framesize;\r\n                gfc.mf_samples_to_encode -= gfp.framesize;\r\n                for (ch = 0; ch < gfc.channels_out; ch++)\r\n                    for (i = 0; i < gfc.mf_size; i++)\r\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\r\n            }\r\n        }\r\n\r\n        return mp3size;\r\n    }\r\n\r\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\r\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\r\n            mp3bufPos, mp3buf_size);\r\n        gfp.frameNum++;\r\n        return ret;\r\n    }\r\n\r\n    function InOut() {\r\n        this.n_in = 0;\r\n        this.n_out = 0;\r\n    }\r\n\r\n\r\n    function NumUsed() {\r\n        this.num_used = 0;\r\n    }\r\n\r\n    /**\r\n     * Greatest common divisor.\r\n     * <p>\r\n     * Joint work of Euclid and M. Hendry\r\n     */\r\n    function gcd(i, j) {\r\n        return j != 0 ? gcd(j, i % j) : i;\r\n    }\r\n\r\n    /**\r\n     * Resampling via FIR filter, blackman window.\r\n     */\r\n    function blackman(x, fcn, l) {\r\n        /*\r\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\r\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\r\n         */\r\n        var wcn = (Math.PI * fcn);\r\n\r\n        x /= l;\r\n        if (x < 0)\r\n            x = 0;\r\n        if (x > 1)\r\n            x = 1;\r\n        var x2 = x - .5;\r\n\r\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\r\n        if (Math.abs(x2) < 1e-9)\r\n            return (wcn / Math.PI);\r\n        else\r\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\r\n    }\r\n\r\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\r\n        var gfc = gfp.internal_flags;\r\n        var i, j = 0, k;\r\n        /* number of convolution functions to pre-compute */\r\n        var bpc = gfp.out_samplerate\r\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\r\n        if (bpc > LameInternalFlags.BPC)\r\n            bpc = LameInternalFlags.BPC;\r\n\r\n        var intratio = (Math.abs(gfc.resample_ratio\r\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\r\n        var fcn = 1.00 / gfc.resample_ratio;\r\n        if (fcn > 1.00)\r\n            fcn = 1.00;\r\n        var filter_l = 31;\r\n        if (0 == filter_l % 2)\r\n            --filter_l;\r\n        /* must be odd */\r\n        filter_l += intratio;\r\n        /* unless resample_ratio=int, it must be even */\r\n\r\n        var BLACKSIZE = filter_l + 1;\r\n        /* size of data needed for FIR */\r\n\r\n        if (gfc.fill_buffer_resample_init == 0) {\r\n            gfc.inbuf_old[0] = new_float(BLACKSIZE);\r\n            gfc.inbuf_old[1] = new_float(BLACKSIZE);\r\n            for (i = 0; i <= 2 * bpc; ++i)\r\n                gfc.blackfilt[i] = new_float(BLACKSIZE);\r\n\r\n            gfc.itime[0] = 0;\r\n            gfc.itime[1] = 0;\r\n\r\n            /* precompute blackman filter coefficients */\r\n            for (j = 0; j <= 2 * bpc; j++) {\r\n                var sum = 0.;\r\n                var offset = (j - bpc) / (2. * bpc);\r\n                for (i = 0; i <= filter_l; i++)\r\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\r\n                        filter_l);\r\n                for (i = 0; i <= filter_l; i++)\r\n                    gfc.blackfilt[j][i] /= sum;\r\n            }\r\n            gfc.fill_buffer_resample_init = 1;\r\n        }\r\n\r\n        var inbuf_old = gfc.inbuf_old[ch];\r\n\r\n        /* time of j'th element in inbuf = itime + j/ifreq; */\r\n        /* time of k'th element in outbuf = j/ofreq */\r\n        for (k = 0; k < desired_len; k++) {\r\n            var time0;\r\n            var joff;\r\n\r\n            time0 = k * gfc.resample_ratio;\r\n            /* time of k'th output sample */\r\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\r\n\r\n            /* check if we need more input data */\r\n            if ((filter_l + j - filter_l / 2) >= len)\r\n                break;\r\n\r\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\r\n            /* but we want a window centered at time0. */\r\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\r\n\r\n            /* find the closest precomputed window for this offset: */\r\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\r\n            var xvalue = 0.;\r\n            for (i = 0; i <= filter_l; ++i) {\r\n                var j2 = i + j - filter_l / 2;\r\n                var y;\r\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\r\n                + j2];\r\n                xvalue += y * gfc.blackfilt[joff][i];\r\n            }\r\n            outbuf[outbufPos + k] = xvalue;\r\n        }\r\n\r\n        /* k = number of samples added to outbuf */\r\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\r\n\r\n        /* how many samples of input data were used: */\r\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\r\n\r\n        /*\r\n         * adjust our input time counter. Incriment by the number of samples\r\n         * used, then normalize so that next output sample is at time 0, next\r\n         * input buffer is at time itime[ch]\r\n         */\r\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\r\n\r\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\r\n        if (num_used.num_used >= BLACKSIZE) {\r\n            for (i = 0; i < BLACKSIZE; i++)\r\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\r\n                - BLACKSIZE];\r\n        } else {\r\n            /* shift in num_used.num_used samples into inbuf_old */\r\n            var n_shift = BLACKSIZE - num_used.num_used;\r\n            /*\r\n             * number of samples to\r\n             * shift\r\n             */\r\n\r\n            /*\r\n             * shift n_shift samples by num_used.num_used, to make room for the\r\n             * num_used new samples\r\n             */\r\n            for (i = 0; i < n_shift; ++i)\r\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\r\n\r\n            /* shift in the num_used.num_used samples */\r\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\r\n                inbuf_old[i] = inbuf[in_bufferPos + j];\r\n\r\n        }\r\n        return k;\r\n        /* return the number samples created at the new samplerate */\r\n    }\r\n\r\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /* copy in new samples into mfbuf, with resampling if necessary */\r\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                var numUsed = new NumUsed();\r\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\r\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\r\n                    numUsed, ch);\r\n                io.n_in = numUsed.num_used;\r\n            }\r\n        } else {\r\n            io.n_out = Math.min(gfp.framesize, nsamples);\r\n            io.n_in = io.n_out;\r\n            for (var i = 0; i < io.n_out; ++i) {\r\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\r\n                if (gfc.channels_out == 2)\r\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction GetAudio() {\r\n    var parse;\r\n    var mpg;\r\n\r\n    this.setModules = function (parse2, mpg2) {\r\n        parse = parse2;\r\n        mpg = mpg2;\r\n    }\r\n}\r\n\r\n\r\nfunction Parse() {\r\n    var ver;\r\n    var id3;\r\n    var pre;\r\n\r\n    this.setModules = function (ver2, id32, pre2) {\r\n        ver = ver2;\r\n        id3 = id32;\r\n        pre = pre2;\r\n    }\r\n}\r\n\r\nfunction MPGLib() {\r\n}\r\n\r\nfunction ID3Tag() {\r\n    var bits;\r\n    var ver;\r\n\r\n    this.setModules = function (_bits, _ver) {\r\n        bits = _bits;\r\n        ver = _ver;\r\n    }\r\n}\r\n\r\nfunction Mp3Encoder(channels, samplerate, kbps) {\r\n    if (arguments.length != 3) {\r\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\r\n        channels = 1;\r\n        samplerate = 44100;\r\n        kbps = 128;\r\n    }\r\n    var lame = new Lame();\r\n    var gaud = new GetAudio();\r\n    var ga = new GainAnalysis();\r\n    var bs = new BitStream();\r\n    var p = new Presets();\r\n    var qupvt = new QuantizePVT();\r\n    var qu = new Quantize();\r\n    var vbr = new VBRTag();\r\n    var ver = new Version();\r\n    var id3 = new ID3Tag();\r\n    var rv = new Reservoir();\r\n    var tak = new Takehiro();\r\n    var parse = new Parse();\r\n    var mpg = new MPGLib();\r\n\r\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\r\n    bs.setModules(ga, mpg, ver, vbr);\r\n    id3.setModules(bs, ver);\r\n    p.setModules(lame);\r\n    qu.setModules(bs, rv, qupvt, tak);\r\n    qupvt.setModules(tak, rv, lame.enc.psy);\r\n    rv.setModules(bs);\r\n    tak.setModules(qupvt);\r\n    vbr.setModules(lame, bs, ver);\r\n    gaud.setModules(parse, mpg);\r\n    parse.setModules(ver, id3, p);\r\n\r\n    var gfp = lame.lame_init();\r\n\r\n    gfp.num_channels = channels;\r\n    gfp.in_samplerate = samplerate;\r\n    gfp.out_samplerate = samplerate;//fix by xiangyuecn 2018-12-6 01:48:12 64kbps以下可能无声音，手动控制输出码率\r\n    gfp.brate = kbps;\r\n    gfp.mode = MPEGMode.STEREO;\r\n    gfp.quality = 3;\r\n    gfp.bWriteVbrTag = false;\r\n    gfp.disable_reservoir = true;\r\n    gfp.write_id3tag_automatic = false;\r\n\r\n    var retcode = lame.lame_init_params(gfp);\r\n    var maxSamples = 1152;\r\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\r\n    var mp3buf = new_byte(mp3buf_size);\r\n\r\n    this.encodeBuffer = function (left, right) {\r\n        if (channels == 1) {\r\n            right = left;\r\n        }\r\n        if (left.length > maxSamples) {\r\n            maxSamples = left.length;\r\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\r\n            mp3buf = new_byte(mp3buf_size);\r\n        }\r\n\r\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\r\n        return new Int8Array(mp3buf.subarray(0, _sz));\r\n    };\r\n\r\n    this.flush = function () {\r\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\r\n        return new Int8Array(mp3buf.subarray(0, _sz));\r\n    };\r\n}\r\n\r\nfunction WavHeader() {\r\n    this.dataOffset = 0;\r\n    this.dataLen = 0;\r\n    this.channels = 0;\r\n    this.sampleRate = 0;\r\n}\r\n\r\nfunction fourccToInt(fourcc) {\r\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\r\n}\r\n\r\nWavHeader.RIFF = fourccToInt(\"RIFF\");\r\nWavHeader.WAVE = fourccToInt(\"WAVE\");\r\nWavHeader.fmt_ = fourccToInt(\"fmt \");\r\nWavHeader.data = fourccToInt(\"data\");\r\n\r\nWavHeader.readHeader = function (dataView) {\r\n    var w = new WavHeader();\r\n\r\n    var header = dataView.getUint32(0, false);\r\n    if (WavHeader.RIFF != header) {\r\n        return;\r\n    }\r\n    var fileLen = dataView.getUint32(4, true);\r\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\r\n        return;\r\n    }\r\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\r\n        return;\r\n    }\r\n    var fmtLen = dataView.getUint32(16, true);\r\n    var pos = 16 + 4;\r\n    switch (fmtLen) {\r\n        case 16:\r\n        case 18:\r\n            w.channels = dataView.getUint16(pos + 2, true);\r\n            w.sampleRate = dataView.getUint32(pos + 4, true);\r\n            break;\r\n        default:\r\n            throw 'extended fmt chunk not implemented';\r\n    }\r\n    pos += fmtLen;\r\n    var data = WavHeader.data;\r\n    var len = 0;\r\n    while (data != header) {\r\n        header = dataView.getUint32(pos, false);\r\n        len = dataView.getUint32(pos + 4, true);\r\n        if (data == header) {\r\n            break;\r\n        }\r\n        pos += (len + 8);\r\n    }\r\n    w.dataLen = len;\r\n    w.dataOffset = pos + 8;\r\n    return w;\r\n};\r\n\r\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\r\n//testFullLength();\r\nlamejs.Mp3Encoder = Mp3Encoder;\r\nlamejs.WavHeader = WavHeader;\r\n}\r\n//fs=require('fs');\r\nlamejs();\r\n\r\n\r\nRecorder.lamejs=lamejs;\r\n\r\n//end3 ****结束copy lamejs*****\r\n})();","/*eslint-disable*/\r\n/*\r\nmp3编码器，需带上mp3-engine.js引擎使用\r\nhttps://github.com/xiangyuecn/Recorder\r\n\r\n当然最佳推荐使用mp3、wav格式，代码也是优先照顾这两种格式\r\n浏览器支持情况\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\r\n*/\r\n(function(){\r\n\"use strict\";\r\n\r\nRecorder.prototype.enc_mp3={\r\n\tstable:true\r\n\t,testmsg:\"采样率范围48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000\"\r\n};\r\n\r\n\r\nRecorder.prototype.mp3=function(res,True,False){\r\n\t\tvar This=this,set=This.set,size=res.length;\r\n\t\t//https://github.com/wangpengfei15975/recorder.js\r\n\t\t//https://github.com/zhuker/lamejs bug:采样率必须和源一致，不然8k时没有声音，有问题fix：https://github.com/zhuker/lamejs/pull/11\r\n\t\tvar mp3=new Recorder.lamejs.Mp3Encoder(1,set.sampleRate,set.bitRate);\r\n\t\t\r\n\t\tvar blockSize=57600;\r\n\t\tvar data=[];\r\n\t\t\r\n\t\tvar idx=0;\r\n\t\tvar run=function(){\r\n\t\t\tif(idx<size){\r\n\t\t\t\tvar buf=mp3.encodeBuffer(res.subarray(idx,idx+blockSize));\r\n\t\t\t\tif(buf.length>0){\r\n\t\t\t\t\tdata.push(buf);\r\n\t\t\t\t};\r\n\t\t\t\tidx+=blockSize;\r\n\t\t\t\tsetTimeout(run);//Worker? 复杂了\r\n\t\t\t}else{\r\n\t\t\t\tvar buf=mp3.flush();\r\n\t\t\t\tif(buf.length>0){\r\n\t\t\t\t\tdata.push(buf);\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tTrue(new Blob(data,{type:\"audio/mp3\"}));\r\n\t\t\t};\r\n\t\t};\r\n\t\trun();\r\n\t}\r\n\t\r\n})();","'use strict';\nvar $ = require('../internals/export');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return URL.prototype.toString.call(this);\n  }\n});\n","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Float32Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Float32', function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","/*eslint-disable*/\r\n/*\r\n录音 Recorder扩展，动态波形显示\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n(function(){\r\n\r\nvar WaveView=function(set){\r\n\treturn new fn(set);\r\n};\r\nvar fn=function(set){\r\n\tvar This=this;\r\n\tvar o={\r\n\t\t/*\r\n\t\telem:\"css selector\" //自动显示到dom，并以此dom大小为显示大小\r\n\t\t\t//或者配置显示大小，手动把waveviewObj.elem显示到别的地方\r\n\t\t,width:0 //显示宽度\r\n\t\t,height:0 //显示高度\r\n\t\t\r\n\t\t以上配置二选一\r\n\t\t*/\r\n\t\t\r\n\t\tscale:2 //缩放系数，因为正整数，使用2(3? no!)倍宽高进行绘制，避免移动端绘制模糊\r\n\t\t,speed:8 //移动速度系数，越大越快\r\n\t\t\r\n\t\t,lineWidth:3 //线条基础粗细\r\n\t\t\r\n\t\t//渐变色配置：[位置，css颜色，...] 位置: 取值0.0-1.0之间\r\n\t\t,linear1:[0,\"rgba(150,96,238,1)\",0.2,\"rgba(170,79,249,1)\",1,\"rgba(53,199,253,1)\"] //线条渐变色1，从左到右\r\n\t\t,linear2:[0,\"rgba(209,130,255,0.6)\",1,\"rgba(53,199,255,0.6)\"] //线条渐变色2，从左到右\r\n\t\t,linearBg:[0,\"rgba(255,255,255,0.2)\",1,\"rgba(54,197,252,0.2)\"] //背景渐变色，从上到下\r\n\t};\r\n\tfor(var k in set){\r\n\t\to[k]=set[k];\r\n\t};\r\n\tThis.set=set=o;\r\n\t\r\n\tvar elem=set.elem;\r\n\tif(elem){\r\n\t\tif(typeof(elem)==\"string\"){\r\n\t\t\telem=document.querySelector(elem);\r\n\t\t}else if(elem.length){\r\n\t\t\telem=elem[0];\r\n\t\t};\r\n\t};\r\n\tif(elem){\r\n\t\tset.width=elem.offsetWidth;\r\n\t\tset.height=elem.offsetHeight;\r\n\t};\r\n\t\r\n\tvar scale=set.scale;\r\n\tvar width=set.width*scale;\r\n\tvar height=set.height*scale;\r\n\t\r\n\tvar thisElem=This.elem=document.createElement(\"div\");\r\n\tthisElem.innerHTML='<div style=\"width:'+set.width+'px;height:'+set.height+'px;overflow:hidden\"><div style=\"width:'+width+'px;height:'+height+'px;transform-origin:0 0;transform:scale('+(1/1/scale)+')\"><canvas/></div></div>';\r\n\t\r\n\tvar canvas=This.canvas=thisElem.querySelector(\"canvas\");\r\n\tvar ctx=This.ctx=canvas.getContext(\"2d\");\r\n\tcanvas.width=width;\r\n\tcanvas.height=height;\r\n\t\r\n\tThis.linear1=This.genLinear(ctx,width,set.linear1);\r\n\tThis.linear2=This.genLinear(ctx,width,set.linear2);\r\n\tThis.linearBg=This.genLinear(ctx,height,set.linearBg,true);\r\n\t\r\n\tif(elem){\r\n\t\telem.innerHTML=\"\";\r\n\t\telem.appendChild(thisElem);\r\n\t};\r\n\t\r\n\tThis._phase=0;\r\n};\r\nfn.prototype=WaveView.prototype={\r\n\tgenLinear:function(ctx,size,colors,top){\r\n\t\tvar rtv=ctx.createLinearGradient(0,0,top?0:size,top?size:0);\r\n\t\tfor(var i=0;i<colors.length;){\r\n\t\t\trtv.addColorStop(colors[i++],colors[i++]);\r\n\t\t};\r\n\t\treturn rtv;\r\n\t}\r\n\t,genPath:function(frequency,amplitude,phase){\r\n\t\t//曲线生成算法参考 https://github.com/HaloMartin/MCVoiceWave/blob/f6dc28975fbe0f7fc6cc4dbc2e61b0aa5574e9bc/MCVoiceWave/MCVoiceWaveView.m#L268\r\n\t\tvar rtv=[];\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\tvar maxAmplitude=set.height*scale/2;\r\n\t\t\r\n\t\tfor(var x=0;x<width;x+=scale) {\r\n\t\t\tvar scaling=(1+Math.cos(Math.PI+(x/width)*2*Math.PI))/2;\r\n\t\t\tvar y=scaling*maxAmplitude*amplitude*Math.sin(2*Math.PI*(x/width)*frequency+phase)+maxAmplitude;\r\n\t\t\trtv.push(y);\r\n\t\t}\r\n\t\treturn rtv;\r\n\t}\r\n\t,input:function(pcmData,powerLevel,sampleRate){\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar ctx=This.ctx;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\tvar height=set.height*scale;\r\n\t\t\r\n\t\tvar speedx=set.speed*pcmData.length/sampleRate;\r\n\t\tvar phase=This._phase-=speedx;//位移速度\r\n\t\tvar amplitude=powerLevel/100;\r\n\t\tvar path1=This.genPath(2,amplitude,phase);\r\n\t\tvar path2=This.genPath(1.8,amplitude,phase+speedx*5);\r\n\t\t\r\n\t\t//开始绘制图形\r\n\t\tctx.clearRect(0,0,width,height);\r\n\t\t\r\n\t\t//绘制包围背景\r\n\t\tctx.beginPath();\r\n\t\tfor(var i=0,x=0;x<width;i++,x+=scale) {\r\n\t\t\tif (x==0) {\r\n\t\t\t\tctx.moveTo(x,path1[i]);\r\n\t\t\t}else {\r\n\t\t\t\tctx.lineTo(x,path1[i]);\r\n\t\t\t};\r\n\t\t};\r\n\t\ti--;\r\n\t\tfor(var x=width-1;x>=0;i--,x-=scale) {\r\n\t\t\tctx.lineTo(x,path2[i]);\r\n\t\t};\r\n\t\tctx.closePath();\r\n\t\tctx.fillStyle=This.linearBg;\r\n\t\tctx.fill();\r\n\t\t\r\n\t\t//绘制线\r\n\t\tThis.drawPath(path2,This.linear2);\r\n\t\tThis.drawPath(path1,This.linear1);\r\n\t}\r\n\t,drawPath:function(path,linear){\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar ctx=This.ctx;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\tfor(var i=0,x=0;x<width;i++,x+=scale) {\r\n\t\t\tif (x==0) {\r\n\t\t\t\tctx.moveTo(x,path[i]);\r\n\t\t\t}else {\r\n\t\t\t\tctx.lineTo(x,path[i]);\r\n\t\t\t};\r\n\t\t};\r\n\t\tctx.lineWidth=set.lineWidth*scale;\r\n\t\tctx.strokeStyle=linear;\r\n\t\tctx.stroke();\r\n\t}\r\n};\r\nRecorder.WaveView=WaveView;\r\n\r\n\t\r\n})();","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int8Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int8', function (init) {\n  return function Int8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n"],"sourceRoot":""}