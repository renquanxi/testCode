{"version":3,"sources":["webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///./node_modules/core-js/internals/to-index.js","webpack:///./node_modules/core-js/internals/array-species-constructor.js","webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./node_modules/core-js/internals/regexp-unsupported-ncg.js","webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./node_modules/core-js/modules/es.typed-array.int32-array.js","webpack:///./node_modules/core-js/internals/typed-array-from-species-and-list.js","webpack:///./node_modules/core-js/internals/array-copy-within.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/es.typed-array.subarray.js","webpack:///./node_modules/core-js/internals/to-offset.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./src/assets/recordermaster/src/recorder-core.js","webpack:///./node_modules/core-js/modules/es.typed-array.sort.js","webpack:///./node_modules/core-js/modules/es.typed-array.reduce-right.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es.typed-array.slice.js","webpack:///./node_modules/core-js/modules/es.string.starts-with.js","webpack:///./src/assets/recordermaster/src/engine/mp3-engine.js","webpack:///./node_modules/core-js/modules/es.typed-array.last-index-of.js","webpack:///./src/views/recorderDemo.vue?515c","webpack:///src/views/recorderDemo.vue","webpack:///./src/views/recorderDemo.vue?62f9","webpack:///./src/views/recorderDemo.vue","webpack:///./node_modules/core-js/modules/es.typed-array.find-index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/core-js/modules/es.typed-array.set.js","webpack:///./node_modules/core-js/modules/es.typed-array.map.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/core-js/modules/es.string.match.js","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./node_modules/core-js/modules/es.typed-array.float64-array.js","webpack:///./node_modules/core-js/modules/es.regexp.constructor.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/modules/es.regexp.flags.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/core-js/modules/es.typed-array.join.js","webpack:///./node_modules/core-js/modules/es.typed-array.iterator.js","webpack:///./node_modules/core-js/internals/array-buffer.js","webpack:///./node_modules/core-js/modules/es.typed-array.some.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/modules/es.math.log10.js","webpack:///./src/assets/recordermaster/src/extensions/jquery.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/core-js/modules/es.typed-array.to-string.js","webpack:///./node_modules/core-js/modules/es.typed-array.fill.js","webpack:///./node_modules/core-js/internals/define-well-known-symbol.js","webpack:///./node_modules/core-js/internals/typed-array-constructor.js","webpack:///./node_modules/core-js/internals/ieee754.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/core-js/internals/array-fill.js","webpack:///./node_modules/core-js/modules/es.typed-array.includes.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/typed-array-constructors-require-wrappers.js","webpack:///./node_modules/core-js/modules/es.typed-array.int16-array.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/modules/es.typed-array.copy-within.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/internals/typed-array-from.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./node_modules/core-js/modules/es.symbol.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/core-js/modules/es.typed-array.every.js","webpack:///./node_modules/core-js/internals/array-buffer-native.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/modules/es.typed-array.to-locale-string.js","webpack:///./node_modules/core-js/internals/typed-array-species-constructor.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./src/assets/recordermaster/src/extensions/waveview.js","webpack:///./node_modules/core-js/modules/web.url.to-json.js","webpack:///./node_modules/core-js/modules/es.typed-array.filter.js","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./node_modules/core-js/modules/es.typed-array.reduce.js","webpack:///./node_modules/core-js/modules/es.array.fill.js","webpack:///./node_modules/core-js/modules/es.typed-array.reverse.js","webpack:///./node_modules/core-js/modules/es.typed-array.float32-array.js","webpack:///./node_modules/core-js/modules/es.typed-array.find.js","webpack:///./node_modules/core-js/modules/es.symbol.iterator.js","webpack:///./node_modules/core-js/internals/array-reduce.js","webpack:///./node_modules/core-js/modules/es.typed-array.for-each.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js","webpack:///./node_modules/core-js/internals/array-from-constructor-and-list.js","webpack:///./node_modules/core-js/modules/es.symbol.description.js","webpack:///./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///./node_modules/core-js/internals/array-last-index-of.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/modules/es.typed-array.index-of.js","webpack:///./node_modules/core-js/internals/is-integral-number.js","webpack:///./node_modules/core-js/internals/array-buffer-view-core.js","webpack:///./src/assets/recordermaster/src/engine/mp3.js","webpack:///./node_modules/core-js/internals/to-positive-integer.js","webpack:///./node_modules/core-js/modules/es.array.slice.js","webpack:///./node_modules/core-js/internals/regexp-unsupported-dot-all.js","webpack:///./node_modules/core-js/modules/es.typed-array.int8-array.js"],"names":["userAgent","firefox","match","module","exports","toIndexedObject","$getOwnPropertyNames","f","toString","windowNames","window","Object","getOwnPropertyNames","getWindowNames","it","error","slice","call","toIntegerOrInfinity","toLength","undefined","number","length","RangeError","isArray","isConstructor","isObject","wellKnownSymbol","SPECIES","originalArray","C","constructor","Array","prototype","toObject","floor","Math","replace","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","matched","str","position","captures","namedCaptures","replacement","tailPos","m","symbols","ch","capture","charAt","n","fails","global","$RegExp","RegExp","re","exec","groups","a","fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","getMethod","callRegExpExec","regexpExec","stickyHelpers","UNSUPPORTED_Y","arrayPush","push","min","MAX_UINT32","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","this","arguments","result","split","SPLIT","nativeSplit","maybeCallNative","internalSplit","separator","limit","string","lim","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","index","test","O","splitter","rx","S","res","done","value","unicodeMatching","p","q","A","e","z","i","createTypedArrayConstructor","init","data","byteOffset","arrayFromConstructorAndList","typedArraySpeciesConstructor","instance","list","toAbsoluteIndex","lengthOfArrayLike","copyWithin","target","start","len","to","from","end","count","inc","isCallable","classof","R","TypeError","ArrayBufferViewCore","aTypedArray","exportTypedArrayMethod","begin","beginIndex","buffer","BYTES_PER_ELEMENT","toPositiveInteger","BYTES","offset","V8_VERSION","METHOD_NAME","array","foo","Boolean","RecorderLM","NOOP","Recorder","set","initFn","o","type","bitRate","sampleRate","bufferSize","onProcess","k","IsOpen","stream","Stream","tracks","getTracks","readyState","Support","AC","AudioContext","webkitAudioContext","scope","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Scope","Ctx","state","open","True","False","f1","setTimeout","f2","code","name","message","console","notAllow","pro","audio","then","close","This","_stop","stop","ctx","recSize","log","Date","now","srcSampleRate","isMock","resume","_start","onInt","media","createMediaStreamSource","process","createScriptProcessor","createJavaScriptNode","onaudioprocess","inputBuffer","getChannelData","size","powerLevel","Int16Array","power","j","s","max","abs","round","log10","bufferSampleRate","duration","clearTimeout","connect","destination","disconnect","pause","_resume","mock","pcmData","pcmSampleRate","step","last","idx","nl","il","t1","blob","msg","aCallable","internalSort","FF","IE_OR_EDGE","V8","WEBKIT","Uint16Array","nativeSort","sort","ACCEPT_INCORRECT_ARGUMENTS","STABLE_SORT","mod","expected","b","getSortCompare","comparefn","x","y","arrayLength","items","$reduceRight","right","callbackfn","PROPER_FUNCTION_NAME","PROPER","redefine","$toString","TO_STRING","RegExpPrototype","nativeToString","NOT_GENERIC","INCORRECT_NAME","rf","unsafe","$slice","FORCED","Int8Array","$","getOwnPropertyDescriptor","notARegExp","correctIsRegExpLogic","IS_PURE","$startsWith","startsWith","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","String","writable","proto","forced","searchString","that","search","lamejs","new_byte","new_short","new_int","Int32Array","new_float","Float32Array","new_double","Float64Array","new_float_n","args","sz","new_int_n","new_short_n","new_array_n","Arrays","fromIndex","toIndex","val","System","src","srcPos","dest","destPos","srcEnd","Util","ShortBlock","ordinal","SQRT2","FAST_LOG10","FAST_LOG10_X","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float","VbrMode","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","MPEGMode","_ordinal","Version","LAME_URL","LAME_MAJOR_VERSION","LAME_MINOR_VERSION","LAME_PATCH_VERSION","PSY_MAJOR_VERSION","PSY_MINOR_VERSION","getLameVersion","getLameShortVersion","getLameVeryShortVersion","getPsyVersion","getLameUrl","getLameOsBitness","Takehiro","qupvt","Bits","bits","setModules","_qupvt","subdv_table","quantize_lines_xrpow_01","l","istep","xr","xrPos","ix","ixPos","compareval0","quantize_lines_xrpow","remaining","x0","x1","x2","x3","rx0","rx1","rx2","rx3","adj43","quantize_xrpow","xp","pi","codInfo","prevNoise","sfb","sfbmax","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","global_gain","block_type","Encoder","SHORT_TYPE","NORM_TYPE","scalefac","preflag","pretab","scalefac_scale","subblock_gain","usefullsize","width","max_nonzero_coeff","fill","sfb_count1","ix_max","endPos","max1","max2","count_bit_ESC","t2","sum2","linbits","Tables","ht","xlen","sum","largetbl","count_bit_noESC","sum1","hlen1","hlen","count_bit_noESC_from2","table23","table56","count_bit_noESC_from3","sum3","hlen2","hlen3","t","huf_tbl_noESC","choose_table","QuantizePVT","IXMAX_VAL","LARGE_BITS","choice2","choice","linmax","recalc_divide_init","gfc","cod_info","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","big_values","r0","a1","scalefac_band","r0bits","bi","r0t","r1","a2","r1t","recalc_divide_sub","cod_info2","gi","r2","SBMAX_l","count1bits","part2_3_length","r2t","assign","region0_count","region1_count","table_select","noquant_count_bits","prev_noise","l3_enc","count1","t32l","t33l","count1table_select","bv_scf","use_best_huffman","best_huffman_divide","count_bits","w","IPOW20","xrpow_max","substep_shaping","gain","roundfac","pseudohalf","GrInfo","mode_gr","slen1_n","slen2_n","slen1_tab","slen2_tab","scfsi_calc","l3_side","tt","g0","scfsi_band","scfsi","s1","c1","s2","c2","SBPSY_l","c","part2_length","scalefac_compress","best_scalefac_store","gr","recalc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","tab","max_slen1","max_slen2","mixed_block_flag","sfbdivide","max_range_sfac_tab","table_number","row_in_table","partition","nr_sfb","over","max_sfac","partition_table","nr_of_sfb_block","slen1","slen2","slen3","slen4","sfb_partition_table","slen","log2tab","err","printf","huffman_init","bv_index","scfb_anz","GainAnalysis","PINK_REF","RMS_PERCENTILE","YULE_ORDER","RMS_WINDOW_TIME_NUMERATOR","MAX_SAMP_FREQ","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","input","inputPos","outputPos","nSamples","kernel","filterButter","ResetSampleFrequency","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","fsqr","d","analyzeResult","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","ceil","STEPS_per_dB","InitGainAnalysis","linpre","rinpre","lstep","rstep","lout","rout","B","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","num_samples","num_channels","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","arraycopy","ival","GetTitleGain","retval","Presets","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","fix","vbr_q","quant_comp","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","msfix","ABRPresets","kbps","bass","sc","mask","interCh","sfScale","nsmsfix","nsbass","scale","sfscale","lame","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","gfp","enforce","vbr_preset","VBR","VBR_q_frac","lame_set_VBR_q","quant_comp_short","experimentalY","internal_flags","nsPsy","attackthre","attackthre_s","maskingadjust","maskingadjust_short","ATHlower","ATHcurve","athaa_sensitivity","interChRatio","exp_nspsytune","VBR_q","abr_switch_map","apply_abr_preset","preset","actual_bitrate","r","nearestBitrateFullIndex","VBR_mean_bitrate_kbps","brate","disable_reservoir","noise_shaping","int","ret","apply_preset","Lame","R3MIX","V3","MEDIUM","V4","MEDIUM_FAST","STANDARD","V2","STANDARD_FAST","EXTREME","V0","EXTREME_FAST","INSANE","V9","V7","V6","V5","V1","Reservoir","bs","_bs","ResvFrameBegin","mean_bits","maxmp3buf","frameLength","getframebits","sideinfo_len","resvLimit","out_samplerate","strict_ISO","ResvMax","fullFrameBits","ResvSize","resvDrain_pre","pinfo","resvsize","ResvMaxBits","targ_bits","cbr","add_bits","extra_bits","ResvAdjust","ResvFrameEnd","over_bits","stuffingBits","resvDrain_post","mdb_bytes","main_data_begin","VBRTag","v","_v","FRAMES_FLAG","BYTES_FLAG","TOC_FLAG","VBR_SCALE_FLAG","NUMTOCENTRIES","MAXFRAMESIZE","VBRHEADERSIZE","LAMEHEADERSIZE","XING_BITRATE1","XING_BITRATE2","XING_BITRATE25","ISO_8859_1","VBRTag0","VBRTag1","crc16Lookup","addVbr","bitrate","nVbrNumFrames","seen","want","pos","bag","xingSeekTable","act","indx","seek_point","extractInteger","buf","bufPos","createInteger","createShort","isVbrTag","equals","shiftInBitsValue","setLameTagFrameHeader","version","error_protection","bitrate_index","samplerate_index","extension","mode","mode_ext","copyright","original","emphasis","bbyte","abyte","free_format","BitrateIndex","crcUpdateLookup","crc","tmp","putLameVBR","musicLength","streamBuffer","streamBufferPos","vbr","revMethod","abrBitrate","bytesWritten","encDelay","encoder_delay","encPadding","encoder_padding","quality","revision","vbrTypeTranslator","lowpass","lowpassfreq","peakSignalAmplitude","radioReplayGain","audiophileReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","misc","musicCRC","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","nogap_total","noGapCurr","nogap_current","athType","ATHtype","VBR_min_bitrate_kbps","findReplayGain","RadioGain","findPeakSample","PeakSample","pow","MONO","STEREO","DUAL_CHANNEL","JOINT_STEREO","force_ms","NOT_SET","in_samplerate","short_blocks","highpassfreq","scale_left","scale_right","noATH","ATHonly","nMusicCRC","skipId3v2","fpStream","seek","id3v2TagSize","id3v2Header","readFully","addVbrFrame","bitrate_table","VBR_seek_table","getVbrTag","pTagData","VBRTagData","hId","hSrIndex","hMode","hBitrate","samprate","samplerate_table","head_flags","frames","bytes","toc","vbrScale","headersize","InitVbrTag","kbps_header","totalFrameSize","headerSize","TotalFrameSize","bWriteVbrTag","nBytesWritten","add_dummy_byte","updateMusicCRC","bufferPos","getLameTagFrame","Class_ID","LAME_ID","streamIndex","streamSize","CRC_writeheader","putVbrTag","write","BitStream","self","CRC16_POLYNOMIAL","ga","mpg","ver","_ga","_mpg","_ver","_vbr","totbit","bufByteIdx","bufBitIdx","putheader_bits","header","w_ptr","LameInternalFlags","MAX_HEADER_BUF","putbits2","write_timing","putbits_noheaders","drain_into_ancillary","remainingBits","ancillary_flag","writeheader","ptr","h_ptr","CRC_update","encodeSideInfo2","bitsPerFrame","padding","channels_out","private_bits","band","old","println","huffman_coder_count1","h","huffbits","table","Huffmancode","tableindex","cbits","xbits","ext","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","writeMainData","data_bits","tot_bits","sfb_partition","scale_bits","sfbs","TotalBytes","total","compute_flushbits","total_bytes_output","flushbits","remaining_headers","last_ptr","first_ptr","bit_rate","byte","flush_bitstream","rgdata","noclipGainChange","EQ","noclipScale","format_bitstream","copy_buffer","mp3data","minimum","decode_on_the_fly","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","hip","init_bit_stream_w","LAME_MAXMP3BUFFER","HuffCodeTab","hl","MAX_dB","NEQ","MeanBits","meanBits","CalcNoiseResult","over_noise","tot_noise","max_noise","over_count","over_SSD","VBRQuantize","_tk","ATH","useAdjust","aaSensitivityP","adjust","adjustLimit","decay","SBMAX_s","psfb21","PSFB21","psfb12","PSFB12","cb_l","CBANDS","cb_s","eql_w","BLKSIZE","LameGlobalFlags","class_id","analysis","decode_only","write_id3tag_automatic","compression_ratio","experimentalZ","VBR_max_bitrate_kbps","VBR_hard_min","lowpasswidth","highpasswidth","ATHshort","athaa_type","athaa_loudapprox","useTemporal","tune","tune_value_a","framesize","frameNum","lame_allocated_gfp","CBRNewIterationLoop","_quantize","quantize","iteration_loop","pe","ms_ener_ratio","ratio","max_bits","l3_xmin","L3Side","SFBMAX","xrpow","mb","rv","on_pe","MPG_MD_MS_LR","ms_convert","reduce_side","masking_lower_db","PSY","mask_adjust","mask_adjust_short","masking_lower","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","ReplayGain","freqindex","first","ScaleFac","arrL","arrS","arr21","arr12","tak","psy","POW20","pow20","Q_MAX2","_rv","_psy","ipow20","DBL_EPSILON","PRECALC_SIZE","Q_MAX","NSATHSCALE","sfBandIndex","pow43","ATHmdct","ath","ATHformula","compute_ath","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","freq","ATH_f","StartLine","iteration_init","iteration_init_init","alto","treble","sfb21","longfact","shortfact","tbits","MAX_BITS_PER_GRANULE","MAX_BITS_PER_CHANNEL","fac","move_bits","athAdjust","athFloor","u","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","psy_lmax","xmin","rh1","rh2","en0","xa","xb","en","thm","max_nonzero","sfb_smin","psymax","tmpATH","SBPSY_s","calc_noise_core","startline","noise","temp","ix01","calc_noise","distort","distortPos","l3_xminPos","over_noise_db","tot_noise_db","scalefacPos","noise_log","sl","set_pinfo","sfb2","en1","ifqstep","xfsf","sfb_lmax","bw","thr","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","CalcNoiseData","clone_int","clone_float","other","t1HB","t2HB","t3HB","t5HB","t6HB","t7HB","t8HB","t9HB","t10HB","t11HB","t12HB","t13HB","t15HB","t16HB","t24HB","t32HB","t33HB","t1l","t2l","t3l","t5l","t6l","t7l","t8l","t9l","t10l","t11l","t12l","t13l","t15l","t16_5l","t16l","t24l","Quantize","tk","init_xrpow_core","sqrt","psfb21_analogsilence","ath21","block","ath12","BinSearchDirection","bin_search_StepSize","desired_rate","nBits","CurrentStep","flagGoneOver","OldValue","Direction","BINSEARCH_NONE","BINSEARCH_DOWN","BINSEARCH_UP","loop_break","penalties","get_klemm_noise","klemm_noise","quant_compare","best","calc","better","amp_scalefac_bands","bRefine","ifqstep34","trigger","noise_shaping_amp","inc_scalefac_scale","inc_subblock_gain","amp","balance_noise","status","sfb21_extra","ixwork","trancate_smallspectrums","work","allowedNoise","trancateThreshold","nsame","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","age","search_limit","noise_info","maxggain","huff_bits","full_outer_loop","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","found","get_framebits","frameBits","VBR_min_bitrate","VBR_max_bitrate","VBR_old_prepare","bands","analog_silence","avg","mxb","exp","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","NewMDCT","enwindow","NS","NL","win","tantab_l","cx","ca","cs","order","window_subband","x1Pos","wp","mdct_short","inout","inoutPos","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","out","outPos","_in","ct","st","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","mdct_sub48","w0","w1","wk","wkPos","mdct_enc","mdct_encPos","samp","sb_sample","sampPos","band0","band1","amp_filter","bu","bd","III_psy_ratio","III_psy_xmin","FFTOFFSET","newMDCT","adjust_ATH","gr2_max","max_pow","loudness_sq","adj_lim_new","updateStats","bitrate_stereoMode_Hist","bt","bitrate_blockType_Hist","lame_encode_frame_init","inbuf","primebuff0","primebuff1","lame_encode_mp3_frame","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","tot_ener","pe_MS","slot_lag","frac_SpF","psymodel","bufp","bufpPos","blocktype","L3psycho_anal_vbr","L3psycho_anal_ns","MPG_MD_LR_LR","sum_pe_MS","sum_pe_LR","gi0","gi1","ms_ratio","ers","energy","pefirbuf","fircoef","pcmdata","set_frame_pinfo","VBRSeekInfo","IIISideInfo","iii_psy_xmin","NsPsy","last_en_subshort","lastAttacks","MAX_HEADER_LEN","Header","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","mf_size","lowpass1","lowpass2","highpass1","highpass2","noise_shaping_stop","tag_spec","inbuf_old","blackfilt","BPC","itime","SBLIMIT","minval_l","minval_s","nb_1","nb_2","nb_s1","nb_s2","s3_ss","s3_ll","loudness_sq_save","mld_l","mld_s","bm_l","bo_l","bm_s","bo_s","npart_l","npart_s","s3ind","s3ind_s","numlines_s","numlines_l","rnumlines_l","mld_cb_l","mld_cb_s","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","ms_ener_ratio_old","blocktype_old","AudiophileGain","in_buffer_nsamples","in_buffer_0","in_buffer_1","FFT","window_s","BLKSIZE_s","costab","fht","fz","fzPos","k4","fi","tri","fn","k1","k2","k3","kx","f0","f3","g1","g2","g3","rv_tbl","fft_short","x_real","chn","fft_long","jj","init_fft","cos","PI","PsyModel","fft","LOG10","rpelev","rpelev2","rpelev_s","rpelev2_s","DELBARK","VO_SCALE","temporalmask_sustain_sec","NS_PREECHO_ATT0","NS_PREECHO_ATT1","NS_PREECHO_ATT2","NS_MSFIX","NSFIRLEN","LN_TO_LOG10","NON_LINEAR_SCALE_ENERGY","psycho_loudness_approx","loudness_power","compute_ffts","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","im","totalenergy","HBLKSIZE","energy_save","ma_max_i1","ma_max_i2","ma_max_m","I1LIMIT","I2LIMIT","MLIMIT","init_mask_add_max_values","table1","table2","table3","mask_add","m1","m2","kk","shortblock","table2_","vbrpsy_mask_add","calc_interchannel_masking","sb","sblock","msfix1","mld","rmid","rside","ns_msfix","athadjust","msfix2","athlower","thmLR","thmM","thmS","convert_partition2scalefac_s","eb","enn","thmm","bo_s_sb","b_lim","w_curr","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l_weight","compute_masking_s","ebb","el","ecb","block_type_set","uselongblock","blocktype_d","STOP_TYPE","START_TYPE","NS_INTERP","regcoef_s","pecalc_s","mr","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","calc_mask_index_l","mask_idx","last_tab_entry","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","numchn","pcfact","wsamp_L","wsamp_S","eb_l","eb_s","ns_hpfsmpl","mask_idx_l","mask_idx_s","firbuf","firbufPos","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","HBLKSIZE_s","pf","pfPos","pfe","ers_save","eb2","ppe","ppePos","fircoef_","vbrpsy_attack_detection","sub_short_factor","n_chn_out","n_chn_psy","factor","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","psyvbr_calc_mask_index_s","vbrpsy_compute_masking_s","float","dd","dd_n","avg_mask","vbrpsy_compute_masking_l","ecb_limit","ecb_limit_2","ecb_limit_1","vbrpsy_compute_block_type","vbrpsy_apply_block_type","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","tempx","norm_s3_func_x","lim_a","lim_b","norm","s3_func","freq2bark","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","ni","j2","bark1","i1","i2","arg","f_tmp","bark2","init_s3_values","npart","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","ch01","new_thmm","psymodel_init","useOldS3","bvl_a","bvl_b","snr_l_a","snr_l_b","snr_s_a","snr_s_b","snr","level","frame_duration","freq_inc","eql_balance","LAME_MAXALBUMART","qu","id3","mpglib","LowPassHighPass","lowerlimit","BandPass","lPass","enc","_p","_qu","_id3","_mpglib","lame_init_old","ENCDELAY","POSTDELAY","MDCTDELAY","filter_coef","optimum_samplefreq","input_samplefreq","suggested_samplefreq","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","samplerate","optimum_bandwidth","lh","freq_map","table_index","lame_init_params_ppflt","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_qval","lame_init_bitstream","id3tag_write_v2","update_inbuffer_size","nsamples","calcNeeded","mf_needed","lame_encode_buffer_sample","buffer_l","buffer_r","mp3out","mp3size","in_buffer","in_bufferPos","in_buffer_ptr","n_in","n_out","inOut","InOut","fill_buffer","buf_size","lame_encode_frame","NumUsed","num_used","gcd","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","bpc","intratio","filter_l","BLACKSIZE","time0","joff","xvalue","n_shift","io","numUsed","lame_init","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","lame_init_params","map2MP3Frequency","linear_int","hip_decode_exit","hip_decode_init","cmp","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","NSATTACKTHRE","NSATTACKTHRE_S","lame_encode_flush","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","lame_encode_buffer","id3tag_write_v1","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","Mp3Encoder","channels","gaud","parse","maxSamples","encodeBuffer","left","_sz","subarray","flush","WavHeader","dataOffset","dataLen","fourccToInt","fourcc","charCodeAt","DECDELAY","MPG_MD_LR_I","MPG_MD_MS_I","RIFF","WAVE","fmt_","readHeader","dataView","getUint32","fmtLen","getUint16","$lastIndexOf","searchElement","rec","render","_vm","_h","$createElement","_c","_self","attrs","staticClass","Recordingtage","_s","Recordingtime","bengin","_e","on","startRecording","endRecording","staticRenderFns","Recordingnum","created","mounted","methods","recopen","recstop","time","bit","sample","buffers","batCall","recstart","recclose","component","$findIndex","findIndex","predicate","__webpack_amd_options__","toOffset","arrayLike","$map","map","mapfn","MATCH","regExpExec","nativeMatch","regexp","matcher","fullUnicode","matchStr","$trim","trim","forcedStringTrimMethod","DESCRIPTORS","isForced","inheritIfRequired","createNonEnumerableProperty","defineProperty","getFlags","hasOwn","enforceInternalState","setSpecies","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","NativeRegExp","IS_NCG","re1","re2","CORRECT_NEW","BASE_FORCED","handleDotAll","chr","brackets","handleNCG","named","names","ncg","groupid","groupname","SyntaxError","RegExpWrapper","pattern","rawFlags","dotAll","handled","thisIsRegExp","patternIsRegExp","flagsAreUndefined","rawPattern","indexOf","raw","proxy","key","configurable","get","keys","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","arrayMethodIsStrict","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","fromCharCode","itemsLength","webkit","getSubstitution","REPLACE","maybeToString","REPLACE_KEEPS_$0","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","_","nativeReplace","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","functionalReplace","results","accumulatedResult","nextSourcePosition","replacerArgs","concat","objectDefinePropertyModule","regExpFlags","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","$join","join","ArrayIterators","ITERATOR","Uint8Array","arrayValues","values","arrayKeys","arrayEntries","entries","nativeTypedArrayIterator","PROPER_ARRAY_VALUES_NAME","typedArrayValues","NATIVE_ARRAY_BUFFER","FunctionName","redefineAll","anInstance","IEEE754","getPrototypeOf","setPrototypeOf","arrayFill","setToStringTag","InternalStateModule","CONFIGURABLE_FUNCTION_NAME","CONFIGURABLE","getInternalState","setInternalState","ARRAY_BUFFER","DATA_VIEW","PROTOTYPE","WRONG_LENGTH","WRONG_INDEX","NativeArrayBuffer","$ArrayBuffer","$DataView","$DataViewPrototype","ObjectPrototype","packIEEE754","pack","unpackIEEE754","unpack","packInt8","packInt16","packInt32","unpackInt32","packFloat32","packFloat64","addGetter","Constructor","view","isLittleEndian","intIndex","store","byteLength","reverse","conversion","INCORRECT_ARRAY_BUFFER_NAME","NaN","ArrayBufferPrototype","testView","$setInt8","setInt8","getInt8","setUint8","bufferLength","getUint8","getInt16","getInt32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","ArrayBuffer","DataView","$some","some","arraySpeciesConstructor","LOG10E","stat","document","location","jQuery","g","hasOwnProperty","T","N","E","D","L","toUpperCase","H","addEventListener","ready","removeEventListener","detachEvent","M","isWindow","nodeType","jquery","find","merge","parseHTML","ownerDocument","isPlainObject","isFunction","attr","getElementById","parentNode","id","context","selector","makeArray","toArray","pushStack","prevObject","each","promise","eq","splice","extend","noConflict","isReady","readyWait","holdReady","body","resolveWith","off","isNumeric","isNaN","parseFloat","isFinite","isEmptyObject","Error","createElement","buildFragment","remove","childNodes","parseJSON","JSON","Function","parseXML","DOMParser","parseFromString","ActiveXObject","async","loadXML","documentElement","getElementsByTagName","noop","globalEval","execScript","eval","camelCase","nodeName","toLowerCase","inArray","grep","guid","access","getTime","Deferred","attachEvent","frameElement","doScroll","F","Callbacks","once","memory","stopOnFalse","shift","disable","add","unique","has","empty","disabled","lock","locked","fireWith","fire","fired","always","fail","resolve","reject","progress","notify","pipe","when","notifyWith","support","setAttribute","innerHTML","appendChild","style","cssText","getSetAttribute","className","leadingWhitespace","firstChild","tbody","htmlSerialize","getAttribute","hrefNormalized","opacity","cssFloat","checkOn","optSelected","selected","enctype","html5Clone","cloneNode","outerHTML","boxModel","compatMode","deleteExpando","noCloneEvent","inlineBlockNeedsLayout","shrinkWrapBlocks","reliableMarginRight","boxSizingReliable","pixelPosition","checked","noCloneChecked","optDisabled","radioValue","createDocumentFragment","appendChecked","checkClone","lastChild","click","submit","change","focusin","attributes","expando","backgroundClip","clearCloneStyle","offsetHeight","display","reliableHiddenOffsets","boxSizing","offsetWidth","doesNotIncludeMarginInBodyOffset","offsetTop","getComputedStyle","top","marginRight","zoom","removeChild","P","acceptData","cache","pop","toJSON","cleanData","W","random","noData","embed","object","applet","hasData","removeData","_data","_removeData","queue","dequeue","_queueHooks","cur","unshift","delay","fx","speeds","clearQueue","I","X","U","V","Y","J","G","Q","K","removeAttr","prop","removeProp","propFix","addClass","removeClass","toggleClass","hasClass","valHooks","option","specified","text","select","options","selectedIndex","isXMLDoc","attrHooks","removeAttribute","tabindex","readonly","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","propHooks","tabIndex","getAttributeNode","parseInt","href","defaultValue","button","setAttributeNode","createAttribute","Z","et","nt","rt","ot","event","handler","events","handle","triggered","dispatch","elem","special","delegateType","bindType","origType","needsContext","expr","namespace","delegateCount","setup","teardown","removeEvent","Event","isTrigger","namespace_re","noBubble","defaultView","parentWindow","isPropagationStopped","preventDefault","isDefaultPrevented","_default","delegateTarget","preDispatch","handlers","currentTarget","isImmediatePropagationStopped","handleObj","stopPropagation","postDispatch","fixHooks","mouseHooks","keyHooks","props","srcElement","metaKey","which","charCode","keyCode","fromElement","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","relatedTarget","toElement","load","focus","activeElement","blur","beforeunload","originalEvent","returnValue","simulate","isSimulated","defaultPrevented","getPreventDefault","timeStamp","cancelBubble","stopImmediatePropagation","mouseenter","mouseleave","contains","submitBubbles","form","_submit_bubble","changeBubbles","propertyName","_just_changed","focusinBubbles","one","bind","unbind","delegate","undelegate","triggerHandler","ID","CLASS","NAME","TAG","ATTR","PSEUDO","CHILD","cacheLength","at","getByClassName","getElementsByClassName","qsa","ft","dt","querySelectorAll","wt","ut","sourceIndex","nextSibling","lt","pt","isXML","setDocument","tagNameNoComments","createComment","getByName","insertBefore","getElementsByName","getIdNotName","attrHandle","matchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","detectDuplicates","matches","uniqueSort","getText","textContent","nodeValue","selectors","createPseudo","relative","dir","preFilter","pseudos","setFilters","not","innerText","lang","hash","root","hasFocus","enabled","parent","even","odd","gt","radio","checkbox","file","password","image","reset","mt","yt","xt","vt","Tt","compile","nth","filters","children","contents","next","prev","is","closest","prevAll","addBack","andSelf","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","sibling","contentDocument","contentWindow","Nt","Ct","kt","Et","St","At","legend","area","param","thead","tr","col","td","jt","Dt","Lt","Ht","qt","Mt","_t","Ft","defaultChecked","defaultSelected","Ot","Bt","optgroup","tfoot","colgroup","caption","th","append","createTextNode","wrapAll","clone","wrapInner","wrap","unwrap","replaceWith","domManip","prepend","before","after","html","detach","ajax","url","dataType","appendTo","prependTo","insertAfter","replaceAll","Pt","Rt","Wt","$t","It","zt","Xt","Ut","Vt","Yt","Jt","Gt","BODY","Qt","visibility","Kt","letterSpacing","fontWeight","Zt","tn","nn","css","rn","un","an","sn","ln","show","hide","toggle","cssHooks","cssNumber","columnCount","fillOpacity","lineHeight","orphans","widows","zIndex","cssProps","swap","getPropertyValue","minWidth","maxWidth","currentStyle","runtimeStyle","pixelLeft","$1","hidden","visible","margin","border","expand","cn","pn","dn","hn","gn","serialize","serializeArray","encodeURIComponent","ajaxSettings","traditional","hover","mn","yn","vn","bn","xn","wn","Tn","Nn","Cn","kn","En","Sn","An","jn","Dn","Ln","Hn","qn","dataTypes","Mn","flatOptions","_n","responseFields","mimeType","getResponseHeader","converters","Fn","dataFilter","complete","responseText","success","active","lastModified","etag","isLocal","processData","contentType","accepts","xml","json","ajaxSetup","ajaxPrefilter","ajaxTransport","statusCode","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","method","crossDomain","hasContent","ifModified","headers","beforeSend","timeout","send","statusText","rejectWith","getScript","getJSON","script","head","scriptCharset","charset","onload","onreadystatechange","On","Bn","jsonp","jsonpCallback","Pn","Rn","Wn","$n","In","XMLHttpRequest","zn","xhr","cors","username","xhrFields","unload","Xn","Un","Vn","Yn","Jn","Gn","nr","Qn","createTween","unit","Kn","Zn","er","startTime","tweens","run","opts","specialEasing","originalProperties","originalOptions","Tween","easing","timer","anim","unqueued","overflow","overflowX","overflowY","rr","ir","height","or","Animation","tweener","prefilter","animate","fadeTo","speed","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","linear","swing","tick","interval","setInterval","clearInterval","slow","fast","animated","setOffset","getBoundingClientRect","pageYOffset","pageXOffset","using","offsetParent","scrollTo","Height","Width","content","define","_typeof","obj","Symbol","iterator","__esModule","dummy","Wrapper","NewTarget","NewTargetPrototype","Uint8ArrayPrototype","arrayToString","arrayJoin","IS_NOT_ARRAY_METHOD","$fill","path","wrappedWellKnownSymbolModule","TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS","ArrayBufferModule","createPropertyDescriptor","isIntegralNumber","toPropertyKey","isSymbol","create","typedArrayFrom","forEach","definePropertyModule","getOwnPropertyDescriptorModule","nativeDefineProperty","nativeGetOwnPropertyDescriptor","NATIVE_ARRAY_BUFFER_VIEWS","TYPED_ARRAY_CONSTRUCTOR","TYPED_ARRAY_TAG","TypedArray","TypedArrayPrototype","aTypedArrayConstructor","isTypedArray","fromList","isArrayBuffer","klass","isTypedArrayIndex","wrappedGetOwnPropertyDescriptor","wrappedDefineProperty","enumerable","wrapper","CLAMPED","CONSTRUCTOR_NAME","GETTER","SETTER","NativeTypedArrayConstructor","TypedArrayConstructor","TypedArrayConstructorPrototype","exported","getter","setter","addElement","typedArrayOffset","$length","$len","sham","LN2","mantissaLength","exponent","mantissa","exponentLength","eMax","eBias","sign","Infinity","$find","addToUnscopables","FIND","SKIPS_HOLES","argumentsLength","$includes","includes","propertyKey","checkCorrectnessOfIteration","iterable","regexpFlags","shared","nativeExec","patchedExec","UPDATES_LAST_INDEX_WRONG","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","group","charsAdded","strCopy","createProperty","arraySpeciesCreate","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","$copyWithin","aConstructor","getIterator","getIteratorMethod","isArrayIteratorMethod","mapping","iteratorMethod","IndexedObject","nativeJoin","ES3_STRINGS","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","deleteCount","insertCount","actualDeleteCount","actualStart","getBuiltIn","NATIVE_SYMBOL","nativeObjectCreate","objectKeys","getOwnPropertyNamesModule","getOwnPropertyNamesExternal","getOwnPropertySymbolsModule","propertyIsEnumerableModule","sharedKey","hiddenKeys","uid","defineWellKnownSymbol","$forEach","HIDDEN","SYMBOL","TO_PRIMITIVE","getterFor","$Symbol","$stringify","nativeGetOwnPropertyNames","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","Attributes","ObjectPrototypeDescriptor","tag","description","symbol","$defineProperty","$defineProperties","Properties","properties","$getOwnPropertySymbols","$propertyIsEnumerable","$create","$getOwnPropertyDescriptor","IS_OBJECT_PROTOTYPE","keyFor","sym","useSetter","useSimple","defineProperties","getOwnPropertySymbols","FORCED_JSON_STRINGIFY","stringify","space","$replacer","valueOf","argument","$every","every","error1","error2","mergeSort","middle","insertionSort","element","llength","rlength","lindex","rindex","FUNCTION_NAME_EXISTS","EXISTS","FunctionPrototype","FunctionPrototypeToString","nameRE","$toLocaleString","toLocaleString","TO_LOCALE_STRING_BUG","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","specificCreate","boundFunction","filterReject","WaveView","lineWidth","linear1","linear2","linearBg","querySelector","thisElem","canvas","getContext","genLinear","_phase","colors","rtv","createLinearGradient","addColorStop","genPath","frequency","amplitude","phase","maxAmplitude","scaling","speedx","path1","path2","clearRect","beginPath","moveTo","lineTo","closePath","fillStyle","drawPath","strokeStyle","stroke","URL","fromSpeciesAndList","non","$reduce","IS_RIGHT","memo","KEY","SHAM","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","nativeMethod","arg2","forceStringMethod","$exec","UA","copyConstructorProperties","NativeSymbol","EmptyStringDescriptionStore","SymbolWrapper","symbolPrototype","symbolToString","nativeSymbol","desc","lastIndexOf","NEGATIVE_ZERO","$indexOf","Number","isInteger","Prototype","tryToString","Int8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","isPrototypeOf","TO_STRING_TAG","opera","TYPED_ARRAY_TAG_REQIRED","TypedArrayConstructorsList","Uint32Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isView","property","ARRAY","exportTypedArrayStaticMethod","enc_mp3","stable","testmsg","mp3","blockSize","Blob","nativeSlice","fin"],"mappings":"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vC,MAAQ,IAAQ,IAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KACxD,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,IACxD,MAAQ,KAAQ,KAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KACxD,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxD,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KACxD,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAA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GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEnwB,EAAOowB,KAAO,CACV,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEpwB,EAAOqwB,OAAS,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhErwB,EAAOswB,KAAO,CACV,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEtwB,EAAOuwB,KAAO,CACV,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,EAAG,EAA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B,IAAKthB,EAAK,EAAGA,EAAKpE,EAAIgD,QAASoB,IAC3B/J,EAAMurB,YAAY5T,EAAU5N,GAAK4gB,EAAc5gB,GAAK6M,EAC9CjR,EAAIme,aACNf,EAAkB6L,sBAO9B,IADA+K,EAAU,EACL5vB,EAAK,EAAGA,EAAKpE,EAAIgD,QAASoB,IAC3B,IAAK7d,EAAK,EAAGA,EAAKyZ,EAAIme,aAAc53B,IAC5ByrB,EAAU5N,GAAI7d,GAAM62B,EAAkB8L,uBACtClX,EAAU5N,GAAI7d,GAAM62B,EAAkB8L,sBAC1C8K,GAAWhiB,EAAU5N,GAAI7d,GAOjC,GAAIytC,EAAUF,EAAe,GACzB,IAAK1vB,EAAK,EAAGA,EAAKpE,EAAIgD,QAASoB,IAC3B,IAAK7d,EAAK,EAAGA,EAAKyZ,EAAIme,aAAc53B,IAChCyrB,EAAU5N,GAAI7d,IAAOutC,EAAe,GACpC9hB,EAAU5N,GAAI7d,IAAOytC,GAyCzC,SAASC,IAER,IAAIC,EAAW,EACb,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgBh8B,EAAKG,MAAQ,GAAM,QACnC,WAAgBH,EAAKG,MAAQ,GAAM,QACnC,WAAeH,EAAKG,MAAQ,GAAM,QAClC,WAAeH,EAAKG,MAAQ,GAAM,QAClC,UAAcH,EAAKG,MAAQ,GAAM,QACjC,UAAcH,EAAKG,MAAQ,GAAM,QACjC,UAAcH,EAAKG,MAAQ,GAAM,QACjC,SAAaH,EAAKG,MAAQ,GAAM,QAEhC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAGE87B,EAAK,GACLC,EAAK,GAELC,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACC,mBACA,kBACD,kBACA,IAEC,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBAED,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBAED,CACC,EACA,EACA,EACA,EACA,EACA,EACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAIFC,EAAWD,EAAIp3B,EAAQC,YACvBq3B,EAAKF,EAAIp3B,EAAQC,YACjBs3B,EAAKH,EAAIp3B,EAAQC,YACjBu3B,EAAKJ,EAAIp3B,EAAQC,YAajBw3B,EAAQ,CACR,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,E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","file":"js/chunk-b81a36f2.2f29b3c7.js","sourcesContent":["var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\n\n// `ToIndex` abstract operation\n// https://tc39.es/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toIntegerOrInfinity(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length or index');\n  return length;\n};\n","var isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (ch.charAt(0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return str.slice(0, position);\n      case \"'\": return str.slice(tailPos);\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('(?<a>b)', 'g');\n  return re.exec('b').groups.a !== 'b' ||\n    'b'.replace(re, '$<a>c') !== 'bc';\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = toString(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : getMethod(separator, SPLIT);\n      return splitter\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n\n      if (res.done) return res.value;\n\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int32Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int32', function (init) {\n  return function Int32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\n\nmodule.exports = function (instance, list) {\n  return arrayFromConstructorAndList(typedArraySpeciesConstructor(instance), list);\n};\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar min = Math.min;\n\n// `Array.prototype.copyWithin` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.copywithin\n// eslint-disable-next-line es/no-array-prototype-copywithin -- safe\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = lengthOfArrayLike(O);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","var anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar regexpExec = require('../internals/regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (isCallable(exec)) {\n    var result = exec.call(R, S);\n    if (result !== null) anObject(result);\n    return result;\n  }\n  if (classof(R) === 'RegExp') return regexpExec.call(R, S);\n  throw TypeError('RegExp#exec called on incompatible receiver');\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.subarray` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray\nexportTypedArrayMethod('subarray', function subarray(begin, end) {\n  var O = aTypedArray(this);\n  var length = O.length;\n  var beginIndex = toAbsoluteIndex(begin, length);\n  var C = typedArraySpeciesConstructor(O);\n  return new C(\n    O.buffer,\n    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,\n    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)\n  );\n});\n","var toPositiveInteger = require('../internals/to-positive-integer');\n\nmodule.exports = function (it, BYTES) {\n  var offset = toPositiveInteger(it);\n  if (offset % BYTES) throw RangeError('Wrong offset');\n  return offset;\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","/*eslint-disable*/\r\n/*\r\n录音\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n(function(window){\r\n\"use strict\";\r\n\r\n//兼容环境\r\nwindow.RecorderLM=\"2019-01-06 21:38:00\";\r\nvar NOOP=function(){};\r\n//end 兼容环境 ****从以下开始copy源码，到wav、mp3前面为止*****\r\n\r\nfunction Recorder(set){\r\n\treturn new initFn(set);\r\n};\r\n//是否已经打开了录音，所有工作都已经准备好了，就等接收音频数据了\r\nRecorder.IsOpen=function(){\r\n\tvar stream=Recorder.Stream;\r\n\tif(stream){\r\n\t\tvar tracks=stream.getTracks();\r\n\t\tif(tracks.length>0){\r\n\t\t\treturn tracks[0].readyState==\"live\";\r\n\t\t};\r\n\t};\r\n\treturn false;\r\n};\r\n//判断浏览器是否支持录音，随时可以调用。注意：仅仅是检测浏览器支持情况，不会判断和调起用户授权，不会判断是否支持特定格式录音。\r\nRecorder.Support=function(){\r\n\tvar AC=window.AudioContext;\r\n\tif(!AC){\r\n\t\tAC=window.webkitAudioContext;\r\n\t};\r\n\tif(!AC){\r\n\t\treturn false;\r\n\t};\r\n\tvar scope=navigator.mediaDevices||{};\r\n\tif(!scope.getUserMedia){\r\n\t\tscope=navigator;\r\n\t\tscope.getUserMedia||(scope.getUserMedia=scope.webkitGetUserMedia||scope.mozGetUserMedia||scope.msGetUserMedia);\r\n\t};\r\n\tif(!scope.getUserMedia){\r\n\t\treturn false;\r\n\t};\r\n\t\r\n\tRecorder.Scope=scope;\r\n\tif(!Recorder.Ctx||Recorder.Ctx.state==\"closed\"){\r\n\t\t//不能反复构造，低版本number of hardware contexts reached maximum (6)\r\n\t\tRecorder.Ctx=new AC();\r\n\t};\r\n\treturn true;\r\n};\r\nfunction initFn(set){\r\n\tvar o={\r\n\t\ttype:\"mp3\" //输出类型：mp3,wav，wav输出文件尺寸超大不推荐使用，但mp3编码支持会导致js文件超大，如果不需支持mp3可以使js文件大幅减小\r\n\t\t,bitRate:16 //比特率 wav:16或8位，MP3：8kbps 1k/s，8kbps 2k/s 录音文件很小\r\n\t\t\r\n\t\t,sampleRate:16000 //采样率，wav格式大小=sampleRate*时间；mp3此项对低比特率有影响，高比特率几乎无影响。\r\n\t\t\t\t\t//wav任意值，mp3取值范围：48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000\r\n\t\t\t\t\t//采样率参考https://www.cnblogs.com/devin87/p/mp3-recorder.html\r\n\t\t\r\n\t\t,bufferSize:4096//AudioContext缓冲大小。会影响onProcess调用速度，相对于AudioContext.sampleRate=48000时，4096接近12帧/s，调节此参数可生成比较流畅的回调动画。\r\n\t\t\t\t//取值256, 512, 1024, 2048, 4096, 8192, or 16384\r\n\t\t\t\t//注意，取值不能过低，2048开始不同浏览器可能回调速率跟不上造成音质问题（低端浏览器→说的就是腾讯X5）\r\n\t\t,onProcess:NOOP //fn(this.buffer,powerLevel,bufferDuration,bufferSampleRate) buffer=[缓冲PCM数据,...]，powerLevel：当前缓冲的音量级别0-100，bufferDuration：已缓冲时长，bufferSampleRate：缓冲使用的采样率\r\n\t};\r\n\t\r\n\tfor(var k in set){\r\n\t\to[k]=set[k];\r\n\t};\r\n\tthis.set=o;\r\n};\r\nRecorder.prototype=initFn.prototype={\r\n\t//打开录音资源True(),False(msg,isUserNotAllow)，需要调用close。注意：此方法是异步的；一般使用时打开，用完立即关闭；可重复调用，可用来测试是否能录音\r\n\topen:function(True,False){\r\n\t\tTrue=True||NOOP;\r\n\t\tFalse=False||NOOP;\r\n\t\t\r\n\t\tif(Recorder.IsOpen()){\r\n\t\t\tTrue();\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tif(!Recorder.Support()){\r\n\t\t\tFalse(\"此浏览器不支持录音\",false);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tvar f1=function(stream){\r\n\t\t\tRecorder.Stream=stream;\r\n\t\t\t\r\n\t\t\t//https://github.com/xiangyuecn/Recorder/issues/14 获取到的track.readyState!=\"live\"，刚刚回调时可能是正常的，但过一下可能就被关掉了，原因不明。延迟一下保证真异步。对正常浏览器不影响\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(Recorder.IsOpen()){\r\n\t\t\t\t\tTrue();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tFalse(\"录音功能无效：无音频流\");\r\n\t\t\t\t};\r\n\t\t\t},100);\r\n\t\t};\r\n\t\tvar f2=function(e){\r\n\t\t\tvar code=e.name||e.message||\"\";\r\n\t\t\tconsole.error(e);\r\n\t\t\tvar notAllow=/Permission|Allow/i.test(code);\r\n\t\t\tFalse(notAllow?\"用户拒绝了录音权限\":\"无法录音：\"+code,notAllow);\r\n\t\t};\r\n\t\tvar pro=Recorder.Scope.getUserMedia({audio:true},f1,f2);\r\n\t\tif(pro&&pro.then){\r\n\t\t\tpro.then(f1)[\"catch\"](f2);\r\n\t\t};\r\n\t}\r\n\t//关闭释放录音资源\r\n\t,close:function(call){\r\n\t\tcall=call||NOOP;\r\n\t\t\r\n\t\tvar This=this;\r\n\t\tThis._stop();\r\n\t\t\r\n\t\tvar stream=Recorder.Stream;\r\n\t\tif(stream){\r\n\t\t\tvar tracks=stream.getTracks();\r\n\t\t\tfor(var i=0;i<tracks.length;i++){\r\n\t\t\t\ttracks[i].stop();\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tRecorder.Stream=0;\r\n\t\tcall();\r\n\t}\r\n\t\r\n\t\r\n\t//开始录音，需先调用open；不支持、错误，不会有任何提示，stop时自然能得到错误\r\n\t,start:function(){\r\n\t\tvar This=this,ctx=Recorder.Ctx;\r\n\t\tvar buffer=This.buffer=[];//数据缓冲\r\n\t\tThis.recSize=0;//数据大小\r\n\t\tThis._stop();\r\n\t\t\r\n\t\tThis.state=0;\r\n\t\tif(!Recorder.IsOpen()){\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tconsole.log(\"[\"+Date.now()+\"]Start\");\r\n\t\tThis.srcSampleRate=ctx.sampleRate;\r\n\t\tThis.isMock=0;\r\n\t\t\r\n\t\tif(ctx.state==\"suspended\"){\r\n\t\t\tctx.resume().then(function(){\r\n\t\t\t\tconsole.log(\"ctx resume\");\r\n\t\t\t\tThis._start();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tThis._start();\r\n\t\t};\r\n\t}\r\n\t,_start:function(){\r\n\t\tvar This=this,set=This.set,buffer=This.buffer;\r\n\t\tvar ctx=Recorder.Ctx;\r\n\t\tvar media=This.media=ctx.createMediaStreamSource(Recorder.Stream);\r\n\t\tvar process=This.process=(ctx.createScriptProcessor||ctx.createJavaScriptNode).call(ctx,set.bufferSize,1,1);//单声道，省的数据处理复杂\r\n\t\t\r\n\t\tvar onInt;\r\n\t\tprocess.onaudioprocess=function(e){\r\n\t\t\tif(This.state!=1){\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\tvar o=e.inputBuffer.getChannelData(0);//块是共享的，必须复制出来\r\n\t\t\tvar size=o.length;\r\n\t\t\tThis.recSize+=size;\r\n\t\t\t\r\n\t\t\tvar res=new Int16Array(size);\r\n\t\t\tvar power=0;\r\n\t\t\tfor(var j=0;j<size;j++){//floatTo16BitPCM \r\n\t\t\t\t//var s=Math.max(-1,Math.min(1,o[j]*8));//PCM 音量直接放大8倍，失真还能接受\r\n\t\t\t\tvar s=Math.max(-1,Math.min(1,o[j]));\r\n\t\t\t\ts=s<0?s*0x8000:s*0x7FFF;\r\n\t\t\t\tres[j]=s;\r\n\t\t\t\tpower+=Math.abs(s);\r\n\t\t\t};\r\n\t\t\tbuffer.push(res);\r\n\t\t\t\r\n\t\t\t/*https://blog.csdn.net/jody1989/article/details/73480259\r\n\t\t\t更高灵敏度算法:\r\n\t\t\t\t限定最大感应值10000\r\n\t\t\t\t\t线性曲线：低音量不友好\r\n\t\t\t\t\t\tpower/10000*100 \r\n\t\t\t\t\t对数曲线：低音量友好，但需限定最低感应值\r\n\t\t\t\t\t\t(1+Math.log10(power/10000))*100\r\n\t\t\t*/\r\n\t\t\tpower/=size;\r\n\t\t\tvar powerLevel;\r\n\t\t\tif(power<1251){//1250的结果10%，更小的音量采用线性取值\r\n\t\t\t\tpowerLevel=Math.round(power/1250*10);\r\n\t\t\t}else{\r\n\t\t\t\tpowerLevel=Math.round(Math.min(100,Math.max(0,(1+Math.log10(power/10000))*100)));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar bufferSampleRate=This.srcSampleRate;\r\n\t\t\tvar duration=Math.round(This.recSize/bufferSampleRate*1000);\r\n\t\t\t\r\n\t\t\tclearTimeout(onInt);\r\n\t\t\tonInt=setTimeout(function(){\r\n\t\t\t\tset.onProcess(buffer,powerLevel,duration,bufferSampleRate);\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\tmedia.connect(process);\r\n\t\tprocess.connect(ctx.destination);\r\n\t\tThis.state=1;\r\n\t}\r\n\t,_stop:function(){\r\n\t\tvar This=this;\r\n\t\tif(This.state){\r\n\t\t\tThis.state=0;\r\n\t\t\tThis.media.disconnect();\r\n\t\t\tThis.process.disconnect();\r\n\t\t};\r\n\t}\r\n\t/*暂停录音*/\r\n\t,pause:function(_resume){\r\n\t\tvar This=this;\r\n\t\tif(This.state){\r\n\t\t\tThis.state=_resume||2;\r\n\t\t};\r\n\t}\r\n\t/*恢复录音*/\r\n\t,resume:function(){\r\n\t\tthis.pause(1);\r\n\t}\r\n\t/*模拟一段录音数据，后面可以调用stop进行编码，需提供pcm数据[1,2,3...]，pcm的采样率*/\r\n\t,mock:function(pcmData,pcmSampleRate){\r\n\t\tvar This=this;\r\n\t\tThis.isMock=1;\r\n\t\tThis.buffer=[pcmData];\r\n\t\tThis.recSize=pcmData.length;\r\n\t\tThis.srcSampleRate=pcmSampleRate;\r\n\t\treturn This;\r\n\t}\r\n\t/*\r\n\t结束录音并返回录音数据blob对象\r\n\t\tTrue(blob,duration) blob：录音数据audio/mp3|wav格式\r\n\t\t\t\t\t\t\tduration：录音时长，单位毫秒\r\n\t\tFalse(msg)\r\n\t*/\r\n\t,stop:function(True,False){\r\n\t\tconsole.log(\"[\"+Date.now()+\"]Stop\");\r\n\t\tTrue=True||NOOP;\r\n\t\tFalse=False||NOOP;\r\n\t\tvar This=this,set=This.set;\r\n\t\t\r\n\t\tif(!This.isMock){\r\n\t\t\tif(!This.state){\r\n\t\t\t\tFalse(\"未开始录音\");\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\tThis._stop();\r\n\t\t};\r\n\t\tvar size=This.recSize;\r\n\t\tif(!size){\r\n\t\t\tFalse(\"未采集到录音\");\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tvar sampleRate=set.sampleRate\r\n\t\t\t,srcSampleRate=This.srcSampleRate;\r\n\t\t//采样 https://www.cnblogs.com/blqw/p/3782420.html\r\n\t\tvar step=srcSampleRate/sampleRate;\r\n\t\tif(step>1){//新采样高于录音采样不处理，省去了插值处理，直接抽样\r\n\t\t\tsize=Math.floor(size/step);\r\n\t\t}else{\r\n\t\t\tstep=1;\r\n\t\t\tsampleRate=srcSampleRate;\r\n\t\t\tset.sampleRate=sampleRate;\r\n\t\t};\r\n\t\t//准备数据\r\n\t\tvar res=new Int16Array(size);\r\n\t\tvar last=0,idx=0;\r\n\t\tfor (var n=0,nl=This.buffer.length;n<nl;n++) {\r\n\t\t\tvar o=This.buffer[n];\r\n\t\t\tvar i=last,il=o.length;\r\n\t\t\twhile(i<il){\r\n\t\t\t\tres[idx]=o[Math.round(i)];\r\n\t\t\t\tidx++;\r\n\t\t\t\ti+=step;//抽样\r\n\t\t\t};\r\n\t\t\tlast=i-il;\r\n\t\t};\r\n\t\tvar duration=Math.round(size/sampleRate*1000);\r\n\t\t\r\n\t\tsetTimeout(function(){\r\n\t\t\tdebugger\r\n\t\t\tvar t1=Date.now();\r\n\t\t\tconsole.log(set.type);\r\n\t\t\tconsole.log(This);\r\n\t\t\tconsole.log(This[set.type]);\r\n\t\t\tThis[set.type](res,function(blob){\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconsole.log(blob);\r\n\t\t\t\tconsole.log(\"[\"+Date.now()+\"]End\",blob,duration,\"编码耗时:\"+(Date.now()-t1));\r\n\t\t\t\tTrue(blob,duration);\r\n\t\t\t},function(msg){\r\n\t\t\t\tFalse(msg);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n//end ****copy源码结束，到wav、mp3前面为止*****\r\n\r\n\r\n\r\n\r\n};\r\n\r\nwindow.Recorder=Recorder;\r\n\r\n})(window);","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar aCallable = require('../internals/a-callable');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar internalSort = require('../internals/array-sort');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar Uint16Array = global.Uint16Array;\nvar nativeSort = Uint16Array && Uint16Array.prototype.sort;\n\n// WebKit\nvar ACCEPT_INCORRECT_ARGUMENTS = !!nativeSort && !fails(function () {\n  var array = new Uint16Array(2);\n  array.sort(null);\n  array.sort({});\n});\n\nvar STABLE_SORT = !!nativeSort && !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 74;\n  if (FF) return FF < 67;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 602;\n\n  var array = new Uint16Array(516);\n  var expected = Array(516);\n  var index, mod;\n\n  for (index = 0; index < 516; index++) {\n    mod = index % 4;\n    array[index] = 515 - index;\n    expected[index] = index - 2 * mod + 3;\n  }\n\n  array.sort(function (a, b) {\n    return (a / 4 | 0) - (b / 4 | 0);\n  });\n\n  for (index = 0; index < 516; index++) {\n    if (array[index] !== expected[index]) return true;\n  }\n});\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (y !== y) return -1;\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (x !== x) return 1;\n    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;\n    return x > y;\n  };\n};\n\n// `%TypedArray%.prototype.sort` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\nexportTypedArrayMethod('sort', function sort(comparefn) {\n  var array = this;\n  if (comparefn !== undefined) aCallable(comparefn);\n  if (STABLE_SORT) return nativeSort.call(array, comparefn);\n\n  aTypedArray(array);\n  var arrayLength = lengthOfArrayLike(array);\n  var items = Array(arrayLength);\n  var index;\n\n  for (index = 0; index < arrayLength; index++) {\n    items[index] = array[index];\n  }\n\n  items = internalSort(array, getSortCompare(comparefn));\n\n  for (index = 0; index < arrayLength; index++) {\n    array[index] = items[index];\n  }\n\n  return array;\n}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $reduceRight = require('../internals/array-reduce').right;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.reduceRicht` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright\nexportTypedArrayMethod('reduceRight', function reduceRight(callbackfn /* , initialValue */) {\n  return $reduceRight(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = $toString(R.source);\n    var rf = R.flags;\n    var f = $toString(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $slice = [].slice;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  new Int8Array(1).slice();\n});\n\n// `%TypedArray%.prototype.slice` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice\nexportTypedArrayMethod('slice', function slice(start, end) {\n  var list = $slice.call(aTypedArray(this), start, end);\n  var C = typedArraySpeciesConstructor(this);\n  var index = 0;\n  var length = list.length;\n  var result = new C(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n}, FORCED);\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\n// eslint-disable-next-line es/no-string-prototype-startswith -- safe\nvar $startsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.es/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = toString(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = toString(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","/*eslint-disable*/\r\n/*\r\nmp3编码器用到的lamejs编码引擎，一般都用MP3格式，浏览器支持广泛，此引擎测试的也比较多，稳定\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n\r\n(function(){\r\n\"use strict\";\r\n\r\n//end2 ****开始copy lamejs*****\r\n/*\r\nmp3编码依赖lamejs，如果无需mp3支持直接移除此代码\r\nhttps://github.com/zhuker/lamejs/blob/bfb7f6c6d7877e0fe1ad9e72697a871676119a0e/lame.all.js\r\n*/\r\n\r\nfunction lamejs() {\r\nfunction new_byte(count) {\r\n    return new Int8Array(count);\r\n}\r\n\r\nfunction new_short(count) {\r\n    return new Int16Array(count);\r\n}\r\n\r\nfunction new_int(count) {\r\n    return new Int32Array(count);\r\n}\r\n\r\nfunction new_float(count) {\r\n    return new Float32Array(count);\r\n}\r\n\r\nfunction new_double(count) {\r\n    return new Float64Array(count);\r\n}\r\n\r\nfunction new_float_n(args) {\r\n    if (args.length == 1) {\r\n        return new_float(args[0]);\r\n    }\r\n    var sz = args[0];\r\n    args = args.slice(1);\r\n    var A = [];\r\n    for (var i = 0; i < sz; i++) {\r\n        A.push(new_float_n(args));\r\n    }\r\n    return A;\r\n}\r\nfunction new_int_n(args) {\r\n    if (args.length == 1) {\r\n        return new_int(args[0]);\r\n    }\r\n    var sz = args[0];\r\n    args = args.slice(1);\r\n    var A = [];\r\n    for (var i = 0; i < sz; i++) {\r\n        A.push(new_int_n(args));\r\n    }\r\n    return A;\r\n}\r\n\r\nfunction new_short_n(args) {\r\n    if (args.length == 1) {\r\n        return new_short(args[0]);\r\n    }\r\n    var sz = args[0];\r\n    args = args.slice(1);\r\n    var A = [];\r\n    for (var i = 0; i < sz; i++) {\r\n        A.push(new_short_n(args));\r\n    }\r\n    return A;\r\n}\r\n\r\nfunction new_array_n(args) {\r\n    if (args.length == 1) {\r\n        return new Array(args[0]);\r\n    }\r\n    var sz = args[0];\r\n    args = args.slice(1);\r\n    var A = [];\r\n    for (var i = 0; i < sz; i++) {\r\n        A.push(new_array_n(args));\r\n    }\r\n    return A;\r\n}\r\n\r\n\r\nvar Arrays = {};\r\n\r\nArrays.fill = function (a, fromIndex, toIndex, val) {\r\n    if (arguments.length == 2) {\r\n        for (var i = 0; i < a.length; i++) {\r\n            a[i] = arguments[1];\r\n        }\r\n    } else {\r\n        for (var i = fromIndex; i < toIndex; i++) {\r\n            a[i] = val;\r\n        }\r\n    }\r\n};\r\n\r\nvar System = {};\r\n\r\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\r\n    var srcEnd = srcPos + length;\r\n    while (srcPos < srcEnd)\r\n        dest[destPos++] = src[srcPos++];\r\n};\r\n\r\n\r\nvar Util = {};\r\nUtil.SQRT2 = 1.41421356237309504880;\r\nUtil.FAST_LOG10 = function (x) {\r\n    return Math.log10(x);\r\n};\r\n\r\nUtil.FAST_LOG10_X = function (x, y) {\r\n    return Math.log10(x) * y;\r\n};\r\n\r\nfunction ShortBlock(ordinal) {\r\n    this.ordinal = ordinal;\r\n}\r\n/**\r\n * LAME may use them, even different block types for L/R.\r\n */\r\nShortBlock.short_block_allowed = new ShortBlock(0);\r\n/**\r\n * LAME may use them, but always same block types in L/R.\r\n */\r\nShortBlock.short_block_coupled = new ShortBlock(1);\r\n/**\r\n * LAME will not use short blocks, long blocks only.\r\n */\r\nShortBlock.short_block_dispensed = new ShortBlock(2);\r\n/**\r\n * LAME will not use long blocks, short blocks only.\r\n */\r\nShortBlock.short_block_forced = new ShortBlock(3);\r\n\r\nvar Float = {};\r\nFloat.MAX_VALUE = 3.4028235e+38;\r\n\r\nfunction VbrMode(ordinal) {\r\n    this.ordinal = ordinal;\r\n}\r\nVbrMode.vbr_off = new VbrMode(0);\r\nVbrMode.vbr_mt = new VbrMode(1);\r\nVbrMode.vbr_rh = new VbrMode(2);\r\nVbrMode.vbr_abr = new VbrMode(3);\r\nVbrMode.vbr_mtrh = new VbrMode(4);\r\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\r\n\r\nvar assert = function (x) {\r\n    //console.assert(x);\r\n};\r\n\r\nvar module_exports = {\r\n    \"System\": System,\r\n    \"VbrMode\": VbrMode,\r\n    \"Float\": Float,\r\n    \"ShortBlock\": ShortBlock,\r\n    \"Util\": Util,\r\n    \"Arrays\": Arrays,\r\n    \"new_array_n\": new_array_n,\r\n    \"new_byte\": new_byte,\r\n    \"new_double\": new_double,\r\n    \"new_float\": new_float,\r\n    \"new_float_n\": new_float_n,\r\n    \"new_int\": new_int,\r\n    \"new_int_n\": new_int_n,\r\n    \"new_short\": new_short,\r\n    \"new_short_n\": new_short_n,\r\n    \"assert\": assert\r\n};\r\n//package mp3;\r\n\r\n/* MPEG modes */\r\nfunction MPEGMode(ordinal) {\r\n    var _ordinal = ordinal;\r\n    this.ordinal = function () {\r\n        return _ordinal;\r\n    }\r\n}\r\n\r\nMPEGMode.STEREO = new MPEGMode(0);\r\nMPEGMode.JOINT_STEREO = new MPEGMode(1);\r\nMPEGMode.DUAL_CHANNEL = new MPEGMode(2);\r\nMPEGMode.MONO = new MPEGMode(3);\r\nMPEGMode.NOT_SET = new MPEGMode(4);\r\n\r\nfunction Version() {\r\n\r\n    /**\r\n     * URL for the LAME website.\r\n     */\r\n    var LAME_URL = \"http://www.mp3dev.org/\";\r\n\r\n    /**\r\n     * Major version number.\r\n     */\r\n    var LAME_MAJOR_VERSION = 3;\r\n    /**\r\n     * Minor version number.\r\n     */\r\n    var LAME_MINOR_VERSION = 98;\r\n    /**\r\n     * Patch level.\r\n     */\r\n    var LAME_PATCH_VERSION = 4;\r\n\r\n    /**\r\n     * Major version number.\r\n     */\r\n    var PSY_MAJOR_VERSION = 0;\r\n    /**\r\n     * Minor version number.\r\n     */\r\n    var PSY_MINOR_VERSION = 93;\r\n\r\n    /**\r\n     * A string which describes the version of LAME.\r\n     *\r\n     * @return string which describes the version of LAME\r\n     */\r\n    this.getLameVersion = function () {\r\n        // primary to write screen reports\r\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\r\n    }\r\n\r\n    /**\r\n     * The short version of the LAME version string.\r\n     *\r\n     * @return short version of the LAME version string\r\n     */\r\n    this.getLameShortVersion = function () {\r\n        // Adding date and time to version string makes it harder for output\r\n        // validation\r\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\r\n    }\r\n\r\n    /**\r\n     * The shortest version of the LAME version string.\r\n     *\r\n     * @return shortest version of the LAME version string\r\n     */\r\n    this.getLameVeryShortVersion = function () {\r\n        // Adding date and time to version string makes it harder for output\r\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\r\n    }\r\n\r\n    /**\r\n     * String which describes the version of GPSYCHO\r\n     *\r\n     * @return string which describes the version of GPSYCHO\r\n     */\r\n    this.getPsyVersion = function () {\r\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\r\n    }\r\n\r\n    /**\r\n     * String which is a URL for the LAME website.\r\n     *\r\n     * @return string which is a URL for the LAME website\r\n     */\r\n    this.getLameUrl = function () {\r\n        return LAME_URL;\r\n    }\r\n\r\n    /**\r\n     * Quite useless for a java version, however we are compatible ;-)\r\n     *\r\n     * @return \"32bits\"\r\n     */\r\n    this.getLameOsBitness = function () {\r\n        return \"32bits\";\r\n    }\r\n\r\n}\r\n\r\n/*\r\n *\tMP3 huffman table selecting and bit counting\r\n *\r\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\r\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n//package mp3;\r\n\r\n//import java.util.Arrays;\r\n\r\n\r\n\r\nfunction Takehiro() {\r\n\r\n    var qupvt = null;\r\n    this.qupvt = null;\r\n\r\n    this.setModules = function (_qupvt) {\r\n        this.qupvt = _qupvt;\r\n        qupvt = _qupvt;\r\n    }\r\n\r\n    function Bits(b) {\r\n        this.bits = 0 | b;\r\n    }\r\n\r\n    var subdv_table = [[0, 0], /* 0 bands */\r\n        [0, 0], /* 1 bands */\r\n        [0, 0], /* 2 bands */\r\n        [0, 0], /* 3 bands */\r\n        [0, 0], /* 4 bands */\r\n        [0, 1], /* 5 bands */\r\n        [1, 1], /* 6 bands */\r\n        [1, 1], /* 7 bands */\r\n        [1, 2], /* 8 bands */\r\n        [2, 2], /* 9 bands */\r\n        [2, 3], /* 10 bands */\r\n        [2, 3], /* 11 bands */\r\n        [3, 4], /* 12 bands */\r\n        [3, 4], /* 13 bands */\r\n        [3, 4], /* 14 bands */\r\n        [4, 5], /* 15 bands */\r\n        [4, 5], /* 16 bands */\r\n        [4, 6], /* 17 bands */\r\n        [5, 6], /* 18 bands */\r\n        [5, 6], /* 19 bands */\r\n        [5, 7], /* 20 bands */\r\n        [6, 7], /* 21 bands */\r\n        [6, 7], /* 22 bands */\r\n    ];\r\n\r\n\r\n    /**\r\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\r\n     * Takes into account the fact that we are quantizing xr . ix, but we want\r\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\r\n     * mean ix is as close as possible to xr, which is different.)\r\n     *\r\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\r\n     *\r\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\r\n     * If you need the ASM code, check CVS circa Aug 2000.\r\n     *\r\n     * 01/2004: Optimizations by Gabriel Bouvigne\r\n     */\r\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\r\n        var compareval0 = (1.0 - 0.4054) / istep;\r\n\r\n        l = l >> 1;\r\n        while ((l--) != 0) {\r\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\r\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\r\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\r\n     * ROUNDFAC= -0.0946<BR>\r\n     *\r\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\r\n     * ROUNDFAC=0.4054<BR>\r\n     *\r\n     * Note: using floor() or 0| is extremely slow. On machines where the\r\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\r\n     * some ASM for XRPOW_FTOI().\r\n     */\r\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\r\n\r\n        l = l >> 1;\r\n        var remaining = l % 2;\r\n        l = l >> 1;\r\n        while (l-- != 0) {\r\n            var x0, x1, x2, x3;\r\n            var rx0, rx1, rx2, rx3;\r\n\r\n            x0 = xr[xrPos++] * istep;\r\n            x1 = xr[xrPos++] * istep;\r\n            rx0 = 0 | x0;\r\n            x2 = xr[xrPos++] * istep;\r\n            rx1 = 0 | x1;\r\n            x3 = xr[xrPos++] * istep;\r\n            rx2 = 0 | x2;\r\n            x0 += qupvt.adj43[rx0];\r\n            rx3 = 0 | x3;\r\n            x1 += qupvt.adj43[rx1];\r\n            ix[ixPos++] = 0 | x0;\r\n            x2 += qupvt.adj43[rx2];\r\n            ix[ixPos++] = 0 | x1;\r\n            x3 += qupvt.adj43[rx3];\r\n            ix[ixPos++] = 0 | x2;\r\n            ix[ixPos++] = 0 | x3;\r\n        }\r\n        if (remaining != 0) {\r\n            var x0, x1;\r\n            var rx0, rx1;\r\n\r\n            x0 = xr[xrPos++] * istep;\r\n            x1 = xr[xrPos++] * istep;\r\n            rx0 = 0 | x0;\r\n            rx1 = 0 | x1;\r\n            x0 += qupvt.adj43[rx0];\r\n            x1 += qupvt.adj43[rx1];\r\n            ix[ixPos++] = 0 | x0;\r\n            ix[ixPos++] = 0 | x1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Quantization function This function will select which lines to quantize\r\n     * and call the proper quantization function\r\n     */\r\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\r\n        /* quantize on xr^(3/4) instead of xr */\r\n        var sfb;\r\n        var sfbmax;\r\n        var j = 0;\r\n        var prev_data_use;\r\n        var accumulate = 0;\r\n        var accumulate01 = 0;\r\n        var xpPos = 0;\r\n        var iData = pi;\r\n        var iDataPos = 0;\r\n        var acc_iData = iData;\r\n        var acc_iDataPos = 0;\r\n        var acc_xp = xp;\r\n        var acc_xpPos = 0;\r\n\r\n        /*\r\n         * Reusing previously computed data does not seems to work if global\r\n         * gain is changed. Finding why it behaves this way would allow to use a\r\n         * cache of previously computed values (let's 10 cached values per sfb)\r\n         * that would probably provide a noticeable speedup\r\n         */\r\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\r\n\r\n        if (codInfo.block_type == Encoder.SHORT_TYPE)\r\n            sfbmax = 38;\r\n        else\r\n            sfbmax = 21;\r\n\r\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\r\n            var step = -1;\r\n\r\n            if (prev_data_use || codInfo.block_type == Encoder.NORM_TYPE) {\r\n                step = codInfo.global_gain\r\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\r\n                        : 0)) << (codInfo.scalefac_scale + 1))\r\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\r\n            }\r\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\r\n                /*\r\n                 * do not recompute this part, but compute accumulated lines\r\n                 */\r\n                if (accumulate != 0) {\r\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\r\n                        acc_iData, acc_iDataPos);\r\n                    accumulate = 0;\r\n                }\r\n                if (accumulate01 != 0) {\r\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\r\n                        acc_xpPos, acc_iData, acc_iDataPos);\r\n                    accumulate01 = 0;\r\n                }\r\n            } else { /* should compute this part */\r\n                var l = codInfo.width[sfb];\r\n\r\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\r\n                    /* do not compute upper zero part */\r\n                    var usefullsize;\r\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\r\n                    Arrays.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\r\n                    l = usefullsize;\r\n\r\n                    if (l < 0) {\r\n                        l = 0;\r\n                    }\r\n\r\n                    /* no need to compute higher sfb values */\r\n                    sfb = sfbmax + 1;\r\n                }\r\n\r\n                /* accumulate lines to quantize */\r\n                if (0 == accumulate && 0 == accumulate01) {\r\n                    acc_iData = iData;\r\n                    acc_iDataPos = iDataPos;\r\n                    acc_xp = xp;\r\n                    acc_xpPos = xpPos;\r\n                }\r\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\r\n                    && sfb >= prevNoise.sfb_count1\r\n                    && prevNoise.step[sfb] > 0\r\n                    && step >= prevNoise.step[sfb]) {\r\n\r\n                    if (accumulate != 0) {\r\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\r\n                            acc_xpPos, acc_iData, acc_iDataPos);\r\n                        accumulate = 0;\r\n                        acc_iData = iData;\r\n                        acc_iDataPos = iDataPos;\r\n                        acc_xp = xp;\r\n                        acc_xpPos = xpPos;\r\n                    }\r\n                    accumulate01 += l;\r\n                } else {\r\n                    if (accumulate01 != 0) {\r\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\r\n                            acc_xpPos, acc_iData, acc_iDataPos);\r\n                        accumulate01 = 0;\r\n                        acc_iData = iData;\r\n                        acc_iDataPos = iDataPos;\r\n                        acc_xp = xp;\r\n                        acc_xpPos = xpPos;\r\n                    }\r\n                    accumulate += l;\r\n                }\r\n\r\n                if (l <= 0) {\r\n                    /*\r\n                     * rh: 20040215 may happen due to \"prev_data_use\"\r\n                     * optimization\r\n                     */\r\n                    if (accumulate01 != 0) {\r\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\r\n                            acc_xpPos, acc_iData, acc_iDataPos);\r\n                        accumulate01 = 0;\r\n                    }\r\n                    if (accumulate != 0) {\r\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\r\n                            acc_xpPos, acc_iData, acc_iDataPos);\r\n                        accumulate = 0;\r\n                    }\r\n\r\n                    break;\r\n                    /* ends for-loop */\r\n                }\r\n            }\r\n            if (sfb <= sfbmax) {\r\n                iDataPos += codInfo.width[sfb];\r\n                xpPos += codInfo.width[sfb];\r\n                j += codInfo.width[sfb];\r\n            }\r\n        }\r\n        if (accumulate != 0) { /* last data part */\r\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\r\n                acc_iData, acc_iDataPos);\r\n            accumulate = 0;\r\n        }\r\n        if (accumulate01 != 0) { /* last data part */\r\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\r\n                acc_iData, acc_iDataPos);\r\n            accumulate01 = 0;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * ix_max\r\n     */\r\n    function ix_max(ix, ixPos, endPos) {\r\n        var max1 = 0, max2 = 0;\r\n\r\n        do {\r\n            var x1 = ix[ixPos++];\r\n            var x2 = ix[ixPos++];\r\n            if (max1 < x1)\r\n                max1 = x1;\r\n\r\n            if (max2 < x2)\r\n                max2 = x2;\r\n        } while (ixPos < endPos);\r\n        if (max1 < max2)\r\n            max1 = max2;\r\n        return max1;\r\n    }\r\n\r\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\r\n        /* ESC-table is used */\r\n        var linbits = Tables.ht[t1].xlen * 65536 + Tables.ht[t2].xlen;\r\n        var sum = 0, sum2;\r\n\r\n        do {\r\n            var x = ix[ixPos++];\r\n            var y = ix[ixPos++];\r\n\r\n            if (x != 0) {\r\n                if (x > 14) {\r\n                    x = 15;\r\n                    sum += linbits;\r\n                }\r\n                x *= 16;\r\n            }\r\n\r\n            if (y != 0) {\r\n                if (y > 14) {\r\n                    y = 15;\r\n                    sum += linbits;\r\n                }\r\n                x += y;\r\n            }\r\n\r\n            sum += Tables.largetbl[x];\r\n        } while (ixPos < end);\r\n\r\n        sum2 = sum & 0xffff;\r\n        sum >>= 16;\r\n\r\n        if (sum > sum2) {\r\n            sum = sum2;\r\n            t1 = t2;\r\n        }\r\n\r\n        s.bits += sum;\r\n        return t1;\r\n    }\r\n\r\n    function count_bit_noESC(ix, ixPos, end, s) {\r\n        /* No ESC-words */\r\n        var sum1 = 0;\r\n        var hlen1 = Tables.ht[1].hlen;\r\n\r\n        do {\r\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\r\n            ixPos += 2;\r\n            sum1 += hlen1[x];\r\n        } while (ixPos < end);\r\n\r\n        s.bits += sum1;\r\n        return 1;\r\n    }\r\n\r\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\r\n        /* No ESC-words */\r\n        var sum = 0, sum2;\r\n        var xlen = Tables.ht[t1].xlen;\r\n        var hlen;\r\n        if (t1 == 2)\r\n            hlen = Tables.table23;\r\n        else\r\n            hlen = Tables.table56;\r\n\r\n        do {\r\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\r\n            ixPos += 2;\r\n            sum += hlen[x];\r\n        } while (ixPos < end);\r\n\r\n        sum2 = sum & 0xffff;\r\n        sum >>= 16;\r\n\r\n        if (sum > sum2) {\r\n            sum = sum2;\r\n            t1++;\r\n        }\r\n\r\n        s.bits += sum;\r\n        return t1;\r\n    }\r\n\r\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\r\n        /* No ESC-words */\r\n        var sum1 = 0;\r\n        var sum2 = 0;\r\n        var sum3 = 0;\r\n        var xlen = Tables.ht[t1].xlen;\r\n        var hlen1 = Tables.ht[t1].hlen;\r\n        var hlen2 = Tables.ht[t1 + 1].hlen;\r\n        var hlen3 = Tables.ht[t1 + 2].hlen;\r\n\r\n        do {\r\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\r\n            ixPos += 2;\r\n            sum1 += hlen1[x];\r\n            sum2 += hlen2[x];\r\n            sum3 += hlen3[x];\r\n        } while (ixPos < end);\r\n        var t = t1;\r\n        if (sum1 > sum2) {\r\n            sum1 = sum2;\r\n            t++;\r\n        }\r\n        if (sum1 > sum3) {\r\n            sum1 = sum3;\r\n            t = t1 + 2;\r\n        }\r\n        s.bits += sum1;\r\n\r\n        return t;\r\n    }\r\n\r\n    /*************************************************************************/\r\n    /* choose table */\r\n    /*************************************************************************/\r\n\r\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\r\n        13, 13, 13, 13, 13, 13];\r\n\r\n    /**\r\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\r\n     * bits.\r\n     *\r\n     * Note: This code contains knowledge about the sizes and characteristics of\r\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\r\n     * with any arbitrary tables.\r\n     */\r\n    function choose_table(ix, ixPos, endPos, s) {\r\n        var max = ix_max(ix, ixPos, endPos);\r\n\r\n        switch (max) {\r\n            case 0:\r\n                return max;\r\n\r\n            case 1:\r\n                return count_bit_noESC(ix, ixPos, endPos, s);\r\n\r\n            case 2:\r\n            case 3:\r\n                return count_bit_noESC_from2(ix, ixPos, endPos,\r\n                    huf_tbl_noESC[max - 1], s);\r\n\r\n            case 4:\r\n            case 5:\r\n            case 6:\r\n            case 7:\r\n            case 8:\r\n            case 9:\r\n            case 10:\r\n            case 11:\r\n            case 12:\r\n            case 13:\r\n            case 14:\r\n            case 15:\r\n                return count_bit_noESC_from3(ix, ixPos, endPos,\r\n                    huf_tbl_noESC[max - 1], s);\r\n\r\n            default:\r\n                /* try tables with linbits */\r\n                if (max > QuantizePVT.IXMAX_VAL) {\r\n                    s.bits = QuantizePVT.LARGE_BITS;\r\n                    return -1;\r\n                }\r\n                max -= 15;\r\n                var choice2;\r\n                for (choice2 = 24; choice2 < 32; choice2++) {\r\n                    if (Tables.ht[choice2].linmax >= max) {\r\n                        break;\r\n                    }\r\n                }\r\n                var choice;\r\n                for (choice = choice2 - 8; choice < 24; choice++) {\r\n                    if (Tables.ht[choice].linmax >= max) {\r\n                        break;\r\n                    }\r\n                }\r\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * count_bit\r\n     */\r\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\r\n        var ix = gi.l3_enc;\r\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\r\n\r\n        if (prev_noise != null)\r\n            prev_noise.sfb_count1 = 0;\r\n\r\n        /* Determine count1 region */\r\n        for (; i > 1; i -= 2)\r\n            if ((ix[i - 1] | ix[i - 2]) != 0)\r\n                break;\r\n        gi.count1 = i;\r\n\r\n        /* Determines the number of bits to encode the quadruples. */\r\n        var a1 = 0;\r\n        var a2 = 0;\r\n        for (; i > 3; i -= 4) {\r\n            var p;\r\n            /* hack to check if all values <= 1 */\r\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\r\n            //if (true) {\r\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\r\n                break;\r\n            }\r\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\r\n            a1 += Tables.t32l[p];\r\n            a2 += Tables.t33l[p];\r\n        }\r\n        var bits = a1;\r\n        gi.count1table_select = 0;\r\n        if (a1 > a2) {\r\n            bits = a2;\r\n            gi.count1table_select = 1;\r\n        }\r\n\r\n        gi.count1bits = bits;\r\n        gi.big_values = i;\r\n        if (i == 0)\r\n            return bits;\r\n\r\n        if (gi.block_type == Encoder.SHORT_TYPE) {\r\n            a1 = 3 * gfc.scalefac_band.s[3];\r\n            if (a1 > gi.big_values)\r\n                a1 = gi.big_values;\r\n            a2 = gi.big_values;\r\n\r\n        } else if (gi.block_type == Encoder.NORM_TYPE) {\r\n            /* bv_scf has 576 entries (0..575) */\r\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\r\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\r\n\r\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\r\n            a1 = gfc.scalefac_band.l[a1 + 1];\r\n            if (a2 < i) {\r\n                var bi = new Bits(bits);\r\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\r\n                bits = bi.bits;\r\n            }\r\n        } else {\r\n            gi.region0_count = 7;\r\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\r\n            gi.region1_count = Encoder.SBMAX_l - 1 - 7 - 1;\r\n            a1 = gfc.scalefac_band.l[7 + 1];\r\n            a2 = i;\r\n            if (a1 > a2) {\r\n                a1 = a2;\r\n            }\r\n        }\r\n\r\n        /* have to allow for the case when bigvalues < region0 < region1 */\r\n        /* (and region0, region1 are ignored) */\r\n        a1 = Math.min(a1, i);\r\n        a2 = Math.min(a2, i);\r\n\r\n\r\n        /* Count the number of bits necessary to code the bigvalues region. */\r\n        if (0 < a1) {\r\n            var bi = new Bits(bits);\r\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\r\n            bits = bi.bits;\r\n        }\r\n        if (a1 < a2) {\r\n            var bi = new Bits(bits);\r\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\r\n            bits = bi.bits;\r\n        }\r\n        if (gfc.use_best_huffman == 2) {\r\n            gi.part2_3_length = bits;\r\n            best_huffman_divide(gfc, gi);\r\n            bits = gi.part2_3_length;\r\n        }\r\n\r\n        if (prev_noise != null) {\r\n            if (gi.block_type == Encoder.NORM_TYPE) {\r\n                var sfb = 0;\r\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\r\n                    sfb++;\r\n                }\r\n                prev_noise.sfb_count1 = sfb;\r\n            }\r\n        }\r\n\r\n        return bits;\r\n    }\r\n\r\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\r\n        var ix = gi.l3_enc;\r\n\r\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\r\n        var w = (QuantizePVT.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\r\n\r\n        if (gi.xrpow_max > w)\r\n            return QuantizePVT.LARGE_BITS;\r\n\r\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\r\n\r\n        if ((gfc.substep_shaping & 2) != 0) {\r\n            var j = 0;\r\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\r\n            var gain = gi.global_gain + gi.scalefac_scale;\r\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\r\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\r\n                var width = gi.width[sfb];\r\n                if (0 == gfc.pseudohalf[sfb]) {\r\n                    j += width;\r\n                } else {\r\n                    var k;\r\n                    for (k = j, j += width; k < j; ++k) {\r\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.noquant_count_bits(gfc, gi, prev_noise);\r\n    }\r\n\r\n    /**\r\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\r\n     * kept in the bit reservoir.\r\n     */\r\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\r\n        var bigv = cod_info.big_values;\r\n\r\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\r\n            r01_bits[r0] = QuantizePVT.LARGE_BITS;\r\n        }\r\n\r\n        for (var r0 = 0; r0 < 16; r0++) {\r\n            var a1 = gfc.scalefac_band.l[r0 + 1];\r\n            if (a1 >= bigv)\r\n                break;\r\n            var r0bits = 0;\r\n            var bi = new Bits(r0bits);\r\n            var r0t = choose_table(ix, 0, a1, bi);\r\n            r0bits = bi.bits;\r\n\r\n            for (var r1 = 0; r1 < 8; r1++) {\r\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\r\n                if (a2 >= bigv)\r\n                    break;\r\n                var bits = r0bits;\r\n                bi = new Bits(bits);\r\n                var r1t = choose_table(ix, a1, a2, bi);\r\n                bits = bi.bits;\r\n                if (r01_bits[r0 + r1] > bits) {\r\n                    r01_bits[r0 + r1] = bits;\r\n                    r01_div[r0 + r1] = r0;\r\n                    r0_tbl[r0 + r1] = r0t;\r\n                    r1_tbl[r0 + r1] = r1t;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\r\n        var bigv = cod_info2.big_values;\r\n\r\n        for (var r2 = 2; r2 < Encoder.SBMAX_l + 1; r2++) {\r\n            var a2 = gfc.scalefac_band.l[r2];\r\n            if (a2 >= bigv)\r\n                break;\r\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\r\n            if (gi.part2_3_length <= bits)\r\n                break;\r\n\r\n            var bi = new Bits(bits);\r\n            var r2t = choose_table(ix, a2, bigv, bi);\r\n            bits = bi.bits;\r\n            if (gi.part2_3_length <= bits)\r\n                continue;\r\n\r\n            gi.assign(cod_info2);\r\n            gi.part2_3_length = bits;\r\n            gi.region0_count = r01_div[r2 - 2];\r\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\r\n            gi.table_select[0] = r0_tbl[r2 - 2];\r\n            gi.table_select[1] = r1_tbl[r2 - 2];\r\n            gi.table_select[2] = r2t;\r\n        }\r\n    }\r\n\r\n    this.best_huffman_divide = function (gfc, gi) {\r\n        var cod_info2 = new GrInfo();\r\n        var ix = gi.l3_enc;\r\n        var r01_bits = new_int(7 + 15 + 1);\r\n        var r01_div = new_int(7 + 15 + 1);\r\n        var r0_tbl = new_int(7 + 15 + 1);\r\n        var r1_tbl = new_int(7 + 15 + 1);\r\n\r\n        /* SHORT BLOCK stuff fails for MPEG2 */\r\n        if (gi.block_type == Encoder.SHORT_TYPE && gfc.mode_gr == 1)\r\n            return;\r\n\r\n        cod_info2.assign(gi);\r\n        if (gi.block_type == Encoder.NORM_TYPE) {\r\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\r\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\r\n                r0_tbl, r1_tbl);\r\n        }\r\n        var i = cod_info2.big_values;\r\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\r\n            return;\r\n\r\n        i = gi.count1 + 2;\r\n        if (i > 576)\r\n            return;\r\n\r\n        /* Determines the number of bits to encode the quadruples. */\r\n        cod_info2.assign(gi);\r\n        cod_info2.count1 = i;\r\n        var a1 = 0;\r\n        var a2 = 0;\r\n\r\n\r\n        for (; i > cod_info2.big_values; i -= 4) {\r\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\r\n                + ix[i - 1];\r\n            a1 += Tables.t32l[p];\r\n            a2 += Tables.t33l[p];\r\n        }\r\n        cod_info2.big_values = i;\r\n\r\n        cod_info2.count1table_select = 0;\r\n        if (a1 > a2) {\r\n            a1 = a2;\r\n            cod_info2.count1table_select = 1;\r\n        }\r\n\r\n        cod_info2.count1bits = a1;\r\n\r\n        if (cod_info2.block_type == Encoder.NORM_TYPE)\r\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\r\n                r0_tbl, r1_tbl);\r\n        else {\r\n            /* Count the number of bits necessary to code the bigvalues region. */\r\n            cod_info2.part2_3_length = a1;\r\n            a1 = gfc.scalefac_band.l[7 + 1];\r\n            if (a1 > i) {\r\n                a1 = i;\r\n            }\r\n            if (a1 > 0) {\r\n                var bi = new Bits(cod_info2.part2_3_length);\r\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\r\n                cod_info2.part2_3_length = bi.bits;\r\n            }\r\n            if (i > a1) {\r\n                var bi = new Bits(cod_info2.part2_3_length);\r\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\r\n                cod_info2.part2_3_length = bi.bits;\r\n            }\r\n            if (gi.part2_3_length > cod_info2.part2_3_length)\r\n                gi.assign(cod_info2);\r\n        }\r\n    }\r\n\r\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\r\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\r\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\r\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\r\n    Takehiro.slen1_tab = slen1_tab;\r\n    Takehiro.slen2_tab = slen2_tab;\r\n\r\n    function scfsi_calc(ch, l3_side) {\r\n        var sfb;\r\n        var gi = l3_side.tt[1][ch];\r\n        var g0 = l3_side.tt[0][ch];\r\n\r\n        for (var i = 0; i < Tables.scfsi_band.length - 1; i++) {\r\n            for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\r\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\r\n                    && gi.scalefac[sfb] >= 0)\r\n                    break;\r\n            }\r\n            if (sfb == Tables.scfsi_band[i + 1]) {\r\n                for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\r\n                    gi.scalefac[sfb] = -1;\r\n                }\r\n                l3_side.scfsi[ch][i] = 1;\r\n            }\r\n        }\r\n        var s1 = 0;\r\n        var c1 = 0;\r\n        for (sfb = 0; sfb < 11; sfb++) {\r\n            if (gi.scalefac[sfb] == -1)\r\n                continue;\r\n            c1++;\r\n            if (s1 < gi.scalefac[sfb])\r\n                s1 = gi.scalefac[sfb];\r\n        }\r\n        var s2 = 0;\r\n        var c2 = 0;\r\n        for (; sfb < Encoder.SBPSY_l; sfb++) {\r\n            if (gi.scalefac[sfb] == -1)\r\n                continue;\r\n            c2++;\r\n            if (s2 < gi.scalefac[sfb])\r\n                s2 = gi.scalefac[sfb];\r\n        }\r\n\r\n        for (var i = 0; i < 16; i++) {\r\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\r\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\r\n                if (gi.part2_length > c) {\r\n                    gi.part2_length = c;\r\n                    gi.scalefac_compress = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Find the optimal way to store the scalefactors. Only call this routine\r\n     * after final scalefactors have been chosen and the channel/granule will\r\n     * not be re-encoded.\r\n     */\r\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\r\n        /* use scalefac_scale if we can */\r\n        var gi = l3_side.tt[gr][ch];\r\n        var sfb, i, j, l;\r\n        var recalc = 0;\r\n\r\n        /*\r\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\r\n         * ISO docs. added mt 3/00\r\n         */\r\n        /* check if l3_enc=0 */\r\n        j = 0;\r\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\r\n            var width = gi.width[sfb];\r\n            j += width;\r\n            for (l = -width; l < 0; l++) {\r\n                if (gi.l3_enc[l + j] != 0)\r\n                    break;\r\n            }\r\n            if (l == 0)\r\n                gi.scalefac[sfb] = recalc = -2;\r\n            /* anything goes. */\r\n            /*\r\n             * only best_scalefac_store and calc_scfsi know--and only they\r\n             * should know--about the magic number -2.\r\n             */\r\n        }\r\n\r\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\r\n            var s = 0;\r\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\r\n                if (gi.scalefac[sfb] > 0)\r\n                    s |= gi.scalefac[sfb];\r\n\r\n            if (0 == (s & 1) && s != 0) {\r\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\r\n                    if (gi.scalefac[sfb] > 0)\r\n                        gi.scalefac[sfb] >>= 1;\r\n\r\n                gi.scalefac_scale = recalc = 1;\r\n            }\r\n        }\r\n\r\n        if (0 == gi.preflag && gi.block_type != Encoder.SHORT_TYPE\r\n            && gfc.mode_gr == 2) {\r\n            for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\r\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\r\n                    && gi.scalefac[sfb] != -2)\r\n                    break;\r\n            if (sfb == Encoder.SBPSY_l) {\r\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\r\n                    if (gi.scalefac[sfb] > 0)\r\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\r\n\r\n                gi.preflag = recalc = 1;\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < 4; i++)\r\n            l3_side.scfsi[ch][i] = 0;\r\n\r\n        if (gfc.mode_gr == 2 && gr == 1\r\n            && l3_side.tt[0][ch].block_type != Encoder.SHORT_TYPE\r\n            && l3_side.tt[1][ch].block_type != Encoder.SHORT_TYPE) {\r\n            scfsi_calc(ch, l3_side);\r\n            recalc = 0;\r\n        }\r\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\r\n            if (gi.scalefac[sfb] == -2) {\r\n                gi.scalefac[sfb] = 0;\r\n                /* if anything goes, then 0 is a good choice */\r\n            }\r\n        }\r\n        if (recalc != 0) {\r\n            if (gfc.mode_gr == 2) {\r\n                this.scale_bitcount(gi);\r\n            } else {\r\n                this.scale_bitcount_lsf(gfc, gi);\r\n            }\r\n        }\r\n    }\r\n\r\n    function all_scalefactors_not_negative(scalefac, n) {\r\n        for (var i = 0; i < n; ++i) {\r\n            if (scalefac[i] < 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * number of bits used to encode scalefacs.\r\n     *\r\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\r\n     */\r\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\r\n        54, 72, 90, 72, 90, 108, 108, 126];\r\n\r\n    /**\r\n     * number of bits used to encode scalefacs.\r\n     *\r\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\r\n     */\r\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\r\n        52, 70, 88, 69, 87, 105, 104, 122];\r\n\r\n    /**\r\n     * number of bits used to encode scalefacs.\r\n     *\r\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\r\n     */\r\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\r\n        52, 43, 53, 63, 64, 74];\r\n\r\n    /**\r\n     * Also calculates the number of bits necessary to code the scalefactors.\r\n     */\r\n    this.scale_bitcount = function (cod_info) {\r\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\r\n\r\n        /* maximum values */\r\n        var tab;\r\n        var scalefac = cod_info.scalefac;\r\n\r\n\r\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n            tab = scale_short;\r\n            if (cod_info.mixed_block_flag != 0)\r\n                tab = scale_mixed;\r\n        } else { /* block_type == 1,2,or 3 */\r\n            tab = scale_long;\r\n            if (0 == cod_info.preflag) {\r\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\r\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\r\n                        break;\r\n\r\n                if (sfb == Encoder.SBPSY_l) {\r\n                    cod_info.preflag = 1;\r\n                    for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\r\n                        scalefac[sfb] -= qupvt.pretab[sfb];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\r\n            if (max_slen1 < scalefac[sfb])\r\n                max_slen1 = scalefac[sfb];\r\n\r\n        for (; sfb < cod_info.sfbmax; sfb++)\r\n            if (max_slen2 < scalefac[sfb])\r\n                max_slen2 = scalefac[sfb];\r\n\r\n        /*\r\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\r\n         * posible values of scalefac_compress to find the one which uses the\r\n         * smallest number of bits. ISO would stop at first valid index\r\n         */\r\n        cod_info.part2_length = QuantizePVT.LARGE_BITS;\r\n        for (k = 0; k < 16; k++) {\r\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\r\n                && cod_info.part2_length > tab[k]) {\r\n                cod_info.part2_length = tab[k];\r\n                cod_info.scalefac_compress = k;\r\n            }\r\n        }\r\n        return cod_info.part2_length == QuantizePVT.LARGE_BITS;\r\n    }\r\n\r\n    /**\r\n     * table of largest scalefactor values for MPEG2\r\n     */\r\n    var max_range_sfac_tab = [[15, 15, 7, 7],\r\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\r\n        [7, 7, 7, 0], [3, 3, 0, 0]];\r\n\r\n    /**\r\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\r\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\r\n     *\r\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\r\n     * \"Audio Decoding Layer III\"\r\n     */\r\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\r\n        var table_number, row_in_table, partition, nr_sfb, window;\r\n        var over;\r\n        var i, sfb;\r\n        var max_sfac = new_int(4);\r\n//var partition_table;\r\n        var scalefac = cod_info.scalefac;\r\n\r\n        /*\r\n         * Set partition table. Note that should try to use table one, but do\r\n         * not yet...\r\n         */\r\n        if (cod_info.preflag != 0)\r\n            table_number = 2;\r\n        else\r\n            table_number = 0;\r\n\r\n        for (i = 0; i < 4; i++)\r\n            max_sfac[i] = 0;\r\n\r\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n            row_in_table = 1;\r\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\r\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\r\n                nr_sfb = partition_table[partition] / 3;\r\n                for (i = 0; i < nr_sfb; i++, sfb++)\r\n                    for (window = 0; window < 3; window++)\r\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\r\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\r\n            }\r\n        } else {\r\n            row_in_table = 0;\r\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\r\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\r\n                nr_sfb = partition_table[partition];\r\n                for (i = 0; i < nr_sfb; i++, sfb++)\r\n                    if (scalefac[sfb] > max_sfac[partition])\r\n                        max_sfac[partition] = scalefac[sfb];\r\n            }\r\n        }\r\n\r\n        for (over = false, partition = 0; partition < 4; partition++) {\r\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\r\n                over = true;\r\n        }\r\n        if (!over) {\r\n            var slen1, slen2, slen3, slen4;\r\n\r\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\r\n            for (partition = 0; partition < 4; partition++)\r\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\r\n\r\n            /* set scalefac_compress */\r\n            slen1 = cod_info.slen[0];\r\n            slen2 = cod_info.slen[1];\r\n            slen3 = cod_info.slen[2];\r\n            slen4 = cod_info.slen[3];\r\n\r\n            switch (table_number) {\r\n                case 0:\r\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\r\n                        + (slen3 << 2) + slen4;\r\n                    break;\r\n\r\n                case 1:\r\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\r\n                        + slen3;\r\n                    break;\r\n\r\n                case 2:\r\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\r\n                    break;\r\n\r\n                default:\r\n                    System.err.printf(\"intensity stereo not implemented yet\\n\");\r\n                    break;\r\n            }\r\n        }\r\n        if (!over) {\r\n            cod_info.part2_length = 0;\r\n            for (partition = 0; partition < 4; partition++)\r\n                cod_info.part2_length += cod_info.slen[partition]\r\n                    * cod_info.sfb_partition_table[partition];\r\n        }\r\n        return over;\r\n    }\r\n\r\n    /*\r\n     * Since no bands have been over-amplified, we can set scalefac_compress and\r\n     * slen[] for the formatter\r\n     */\r\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\r\n        4, 4, 4, 4];\r\n\r\n    this.huffman_init = function (gfc) {\r\n        for (var i = 2; i <= 576; i += 2) {\r\n            var scfb_anz = 0, bv_index;\r\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\r\n                ;\r\n\r\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\r\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\r\n                bv_index--;\r\n\r\n            if (bv_index < 0) {\r\n                /*\r\n                 * this is an indication that everything is going to be encoded\r\n                 * as region0: bigvalues < region0 < region1 so lets set\r\n                 * region0, region1 to some value larger than bigvalues\r\n                 */\r\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\r\n            }\r\n\r\n            gfc.bv_scf[i - 2] = bv_index;\r\n\r\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\r\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\r\n                bv_index--;\r\n\r\n            if (bv_index < 0) {\r\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\r\n            }\r\n\r\n            gfc.bv_scf[i - 1] = bv_index;\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\r\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\r\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \r\n *\r\n *  This library is free software; you can redistribute it and/or\r\n *  modify it under the terms of the GNU Lesser General Public\r\n *  License as published by the Free Software Foundation; either\r\n *  version 2.1 of the License, or (at your option) any later version.\r\n *\r\n *  This library is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n *  Lesser General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU Lesser General Public\r\n *  License along with this library; if not, write to the Free Software\r\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\r\n *\r\n *  concept and filter values by David Robinson (David@Robinson.org)\r\n *    -- blame him if you think the idea is flawed\r\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\r\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\r\n *\r\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\r\n *    -- credit him for all the _good_ programming ;)\r\n *\r\n *\r\n *  For an explanation of the concepts and the basic algorithms involved, go to:\r\n *    http://www.replaygain.org/\r\n */\r\n\r\n/*\r\n *  Here's the deal. Call\r\n *\r\n *    InitGainAnalysis ( long samplefreq );\r\n *\r\n *  to initialize everything. Call\r\n *\r\n *    AnalyzeSamples ( var Float_t*  left_samples,\r\n *                     var Float_t*  right_samples,\r\n *                     size_t          num_samples,\r\n *                     int             num_channels );\r\n *\r\n *  as many times as you want, with as many or as few samples as you want.\r\n *  If mono, pass the sample buffer in through left_samples, leave\r\n *  right_samples NULL, and make sure num_channels = 1.\r\n *\r\n *    GetTitleGain()\r\n *\r\n *  will return the recommended dB level change for all samples analyzed\r\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\r\n *\r\n *    GetAlbumGain()\r\n *\r\n *  will return the recommended dB level change for all samples analyzed\r\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\r\n *\r\n *  Pseudo-code to process an album:\r\n *\r\n *    Float_t       l_samples [4096];\r\n *    Float_t       r_samples [4096];\r\n *    size_t        num_samples;\r\n *    unsigned int  num_songs;\r\n *    unsigned int  i;\r\n *\r\n *    InitGainAnalysis ( 44100 );\r\n *    for ( i = 1; i <= num_songs; i++ ) {\r\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\r\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\r\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\r\n *    }\r\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\r\n */\r\n\r\n/*\r\n *  So here's the main source of potential code confusion:\r\n *\r\n *  The filters applied to the incoming samples are IIR filters,\r\n *  meaning they rely on up to <filter order> number of previous samples\r\n *  AND up to <filter order> number of previous filtered samples.\r\n *\r\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\r\n *  complexity. The speed isn't compromised too much (I don't think), but the\r\n *  internal complexity is higher than it should be for such a relatively\r\n *  simple routine.\r\n *\r\n *  Optimization/clarity suggestions are welcome.\r\n */\r\n\r\n/**\r\n * Table entries per dB\r\n */\r\nGainAnalysis.STEPS_per_dB = 100.;\r\n/**\r\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\r\n */\r\nGainAnalysis.MAX_dB = 120.;\r\nGainAnalysis.GAIN_NOT_ENOUGH_SAMPLES = -24601;\r\nGainAnalysis.GAIN_ANALYSIS_ERROR = 0;\r\nGainAnalysis.GAIN_ANALYSIS_OK = 1;\r\nGainAnalysis.INIT_GAIN_ANALYSIS_ERROR = 0;\r\nGainAnalysis.INIT_GAIN_ANALYSIS_OK = 1;\r\n\r\nGainAnalysis.YULE_ORDER = 10;\r\nGainAnalysis.MAX_ORDER = GainAnalysis.YULE_ORDER;\r\n\r\nGainAnalysis.MAX_SAMP_FREQ = 48000;\r\nGainAnalysis.RMS_WINDOW_TIME_NUMERATOR = 1;\r\nGainAnalysis.RMS_WINDOW_TIME_DENOMINATOR = 20;\r\nGainAnalysis.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis.MAX_SAMP_FREQ * GainAnalysis.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR + 1);\r\n\r\nfunction GainAnalysis() {\r\n    /**\r\n     * calibration value for 89dB\r\n     */\r\n    var PINK_REF = 64.82;\r\n\r\n    var YULE_ORDER = GainAnalysis.YULE_ORDER;\r\n    /**\r\n     * percentile which is louder than the proposed level\r\n     */\r\n    var RMS_PERCENTILE = 0.95;\r\n    /**\r\n\r\n     * maximum allowed sample frequency [Hz]\r\n     */\r\n    var MAX_SAMP_FREQ = GainAnalysis.MAX_SAMP_FREQ;\r\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis.RMS_WINDOW_TIME_NUMERATOR;\r\n    /**\r\n     * numerator / denominator = time slice size [s]\r\n     */\r\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR;\r\n    /**\r\n     * max. Samples per Time slice\r\n     */\r\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis.MAX_SAMPLES_PER_WINDOW;\r\n\r\n\r\n    var ABYule = [\r\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\r\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\r\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\r\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\r\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\r\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\r\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\r\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\r\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\r\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\r\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\r\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\r\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\r\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\r\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\r\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\r\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\r\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\r\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\r\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\r\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\r\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\r\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\r\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\r\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\r\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\r\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\r\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\r\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\r\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\r\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\r\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\r\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\r\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\r\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\r\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\r\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\r\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\r\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\r\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\r\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\r\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\r\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\r\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\r\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\r\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\r\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\r\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\r\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\r\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\r\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\r\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\r\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\r\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\r\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\r\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\r\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\r\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\r\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\r\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\r\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\r\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\r\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\r\n\r\n    var ABButter = [\r\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\r\n            0.97261396931306, 0.98621192462708],\r\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\r\n            0.97022847566350, 0.98500175787242],\r\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\r\n            0.95920349965459, 0.97938932735214],\r\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\r\n            0.95124613669835, 0.97531843204928],\r\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\r\n            0.94705070426118, 0.97316523498161],\r\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\r\n            0.93034775234268, 0.96454515552826],\r\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\r\n            0.92177618768381, 0.96009142950541],\r\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\r\n            0.91885558323625, 0.95856916599601],\r\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\r\n            0.89487434461664, 0.94597685600279]];\r\n\r\n\r\n    /**\r\n     * When calling this procedure, make sure that ip[-order] and op[-order]\r\n     * point to real data\r\n     */\r\n    //private void filterYule(final float[] input, int inputPos, float[] output,\r\n    //int outputPos, int nSamples, final float[] kernel) {\r\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\r\n\r\n        while ((nSamples--) != 0) {\r\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\r\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\r\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\r\n                * kernel[2] - output[outputPos - 2] * kernel[3]\r\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\r\n                * kernel[5] + input[inputPos - 3] * kernel[6]\r\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\r\n                * kernel[8] - output[outputPos - 5] * kernel[9]\r\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\r\n                * kernel[11] + input[inputPos - 6] * kernel[12]\r\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\r\n                * kernel[14] - output[outputPos - 8] * kernel[15]\r\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\r\n                * kernel[17] + input[inputPos - 9] * kernel[18]\r\n                - output[outputPos - 10] * kernel[19]\r\n                + input[inputPos - 10] * kernel[20];\r\n            ++outputPos;\r\n            ++inputPos;\r\n        }\r\n    }\r\n\r\n//private void filterButter(final float[] input, int inputPos,\r\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\r\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\r\n\r\n        while ((nSamples--) != 0) {\r\n            output[outputPos] = input[inputPos + 0] * kernel[0]\r\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\r\n                * kernel[2] - output[outputPos - 2] * kernel[3]\r\n                + input[inputPos - 2] * kernel[4];\r\n            ++outputPos;\r\n            ++inputPos;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\r\n     *         not\r\n     */\r\n    function ResetSampleFrequency(rgData, samplefreq) {\r\n        /* zero out initial values */\r\n        for (var i = 0; i < MAX_ORDER; i++)\r\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\r\n\r\n        switch (0 | (samplefreq)) {\r\n            case 48000:\r\n                rgData.reqindex = 0;\r\n                break;\r\n            case 44100:\r\n                rgData.reqindex = 1;\r\n                break;\r\n            case 32000:\r\n                rgData.reqindex = 2;\r\n                break;\r\n            case 24000:\r\n                rgData.reqindex = 3;\r\n                break;\r\n            case 22050:\r\n                rgData.reqindex = 4;\r\n                break;\r\n            case 16000:\r\n                rgData.reqindex = 5;\r\n                break;\r\n            case 12000:\r\n                rgData.reqindex = 6;\r\n                break;\r\n            case 11025:\r\n                rgData.reqindex = 7;\r\n                break;\r\n            case 8000:\r\n                rgData.reqindex = 8;\r\n                break;\r\n            default:\r\n                return INIT_GAIN_ANALYSIS_ERROR;\r\n        }\r\n\r\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\r\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\r\n\r\n        rgData.lsum = 0.;\r\n        rgData.rsum = 0.;\r\n        rgData.totsamp = 0;\r\n\r\n        Arrays.ill(rgData.A, 0);\r\n\r\n        return INIT_GAIN_ANALYSIS_OK;\r\n    }\r\n\r\n    this.InitGainAnalysis = function (rgData, samplefreq) {\r\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\r\n            return INIT_GAIN_ANALYSIS_ERROR;\r\n        }\r\n\r\n        rgData.linpre = MAX_ORDER;\r\n        rgData.rinpre = MAX_ORDER;\r\n        rgData.lstep = MAX_ORDER;\r\n        rgData.rstep = MAX_ORDER;\r\n        rgData.lout = MAX_ORDER;\r\n        rgData.rout = MAX_ORDER;\r\n\r\n        Arrays.fill(rgData.B, 0);\r\n\r\n        return INIT_GAIN_ANALYSIS_OK;\r\n    };\r\n\r\n    /**\r\n     * square\r\n     */\r\n    function fsqr(d) {\r\n        return d * d;\r\n    }\r\n\r\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\r\n                                    num_channels) {\r\n        var curleft;\r\n        var curleftBase;\r\n        var curright;\r\n        var currightBase;\r\n        var batchsamples;\r\n        var cursamples;\r\n        var cursamplepos;\r\n\r\n        if (num_samples == 0)\r\n            return GAIN_ANALYSIS_OK;\r\n\r\n        cursamplepos = 0;\r\n        batchsamples = num_samples;\r\n\r\n        switch (num_channels) {\r\n            case 1:\r\n                right_samples = left_samples;\r\n                right_samplesPos = left_samplesPos;\r\n                break;\r\n            case 2:\r\n                break;\r\n            default:\r\n                return GAIN_ANALYSIS_ERROR;\r\n        }\r\n\r\n        if (num_samples < MAX_ORDER) {\r\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\r\n                MAX_ORDER, num_samples);\r\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\r\n                MAX_ORDER, num_samples);\r\n        } else {\r\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\r\n                MAX_ORDER, MAX_ORDER);\r\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\r\n                MAX_ORDER, MAX_ORDER);\r\n        }\r\n\r\n        while (batchsamples > 0) {\r\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\r\n            - rgData.totsamp\r\n                : batchsamples;\r\n            if (cursamplepos < MAX_ORDER) {\r\n                curleft = rgData.linpre + cursamplepos;\r\n                curleftBase = rgData.linprebuf;\r\n                curright = rgData.rinpre + cursamplepos;\r\n                currightBase = rgData.rinprebuf;\r\n                if (cursamples > MAX_ORDER - cursamplepos)\r\n                    cursamples = MAX_ORDER - cursamplepos;\r\n            } else {\r\n                curleft = left_samplesPos + cursamplepos;\r\n                curleftBase = left_samples;\r\n\r\n                curright = right_samplesPos + cursamplepos;\r\n                currightBase = right_samples;\r\n            }\r\n\r\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\r\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\r\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\r\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\r\n\r\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\r\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\r\n                ABButter[rgData.reqindex]);\r\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\r\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\r\n                ABButter[rgData.reqindex]);\r\n\r\n            curleft = rgData.lout + rgData.totsamp;\r\n            /* Get the squared values */\r\n            curleftBase = rgData.loutbuf;\r\n            curright = rgData.rout + rgData.totsamp;\r\n            currightBase = rgData.routbuf;\r\n\r\n            var i = cursamples % 8;\r\n            while ((i--) != 0) {\r\n                rgData.lsum += fsqr(curleftBase[curleft++]);\r\n                rgData.rsum += fsqr(currightBase[curright++]);\r\n            }\r\n            i = cursamples / 8;\r\n            while ((i--) != 0) {\r\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\r\n                    + fsqr(curleftBase[curleft + 1])\r\n                    + fsqr(curleftBase[curleft + 2])\r\n                    + fsqr(curleftBase[curleft + 3])\r\n                    + fsqr(curleftBase[curleft + 4])\r\n                    + fsqr(curleftBase[curleft + 5])\r\n                    + fsqr(curleftBase[curleft + 6])\r\n                    + fsqr(curleftBase[curleft + 7]);\r\n                curleft += 8;\r\n                rgData.rsum += fsqr(currightBase[curright + 0])\r\n                    + fsqr(currightBase[curright + 1])\r\n                    + fsqr(currightBase[curright + 2])\r\n                    + fsqr(currightBase[curright + 3])\r\n                    + fsqr(currightBase[curright + 4])\r\n                    + fsqr(currightBase[curright + 5])\r\n                    + fsqr(currightBase[curright + 6])\r\n                    + fsqr(currightBase[curright + 7]);\r\n                curright += 8;\r\n            }\r\n\r\n            batchsamples -= cursamples;\r\n            cursamplepos += cursamples;\r\n            rgData.totsamp += cursamples;\r\n            if (rgData.totsamp == rgData.sampleWindow) {\r\n                /* Get the Root Mean Square (RMS) for this set of samples */\r\n                var val = GainAnalysis.STEPS_per_dB\r\n                    * 10.\r\n                    * Math.log10((rgData.lsum + rgData.rsum)\r\n                        / rgData.totsamp * 0.5 + 1.e-37);\r\n                var ival = (val <= 0) ? 0 : 0 | val;\r\n                if (ival >= rgData.A.length)\r\n                    ival = rgData.A.length - 1;\r\n                rgData.A[ival]++;\r\n                rgData.lsum = rgData.rsum = 0.;\r\n\r\n                System.arraycopy(rgData.loutbuf, rgData.totsamp,\r\n                    rgData.loutbuf, 0, MAX_ORDER);\r\n                System.arraycopy(rgData.routbuf, rgData.totsamp,\r\n                    rgData.routbuf, 0, MAX_ORDER);\r\n                System.arraycopy(rgData.lstepbuf, rgData.totsamp,\r\n                    rgData.lstepbuf, 0, MAX_ORDER);\r\n                System.arraycopy(rgData.rstepbuf, rgData.totsamp,\r\n                    rgData.rstepbuf, 0, MAX_ORDER);\r\n                rgData.totsamp = 0;\r\n            }\r\n            if (rgData.totsamp > rgData.sampleWindow) {\r\n                /*\r\n                 * somehow I really screwed up: Error in programming! Contact\r\n                 * author about totsamp > sampleWindow\r\n                 */\r\n                return GAIN_ANALYSIS_ERROR;\r\n            }\r\n        }\r\n        if (num_samples < MAX_ORDER) {\r\n            System.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\r\n                0, MAX_ORDER - num_samples);\r\n            System.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\r\n                0, MAX_ORDER - num_samples);\r\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\r\n                MAX_ORDER - num_samples, num_samples);\r\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\r\n                MAX_ORDER - num_samples, num_samples);\r\n        } else {\r\n            System.arraycopy(left_samples, left_samplesPos + num_samples\r\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\r\n            System.arraycopy(right_samples, right_samplesPos + num_samples\r\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\r\n        }\r\n\r\n        return GAIN_ANALYSIS_OK;\r\n    };\r\n\r\n    function analyzeResult(Array, len) {\r\n        var i;\r\n\r\n        var elems = 0;\r\n        for (i = 0; i < len; i++)\r\n            elems += Array[i];\r\n        if (elems == 0)\r\n            return GAIN_NOT_ENOUGH_SAMPLES;\r\n\r\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\r\n        for (i = len; i-- > 0;) {\r\n            if ((upper -= Array[i]) <= 0)\r\n                break;\r\n        }\r\n\r\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\r\n        return (PINK_REF - i / GainAnalysis.STEPS_per_dB);\r\n    }\r\n\r\n    this.GetTitleGain = function (rgData) {\r\n        var retval = analyzeResult(rgData.A, rgData.A.length);\r\n\r\n        for (var i = 0; i < rgData.A.length; i++) {\r\n            rgData.B[i] += rgData.A[i];\r\n            rgData.A[i] = 0;\r\n        }\r\n\r\n        for (var i = 0; i < MAX_ORDER; i++)\r\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\r\n\r\n        rgData.totsamp = 0;\r\n        rgData.lsum = rgData.rsum = 0.;\r\n        return retval;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction Presets() {\r\n    function VBRPresets(qual, comp, compS,\r\n                        y, shThreshold, shThresholdS,\r\n                        adj, adjShort, lower,\r\n                        curve, sens, inter,\r\n                        joint, mod, fix) {\r\n        this.vbr_q = qual;\r\n        this.quant_comp = comp;\r\n        this.quant_comp_s = compS;\r\n        this.expY = y;\r\n        this.st_lrm = shThreshold;\r\n        this.st_s = shThresholdS;\r\n        this.masking_adj = adj;\r\n        this.masking_adj_short = adjShort;\r\n        this.ath_lower = lower;\r\n        this.ath_curve = curve;\r\n        this.ath_sensitivity = sens;\r\n        this.interch = inter;\r\n        this.safejoint = joint;\r\n        this.sfb21mod = mod;\r\n        this.msfix = fix;\r\n    }\r\n\r\n    function ABRPresets(kbps, comp, compS,\r\n                        joint, fix, shThreshold,\r\n                        shThresholdS, bass, sc,\r\n                        mask, lower, curve,\r\n                        interCh, sfScale) {\r\n        this.quant_comp = comp;\r\n        this.quant_comp_s = compS;\r\n        this.safejoint = joint;\r\n        this.nsmsfix = fix;\r\n        this.st_lrm = shThreshold;\r\n        this.st_s = shThresholdS;\r\n        this.nsbass = bass;\r\n        this.scale = sc;\r\n        this.masking_adj = mask;\r\n        this.ath_lower = lower;\r\n        this.ath_curve = curve;\r\n        this.interch = interCh;\r\n        this.sfscale = sfScale;\r\n    }\r\n\r\n    var lame;\r\n\r\n    this.setModules = function (_lame) {\r\n        lame = _lame;\r\n    };\r\n\r\n    /**\r\n     * <PRE>\r\n     * Switch mappings for VBR mode VBR_RH\r\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\r\n     * </PRE>\r\n     */\r\n    var vbr_old_switch_map = [\r\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\r\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\r\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\r\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\r\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\r\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\r\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\r\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\r\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\r\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\r\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\r\n    ];\r\n\r\n    /**\r\n     * <PRE>\r\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\r\n     * </PRE>\r\n     */\r\n    var vbr_psy_switch_map = [\r\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\r\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\r\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\r\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\r\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\r\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\r\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\r\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\r\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\r\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\r\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\r\n    ];\r\n\r\n    function apply_vbr_preset(gfp, a, enforce) {\r\n        var vbr_preset = gfp.VBR == VbrMode.vbr_rh ? vbr_old_switch_map\r\n            : vbr_psy_switch_map;\r\n\r\n        var x = gfp.VBR_q_frac;\r\n        var p = vbr_preset[a];\r\n        var q = vbr_preset[a + 1];\r\n        var set = p;\r\n\r\n        // NOOP(vbr_q);\r\n        // NOOP(quant_comp);\r\n        // NOOP(quant_comp_s);\r\n        // NOOP(expY);\r\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\r\n        // LERP(st_lrm);\r\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\r\n        // LERP(st_s);\r\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\r\n        // LERP(masking_adj);\r\n        p.masking_adj_short = p.masking_adj_short + x\r\n            * (q.masking_adj_short - p.masking_adj_short);\r\n        // LERP(masking_adj_short);\r\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\r\n        // LERP(ath_lower);\r\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\r\n        // LERP(ath_curve);\r\n        p.ath_sensitivity = p.ath_sensitivity + x\r\n            * (q.ath_sensitivity - p.ath_sensitivity);\r\n        // LERP(ath_sensitivity);\r\n        p.interch = p.interch + x * (q.interch - p.interch);\r\n        // LERP(interch);\r\n        // NOOP(safejoint);\r\n        // NOOP(sfb21mod);\r\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\r\n        // LERP(msfix);\r\n\r\n        lame_set_VBR_q(gfp, set.vbr_q);\r\n\r\n        if (enforce != 0)\r\n            gfp.quant_comp = set.quant_comp;\r\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\r\n            gfp.quant_comp = set.quant_comp;\r\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\r\n        if (enforce != 0)\r\n            gfp.quant_comp_short = set.quant_comp_s;\r\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\r\n            gfp.quant_comp_short = set.quant_comp_s;\r\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\r\n        if (set.expY != 0) {\r\n            gfp.experimentalY = set.expY != 0;\r\n        }\r\n        if (enforce != 0)\r\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\r\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\r\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\r\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\r\n        if (enforce != 0)\r\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\r\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\r\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\r\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\r\n        if (enforce != 0)\r\n            gfp.maskingadjust = set.masking_adj;\r\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\r\n            gfp.maskingadjust = set.masking_adj;\r\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\r\n        if (enforce != 0)\r\n            gfp.maskingadjust_short = set.masking_adj_short;\r\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\r\n            gfp.maskingadjust_short = set.masking_adj_short;\r\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\r\n        if (enforce != 0)\r\n            gfp.ATHlower = -set.ath_lower / 10.0;\r\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\r\n            gfp.ATHlower = -set.ath_lower / 10.0;\r\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\r\n        if (enforce != 0)\r\n            gfp.ATHcurve = set.ath_curve;\r\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\r\n            gfp.ATHcurve = set.ath_curve;\r\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\r\n        if (enforce != 0)\r\n            gfp.athaa_sensitivity = set.ath_sensitivity;\r\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\r\n            gfp.athaa_sensitivity = set.ath_sensitivity;\r\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\r\n        if (set.interch > 0) {\r\n            if (enforce != 0)\r\n                gfp.interChRatio = set.interch;\r\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\r\n                gfp.interChRatio = set.interch;\r\n            // SET_OPTION(interChRatio, set.interch, -1);\r\n        }\r\n\r\n        /* parameters for which there is no proper set/get interface */\r\n        if (set.safejoint > 0) {\r\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\r\n        }\r\n        if (set.sfb21mod > 0) {\r\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\r\n        }\r\n        if (enforce != 0)\r\n            gfp.msfix = set.msfix;\r\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\r\n            gfp.msfix = set.msfix;\r\n        // SET_OPTION(msfix, set.msfix, -1);\r\n\r\n        if (enforce == 0) {\r\n            gfp.VBR_q = a;\r\n            gfp.VBR_q_frac = x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *  Switch mappings for ABR mode\r\n     *\r\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\r\n     * </PRE>\r\n     */\r\n    var abr_switch_map = [\r\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\r\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\r\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\r\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\r\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\r\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\r\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\r\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\r\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\r\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\r\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\r\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\r\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\r\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\r\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\r\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\r\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\r\n    ];\r\n\r\n    function apply_abr_preset(gfp, preset, enforce) {\r\n        /* Variables for the ABR stuff */\r\n        var actual_bitrate = preset;\r\n\r\n        var r = lame.nearestBitrateFullIndex(preset);\r\n\r\n        gfp.VBR = VbrMode.vbr_abr;\r\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\r\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\r\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\r\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\r\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\r\n            gfp.disable_reservoir = true;\r\n        }\r\n\r\n        /* parameters for which there is no proper set/get interface */\r\n        if (abr_switch_map[r].safejoint > 0)\r\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\r\n        /* safejoint */\r\n\r\n        if (abr_switch_map[r].sfscale > 0) {\r\n            gfp.internal_flags.noise_shaping = 2;\r\n        }\r\n        /* ns-bass tweaks */\r\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\r\n            var k = (int)(abr_switch_map[r].nsbass * 4);\r\n            if (k < 0)\r\n                k += 64;\r\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\r\n        }\r\n\r\n        if (enforce != 0)\r\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\r\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\r\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\r\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\r\n        if (enforce != 0)\r\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\r\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\r\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\r\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\r\n\r\n        if (enforce != 0)\r\n            gfp.msfix = abr_switch_map[r].nsmsfix;\r\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\r\n            gfp.msfix = abr_switch_map[r].nsmsfix;\r\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\r\n\r\n        if (enforce != 0)\r\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\r\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\r\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\r\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\r\n        if (enforce != 0)\r\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\r\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\r\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\r\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\r\n\r\n        /*\r\n         * ABR seems to have big problems with clipping, especially at low\r\n         * bitrates\r\n         */\r\n        /*\r\n         * so we compensate for that here by using a scale value depending on\r\n         * bitrate\r\n         */\r\n        if (enforce != 0)\r\n            gfp.scale = abr_switch_map[r].scale;\r\n        else if (!(Math.abs(gfp.scale - -1) > 0))\r\n            gfp.scale = abr_switch_map[r].scale;\r\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\r\n\r\n        if (enforce != 0)\r\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\r\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\r\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\r\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\r\n        if (abr_switch_map[r].masking_adj > 0) {\r\n            if (enforce != 0)\r\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\r\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\r\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\r\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\r\n            // .9, 0);\r\n        } else {\r\n            if (enforce != 0)\r\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\r\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\r\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\r\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\r\n            // 1.1, 0);\r\n        }\r\n\r\n        if (enforce != 0)\r\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\r\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\r\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\r\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\r\n        if (enforce != 0)\r\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\r\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\r\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\r\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\r\n\r\n        if (enforce != 0)\r\n            gfp.interChRatio = abr_switch_map[r].interch;\r\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\r\n            gfp.interChRatio = abr_switch_map[r].interch;\r\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\r\n\r\n        return preset;\r\n    }\r\n\r\n    this.apply_preset = function(gfp, preset, enforce) {\r\n        /* translate legacy presets */\r\n        switch (preset) {\r\n            case Lame.R3MIX:\r\n            {\r\n                preset = Lame.V3;\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n                break;\r\n            }\r\n            case Lame.MEDIUM:\r\n            {\r\n                preset = Lame.V4;\r\n                gfp.VBR = VbrMode.vbr_rh;\r\n                break;\r\n            }\r\n            case Lame.MEDIUM_FAST:\r\n            {\r\n                preset = Lame.V4;\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n                break;\r\n            }\r\n            case Lame.STANDARD:\r\n            {\r\n                preset = Lame.V2;\r\n                gfp.VBR = VbrMode.vbr_rh;\r\n                break;\r\n            }\r\n            case Lame.STANDARD_FAST:\r\n            {\r\n                preset = Lame.V2;\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n                break;\r\n            }\r\n            case Lame.EXTREME:\r\n            {\r\n                preset = Lame.V0;\r\n                gfp.VBR = VbrMode.vbr_rh;\r\n                break;\r\n            }\r\n            case Lame.EXTREME_FAST:\r\n            {\r\n                preset = Lame.V0;\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n                break;\r\n            }\r\n            case Lame.INSANE:\r\n            {\r\n                preset = 320;\r\n                gfp.preset = preset;\r\n                apply_abr_preset(gfp, preset, enforce);\r\n                gfp.VBR = VbrMode.vbr_off;\r\n                return preset;\r\n            }\r\n        }\r\n\r\n        gfp.preset = preset;\r\n        {\r\n            switch (preset) {\r\n                case Lame.V9:\r\n                    apply_vbr_preset(gfp, 9, enforce);\r\n                    return preset;\r\n                case Lame.V8:\r\n                    apply_vbr_preset(gfp, 8, enforce);\r\n                    return preset;\r\n                case Lame.V7:\r\n                    apply_vbr_preset(gfp, 7, enforce);\r\n                    return preset;\r\n                case Lame.V6:\r\n                    apply_vbr_preset(gfp, 6, enforce);\r\n                    return preset;\r\n                case Lame.V5:\r\n                    apply_vbr_preset(gfp, 5, enforce);\r\n                    return preset;\r\n                case Lame.V4:\r\n                    apply_vbr_preset(gfp, 4, enforce);\r\n                    return preset;\r\n                case Lame.V3:\r\n                    apply_vbr_preset(gfp, 3, enforce);\r\n                    return preset;\r\n                case Lame.V2:\r\n                    apply_vbr_preset(gfp, 2, enforce);\r\n                    return preset;\r\n                case Lame.V1:\r\n                    apply_vbr_preset(gfp, 1, enforce);\r\n                    return preset;\r\n                case Lame.V0:\r\n                    apply_vbr_preset(gfp, 0, enforce);\r\n                    return preset;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (8 <= preset && preset <= 320) {\r\n            return apply_abr_preset(gfp, preset, enforce);\r\n        }\r\n\r\n        /* no corresponding preset found */\r\n        gfp.preset = 0;\r\n        return preset;\r\n    }\r\n\r\n    // Rest from getset.c:\r\n\r\n    /**\r\n     * VBR quality level.<BR>\r\n     * 0 = highest<BR>\r\n     * 9 = lowest\r\n     */\r\n    function lame_set_VBR_q(gfp, VBR_q) {\r\n        var ret = 0;\r\n\r\n        if (0 > VBR_q) {\r\n            /* Unknown VBR quality level! */\r\n            ret = -1;\r\n            VBR_q = 0;\r\n        }\r\n        if (9 < VBR_q) {\r\n            ret = -1;\r\n            VBR_q = 9;\r\n        }\r\n\r\n        gfp.VBR_q = VBR_q;\r\n        gfp.VBR_q_frac = 0;\r\n        return ret;\r\n    }\r\n\r\n}\r\n\r\n/*\r\n *      bit reservoir source file\r\n *\r\n *      Copyright (c) 1999-2000 Mark Taylor\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n//package mp3;\r\n\r\n/**\r\n * ResvFrameBegin:<BR>\r\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\r\n * the reservoir, and checks to make sure main_data_begin was set properly by\r\n * the formatter<BR>\r\n * Background information:\r\n * \r\n * This is the original text from the ISO standard. Because of sooo many bugs\r\n * and irritations correcting comments are added in brackets []. A '^W' means\r\n * you should remove the last word.\r\n * \r\n * <PRE>\r\n *  1. The following rule can be used to calculate the maximum\r\n *     number of bits used for one granule [^W frame]:<BR>\r\n *     At the highest possible bitrate of Layer III (320 kbps\r\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\r\n *     [^W^W^W are designed to have] constant length, i.e.\r\n *     one buffer [^W^W the frame] length is:<BR>\r\n * \r\n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\r\n * \r\n *     This value is used as the maximum buffer per channel [^W^W] at\r\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\r\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\r\n *     [per granule and channel] at 48 kHz sampling frequency.\r\n *     This means that there is a maximum deviation (short time buffer\r\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\r\n *     The actual deviation is equal to the number of bytes [with the\r\n *     meaning of octets] denoted by the main_data_end offset pointer.\r\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\r\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\r\n *     ... The xchange of buffer bits between the left and right channel\r\n *     is allowed without restrictions [exception: dual channel].\r\n *     Because of the [constructed] constraint on the buffer size\r\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\r\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\r\n *     all data are allocated between adjacent header [^W sync] words\r\n *     [, i.e. there is no buffering at all].\r\n * </PRE>\r\n */\r\n\r\n\r\nfunction Reservoir() {\r\n\tvar bs;\r\n\r\n\tthis.setModules  = function(_bs) {\r\n\t\tbs = _bs;\r\n\t}\r\n\r\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\r\n\t\tvar gfc = gfp.internal_flags;\r\n\t\tvar maxmp3buf;\r\n\t\tvar l3_side = gfc.l3_side;\r\n\r\n\t\tvar frameLength = bs.getframebits(gfp);\r\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\r\n\r\n\t\t/**\r\n\t\t * <PRE>\r\n\t\t *  Meaning of the variables:\r\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\r\n\t\t *          Number of bits can be stored in previous frame(s) due to\r\n\t\t *          counter size constaints\r\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\r\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\r\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\r\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\r\n\t\t *          value for MPEG-1 and -2)\r\n\t\t * \r\n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\r\n\t\t *          so this is the absolute maximum supported by the format.\r\n\t\t * \r\n\t\t * \r\n\t\t *      fullFrameBits:  maximum number of bits available for encoding\r\n\t\t *                      the current frame.\r\n\t\t * \r\n\t\t *      mean_bits:      target number of bits per granule.\r\n\t\t * \r\n\t\t *      frameLength:\r\n\t\t * \r\n\t\t *      gfc.ResvMax:   maximum allowed reservoir\r\n\t\t * \r\n\t\t *      gfc.ResvSize:  current reservoir size\r\n\t\t * \r\n\t\t *      l3_side.resvDrain_pre:\r\n\t\t *         ancillary data to be added to previous frame:\r\n\t\t *         (only usefull in VBR modes if it is possible to have\r\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\r\n\t\t *         see #define NEW_DRAIN\r\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\r\n\t\t *                     as there exists one example, where the FhG decoder\r\n\t\t *                     can't decode a -b320 CBR file anymore.\r\n\t\t * \r\n\t\t *      l3_side.resvDrain_post:\r\n\t\t *         ancillary data to be added to this frame:\r\n\t\t * \r\n\t\t * </PRE>\r\n\t\t */\r\n\r\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\r\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\r\n\r\n\t\t/*\r\n\t\t * maximum allowed frame size. dont use more than this number of bits,\r\n\t\t * even if the frame has the space for them:\r\n\t\t */\r\n\t\tif (gfp.brate > 320) {\r\n\t\t\t/* in freeformat the buffer is constant */\r\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\r\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\r\n\t\t} else {\r\n\t\t\t/*\r\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\r\n\t\t\t * size of a 320kbps 32kHz frame\r\n\t\t\t */\r\n\t\t\tmaxmp3buf = 8 * 1440;\r\n\r\n\t\t\t/*\r\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\r\n\t\t\t * instead of using 8*960.\r\n\t\t\t */\r\n\r\n\t\t\tif (gfp.strict_ISO) {\r\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\r\n\t\tif (gfc.ResvMax > resvLimit)\r\n\t\t\tgfc.ResvMax = resvLimit;\r\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\r\n\t\t\tgfc.ResvMax = 0;\r\n\r\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\r\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\r\n\r\n\t\tif (fullFrameBits > maxmp3buf)\r\n\t\t\tfullFrameBits = maxmp3buf;\r\n\r\n\r\n\t\tl3_side.resvDrain_pre = 0;\r\n\r\n\t\t// frame analyzer code\r\n\t\tif (gfc.pinfo != null) {\r\n\t\t\t/*\r\n\t\t\t * expected bits per channel per granule [is this also right for\r\n\t\t\t * mono/stereo, MPEG-1/2 ?]\r\n\t\t\t */\r\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\r\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\r\n\t\t}\r\n\r\n\t\treturn fullFrameBits;\r\n\t}\r\n\r\n\t/**\r\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\r\n\t * extra_bits: amount extra available from reservoir<BR>\r\n\t * Mark Taylor 4/99\r\n\t */\r\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\r\n\t\tvar gfc = gfp.internal_flags;\r\n\t\tvar add_bits;\r\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\r\n\r\n\t\t/* compensate the saved bits used in the 1st granule */\r\n\t\tif (cbr != 0)\r\n\t\t\tResvSize += mean_bits;\r\n\r\n\t\tif ((gfc.substep_shaping & 1) != 0)\r\n\t\t\tResvMax *= 0.9;\r\n\r\n\t\ttarg_bits.bits = mean_bits;\r\n\r\n\t\t/* extra bits if the reservoir is almost full */\r\n\t\tif (ResvSize * 10 > ResvMax * 9) {\r\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\r\n\t\t\ttarg_bits.bits += add_bits;\r\n\t\t\tgfc.substep_shaping |= 0x80;\r\n\t\t} else {\r\n\t\t\tadd_bits = 0;\r\n\t\t\tgfc.substep_shaping &= 0x7f;\r\n\t\t\t/*\r\n\t\t\t * build up reservoir. this builds the reservoir a little slower\r\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\r\n\t\t\t * always produce 100 (the old value) at 128kbs\r\n\t\t\t */\r\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\r\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\r\n\t\t}\r\n\r\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\r\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\r\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\r\n\t\textra_bits -= add_bits;\r\n\r\n\t\tif (extra_bits < 0)\r\n\t\t\textra_bits = 0;\r\n\t\treturn extra_bits;\r\n\t}\r\n\r\n\t/**\r\n\t * Called after a granule's bit allocation. Readjusts the size of the\r\n\t * reservoir to reflect the granule's usage.\r\n\t */\r\n\tthis.ResvAdjust = function(gfc, gi) {\r\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\r\n\t}\r\n\r\n\t/**\r\n\t * Called after all granules in a frame have been allocated. Makes sure that\r\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\r\n\t */\r\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\r\n\t\tvar over_bits;\r\n\t\tvar l3_side = gfc.l3_side;\r\n\r\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\r\n\t\tvar stuffingBits = 0;\r\n\t\tl3_side.resvDrain_post = 0;\r\n\t\tl3_side.resvDrain_pre = 0;\r\n\r\n\t\t/* we must be byte aligned */\r\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\r\n\t\t\tstuffingBits += over_bits;\r\n\r\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\r\n\t\tif (over_bits > 0) {\r\n\t\t\tstuffingBits += over_bits;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\r\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\r\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\r\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\r\n\t\t * frame at 32 kHz sample rate.\r\n\t\t * \r\n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\r\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\r\n\t\t * \r\n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\r\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\r\n\t\t * \r\n\t\t * Robert Hegemann, 2010-02-13.\r\n\t\t */\r\n\t\t/*\r\n\t\t * drain as many bits as possible into previous frame ancillary data In\r\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\r\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\r\n\t\t * mt 4/00\r\n\t\t */\r\n\t\t{\r\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\r\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\r\n\t\t\tstuffingBits -= 8 * mdb_bytes;\r\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\r\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\r\n\t\t}\r\n\t\t/* drain the rest into this frames ancillary data */\r\n\t\tl3_side.resvDrain_post += stuffingBits;\r\n\t\tgfc.ResvSize -= stuffingBits;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * A Vbr header may be present in the ancillary data field of the first frame of\r\n * an mp3 bitstream<BR>\r\n * The Vbr header (optionally) contains\r\n * <UL>\r\n * <LI>frames total number of audio frames in the bitstream\r\n * <LI>bytes total number of bytes in the bitstream\r\n * <LI>toc table of contents\r\n * </UL>\r\n *\r\n * toc (table of contents) gives seek points for random access.<BR>\r\n * The ith entry determines the seek point for i-percent duration.<BR>\r\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\r\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\r\n */\r\nVBRTag.NUMTOCENTRIES = 100;\r\nVBRTag.MAXFRAMESIZE = 2880;\r\n\r\nfunction VBRTag() {\r\n\r\n    var lame;\r\n    var bs;\r\n    var v;\r\n\r\n    this.setModules = function (_lame, _bs, _v) {\r\n        lame = _lame;\r\n        bs = _bs;\r\n        v = _v;\r\n    };\r\n\r\n    var FRAMES_FLAG = 0x0001;\r\n    var BYTES_FLAG = 0x0002;\r\n    var TOC_FLAG = 0x0004;\r\n    var VBR_SCALE_FLAG = 0x0008;\r\n\r\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\r\n\r\n    /**\r\n     * (0xB40) the max freeformat 640 32kHz framesize.\r\n     */\r\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\r\n\r\n    /**\r\n     * <PRE>\r\n     *    4 bytes for Header Tag\r\n     *    4 bytes for Header Flags\r\n     *  100 bytes for entry (toc)\r\n     *    4 bytes for frame size\r\n     *    4 bytes for stream size\r\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\r\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\r\n     * ___________\r\n     *  140 bytes\r\n     * </PRE>\r\n     */\r\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\r\n\r\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\r\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\r\n\r\n    /**\r\n     * The size of the Xing header MPEG-1, bit rate in kbps.\r\n     */\r\n    var XING_BITRATE1 = 128;\r\n    /**\r\n     * The size of the Xing header MPEG-2, bit rate in kbps.\r\n     */\r\n    var XING_BITRATE2 = 64;\r\n    /**\r\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\r\n     */\r\n    var XING_BITRATE25 = 32;\r\n\r\n    /**\r\n     * ISO-8859-1 charset for byte to string operations.\r\n     */\r\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\r\n\r\n    /**\r\n     * VBR header magic string.\r\n     */\r\n    var VBRTag0 = \"Xing\";\r\n    /**\r\n     * VBR header magic string (VBR == VBRMode.vbr_off).\r\n     */\r\n    var VBRTag1 = \"Info\";\r\n\r\n    /**\r\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\r\n     * x^16+x^15+x^2+1\r\n     */\r\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\r\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\r\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\r\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\r\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\r\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\r\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\r\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\r\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\r\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\r\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\r\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\r\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\r\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\r\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\r\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\r\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\r\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\r\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\r\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\r\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\r\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\r\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\r\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\r\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\r\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\r\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\r\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\r\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\r\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\r\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\r\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\r\n        0x4100, 0x81C1, 0x8081, 0x4040];\r\n\r\n    /***********************************************************************\r\n     * Robert Hegemann 2001-01-17\r\n     ***********************************************************************/\r\n\r\n    function addVbr(v, bitrate) {\r\n        v.nVbrNumFrames++;\r\n        v.sum += bitrate;\r\n        v.seen++;\r\n\r\n        if (v.seen < v.want) {\r\n            return;\r\n        }\r\n\r\n        if (v.pos < v.size) {\r\n            v.bag[v.pos] = v.sum;\r\n            v.pos++;\r\n            v.seen = 0;\r\n        }\r\n        if (v.pos == v.size) {\r\n            for (var i = 1; i < v.size; i += 2) {\r\n                v.bag[i / 2] = v.bag[i];\r\n            }\r\n            v.want *= 2;\r\n            v.pos /= 2;\r\n        }\r\n    }\r\n\r\n    function xingSeekTable(v, t) {\r\n        if (v.pos <= 0)\r\n            return;\r\n\r\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\r\n            var j = i / NUMTOCENTRIES, act, sum;\r\n            var indx = 0 | (Math.floor(j * v.pos));\r\n            if (indx > v.pos - 1)\r\n                indx = v.pos - 1;\r\n            act = v.bag[indx];\r\n            sum = v.sum;\r\n            var seek_point = 0 | (256. * act / sum);\r\n            if (seek_point > 255)\r\n                seek_point = 255;\r\n            t[i] = 0xff & seek_point;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add VBR entry, used to fill the VBR TOC entries.\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     */\r\n    this.addVbrFrame = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\r\n        addVbr(gfc.VBR_seek_table, kbps);\r\n    }\r\n\r\n    /**\r\n     * Read big endian integer (4-bytes) from header.\r\n     *\r\n     * @param buf\r\n     *            header containing the integer\r\n     * @param bufPos\r\n     *            offset into the header\r\n     * @return extracted integer\r\n     */\r\n    function extractInteger(buf, bufPos) {\r\n        var x = buf[bufPos + 0] & 0xff;\r\n        x <<= 8;\r\n        x |= buf[bufPos + 1] & 0xff;\r\n        x <<= 8;\r\n        x |= buf[bufPos + 2] & 0xff;\r\n        x <<= 8;\r\n        x |= buf[bufPos + 3] & 0xff;\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * Write big endian integer (4-bytes) in the header.\r\n     *\r\n     * @param buf\r\n     *            header to write the integer into\r\n     * @param bufPos\r\n     *            offset into the header\r\n     * @param value\r\n     *            integer value to write\r\n     */\r\n    function createInteger(buf, bufPos, value) {\r\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\r\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\r\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\r\n        buf[bufPos + 3] = 0xff & (value & 0xff);\r\n    }\r\n\r\n    /**\r\n     * Write big endian short (2-bytes) in the header.\r\n     *\r\n     * @param buf\r\n     *            header to write the integer into\r\n     * @param bufPos\r\n     *            offset into the header\r\n     * @param value\r\n     *            integer value to write\r\n     */\r\n    function createShort(buf, bufPos, value) {\r\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\r\n        buf[bufPos + 1] = 0xff & (value & 0xff);\r\n    }\r\n\r\n    /**\r\n     * Check for magic strings (Xing/Info).\r\n     *\r\n     * @param buf\r\n     *            header to check\r\n     * @param bufPos\r\n     *            header offset to check\r\n     * @return magic string found\r\n     */\r\n    function isVbrTag(buf, bufPos) {\r\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\r\n                .equals(VBRTag0)\r\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\r\n                .equals(VBRTag1);\r\n    }\r\n\r\n    function shiftInBitsValue(x, n, v) {\r\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\r\n    }\r\n\r\n    /**\r\n     * Construct the MP3 header using the settings of the global flags.\r\n     *\r\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     * @param buffer\r\n     *            header\r\n     */\r\n    function setLameTagFrameHeader(gfp, buffer) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        // MP3 Sync Word\r\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\r\n\r\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\r\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\r\n            (gfp.out_samplerate < 16000) ? 0 : 1);\r\n        // Version\r\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\r\n        // 01 == Layer 3\r\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\r\n        // Error protection\r\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\r\n            : 0);\r\n\r\n        // Bit rate\r\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\r\n        // Frequency\r\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\r\n        // Pad. Bit\r\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\r\n        // Priv. Bit\r\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\r\n\r\n        // Mode\r\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\r\n        // Mode extension (Used with Joint Stereo)\r\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\r\n        // Copy\r\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\r\n        // Original\r\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\r\n        // Emphasis\r\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\r\n\r\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\r\n        /* but sampling freq, mode and copyright/copy protection taken */\r\n        /* from first valid frame */\r\n        buffer[0] = 0xff;\r\n        var abyte = 0xff & (buffer[1] & 0xf1);\r\n        var bitrate;\r\n        if (1 == gfp.version) {\r\n            bitrate = XING_BITRATE1;\r\n        } else {\r\n            if (gfp.out_samplerate < 16000)\r\n                bitrate = XING_BITRATE25;\r\n            else\r\n                bitrate = XING_BITRATE2;\r\n        }\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off)\r\n            bitrate = gfp.brate;\r\n\r\n        var bbyte;\r\n        if (gfp.free_format)\r\n            bbyte = 0x00;\r\n        else\r\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\r\n                    gfp.out_samplerate));\r\n\r\n        /*\r\n         * Use as much of the info from the real frames in the Xing header:\r\n         * samplerate, channels, crc, etc...\r\n         */\r\n        if (gfp.version == 1) {\r\n            /* MPEG1 */\r\n            buffer[1] = 0xff & (abyte | 0x0a);\r\n            /* was 0x0b; */\r\n            abyte = 0xff & (buffer[2] & 0x0d);\r\n            /* AF keep also private bit */\r\n            buffer[2] = 0xff & (bbyte | abyte);\r\n            /* 64kbs MPEG1 frame */\r\n        } else {\r\n            /* MPEG2 */\r\n            buffer[1] = 0xff & (abyte | 0x02);\r\n            /* was 0x03; */\r\n            abyte = 0xff & (buffer[2] & 0x0d);\r\n            /* AF keep also private bit */\r\n            buffer[2] = 0xff & (bbyte | abyte);\r\n            /* 64kbs MPEG2 frame */\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get VBR tag information\r\n     *\r\n     * @param buf\r\n     *            header to analyze\r\n     * @param bufPos\r\n     *            offset into the header\r\n     * @return VBR tag data\r\n     */\r\n    this.getVbrTag = function (buf) {\r\n        var pTagData = new VBRTagData();\r\n        var bufPos = 0;\r\n\r\n        /* get Vbr header data */\r\n        pTagData.flags = 0;\r\n\r\n        /* get selected MPEG header data */\r\n        var hId = (buf[bufPos + 1] >> 3) & 1;\r\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\r\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\r\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\r\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\r\n\r\n        /* check for FFE syncword */\r\n        if ((buf[bufPos + 1] >> 4) == 0xE)\r\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\r\n        else\r\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\r\n\r\n        /* determine offset of header */\r\n        if (hId != 0) {\r\n            /* mpeg1 */\r\n            if (hMode != 3)\r\n                bufPos += (32 + 4);\r\n            else\r\n                bufPos += (17 + 4);\r\n        } else {\r\n            /* mpeg2 */\r\n            if (hMode != 3)\r\n                bufPos += (17 + 4);\r\n            else\r\n                bufPos += (9 + 4);\r\n        }\r\n\r\n        if (!isVbrTag(buf, bufPos))\r\n            return null;\r\n\r\n        bufPos += 4;\r\n\r\n        pTagData.hId = hId;\r\n\r\n        /* get flags */\r\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\r\n        bufPos += 4;\r\n\r\n        if ((head_flags & FRAMES_FLAG) != 0) {\r\n            pTagData.frames = extractInteger(buf, bufPos);\r\n            bufPos += 4;\r\n        }\r\n\r\n        if ((head_flags & BYTES_FLAG) != 0) {\r\n            pTagData.bytes = extractInteger(buf, bufPos);\r\n            bufPos += 4;\r\n        }\r\n\r\n        if ((head_flags & TOC_FLAG) != 0) {\r\n            if (pTagData.toc != null) {\r\n                for (var i = 0; i < NUMTOCENTRIES; i++)\r\n                    pTagData.toc[i] = buf[bufPos + i];\r\n            }\r\n            bufPos += NUMTOCENTRIES;\r\n        }\r\n\r\n        pTagData.vbrScale = -1;\r\n\r\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\r\n            pTagData.vbrScale = extractInteger(buf, bufPos);\r\n            bufPos += 4;\r\n        }\r\n\r\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\r\n            / pTagData.samprate;\r\n\r\n        bufPos += 21;\r\n        var encDelay = buf[bufPos + 0] << 4;\r\n        encDelay += buf[bufPos + 1] >> 4;\r\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\r\n        encPadding += buf[bufPos + 2] & 0xff;\r\n        /* check for reasonable values (this may be an old Xing header, */\r\n        /* not a INFO tag) */\r\n        if (encDelay < 0 || encDelay > 3000)\r\n            encDelay = -1;\r\n        if (encPadding < 0 || encPadding > 3000)\r\n            encPadding = -1;\r\n\r\n        pTagData.encDelay = encDelay;\r\n        pTagData.encPadding = encPadding;\r\n\r\n        /* success */\r\n        return pTagData;\r\n    }\r\n\r\n    /**\r\n     * Initializes the header\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     */\r\n    this.InitVbrTag = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /**\r\n         * <PRE>\r\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\r\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\r\n         * table of contents)\r\n         * let's always embed Xing header inside a 64kbs layer III frame.\r\n         * this gives us enough room for a LAME version string too.\r\n         * size determined by sampling frequency (MPEG1)\r\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\r\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\r\n         * 48kHz:    144 bytes          192\r\n         *\r\n         * MPEG 2 values are the same since the framesize and samplerate\r\n         * are each reduced by a factor of 2.\r\n         * </PRE>\r\n         */\r\n        var kbps_header;\r\n        if (1 == gfp.version) {\r\n            kbps_header = XING_BITRATE1;\r\n        } else {\r\n            if (gfp.out_samplerate < 16000)\r\n                kbps_header = XING_BITRATE25;\r\n            else\r\n                kbps_header = XING_BITRATE2;\r\n        }\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off)\r\n            kbps_header = gfp.brate;\r\n\r\n        // make sure LAME Header fits into Frame\r\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\r\n            / gfp.out_samplerate;\r\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\r\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\r\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\r\n            /* disable tag, it wont fit */\r\n            gfp.bWriteVbrTag = false;\r\n            return;\r\n        }\r\n\r\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\r\n        gfc.VBR_seek_table.nBytesWritten = 0;\r\n        gfc.VBR_seek_table.sum = 0;\r\n\r\n        gfc.VBR_seek_table.seen = 0;\r\n        gfc.VBR_seek_table.want = 1;\r\n        gfc.VBR_seek_table.pos = 0;\r\n\r\n        if (gfc.VBR_seek_table.bag == null) {\r\n            gfc.VBR_seek_table.bag = new int[400];\r\n            gfc.VBR_seek_table.size = 400;\r\n        }\r\n\r\n        // write dummy VBR tag of all 0's into bitstream\r\n        var buffer = new_byte(MAXFRAMESIZE);\r\n\r\n        setLameTagFrameHeader(gfp, buffer);\r\n        var n = gfc.VBR_seek_table.TotalFrameSize;\r\n        for (var i = 0; i < n; ++i) {\r\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fast CRC-16 computation (uses table crc16Lookup).\r\n     *\r\n     * @param value\r\n     * @param crc\r\n     * @return\r\n     */\r\n    function crcUpdateLookup(value, crc) {\r\n        var tmp = crc ^ value;\r\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\r\n        return crc;\r\n    }\r\n\r\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\r\n        for (var i = 0; i < size; ++i)\r\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\r\n    }\r\n\r\n    /**\r\n     * Write LAME info: mini version + info on various switches used (Jonathan\r\n     * Dee 2001/08/31).\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     * @param musicLength\r\n     *            music length\r\n     * @param streamBuffer\r\n     *            pointer to output buffer\r\n     * @param streamBufferPos\r\n     *            offset into the output buffer\r\n     * @param crc\r\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\r\n     *            sync)\r\n     * @return number of bytes written to the stream\r\n     */\r\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\r\n        var gfc = gfp.internal_flags;\r\n        var bytesWritten = 0;\r\n\r\n        /* encoder delay */\r\n        var encDelay = gfp.encoder_delay;\r\n        /* encoder padding */\r\n        var encPadding = gfp.encoder_padding;\r\n\r\n        /* recall: gfp.VBR_q is for example set by the switch -V */\r\n        /* gfp.quality by -q, -h, -f, etc */\r\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\r\n\r\n        var version = v.getLameVeryShortVersion();\r\n        var vbr;\r\n        var revision = 0x00;\r\n        var revMethod;\r\n        // numbering different in vbr_mode vs. Lame tag\r\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\r\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\r\n                : (gfp.lowpassfreq / 100.0) + .5);\r\n        var peakSignalAmplitude = 0;\r\n        var radioReplayGain = 0;\r\n        var audiophileReplayGain = 0;\r\n        var noiseShaping = gfp.internal_flags.noise_shaping;\r\n        var stereoMode = 0;\r\n        var nonOptimal = 0;\r\n        var sourceFreq = 0;\r\n        var misc = 0;\r\n        var musicCRC = 0;\r\n\r\n        // psy model type: Gpsycho or NsPsytune\r\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\r\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\r\n        var noGapMore = false;\r\n        var noGapPrevious = false;\r\n        var noGapCount = gfp.internal_flags.nogap_total;\r\n        var noGapCurr = gfp.internal_flags.nogap_current;\r\n\r\n        // 4 bits\r\n        var athType = gfp.ATHtype;\r\n        var flags = 0;\r\n\r\n        // vbr modes\r\n        var abrBitrate;\r\n        switch (gfp.VBR) {\r\n            case vbr_abr:\r\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\r\n                break;\r\n            case vbr_off:\r\n                abrBitrate = gfp.brate;\r\n                break;\r\n            default:\r\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\r\n        }\r\n\r\n        // revision and vbr method\r\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\r\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\r\n        else\r\n            vbr = 0x00; // unknown\r\n\r\n        revMethod = 0x10 * revision + vbr;\r\n\r\n        // ReplayGain\r\n        if (gfc.findReplayGain) {\r\n            if (gfc.RadioGain > 0x1FE)\r\n                gfc.RadioGain = 0x1FE;\r\n            if (gfc.RadioGain < -0x1FE)\r\n                gfc.RadioGain = -0x1FE;\r\n\r\n            // set name code\r\n            radioReplayGain = 0x2000;\r\n            // set originator code to `determined automatically'\r\n            radioReplayGain |= 0xC00;\r\n\r\n            if (gfc.RadioGain >= 0) {\r\n                // set gain adjustment\r\n                radioReplayGain |= gfc.RadioGain;\r\n            } else {\r\n                // set the sign bit\r\n                radioReplayGain |= 0x200;\r\n                // set gain adjustment\r\n                radioReplayGain |= -gfc.RadioGain;\r\n            }\r\n        }\r\n\r\n        // peak sample\r\n        if (gfc.findPeakSample)\r\n            peakSignalAmplitude = Math\r\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\r\n\r\n        // nogap\r\n        if (noGapCount != -1) {\r\n            if (noGapCurr > 0)\r\n                noGapPrevious = true;\r\n\r\n            if (noGapCurr < noGapCount - 1)\r\n                noGapMore = true;\r\n        }\r\n\r\n        // flags\r\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\r\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\r\n            + ((noGapPrevious ? 1 : 0) << 7);\r\n\r\n        if (quality < 0)\r\n            quality = 0;\r\n\r\n        // stereo mode field (Intensity stereo is not implemented)\r\n        switch (gfp.mode) {\r\n            case MONO:\r\n                stereoMode = 0;\r\n                break;\r\n            case STEREO:\r\n                stereoMode = 1;\r\n                break;\r\n            case DUAL_CHANNEL:\r\n                stereoMode = 2;\r\n                break;\r\n            case JOINT_STEREO:\r\n                if (gfp.force_ms)\r\n                    stereoMode = 4;\r\n                else\r\n                    stereoMode = 3;\r\n                break;\r\n            case NOT_SET:\r\n            //$FALL-THROUGH$\r\n            default:\r\n                stereoMode = 7;\r\n                break;\r\n        }\r\n\r\n        if (gfp.in_samplerate <= 32000)\r\n            sourceFreq = 0x00;\r\n        else if (gfp.in_samplerate == 48000)\r\n            sourceFreq = 0x02;\r\n        else if (gfp.in_samplerate > 48000)\r\n            sourceFreq = 0x03;\r\n        else {\r\n            // default is 44100Hz\r\n            sourceFreq = 0x01;\r\n        }\r\n\r\n        // Check if the user overrided the default LAME behavior with some\r\n        // nasty options\r\n        if (gfp.short_blocks == ShortBlock.short_block_forced\r\n            || gfp.short_blocks == ShortBlock.short_block_dispensed\r\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\r\n            (gfp.scale_left < gfp.scale_right)\r\n            || (gfp.scale_left > gfp.scale_right)\r\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\r\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\r\n            nonOptimal = 1;\r\n\r\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\r\n            + (sourceFreq << 6);\r\n\r\n        musicCRC = gfc.nMusicCRC;\r\n\r\n        // Write all this information into the stream\r\n\r\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\r\n        bytesWritten += 4;\r\n\r\n        for (var j = 0; j < 9; j++) {\r\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\r\n        }\r\n        bytesWritten += 9;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\r\n        bytesWritten++;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\r\n        bytesWritten++;\r\n\r\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\r\n            peakSignalAmplitude);\r\n        bytesWritten += 4;\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\r\n            radioReplayGain);\r\n        bytesWritten += 2;\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\r\n            audiophileReplayGain);\r\n        bytesWritten += 2;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\r\n        bytesWritten++;\r\n\r\n        if (abrBitrate >= 255)\r\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\r\n        else\r\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\r\n        bytesWritten++;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\r\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\r\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\r\n\r\n        bytesWritten += 3;\r\n\r\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\r\n        bytesWritten++;\r\n\r\n        // unused in rev0\r\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\r\n        bytesWritten += 2;\r\n\r\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\r\n        bytesWritten += 4;\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\r\n        bytesWritten += 2;\r\n\r\n        // Calculate tag CRC.... must be done here, since it includes previous\r\n        // information\r\n\r\n        for (var i = 0; i < bytesWritten; i++)\r\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\r\n\r\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\r\n        bytesWritten += 2;\r\n\r\n        return bytesWritten;\r\n    }\r\n\r\n    function skipId3v2(fpStream) {\r\n        // seek to the beginning of the stream\r\n        fpStream.seek(0);\r\n        // read 10 bytes in case there's an ID3 version 2 header here\r\n        var id3v2Header = new_byte(10);\r\n        fpStream.readFully(id3v2Header);\r\n        /* does the stream begin with the ID3 version 2 file identifier? */\r\n        var id3v2TagSize;\r\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\r\n            /*\r\n             * the tag size (minus the 10-byte header) is encoded into four\r\n             * bytes where the most significant bit is clear in each byte\r\n             */\r\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\r\n                | ((id3v2Header[7] & 0x7f) << 14)\r\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\r\n                + id3v2Header.length;\r\n        } else {\r\n            /* no ID3 version 2 tag in this stream */\r\n            id3v2TagSize = 0;\r\n        }\r\n        return id3v2TagSize;\r\n    }\r\n\r\n    this.getLameTagFrame = function (gfp, buffer) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (!gfp.bWriteVbrTag) {\r\n            return 0;\r\n        }\r\n        if (gfc.Class_ID != Lame.LAME_ID) {\r\n            return 0;\r\n        }\r\n        if (gfc.VBR_seek_table.pos <= 0) {\r\n            return 0;\r\n        }\r\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\r\n            return gfc.VBR_seek_table.TotalFrameSize;\r\n        }\r\n\r\n        Arrays.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\r\n\r\n        // 4 bytes frame header\r\n        setLameTagFrameHeader(gfp, buffer);\r\n\r\n        // Create TOC entries\r\n        var toc = new_byte(NUMTOCENTRIES);\r\n\r\n        if (gfp.free_format) {\r\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\r\n                toc[i] = 0xff & (255 * i / 100);\r\n        } else {\r\n            xingSeekTable(gfc.VBR_seek_table, toc);\r\n        }\r\n\r\n        // Start writing the tag after the zero frame\r\n        var streamIndex = gfc.sideinfo_len;\r\n        /**\r\n         * Note: Xing header specifies that Xing data goes in the ancillary data\r\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\r\n         * data still starts at the same offset, and now it is in sideinfo data\r\n         * block, and thus will not decode correctly by non-Xing tag aware\r\n         * players\r\n         */\r\n        if (gfp.error_protection)\r\n            streamIndex -= 2;\r\n\r\n        // Put Vbr tag\r\n        if (gfp.VBR == VbrMode.vbr_off) {\r\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\r\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\r\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\r\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\r\n\r\n        } else {\r\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\r\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\r\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\r\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\r\n        }\r\n\r\n        // Put header flags\r\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\r\n            + VBR_SCALE_FLAG);\r\n        streamIndex += 4;\r\n\r\n        // Put Total Number of frames\r\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\r\n        streamIndex += 4;\r\n\r\n        // Put total audio stream size, including Xing/LAME Header\r\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\r\n        createInteger(buffer, streamIndex, 0 | streamSize);\r\n        streamIndex += 4;\r\n\r\n        /* Put TOC */\r\n        System.arraycopy(toc, 0, buffer, streamIndex, toc.length);\r\n        streamIndex += toc.length;\r\n\r\n        if (gfp.error_protection) {\r\n            // (jo) error_protection: add crc16 information to header\r\n            bs.CRC_writeheader(gfc, buffer);\r\n        }\r\n\r\n        // work out CRC so far: initially crc = 0\r\n        var crc = 0x00;\r\n        for (var i = 0; i < streamIndex; i++)\r\n            crc = crcUpdateLookup(buffer[i], crc);\r\n        // Put LAME VBR info\r\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\r\n\r\n        return gfc.VBR_seek_table.TotalFrameSize;\r\n    }\r\n\r\n    /**\r\n     * Write final VBR tag to the file.\r\n     *\r\n     * @param gfp\r\n     *            global flags\r\n     * @param stream\r\n     *            stream to add the VBR tag to\r\n     * @return 0 (OK), -1 else\r\n     * @throws IOException\r\n     *             I/O error\r\n     */\r\n    this.putVbrTag = function (gfp, stream) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (gfc.VBR_seek_table.pos <= 0)\r\n            return -1;\r\n\r\n        // Seek to end of file\r\n        stream.seek(stream.length());\r\n\r\n        // Get file size, abort if file has zero length.\r\n        if (stream.length() == 0)\r\n            return -1;\r\n\r\n        // The VBR tag may NOT be located at the beginning of the stream. If an\r\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\r\n        // tag data.\r\n        var id3v2TagSize = skipId3v2(stream);\r\n\r\n        // Seek to the beginning of the stream\r\n        stream.seek(id3v2TagSize);\r\n\r\n        var buffer = new_byte(MAXFRAMESIZE);\r\n        var bytes = getLameTagFrame(gfp, buffer);\r\n        if (bytes > buffer.length) {\r\n            return -1;\r\n        }\r\n\r\n        if (bytes < 1) {\r\n            return 0;\r\n        }\r\n\r\n        // Put it all to disk again\r\n        stream.write(buffer, 0, bytes);\r\n        // success\r\n        return 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nBitStream.EQ = function (a, b) {\r\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\r\n        .abs(a) * 1e-6))\r\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\r\n};\r\n\r\nBitStream.NEQ = function (a, b) {\r\n    return !BitStream.EQ(a, b);\r\n};\r\n\r\nfunction BitStream() {\r\n    var self = this;\r\n    var CRC16_POLYNOMIAL = 0x8005;\r\n\r\n    /*\r\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\r\n     * MAX_LENGTH-2 just to be on the safe side\r\n     */\r\n    var MAX_LENGTH = 32;\r\n\r\n    //GainAnalysis ga;\r\n    //MPGLib mpg;\r\n    //Version ver;\r\n    //VBRTag vbr;\r\n    var ga = null;\r\n    var mpg = null;\r\n    var ver = null;\r\n    var vbr = null;\r\n\r\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\r\n    //\tVBRTag vbr) {\r\n\r\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\r\n        ga = _ga;\r\n        mpg = _mpg;\r\n        ver = _ver;\r\n        vbr = _vbr;\r\n    };\r\n\r\n    /**\r\n     * Bit stream buffer.\r\n     */\r\n    //private byte[] buf;\r\n    var buf = null;\r\n    /**\r\n     * Bit counter of bit stream.\r\n     */\r\n    var totbit = 0;\r\n    /**\r\n     * Pointer to top byte in buffer.\r\n     */\r\n    var bufByteIdx = 0;\r\n    /**\r\n     * Pointer to top bit of top byte in buffer.\r\n     */\r\n    var bufBitIdx = 0;\r\n\r\n    /**\r\n     * compute bitsperframe and mean_bits for a layer III frame\r\n     */\r\n    this.getframebits = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var bit_rate;\r\n\r\n        /* get bitrate in kbps [?] */\r\n        if (gfc.bitrate_index != 0)\r\n            bit_rate = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\r\n        else\r\n            bit_rate = gfp.brate;\r\n\r\n        /* main encoding routine toggles padding on and off */\r\n        /* one Layer3 Slot consists of 8 bits */\r\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\r\n        return 8 * bytes;\r\n    };\r\n\r\n    function putheader_bits(gfc) {\r\n        System.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\r\n        bufByteIdx += gfc.sideinfo_len;\r\n        totbit += gfc.sideinfo_len * 8;\r\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\r\n    }\r\n\r\n    /**\r\n     * write j bits into the bit stream\r\n     */\r\n    function putbits2(gfc, val, j) {\r\n\r\n\r\n        while (j > 0) {\r\n            var k;\r\n            if (bufBitIdx == 0) {\r\n                bufBitIdx = 8;\r\n                bufByteIdx++;\r\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\r\n                    putheader_bits(gfc);\r\n                }\r\n                buf[bufByteIdx] = 0;\r\n            }\r\n\r\n            k = Math.min(j, bufBitIdx);\r\n            j -= k;\r\n\r\n            bufBitIdx -= k;\r\n\r\n            /* 32 too large on 32 bit machines */\r\n\r\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\r\n            totbit += k;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * write j bits into the bit stream, ignoring frame headers\r\n     */\r\n    function putbits_noheaders(gfc, val, j) {\r\n\r\n        while (j > 0) {\r\n            var k;\r\n            if (bufBitIdx == 0) {\r\n                bufBitIdx = 8;\r\n                bufByteIdx++;\r\n                buf[bufByteIdx] = 0;\r\n            }\r\n\r\n            k = Math.min(j, bufBitIdx);\r\n            j -= k;\r\n\r\n            bufBitIdx -= k;\r\n\r\n            /* 32 too large on 32 bit machines */\r\n\r\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\r\n            totbit += k;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\r\n     * out a frame using just main_data, due to the limited number of bits to\r\n     * indicate main_data_length. In these situations, we put stuffing bits into\r\n     * the ancillary data...\r\n     */\r\n    function drain_into_ancillary(gfp, remainingBits) {\r\n        var gfc = gfp.internal_flags;\r\n        var i;\r\n\r\n        if (remainingBits >= 8) {\r\n            putbits2(gfc, 0x4c, 8);\r\n            remainingBits -= 8;\r\n        }\r\n        if (remainingBits >= 8) {\r\n            putbits2(gfc, 0x41, 8);\r\n            remainingBits -= 8;\r\n        }\r\n        if (remainingBits >= 8) {\r\n            putbits2(gfc, 0x4d, 8);\r\n            remainingBits -= 8;\r\n        }\r\n        if (remainingBits >= 8) {\r\n            putbits2(gfc, 0x45, 8);\r\n            remainingBits -= 8;\r\n        }\r\n\r\n        if (remainingBits >= 32) {\r\n            var version = ver.getLameShortVersion();\r\n            if (remainingBits >= 32)\r\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\r\n                    remainingBits -= 8;\r\n                    putbits2(gfc, version.charAt(i), 8);\r\n                }\r\n        }\r\n\r\n        for (; remainingBits >= 1; remainingBits -= 1) {\r\n            putbits2(gfc, gfc.ancillary_flag, 1);\r\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * write N bits into the header\r\n     */\r\n    function writeheader(gfc, val, j) {\r\n        var ptr = gfc.header[gfc.h_ptr].ptr;\r\n\r\n        while (j > 0) {\r\n            var k = Math.min(j, 8 - (ptr & 7));\r\n            j -= k;\r\n            /* >> 32 too large for 32 bit machines */\r\n\r\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\r\n            ptr += k;\r\n        }\r\n        gfc.header[gfc.h_ptr].ptr = ptr;\r\n    }\r\n\r\n    function CRC_update(value, crc) {\r\n        value <<= 8;\r\n        for (var i = 0; i < 8; i++) {\r\n            value <<= 1;\r\n            crc <<= 1;\r\n\r\n            if ((((crc ^ value) & 0x10000) != 0))\r\n                crc ^= CRC16_POLYNOMIAL;\r\n        }\r\n        return crc;\r\n    }\r\n\r\n    this.CRC_writeheader = function (gfc, header) {\r\n        var crc = 0xffff;\r\n        /* (jo) init crc16 for error_protection */\r\n\r\n        crc = CRC_update(header[2] & 0xff, crc);\r\n        crc = CRC_update(header[3] & 0xff, crc);\r\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\r\n            crc = CRC_update(header[i] & 0xff, crc);\r\n        }\r\n\r\n        header[4] = (byte)(crc >> 8);\r\n        header[5] = (byte)(crc & 255);\r\n    };\r\n\r\n    function encodeSideInfo2(gfp, bitsPerFrame) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side;\r\n        var gr, ch;\r\n\r\n        l3_side = gfc.l3_side;\r\n        gfc.header[gfc.h_ptr].ptr = 0;\r\n        Arrays.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\r\n        if (gfp.out_samplerate < 16000)\r\n            writeheader(gfc, 0xffe, 12);\r\n        else\r\n            writeheader(gfc, 0xfff, 12);\r\n        writeheader(gfc, (gfp.version), 1);\r\n        writeheader(gfc, 4 - 3, 2);\r\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\r\n        writeheader(gfc, (gfc.bitrate_index), 4);\r\n        writeheader(gfc, (gfc.samplerate_index), 2);\r\n        writeheader(gfc, (gfc.padding), 1);\r\n        writeheader(gfc, (gfp.extension), 1);\r\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\r\n        writeheader(gfc, (gfc.mode_ext), 2);\r\n        writeheader(gfc, (gfp.copyright), 1);\r\n        writeheader(gfc, (gfp.original), 1);\r\n        writeheader(gfc, (gfp.emphasis), 2);\r\n        if (gfp.error_protection) {\r\n            writeheader(gfc, 0, 16);\r\n            /* dummy */\r\n        }\r\n\r\n        if (gfp.version == 1) {\r\n            /* MPEG1 */\r\n            writeheader(gfc, (l3_side.main_data_begin), 9);\r\n\r\n            if (gfc.channels_out == 2)\r\n                writeheader(gfc, l3_side.private_bits, 3);\r\n            else\r\n                writeheader(gfc, l3_side.private_bits, 5);\r\n\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                var band;\r\n                for (band = 0; band < 4; band++) {\r\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\r\n                }\r\n            }\r\n\r\n            for (gr = 0; gr < 2; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    var gi = l3_side.tt[gr][ch];\r\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\r\n                    writeheader(gfc, gi.big_values / 2, 9);\r\n                    writeheader(gfc, gi.global_gain, 8);\r\n                    writeheader(gfc, gi.scalefac_compress, 4);\r\n\r\n                    if (gi.block_type != Encoder.NORM_TYPE) {\r\n                        writeheader(gfc, 1, 1);\r\n                        /* window_switching_flag */\r\n                        writeheader(gfc, gi.block_type, 2);\r\n                        writeheader(gfc, gi.mixed_block_flag, 1);\r\n\r\n                        if (gi.table_select[0] == 14)\r\n                            gi.table_select[0] = 16;\r\n                        writeheader(gfc, gi.table_select[0], 5);\r\n                        if (gi.table_select[1] == 14)\r\n                            gi.table_select[1] = 16;\r\n                        writeheader(gfc, gi.table_select[1], 5);\r\n\r\n                        writeheader(gfc, gi.subblock_gain[0], 3);\r\n                        writeheader(gfc, gi.subblock_gain[1], 3);\r\n                        writeheader(gfc, gi.subblock_gain[2], 3);\r\n                    } else {\r\n                        writeheader(gfc, 0, 1);\r\n                        /* window_switching_flag */\r\n                        if (gi.table_select[0] == 14)\r\n                            gi.table_select[0] = 16;\r\n                        writeheader(gfc, gi.table_select[0], 5);\r\n                        if (gi.table_select[1] == 14)\r\n                            gi.table_select[1] = 16;\r\n                        writeheader(gfc, gi.table_select[1], 5);\r\n                        if (gi.table_select[2] == 14)\r\n                            gi.table_select[2] = 16;\r\n                        writeheader(gfc, gi.table_select[2], 5);\r\n\r\n                        writeheader(gfc, gi.region0_count, 4);\r\n                        writeheader(gfc, gi.region1_count, 3);\r\n                    }\r\n                    writeheader(gfc, gi.preflag, 1);\r\n                    writeheader(gfc, gi.scalefac_scale, 1);\r\n                    writeheader(gfc, gi.count1table_select, 1);\r\n                }\r\n            }\r\n        } else {\r\n            /* MPEG2 */\r\n            writeheader(gfc, (l3_side.main_data_begin), 8);\r\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\r\n\r\n            gr = 0;\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                var gi = l3_side.tt[gr][ch];\r\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\r\n                writeheader(gfc, gi.big_values / 2, 9);\r\n                writeheader(gfc, gi.global_gain, 8);\r\n                writeheader(gfc, gi.scalefac_compress, 9);\r\n\r\n                if (gi.block_type != Encoder.NORM_TYPE) {\r\n                    writeheader(gfc, 1, 1);\r\n                    /* window_switching_flag */\r\n                    writeheader(gfc, gi.block_type, 2);\r\n                    writeheader(gfc, gi.mixed_block_flag, 1);\r\n\r\n                    if (gi.table_select[0] == 14)\r\n                        gi.table_select[0] = 16;\r\n                    writeheader(gfc, gi.table_select[0], 5);\r\n                    if (gi.table_select[1] == 14)\r\n                        gi.table_select[1] = 16;\r\n                    writeheader(gfc, gi.table_select[1], 5);\r\n\r\n                    writeheader(gfc, gi.subblock_gain[0], 3);\r\n                    writeheader(gfc, gi.subblock_gain[1], 3);\r\n                    writeheader(gfc, gi.subblock_gain[2], 3);\r\n                } else {\r\n                    writeheader(gfc, 0, 1);\r\n                    /* window_switching_flag */\r\n                    if (gi.table_select[0] == 14)\r\n                        gi.table_select[0] = 16;\r\n                    writeheader(gfc, gi.table_select[0], 5);\r\n                    if (gi.table_select[1] == 14)\r\n                        gi.table_select[1] = 16;\r\n                    writeheader(gfc, gi.table_select[1], 5);\r\n                    if (gi.table_select[2] == 14)\r\n                        gi.table_select[2] = 16;\r\n                    writeheader(gfc, gi.table_select[2], 5);\r\n\r\n                    writeheader(gfc, gi.region0_count, 4);\r\n                    writeheader(gfc, gi.region1_count, 3);\r\n                }\r\n\r\n                writeheader(gfc, gi.scalefac_scale, 1);\r\n                writeheader(gfc, gi.count1table_select, 1);\r\n            }\r\n        }\r\n\r\n        if (gfp.error_protection) {\r\n            /* (jo) error_protection: add crc16 information to header */\r\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\r\n        }\r\n\r\n        {\r\n            var old = gfc.h_ptr;\r\n\r\n            gfc.h_ptr = (old + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\r\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\r\n                + bitsPerFrame;\r\n\r\n            if (gfc.h_ptr == gfc.w_ptr) {\r\n                /* yikes! we are out of header buffer space */\r\n                System.err\r\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function huffman_coder_count1(gfc, gi) {\r\n        /* Write count1 area */\r\n        var h = Tables.ht[gi.count1table_select + 32];\r\n        var i, bits = 0;\r\n\r\n        var ix = gi.big_values;\r\n        var xr = gi.big_values;\r\n\r\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\r\n            var huffbits = 0;\r\n            var p = 0, v;\r\n\r\n            v = gi.l3_enc[ix + 0];\r\n            if (v != 0) {\r\n                p += 8;\r\n                if (gi.xr[xr + 0] < 0)\r\n                    huffbits++;\r\n            }\r\n\r\n            v = gi.l3_enc[ix + 1];\r\n            if (v != 0) {\r\n                p += 4;\r\n                huffbits *= 2;\r\n                if (gi.xr[xr + 1] < 0)\r\n                    huffbits++;\r\n            }\r\n\r\n            v = gi.l3_enc[ix + 2];\r\n            if (v != 0) {\r\n                p += 2;\r\n                huffbits *= 2;\r\n                if (gi.xr[xr + 2] < 0)\r\n                    huffbits++;\r\n            }\r\n\r\n            v = gi.l3_enc[ix + 3];\r\n            if (v != 0) {\r\n                p++;\r\n                huffbits *= 2;\r\n                if (gi.xr[xr + 3] < 0)\r\n                    huffbits++;\r\n            }\r\n\r\n            ix += 4;\r\n            xr += 4;\r\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\r\n            bits += h.hlen[p];\r\n        }\r\n        return bits;\r\n    }\r\n\r\n    /**\r\n     * Implements the pseudocode of page 98 of the IS\r\n     */\r\n    function Huffmancode(gfc, tableindex, start, end, gi) {\r\n        var h = Tables.ht[tableindex];\r\n        var bits = 0;\r\n\r\n        if (0 == tableindex)\r\n            return bits;\r\n\r\n        for (var i = start; i < end; i += 2) {\r\n            var cbits = 0;\r\n            var xbits = 0;\r\n            var linbits = h.xlen;\r\n            var xlen = h.xlen;\r\n            var ext = 0;\r\n            var x1 = gi.l3_enc[i];\r\n            var x2 = gi.l3_enc[i + 1];\r\n\r\n            if (x1 != 0) {\r\n                if (gi.xr[i] < 0)\r\n                    ext++;\r\n                cbits--;\r\n            }\r\n\r\n            if (tableindex > 15) {\r\n                /* use ESC-words */\r\n                if (x1 > 14) {\r\n                    var linbits_x1 = x1 - 15;\r\n                    ext |= linbits_x1 << 1;\r\n                    xbits = linbits;\r\n                    x1 = 15;\r\n                }\r\n\r\n                if (x2 > 14) {\r\n                    var linbits_x2 = x2 - 15;\r\n                    ext <<= linbits;\r\n                    ext |= linbits_x2;\r\n                    xbits += linbits;\r\n                    x2 = 15;\r\n                }\r\n                xlen = 16;\r\n            }\r\n\r\n            if (x2 != 0) {\r\n                ext <<= 1;\r\n                if (gi.xr[i + 1] < 0)\r\n                    ext++;\r\n                cbits--;\r\n            }\r\n\r\n\r\n            x1 = x1 * xlen + x2;\r\n            xbits -= cbits;\r\n            cbits += h.hlen[x1];\r\n\r\n\r\n            putbits2(gfc, h.table[x1], cbits);\r\n            putbits2(gfc, ext, xbits);\r\n            bits += cbits + xbits;\r\n        }\r\n        return bits;\r\n    }\r\n\r\n    /**\r\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\r\n     * well as the definitions of the side information on pages 26 and 27.\r\n     */\r\n    function ShortHuffmancodebits(gfc, gi) {\r\n        var region1Start = 3 * gfc.scalefac_band.s[3];\r\n        if (region1Start > gi.big_values)\r\n            region1Start = gi.big_values;\r\n\r\n        /* short blocks do not have a region2 */\r\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\r\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\r\n            gi.big_values, gi);\r\n        return bits;\r\n    }\r\n\r\n    function LongHuffmancodebits(gfc, gi) {\r\n        var bigvalues, bits;\r\n        var region1Start, region2Start;\r\n\r\n        bigvalues = gi.big_values;\r\n\r\n        var i = gi.region0_count + 1;\r\n        region1Start = gfc.scalefac_band.l[i];\r\n        i += gi.region1_count + 1;\r\n        region2Start = gfc.scalefac_band.l[i];\r\n\r\n        if (region1Start > bigvalues)\r\n            region1Start = bigvalues;\r\n\r\n        if (region2Start > bigvalues)\r\n            region2Start = bigvalues;\r\n\r\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\r\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\r\n            region2Start, gi);\r\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\r\n            gi);\r\n        return bits;\r\n    }\r\n\r\n    function writeMainData(gfp) {\r\n        var gr, ch, sfb, data_bits, tot_bits = 0;\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side = gfc.l3_side;\r\n\r\n        if (gfp.version == 1) {\r\n            /* MPEG 1 */\r\n            for (gr = 0; gr < 2; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    var gi = l3_side.tt[gr][ch];\r\n                    var slen1 = Takehiro.slen1_tab[gi.scalefac_compress];\r\n                    var slen2 = Takehiro.slen2_tab[gi.scalefac_compress];\r\n                    data_bits = 0;\r\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\r\n                        if (gi.scalefac[sfb] == -1)\r\n                            continue;\r\n                        /* scfsi is used */\r\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\r\n                        data_bits += slen1;\r\n                    }\r\n                    for (; sfb < gi.sfbmax; sfb++) {\r\n                        if (gi.scalefac[sfb] == -1)\r\n                            continue;\r\n                        /* scfsi is used */\r\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\r\n                        data_bits += slen2;\r\n                    }\r\n\r\n                    if (gi.block_type == Encoder.SHORT_TYPE) {\r\n                        data_bits += ShortHuffmancodebits(gfc, gi);\r\n                    } else {\r\n                        data_bits += LongHuffmancodebits(gfc, gi);\r\n                    }\r\n                    data_bits += huffman_coder_count1(gfc, gi);\r\n                    /* does bitcount in quantize.c agree with actual bit count? */\r\n                    tot_bits += data_bits;\r\n                }\r\n                /* for ch */\r\n            }\r\n            /* for gr */\r\n        } else {\r\n            /* MPEG 2 */\r\n            gr = 0;\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                var gi = l3_side.tt[gr][ch];\r\n                var i, sfb_partition, scale_bits = 0;\r\n                data_bits = 0;\r\n                sfb = 0;\r\n                sfb_partition = 0;\r\n\r\n                if (gi.block_type == Encoder.SHORT_TYPE) {\r\n                    for (; sfb_partition < 4; sfb_partition++) {\r\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\r\n                        var slen = gi.slen[sfb_partition];\r\n                        for (i = 0; i < sfbs; i++, sfb++) {\r\n                            putbits2(gfc,\r\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\r\n                            putbits2(gfc,\r\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\r\n                            putbits2(gfc,\r\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\r\n                            scale_bits += 3 * slen;\r\n                        }\r\n                    }\r\n                    data_bits += ShortHuffmancodebits(gfc, gi);\r\n                } else {\r\n                    for (; sfb_partition < 4; sfb_partition++) {\r\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\r\n                        var slen = gi.slen[sfb_partition];\r\n                        for (i = 0; i < sfbs; i++, sfb++) {\r\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\r\n                            scale_bits += slen;\r\n                        }\r\n                    }\r\n                    data_bits += LongHuffmancodebits(gfc, gi);\r\n                }\r\n                data_bits += huffman_coder_count1(gfc, gi);\r\n                /* does bitcount in quantize.c agree with actual bit count? */\r\n                tot_bits += scale_bits + data_bits;\r\n            }\r\n            /* for ch */\r\n        }\r\n        /* for gf */\r\n        return tot_bits;\r\n    }\r\n\r\n    /* main_data */\r\n\r\n    function TotalBytes() {\r\n        this.total = 0;\r\n    }\r\n\r\n    /*\r\n     * compute the number of bits required to flush all mp3 frames currently in\r\n     * the buffer. This should be the same as the reservoir size. Only call this\r\n     * routine between frames - i.e. only after all headers and data have been\r\n     * added to the buffer by format_bitstream().\r\n     *\r\n     * Also compute total_bits_output = size of mp3 buffer (including frame\r\n     * headers which may not have yet been send to the mp3 buffer) + number of\r\n     * bits needed to flush all mp3 frames.\r\n     *\r\n     * total_bytes_output is the size of the mp3 output buffer if\r\n     * lame_encode_flush_nogap() was called right now.\r\n     */\r\n    function compute_flushbits(gfp, total_bytes_output) {\r\n        var gfc = gfp.internal_flags;\r\n        var flushbits, remaining_headers;\r\n        var bitsPerFrame;\r\n        var last_ptr, first_ptr;\r\n        first_ptr = gfc.w_ptr;\r\n        /* first header to add to bitstream */\r\n        last_ptr = gfc.h_ptr - 1;\r\n        /* last header to add to bitstream */\r\n        if (last_ptr == -1)\r\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\r\n\r\n        /* add this many bits to bitstream so we can flush all headers */\r\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\r\n        total_bytes_output.total = flushbits;\r\n\r\n        if (flushbits >= 0) {\r\n            /* if flushbits >= 0, some headers have not yet been written */\r\n            /* reduce flushbits by the size of the headers */\r\n            remaining_headers = 1 + last_ptr - first_ptr;\r\n            if (last_ptr < first_ptr)\r\n                remaining_headers = 1 + last_ptr - first_ptr\r\n                    + LameInternalFlags.MAX_HEADER_BUF;\r\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\r\n        }\r\n\r\n        /*\r\n         * finally, add some bits so that the last frame is complete these bits\r\n         * are not necessary to decode the last frame, but some decoders will\r\n         * ignore last frame if these bits are missing\r\n         */\r\n        bitsPerFrame = self.getframebits(gfp);\r\n        flushbits += bitsPerFrame;\r\n        total_bytes_output.total += bitsPerFrame;\r\n        /* round up: */\r\n        if ((total_bytes_output.total % 8) != 0)\r\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\r\n        else\r\n            total_bytes_output.total = (total_bytes_output.total / 8);\r\n        total_bytes_output.total += bufByteIdx + 1;\r\n\r\n        if (flushbits < 0) {\r\n            System.err.println(\"strange error flushing buffer ... \\n\");\r\n        }\r\n        return flushbits;\r\n    }\r\n\r\n    this.flush_bitstream = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side;\r\n        var flushbits;\r\n        var last_ptr = gfc.h_ptr - 1;\r\n        /* last header to add to bitstream */\r\n        if (last_ptr == -1)\r\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\r\n        l3_side = gfc.l3_side;\r\n\r\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\r\n            return;\r\n        drain_into_ancillary(gfp, flushbits);\r\n\r\n        /* check that the 100% of the last frame has been written to bitstream */\r\n\r\n        /*\r\n         * we have padded out all frames with ancillary data, which is the same\r\n         * as filling the bitreservoir with ancillary data, so :\r\n         */\r\n        gfc.ResvSize = 0;\r\n        l3_side.main_data_begin = 0;\r\n\r\n        /* save the ReplayGain value */\r\n        if (gfc.findReplayGain) {\r\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\r\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\r\n            /* round to nearest */\r\n        }\r\n\r\n        /* find the gain and scale change required for no clipping */\r\n        if (gfc.findPeakSample) {\r\n            gfc.noclipGainChange = Math.ceil(Math\r\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\r\n            /* round up */\r\n\r\n            if (gfc.noclipGainChange > 0) {\r\n                /* clipping occurs */\r\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\r\n                    gfc.noclipScale = (Math\r\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\r\n                /* round down */\r\n                else {\r\n                    /*\r\n                     * the user specified his own scaling factor. We could\r\n                     * suggest the scaling factor of\r\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\r\n                     * very inaccurate. So we'd rather not advice him on the\r\n                     * scaling factor.\r\n                     */\r\n                    gfc.noclipScale = -1;\r\n                }\r\n            } else\r\n            /* no clipping */\r\n                gfc.noclipScale = -1;\r\n        }\r\n    };\r\n\r\n    this.add_dummy_byte = function (gfp, val, n) {\r\n        var gfc = gfp.internal_flags;\r\n        var i;\r\n\r\n        while (n-- > 0) {\r\n            putbits_noheaders(gfc, val, 8);\r\n\r\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\r\n                gfc.header[i].write_timing += 8;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This is called after a frame of audio has been quantized and coded. It\r\n     * will write the encoded audio to the bitstream. Note that from a layer3\r\n     * encoder's perspective the bit stream is primarily a series of main_data()\r\n     * blocks, with header and side information inserted at the proper locations\r\n     * to maintain framing. (See Figure A.7 in the IS).\r\n     */\r\n    this.format_bitstream = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side;\r\n        l3_side = gfc.l3_side;\r\n\r\n        var bitsPerFrame = this.getframebits(gfp);\r\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\r\n\r\n        encodeSideInfo2(gfp, bitsPerFrame);\r\n        var bits = 8 * gfc.sideinfo_len;\r\n        bits += writeMainData(gfp);\r\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\r\n        bits += l3_side.resvDrain_post;\r\n\r\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\r\n\r\n        /*\r\n         * compare number of bits needed to clear all buffered mp3 frames with\r\n         * what we think the resvsize is:\r\n         */\r\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\r\n            System.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\r\n        }\r\n\r\n        /*\r\n         * compare main_data_begin for the next frame with what we think the\r\n         * resvsize is:\r\n         */\r\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\r\n            System.err.printf(\"bit reservoir error: \\n\"\r\n                + \"l3_side.main_data_begin: %d \\n\"\r\n                + \"Resvoir size:             %d \\n\"\r\n                + \"resv drain (post)         %d \\n\"\r\n                + \"resv drain (pre)          %d \\n\"\r\n                + \"header and sideinfo:      %d \\n\"\r\n                + \"data bits:                %d \\n\"\r\n                + \"total bits:               %d (remainder: %d) \\n\"\r\n                + \"bitsperframe:             %d \\n\",\r\n                8 * l3_side.main_data_begin, gfc.ResvSize,\r\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\r\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\r\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\r\n\r\n            System.err.println(\"This is a fatal error.  It has several possible causes:\");\r\n            System.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\r\n            System.err.println(\" 9%%  Your system is overclocked\");\r\n            System.err.println(\" 1%%  bug in LAME encoding library\");\r\n\r\n            gfc.ResvSize = l3_side.main_data_begin * 8;\r\n        }\r\n        //;\r\n\r\n        if (totbit > 1000000000) {\r\n            /*\r\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\r\n             * bit counter\r\n             */\r\n            var i;\r\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\r\n                gfc.header[i].write_timing -= totbit;\r\n            totbit = 0;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     * <PRE>\r\n     * copy data out of the internal MP3 bit buffer into a user supplied\r\n     *       unsigned char buffer.\r\n     *\r\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\r\n     *       mp3data=1      data is real mp3 frame data.\r\n     * </PRE>\r\n     */\r\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\r\n        var minimum = bufByteIdx + 1;\r\n        if (minimum <= 0)\r\n            return 0;\r\n        if (size != 0 && minimum > size) {\r\n            /* buffer is too small */\r\n            return -1;\r\n        }\r\n        System.arraycopy(buf, 0, buffer, bufferPos, minimum);\r\n        bufByteIdx = -1;\r\n        bufBitIdx = 0;\r\n\r\n        if (mp3data != 0) {\r\n            var crc = new_int(1);\r\n            crc[0] = gfc.nMusicCRC;\r\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\r\n            gfc.nMusicCRC = crc[0];\r\n\r\n            /**\r\n             * sum number of bytes belonging to the mp3 stream this info will be\r\n             * written into the Xing/LAME header for seeking\r\n             */\r\n            if (minimum > 0) {\r\n                gfc.VBR_seek_table.nBytesWritten += minimum;\r\n            }\r\n\r\n            if (gfc.decode_on_the_fly) { /* decode the frame */\r\n                var pcm_buf = new_float_n([2, 1152]);\r\n                var mp3_in = minimum;\r\n                var samples_out = -1;\r\n                var i;\r\n\r\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\r\n                while (samples_out != 0) {\r\n\r\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\r\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\r\n                    /*\r\n                     * samples_out = 0: need more data to decode samples_out =\r\n                     * -1: error. Lets assume 0 pcm output samples_out = number\r\n                     * of samples output\r\n                     */\r\n\r\n                    /*\r\n                     * set the lenght of the mp3 input buffer to zero, so that\r\n                     * in the next iteration of the loop we will be querying\r\n                     * mpglib about buffered data\r\n                     */\r\n                    mp3_in = 0;\r\n\r\n                    if (samples_out == -1) {\r\n                        /*\r\n                         * error decoding. Not fatal, but might screw up the\r\n                         * ReplayGain tag. What should we do? Ignore for now\r\n                         */\r\n                        samples_out = 0;\r\n                    }\r\n                    if (samples_out > 0) {\r\n                        /* process the PCM data */\r\n\r\n                        /*\r\n                         * this should not be possible, and indicates we have\r\n                         * overflown the pcm_buf buffer\r\n                         */\r\n\r\n                        if (gfc.findPeakSample) {\r\n                            for (i = 0; i < samples_out; i++) {\r\n                                if (pcm_buf[0][i] > gfc.PeakSample)\r\n                                    gfc.PeakSample = pcm_buf[0][i];\r\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\r\n                                    gfc.PeakSample = -pcm_buf[0][i];\r\n                            }\r\n                            if (gfc.channels_out > 1)\r\n                                for (i = 0; i < samples_out; i++) {\r\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\r\n                                        gfc.PeakSample = pcm_buf[1][i];\r\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\r\n                                        gfc.PeakSample = -pcm_buf[1][i];\r\n                                }\r\n                        }\r\n\r\n                        if (gfc.findReplayGain)\r\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\r\n                                    pcm_buf[1], 0, samples_out,\r\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\r\n                                return -6;\r\n\r\n                    }\r\n                    /* if (samples_out>0) */\r\n                }\r\n                /* while (samples_out!=0) */\r\n            }\r\n            /* if (gfc.decode_on_the_fly) */\r\n\r\n        }\r\n        /* if (mp3data) */\r\n        return minimum;\r\n    };\r\n\r\n    this.init_bit_stream_w = function (gfc) {\r\n        buf = new_byte(Lame.LAME_MAXMP3BUFFER);\r\n\r\n        gfc.h_ptr = gfc.w_ptr = 0;\r\n        gfc.header[gfc.h_ptr].write_timing = 0;\r\n        bufByteIdx = -1;\r\n        bufBitIdx = 0;\r\n        totbit = 0;\r\n    };\r\n\r\n    // From machine.h\r\n\r\n\r\n}\r\n\r\nfunction HuffCodeTab(len, max, tab, hl) {\r\n    this.xlen = len;\r\n    this.linmax = max;\r\n    this.table = tab;\r\n    this.hlen = hl;\r\n}\r\n\r\nvar Tables = {};\r\n\r\n\r\nTables.t1HB = [\r\n    1, 1,\r\n    1, 0\r\n];\r\n\r\nTables.t2HB = [\r\n    1, 2, 1,\r\n    3, 1, 1,\r\n    3, 2, 0\r\n];\r\n\r\nTables.t3HB = [\r\n    3, 2, 1,\r\n    1, 1, 1,\r\n    3, 2, 0\r\n];\r\n\r\nTables.t5HB = [\r\n    1, 2, 6, 5,\r\n    3, 1, 4, 4,\r\n    7, 5, 7, 1,\r\n    6, 1, 1, 0\r\n];\r\n\r\nTables.t6HB = [\r\n    7, 3, 5, 1,\r\n    6, 2, 3, 2,\r\n    5, 4, 4, 1,\r\n    3, 3, 2, 0\r\n];\r\n\r\nTables.t7HB = [\r\n    1, 2, 10, 19, 16, 10,\r\n    3, 3, 7, 10, 5, 3,\r\n    11, 4, 13, 17, 8, 4,\r\n    12, 11, 18, 15, 11, 2,\r\n    7, 6, 9, 14, 3, 1,\r\n    6, 4, 5, 3, 2, 0\r\n];\r\n\r\nTables.t8HB = [\r\n    3, 4, 6, 18, 12, 5,\r\n    5, 1, 2, 16, 9, 3,\r\n    7, 3, 5, 14, 7, 3,\r\n    19, 17, 15, 13, 10, 4,\r\n    13, 5, 8, 11, 5, 1,\r\n    12, 4, 4, 1, 1, 0\r\n];\r\n\r\nTables.t9HB = [\r\n    7, 5, 9, 14, 15, 7,\r\n    6, 4, 5, 5, 6, 7,\r\n    7, 6, 8, 8, 8, 5,\r\n    15, 6, 9, 10, 5, 1,\r\n    11, 7, 9, 6, 4, 1,\r\n    14, 4, 6, 2, 6, 0\r\n];\r\n\r\nTables.t10HB = [\r\n    1, 2, 10, 23, 35, 30, 12, 17,\r\n    3, 3, 8, 12, 18, 21, 12, 7,\r\n    11, 9, 15, 21, 32, 40, 19, 6,\r\n    14, 13, 22, 34, 46, 23, 18, 7,\r\n    20, 19, 33, 47, 27, 22, 9, 3,\r\n    31, 22, 41, 26, 21, 20, 5, 3,\r\n    14, 13, 10, 11, 16, 6, 5, 1,\r\n    9, 8, 7, 8, 4, 4, 2, 0\r\n];\r\n\r\nTables.t11HB = [\r\n    3, 4, 10, 24, 34, 33, 21, 15,\r\n    5, 3, 4, 10, 32, 17, 11, 10,\r\n    11, 7, 13, 18, 30, 31, 20, 5,\r\n    25, 11, 19, 59, 27, 18, 12, 5,\r\n    35, 33, 31, 58, 30, 16, 7, 5,\r\n    28, 26, 32, 19, 17, 15, 8, 14,\r\n    14, 12, 9, 13, 14, 9, 4, 1,\r\n    11, 4, 6, 6, 6, 3, 2, 0\r\n];\r\n\r\nTables.t12HB = [\r\n    9, 6, 16, 33, 41, 39, 38, 26,\r\n    7, 5, 6, 9, 23, 16, 26, 11,\r\n    17, 7, 11, 14, 21, 30, 10, 7,\r\n    17, 10, 15, 12, 18, 28, 14, 5,\r\n    32, 13, 22, 19, 18, 16, 9, 5,\r\n    40, 17, 31, 29, 17, 13, 4, 2,\r\n    27, 12, 11, 15, 10, 7, 4, 1,\r\n    27, 12, 8, 12, 6, 3, 1, 0\r\n];\r\n\r\nTables.t13HB = [\r\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\r\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\r\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\r\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\r\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\r\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\r\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\r\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\r\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\r\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\r\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\r\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\r\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\r\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\r\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\r\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\r\n];\r\n\r\nTables.t15HB = [\r\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\r\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\r\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\r\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\r\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\r\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\r\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\r\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\r\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\r\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\r\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\r\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\r\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\r\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\r\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\r\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\r\n];\r\n\r\nTables.t16HB = [\r\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\r\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\r\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\r\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\r\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\r\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\r\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\r\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\r\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\r\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\r\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\r\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\r\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\r\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\r\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\r\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\r\n];\r\n\r\nTables.t24HB = [\r\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\r\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\r\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\r\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\r\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\r\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\r\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\r\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\r\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\r\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\r\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\r\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\r\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\r\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\r\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\r\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\r\n];\r\n\r\nTables.t32HB = [\r\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\r\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\r\n];\r\n\r\nTables.t33HB = [\r\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\r\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\r\n];\r\n\r\nTables.t1l = [\r\n    1, 4,\r\n    3, 5\r\n];\r\n\r\nTables.t2l = [\r\n    1, 4, 7,\r\n    4, 5, 7,\r\n    6, 7, 8\r\n];\r\n\r\nTables.t3l = [\r\n    2, 3, 7,\r\n    4, 4, 7,\r\n    6, 7, 8\r\n];\r\n\r\nTables.t5l = [\r\n    1, 4, 7, 8,\r\n    4, 5, 8, 9,\r\n    7, 8, 9, 10,\r\n    8, 8, 9, 10\r\n];\r\n\r\nTables.t6l = [\r\n    3, 4, 6, 8,\r\n    4, 4, 6, 7,\r\n    5, 6, 7, 8,\r\n    7, 7, 8, 9\r\n];\r\n\r\nTables.t7l = [\r\n    1, 4, 7, 9, 9, 10,\r\n    4, 6, 8, 9, 9, 10,\r\n    7, 7, 9, 10, 10, 11,\r\n    8, 9, 10, 11, 11, 11,\r\n    8, 9, 10, 11, 11, 12,\r\n    9, 10, 11, 12, 12, 12\r\n];\r\n\r\nTables.t8l = [\r\n    2, 4, 7, 9, 9, 10,\r\n    4, 4, 6, 10, 10, 10,\r\n    7, 6, 8, 10, 10, 11,\r\n    9, 10, 10, 11, 11, 12,\r\n    9, 9, 10, 11, 12, 12,\r\n    10, 10, 11, 11, 13, 13\r\n];\r\n\r\nTables.t9l = [\r\n    3, 4, 6, 7, 9, 10,\r\n    4, 5, 6, 7, 8, 10,\r\n    5, 6, 7, 8, 9, 10,\r\n    7, 7, 8, 9, 9, 10,\r\n    8, 8, 9, 9, 10, 11,\r\n    9, 9, 10, 10, 11, 11\r\n];\r\n\r\nTables.t10l = [\r\n    1, 4, 7, 9, 10, 10, 10, 11,\r\n    4, 6, 8, 9, 10, 11, 10, 10,\r\n    7, 8, 9, 10, 11, 12, 11, 11,\r\n    8, 9, 10, 11, 12, 12, 11, 12,\r\n    9, 10, 11, 12, 12, 12, 12, 12,\r\n    10, 11, 12, 12, 13, 13, 12, 13,\r\n    9, 10, 11, 12, 12, 12, 13, 13,\r\n    10, 10, 11, 12, 12, 13, 13, 13\r\n];\r\n\r\nTables.t11l = [\r\n    2, 4, 6, 8, 9, 10, 9, 10,\r\n    4, 5, 6, 8, 10, 10, 9, 10,\r\n    6, 7, 8, 9, 10, 11, 10, 10,\r\n    8, 8, 9, 11, 10, 12, 10, 11,\r\n    9, 10, 10, 11, 11, 12, 11, 12,\r\n    9, 10, 11, 12, 12, 13, 12, 13,\r\n    9, 9, 9, 10, 11, 12, 12, 12,\r\n    9, 9, 10, 11, 12, 12, 12, 12\r\n];\r\n\r\nTables.t12l = [\r\n    4, 4, 6, 8, 9, 10, 10, 10,\r\n    4, 5, 6, 7, 9, 9, 10, 10,\r\n    6, 6, 7, 8, 9, 10, 9, 10,\r\n    7, 7, 8, 8, 9, 10, 10, 10,\r\n    8, 8, 9, 9, 10, 10, 10, 11,\r\n    9, 9, 10, 10, 10, 11, 10, 11,\r\n    9, 9, 9, 10, 10, 11, 11, 12,\r\n    10, 10, 10, 11, 11, 11, 11, 12\r\n];\r\n\r\nTables.t13l = [\r\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\r\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\r\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\r\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\r\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\r\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\r\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\r\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\r\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\r\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\r\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\r\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\r\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\r\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\r\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\r\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\r\n];\r\n\r\nTables.t15l = [\r\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\r\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\r\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\r\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\r\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\r\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\r\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\r\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\r\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\r\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\r\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\r\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\r\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\r\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\r\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\r\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\r\n];\r\n\r\nTables.t16_5l = [\r\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\r\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\r\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\r\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\r\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\r\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\r\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\r\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\r\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\r\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\r\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\r\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\r\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\r\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\r\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\r\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\r\n];\r\n\r\nTables.t16l = [\r\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\r\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\r\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\r\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\r\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\r\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\r\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\r\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\r\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\r\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\r\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\r\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\r\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\r\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\r\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\r\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\r\n];\r\n\r\nTables.t24l = [\r\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\r\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\r\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\r\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\r\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\r\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\r\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\r\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\r\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\r\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\r\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\r\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\r\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\r\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\r\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\r\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\r\n];\r\n\r\nTables.t32l = [\r\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\r\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\r\n];\r\n\r\nTables.t33l = [\r\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\r\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\r\n];\r\n\r\nTables.ht = [\r\n    /* xlen, linmax, table, hlen */\r\n    new HuffCodeTab(0, 0, null, null),\r\n    new HuffCodeTab(2, 0, Tables.t1HB, Tables.t1l),\r\n    new HuffCodeTab(3, 0, Tables.t2HB, Tables.t2l),\r\n    new HuffCodeTab(3, 0, Tables.t3HB, Tables.t3l),\r\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\r\n    new HuffCodeTab(4, 0, Tables.t5HB, Tables.t5l),\r\n    new HuffCodeTab(4, 0, Tables.t6HB, Tables.t6l),\r\n    new HuffCodeTab(6, 0, Tables.t7HB, Tables.t7l),\r\n    new HuffCodeTab(6, 0, Tables.t8HB, Tables.t8l),\r\n    new HuffCodeTab(6, 0, Tables.t9HB, Tables.t9l),\r\n    new HuffCodeTab(8, 0, Tables.t10HB, Tables.t10l),\r\n    new HuffCodeTab(8, 0, Tables.t11HB, Tables.t11l),\r\n    new HuffCodeTab(8, 0, Tables.t12HB, Tables.t12l),\r\n    new HuffCodeTab(16, 0, Tables.t13HB, Tables.t13l),\r\n    new HuffCodeTab(0, 0, null, Tables.t16_5l), /* Apparently not used */\r\n    new HuffCodeTab(16, 0, Tables.t15HB, Tables.t15l),\r\n\r\n    new HuffCodeTab(1, 1, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(2, 3, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(3, 7, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(4, 15, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(6, 63, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(8, 255, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(10, 1023, Tables.t16HB, Tables.t16l),\r\n    new HuffCodeTab(13, 8191, Tables.t16HB, Tables.t16l),\r\n\r\n    new HuffCodeTab(4, 15, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(5, 31, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(6, 63, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(7, 127, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(8, 255, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(9, 511, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(11, 2047, Tables.t24HB, Tables.t24l),\r\n    new HuffCodeTab(13, 8191, Tables.t24HB, Tables.t24l),\r\n\r\n    new HuffCodeTab(0, 0, Tables.t32HB, Tables.t32l),\r\n    new HuffCodeTab(0, 0, Tables.t33HB, Tables.t33l),\r\n];\r\n\r\n/**\r\n * <CODE>\r\n *  for (i = 0; i < 16*16; i++) [\r\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\r\n *  ]\r\n * </CODE>\r\n *\r\n */\r\nTables.largetbl = [\r\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\r\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\r\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\r\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\r\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\r\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\r\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\r\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\r\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\r\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\r\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\r\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\r\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\r\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\r\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\r\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\r\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\r\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\r\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\r\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\r\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\r\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\r\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\r\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\r\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\r\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\r\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\r\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\r\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\r\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\r\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\r\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\r\n];\r\n/**\r\n * <CODE>\r\n *  for (i = 0; i < 3*3; i++) [\r\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\r\n *  ]\r\n * </CODE>\r\n *\r\n */\r\nTables.table23 = [\r\n    0x010002, 0x040003, 0x070007,\r\n    0x040004, 0x050004, 0x070007,\r\n    0x060006, 0x070007, 0x080008\r\n];\r\n\r\n/**\r\n * <CODE>\r\n *  for (i = 0; i < 4*4; i++) [\r\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\r\n *   ]\r\n * </CODE>\r\n *\r\n */\r\nTables.table56 = [\r\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\r\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\r\n];\r\n\r\nTables.bitrate_table = [\r\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\r\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\r\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\r\n];\r\n\r\n/**\r\n * MPEG 2, MPEG 1, MPEG 2.5.\r\n */\r\nTables.samplerate_table = [\r\n    [22050, 24000, 16000, -1],\r\n    [44100, 48000, 32000, -1],\r\n    [11025, 12000, 8000, -1],\r\n];\r\n\r\n/**\r\n * This is the scfsi_band table from 2.4.2.7 of the IS.\r\n */\r\nTables.scfsi_band = [0, 6, 11, 16, 21];\r\n\r\nfunction MeanBits(meanBits) {\r\n    this.bits = meanBits;\r\n}\r\n\r\n//package mp3;\r\n\r\nfunction CalcNoiseResult() {\r\n    /**\r\n     * sum of quantization noise > masking\r\n     */\r\n    this.over_noise = 0.;\r\n    /**\r\n     * sum of all quantization noise\r\n     */\r\n    this.tot_noise = 0.;\r\n    /**\r\n     * max quantization noise\r\n     */\r\n    this.max_noise = 0.;\r\n    /**\r\n     * number of quantization noise > masking\r\n     */\r\n    this.over_count = 0;\r\n    /**\r\n     * SSD-like cost of distorted bands\r\n     */\r\n    this.over_SSD = 0;\r\n    this.bits = 0;\r\n}\r\n\r\nfunction VBRQuantize() {\r\n    var qupvt;\r\n    var tak;\r\n\r\n    this.setModules = function (_qupvt, _tk) {\r\n        qupvt = _qupvt;\r\n        tak = _tk;\r\n    }\r\n    //TODO\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * ATH related stuff, if something new ATH related has to be added, please plug\r\n * it here into the ATH.\r\n */\r\nfunction ATH() {\r\n    /**\r\n     * Method for the auto adjustment.\r\n     */\r\n    this.useAdjust = 0;\r\n    /**\r\n     * factor for tuning the (sample power) point below which adaptive threshold\r\n     * of hearing adjustment occurs\r\n     */\r\n    this.aaSensitivityP = 0.;\r\n    /**\r\n     * Lowering based on peak volume, 1 = no lowering.\r\n     */\r\n    this.adjust = 0.;\r\n    /**\r\n     * Limit for dynamic ATH adjust.\r\n     */\r\n    this.adjustLimit = 0.;\r\n    /**\r\n     * Determined to lower x dB each second.\r\n     */\r\n    this.decay = 0.;\r\n    /**\r\n     * Lowest ATH value.\r\n     */\r\n    this.floor = 0.;\r\n    /**\r\n     * ATH for sfbs in long blocks.\r\n     */\r\n    this.l = new_float(Encoder.SBMAX_l);\r\n    /**\r\n     * ATH for sfbs in short blocks.\r\n     */\r\n    this.s = new_float(Encoder.SBMAX_s);\r\n    /**\r\n     * ATH for partitioned sfb21 in long blocks.\r\n     */\r\n    this.psfb21 = new_float(Encoder.PSFB21);\r\n    /**\r\n     * ATH for partitioned sfb12 in short blocks.\r\n     */\r\n    this.psfb12 = new_float(Encoder.PSFB12);\r\n    /**\r\n     * ATH for long block convolution bands.\r\n     */\r\n    this.cb_l = new_float(Encoder.CBANDS);\r\n    /**\r\n     * ATH for short block convolution bands.\r\n     */\r\n    this.cb_s = new_float(Encoder.CBANDS);\r\n    /**\r\n     * Equal loudness weights (based on ATH).\r\n     */\r\n    this.eql_w = new_float(Encoder.BLKSIZE / 2);\r\n}\r\n\r\n\r\nfunction LameGlobalFlags() {\r\n\r\n    this.class_id = 0;\r\n\r\n    /* input description */\r\n\r\n    /**\r\n     * number of samples. default=-1\r\n     */\r\n    this.num_samples = 0;\r\n    /**\r\n     * input number of channels. default=2\r\n     */\r\n    this.num_channels = 0;\r\n    /**\r\n     * input_samp_rate in Hz. default=44.1 kHz\r\n     */\r\n    this.in_samplerate = 0;\r\n    /**\r\n     * output_samp_rate. default: LAME picks best value at least not used for\r\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\r\n     */\r\n    this.out_samplerate = 0;\r\n    /**\r\n     * scale input by this amount before encoding at least not used for MP3\r\n     * decoding\r\n     */\r\n    this.scale = 0.;\r\n    /**\r\n     * scale input of channel 0 (left) by this amount before encoding\r\n     */\r\n    this.scale_left = 0.;\r\n    /**\r\n     * scale input of channel 1 (right) by this amount before encoding\r\n     */\r\n    this.scale_right = 0.;\r\n\r\n    /* general control params */\r\n    /**\r\n     * collect data for a MP3 frame analyzer?\r\n     */\r\n    this.analysis = false;\r\n    /**\r\n     * add Xing VBR tag?\r\n     */\r\n    this.bWriteVbrTag = false;\r\n\r\n    /**\r\n     * use lame/mpglib to convert mp3 to wav\r\n     */\r\n    this.decode_only = false;\r\n    /**\r\n     * quality setting 0=best, 9=worst default=5\r\n     */\r\n    this.quality = 0;\r\n    /**\r\n     * see enum default = LAME picks best value\r\n     */\r\n    this.mode = MPEGMode.STEREO;\r\n    /**\r\n     * force M/S mode. requires mode=1\r\n     */\r\n    this.force_ms = false;\r\n    /**\r\n     * use free format? default=0\r\n     */\r\n    this.free_format = false;\r\n    /**\r\n     * find the RG value? default=0\r\n     */\r\n    this.findReplayGain = false;\r\n    /**\r\n     * decode on the fly? default=0\r\n     */\r\n    this.decode_on_the_fly = false;\r\n    /**\r\n     * 1 (default) writes ID3 tags, 0 not\r\n     */\r\n    this.write_id3tag_automatic = false;\r\n\r\n    /*\r\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\r\n     * the variable not set. Default is compression_ratio = 11.025\r\n     */\r\n    /**\r\n     * bitrate\r\n     */\r\n    this.brate = 0;\r\n    /**\r\n     * sizeof(wav file)/sizeof(mp3 file)\r\n     */\r\n    this.compression_ratio = 0.;\r\n\r\n    /* frame params */\r\n    /**\r\n     * mark as copyright. default=0\r\n     */\r\n    this.copyright = 0;\r\n    /**\r\n     * mark as original. default=1\r\n     */\r\n    this.original = 0;\r\n    /**\r\n     * the MP3 'private extension' bit. Meaningless\r\n     */\r\n    this.extension = 0;\r\n    /**\r\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\r\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\r\n     * take it into account, and last but not least many decoders don't care\r\n     * about these bits\r\n     */\r\n    this.emphasis = 0;\r\n    /**\r\n     * use 2 bytes per frame for a CRC checksum. default=0\r\n     */\r\n    this.error_protection = 0;\r\n    /**\r\n     * enforce ISO spec as much as possible\r\n     */\r\n    this.strict_ISO = false;\r\n\r\n    /**\r\n     * use bit reservoir?\r\n     */\r\n    this.disable_reservoir = false;\r\n\r\n    /* quantization/noise shaping */\r\n    this.quant_comp = 0;\r\n    this.quant_comp_short = 0;\r\n    this.experimentalY = false;\r\n    this.experimentalZ = 0;\r\n    this.exp_nspsytune = 0;\r\n\r\n    this.preset = 0;\r\n\r\n    /* VBR control */\r\n    this.VBR = null;\r\n    /**\r\n     * Range [0,...,1[\r\n     */\r\n    this.VBR_q_frac = 0.;\r\n    /**\r\n     * Range [0,...,9]\r\n     */\r\n    this.VBR_q = 0;\r\n    this.VBR_mean_bitrate_kbps = 0;\r\n    this.VBR_min_bitrate_kbps = 0;\r\n    this.VBR_max_bitrate_kbps = 0;\r\n    /**\r\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\r\n     * silence\r\n     */\r\n    this.VBR_hard_min = 0;\r\n\r\n    /* resampling and filtering */\r\n\r\n    /**\r\n     * freq in Hz. 0=lame choses. -1=no filter\r\n     */\r\n    this.lowpassfreq = 0;\r\n    /**\r\n     * freq in Hz. 0=lame choses. -1=no filter\r\n     */\r\n    this.highpassfreq = 0;\r\n    /**\r\n     * freq width of filter, in Hz (default=15%)\r\n     */\r\n    this.lowpasswidth = 0;\r\n    /**\r\n     * freq width of filter, in Hz (default=15%)\r\n     */\r\n    this.highpasswidth = 0;\r\n\r\n    /*\r\n     * psycho acoustics and other arguments which you should not change unless\r\n     * you know what you are doing\r\n     */\r\n\r\n    this.maskingadjust = 0.;\r\n    this.maskingadjust_short = 0.;\r\n    /**\r\n     * only use ATH\r\n     */\r\n    this.ATHonly = false;\r\n    /**\r\n     * only use ATH for short blocks\r\n     */\r\n    this.ATHshort = false;\r\n    /**\r\n     * disable ATH\r\n     */\r\n    this.noATH = false;\r\n    /**\r\n     * select ATH formula\r\n     */\r\n    this.ATHtype = 0;\r\n    /**\r\n     * change ATH formula 4 shape\r\n     */\r\n    this.ATHcurve = 0.;\r\n    /**\r\n     * lower ATH by this many db\r\n     */\r\n    this.ATHlower = 0.;\r\n    /**\r\n     * select ATH auto-adjust scheme\r\n     */\r\n    this.athaa_type = 0;\r\n    /**\r\n     * select ATH auto-adjust loudness calc\r\n     */\r\n    this.athaa_loudapprox = 0;\r\n    /**\r\n     * dB, tune active region of auto-level\r\n     */\r\n    this.athaa_sensitivity = 0.;\r\n    this.short_blocks = null;\r\n    /**\r\n     * use temporal masking effect\r\n     */\r\n    this.useTemporal = false;\r\n    this.interChRatio = 0.;\r\n    /**\r\n     * Naoki's adjustment of Mid/Side maskings\r\n     */\r\n    this.msfix = 0.;\r\n\r\n    /**\r\n     * 0 off, 1 on\r\n     */\r\n    this.tune = false;\r\n    /**\r\n     * used to pass values for debugging and stuff\r\n     */\r\n    this.tune_value_a = 0.;\r\n\r\n    /************************************************************************/\r\n    /* internal variables, do not set... */\r\n    /* provided because they may be of use to calling application */\r\n    /************************************************************************/\r\n\r\n    /**\r\n     * 0=MPEG-2/2.5 1=MPEG-1\r\n     */\r\n    this.version = 0;\r\n    this.encoder_delay = 0;\r\n    /**\r\n     * number of samples of padding appended to input\r\n     */\r\n    this.encoder_padding = 0;\r\n    this.framesize = 0;\r\n    /**\r\n     * number of frames encoded\r\n     */\r\n    this.frameNum = 0;\r\n    /**\r\n     * is this struct owned by calling program or lame?\r\n     */\r\n    this.lame_allocated_gfp = 0;\r\n    /**************************************************************************/\r\n    /* more internal variables are stored in this structure: */\r\n    /**************************************************************************/\r\n    this.internal_flags = null;\r\n}\r\n\r\n\r\n\r\nfunction CBRNewIterationLoop(_quantize)  {\r\n    var quantize = _quantize;\r\n    this.quantize = quantize;\r\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\r\n\t\tvar gfc = gfp.internal_flags;\r\n        var l3_xmin = new_float(L3Side.SFBMAX);\r\n\t\tvar xrpow = new_float(576);\r\n\t\tvar targ_bits = new_int(2);\r\n\t\tvar mean_bits = 0, max_bits;\r\n\t\tvar l3_side = gfc.l3_side;\r\n\r\n\t\tvar mb = new MeanBits(mean_bits);\r\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\r\n\t\tmean_bits = mb.bits;\r\n\r\n\t\t/* quantize! */\r\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n\r\n\t\t\t/*\r\n\t\t\t * calculate needed bits\r\n\t\t\t */\r\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\r\n\t\t\t\t\tgr, gr);\r\n\r\n\t\t\tif (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\r\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\r\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\r\n\t\t\t\t\t\tmean_bits, max_bits);\r\n\t\t\t}\r\n\r\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\r\n\t\t\t\tvar adjust, masking_lower_db;\r\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\r\n\r\n\t\t\t\tif (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n\t\t\t\t\t// NORM, START or STOP type\r\n\t\t\t\t\tadjust = 0;\r\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadjust = 0;\r\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\r\n\t\t\t\t}\r\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\r\n\t\t\t\t\t\tmasking_lower_db * 0.1);\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\r\n\t\t\t\t */\r\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\r\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\r\n\t\t\t\t\t * masking abilities find some good quantization in\r\n\t\t\t\t\t * outer_loop\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\r\n\t\t\t\t\t\t\tl3_xmin);\r\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\r\n\t\t\t\t\t\t\ttarg_bits[ch]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\r\n\t\t\t} /* for ch */\r\n\t\t} /* for gr */\r\n\r\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\r\n\t}\r\n}\r\n\r\n\r\nfunction ReplayGain() {\r\n    this.linprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\r\n    /**\r\n     * left input samples, with pre-buffer\r\n     */\r\n    this.linpre = 0;\r\n    this.lstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\r\n    /**\r\n     * left \"first step\" (i.e. post first filter) samples\r\n     */\r\n    this.lstep = 0;\r\n    this.loutbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\r\n    /**\r\n     * left \"out\" (i.e. post second filter) samples\r\n     */\r\n    this.lout = 0;\r\n    this.rinprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\r\n    /**\r\n     * right input samples ...\r\n     */\r\n    this.rinpre = 0;\r\n    this.rstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\r\n    this.rstep = 0;\r\n    this.routbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\r\n    this.rout = 0;\r\n    /**\r\n     * number of samples required to reach number of milliseconds required\r\n     * for RMS window\r\n     */\r\n    this.sampleWindow = 0;\r\n    this.totsamp = 0;\r\n    this.lsum = 0.;\r\n    this.rsum = 0.;\r\n    this.freqindex = 0;\r\n    this.first = 0;\r\n    this.A = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\r\n    this.B = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\r\n\r\n}\r\n\r\n//package mp3;\r\n\r\n/**\r\n * Layer III side information.\r\n *\r\n * @author Ken\r\n *\r\n */\r\n\r\n\r\n\r\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\r\n\r\n    this.l = new_int(1 + Encoder.SBMAX_l);\r\n    this.s = new_int(1 + Encoder.SBMAX_s);\r\n    this.psfb21 = new_int(1 + Encoder.PSFB21);\r\n    this.psfb12 = new_int(1 + Encoder.PSFB12);\r\n    var l = this.l;\r\n    var s = this.s;\r\n\r\n    if (arguments.length == 4) {\r\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\r\n        //    final int[] arr12) {\r\n        this.arrL = arguments[0];\r\n        this.arrS = arguments[1];\r\n        this.arr21 = arguments[2];\r\n        this.arr12 = arguments[3];\r\n\r\n        System.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\r\n        System.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\r\n        System.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\r\n        System.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\r\n    }\r\n}\r\n\r\n/*\r\n *      quantize_pvt source file\r\n *\r\n *      Copyright (c) 1999-2002 Takehiro Tominaga\r\n *      Copyright (c) 2000-2002 Robert Hegemann\r\n *      Copyright (c) 2001 Naoki Shibata\r\n *      Copyright (c) 2002-2005 Gabriel Bouvigne\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: QuantizePVT.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n\r\nQuantizePVT.Q_MAX = (256 + 1);\r\nQuantizePVT.Q_MAX2 = 116;\r\nQuantizePVT.LARGE_BITS = 100000;\r\nQuantizePVT.IXMAX_VAL = 8206;\r\n\r\nfunction QuantizePVT() {\r\n\r\n    var tak = null;\r\n    var rv = null;\r\n    var psy = null;\r\n\r\n    this.setModules = function (_tk, _rv, _psy) {\r\n        tak = _tk;\r\n        rv = _rv;\r\n        psy = _psy;\r\n    };\r\n\r\n    function POW20(x) {\r\n        return pow20[x + QuantizePVT.Q_MAX2];\r\n    }\r\n\r\n    this.IPOW20 = function (x) {\r\n        return ipow20[x];\r\n    }\r\n\r\n    /**\r\n     * smallest such that 1.0+DBL_EPSILON != 1.0\r\n     */\r\n    var DBL_EPSILON = 2.2204460492503131e-016;\r\n\r\n    /**\r\n     * ix always <= 8191+15. see count_bits()\r\n     */\r\n    var IXMAX_VAL = QuantizePVT.IXMAX_VAL;\r\n\r\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\r\n\r\n    var Q_MAX = QuantizePVT.Q_MAX;\r\n\r\n\r\n    /**\r\n     * <CODE>\r\n     * minimum possible number of\r\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\r\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\r\n     *\r\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\r\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\r\n     * </CODE>\r\n     */\r\n    var Q_MAX2 = QuantizePVT.Q_MAX2;\r\n\r\n    var LARGE_BITS = QuantizePVT.LARGE_BITS;\r\n\r\n\r\n    /**\r\n     * Assuming dynamic range=96dB, this value should be 92\r\n     */\r\n    var NSATHSCALE = 100;\r\n\r\n    /**\r\n     * The following table is used to implement the scalefactor partitioning for\r\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\r\n     * to the way the tables are presented in the IS:\r\n     *\r\n     * [table_number][row_in_table][column of nr_of_sfb]\r\n     */\r\n    this.nr_of_sfb_block = [\r\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\r\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\r\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\r\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\r\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\r\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\r\n\r\n    /**\r\n     * Table B.6: layer3 preemphasis\r\n     */\r\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\r\n        2, 2, 3, 3, 3, 2, 0];\r\n    this.pretab = pretab;\r\n\r\n    /**\r\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\r\n     * bands. <BR>\r\n     * Index into this using a method such as:<BR>\r\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\r\n     */\r\n    this.sfBandIndex = [\r\n        // Table B.2.b: 22.05 kHz\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\r\n                522, 576],\r\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\r\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\r\n        ),\r\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\r\n                540, 576],\r\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* Table B.2.a: 16 kHz */\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\r\n                522, 576],\r\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* Table B.8.b: 44.1 kHz */\r\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\r\n                576],\r\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* Table B.8.c: 48 kHz */\r\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\r\n                576],\r\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* Table B.8.a: 32 kHz */\r\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\r\n                576],\r\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* MPEG-2.5 11.025 kHz */\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\r\n                522, 576],\r\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\r\n                402 / 3, 522 / 3, 576 / 3]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* MPEG-2.5 12 kHz */\r\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\r\n                522, 576],\r\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\r\n                402 / 3, 522 / 3, 576 / 3]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        ),\r\n        /* MPEG-2.5 8 kHz */\r\n        new ScaleFac([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\r\n                572, 574, 576],\r\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\r\n                492 / 3, 498 / 3, 576 / 3]\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\r\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\r\n        )\r\n    ];\r\n\r\n    var pow20 = new_float(Q_MAX + Q_MAX2 + 1);\r\n    var ipow20 = new_float(Q_MAX);\r\n    var pow43 = new_float(PRECALC_SIZE);\r\n\r\n    var adj43 = new_float(PRECALC_SIZE);\r\n    this.adj43 = adj43;\r\n\r\n    /**\r\n     * <PRE>\r\n     * compute the ATH for each scalefactor band cd range: 0..96db\r\n     *\r\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\r\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\r\n     * -9db 0db\r\n     *\r\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\r\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\r\n     *\r\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\r\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\r\n     *\r\n     *\r\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\r\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\r\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\r\n     * -11 - 96 = -107db = ATH at 3.3kHz.\r\n     *\r\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\r\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\r\n     * </PRE>\r\n     */\r\n    function ATHmdct(gfp, f) {\r\n        var ath = psy.ATHformula(f, gfp);\r\n\r\n        ath -= NSATHSCALE;\r\n\r\n        /* modify the MDCT scaling for the ATH and convert to energy */\r\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\r\n        return ath;\r\n    }\r\n\r\n    function compute_ath(gfp) {\r\n        var ATH_l = gfp.internal_flags.ATH.l;\r\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\r\n        var ATH_s = gfp.internal_flags.ATH.s;\r\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\r\n        var gfc = gfp.internal_flags;\r\n        var samp_freq = gfp.out_samplerate;\r\n\r\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\r\n            var start = gfc.scalefac_band.l[sfb];\r\n            var end = gfc.scalefac_band.l[sfb + 1];\r\n            ATH_l[sfb] = Float.MAX_VALUE;\r\n            for (var i = start; i < end; i++) {\r\n                var freq = i * samp_freq / (2 * 576);\r\n                var ATH_f = ATHmdct(gfp, freq);\r\n                /* freq in kHz */\r\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\r\n            }\r\n        }\r\n\r\n        for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\r\n            var start = gfc.scalefac_band.psfb21[sfb];\r\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\r\n            ATH_psfb21[sfb] = Float.MAX_VALUE;\r\n            for (var i = start; i < end; i++) {\r\n                var freq = i * samp_freq / (2 * 576);\r\n                var ATH_f = ATHmdct(gfp, freq);\r\n                /* freq in kHz */\r\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\r\n            }\r\n        }\r\n\r\n        for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\r\n            var start = gfc.scalefac_band.s[sfb];\r\n            var end = gfc.scalefac_band.s[sfb + 1];\r\n            ATH_s[sfb] = Float.MAX_VALUE;\r\n            for (var i = start; i < end; i++) {\r\n                var freq = i * samp_freq / (2 * 192);\r\n                var ATH_f = ATHmdct(gfp, freq);\r\n                /* freq in kHz */\r\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\r\n            }\r\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\r\n        }\r\n\r\n        for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\r\n            var start = gfc.scalefac_band.psfb12[sfb];\r\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\r\n            ATH_psfb12[sfb] = Float.MAX_VALUE;\r\n            for (var i = start; i < end; i++) {\r\n                var freq = i * samp_freq / (2 * 192);\r\n                var ATH_f = ATHmdct(gfp, freq);\r\n                /* freq in kHz */\r\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\r\n            }\r\n            /* not sure about the following */\r\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\r\n        }\r\n\r\n        /*\r\n         * no-ATH mode: reduce ATH to -200 dB\r\n         */\r\n        if (gfp.noATH) {\r\n            for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\r\n                ATH_l[sfb] = 1E-20;\r\n            }\r\n            for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\r\n                ATH_psfb21[sfb] = 1E-20;\r\n            }\r\n            for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\r\n                ATH_s[sfb] = 1E-20;\r\n            }\r\n            for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\r\n                ATH_psfb12[sfb] = 1E-20;\r\n            }\r\n        }\r\n\r\n        /*\r\n         * work in progress, don't rely on it too much\r\n         */\r\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\r\n    }\r\n\r\n    /**\r\n     * initialization for iteration_loop\r\n     */\r\n    this.iteration_init = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side = gfc.l3_side;\r\n        var i;\r\n\r\n        if (gfc.iteration_init_init == 0) {\r\n            gfc.iteration_init_init = 1;\r\n\r\n            l3_side.main_data_begin = 0;\r\n            compute_ath(gfp);\r\n\r\n            pow43[0] = 0.0;\r\n            for (i = 1; i < PRECALC_SIZE; i++)\r\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\r\n\r\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\r\n                adj43[i] = ((i + 1) - Math.pow(\r\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\r\n            adj43[i] = 0.5;\r\n\r\n            for (i = 0; i < Q_MAX; i++)\r\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\r\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\r\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\r\n\r\n            tak.huffman_init(gfc);\r\n\r\n            {\r\n                var bass, alto, treble, sfb21;\r\n\r\n                i = (gfp.exp_nspsytune >> 2) & 63;\r\n                if (i >= 32)\r\n                    i -= 64;\r\n                bass = Math.pow(10, i / 4.0 / 10.0);\r\n\r\n                i = (gfp.exp_nspsytune >> 8) & 63;\r\n                if (i >= 32)\r\n                    i -= 64;\r\n                alto = Math.pow(10, i / 4.0 / 10.0);\r\n\r\n                i = (gfp.exp_nspsytune >> 14) & 63;\r\n                if (i >= 32)\r\n                    i -= 64;\r\n                treble = Math.pow(10, i / 4.0 / 10.0);\r\n\r\n                /*\r\n                 * to be compatible with Naoki's original code, the next 6 bits\r\n                 * define only the amount of changing treble for sfb21\r\n                 */\r\n                i = (gfp.exp_nspsytune >> 20) & 63;\r\n                if (i >= 32)\r\n                    i -= 64;\r\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\r\n                for (i = 0; i < Encoder.SBMAX_l; i++) {\r\n                    var f;\r\n                    if (i <= 6)\r\n                        f = bass;\r\n                    else if (i <= 13)\r\n                        f = alto;\r\n                    else if (i <= 20)\r\n                        f = treble;\r\n                    else\r\n                        f = sfb21;\r\n\r\n                    gfc.nsPsy.longfact[i] = f;\r\n                }\r\n                for (i = 0; i < Encoder.SBMAX_s; i++) {\r\n                    var f;\r\n                    if (i <= 5)\r\n                        f = bass;\r\n                    else if (i <= 10)\r\n                        f = alto;\r\n                    else if (i <= 11)\r\n                        f = treble;\r\n                    else\r\n                        f = sfb21;\r\n\r\n                    gfc.nsPsy.shortfact[i] = f;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * allocate bits among 2 channels based on PE<BR>\r\n     * mt 6/99<BR>\r\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\r\n     */\r\n    this.on_pe = function (gfp, pe,\r\n                           targ_bits, mean_bits, gr, cbr) {\r\n        var gfc = gfp.internal_flags;\r\n        var tbits = 0, bits;\r\n        var add_bits = new_int(2);\r\n        var ch;\r\n\r\n        /* allocate targ_bits for granule */\r\n        var mb = new MeanBits(tbits);\r\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\r\n        tbits = mb.bits;\r\n        /* maximum allowed bits for this granule */\r\n        var max_bits = tbits + extra_bits;\r\n        if (max_bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\r\n            // hard limit per granule\r\n            max_bits = LameInternalFlags.MAX_BITS_PER_GRANULE;\r\n        }\r\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\r\n            /******************************************************************\r\n             * allocate bits for each channel\r\n             ******************************************************************/\r\n            targ_bits[ch] = Math.min(LameInternalFlags.MAX_BITS_PER_CHANNEL,\r\n                tbits / gfc.channels_out);\r\n\r\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\r\n\r\n            /* at most increase bits by 1.5*average */\r\n            if (add_bits[ch] > mean_bits * 3 / 4)\r\n                add_bits[ch] = mean_bits * 3 / 4;\r\n\r\n            if (add_bits[ch] < 0)\r\n                add_bits[ch] = 0;\r\n\r\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\r\n                add_bits[ch] = Math.max(0,\r\n                    LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\r\n\r\n            bits += add_bits[ch];\r\n        }\r\n        if (bits > extra_bits) {\r\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\r\n            }\r\n        }\r\n\r\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n            targ_bits[ch] += add_bits[ch];\r\n            extra_bits -= add_bits[ch];\r\n        }\r\n\r\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\r\n            bits += targ_bits[ch];\r\n        }\r\n        if (bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\r\n            var sum = 0;\r\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n                targ_bits[ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\r\n                targ_bits[ch] /= bits;\r\n                sum += targ_bits[ch];\r\n            }\r\n        }\r\n\r\n        return max_bits;\r\n    }\r\n\r\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\r\n\r\n        /*\r\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\r\n         * allocate 50/50 mid/side fac= 0\r\n         */\r\n        /* 75/25 split is fac=.5 */\r\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\r\n        if (fac < 0)\r\n            fac = 0;\r\n        if (fac > .5)\r\n            fac = .5;\r\n\r\n        /* number of bits to move from side channel to mid channel */\r\n        /* move_bits = fac*targ_bits[1]; */\r\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\r\n\r\n        if (move_bits > LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\r\n            move_bits = LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0];\r\n        }\r\n        if (move_bits < 0)\r\n            move_bits = 0;\r\n\r\n        if (targ_bits[1] >= 125) {\r\n            /* dont reduce side channel below 125 bits */\r\n            if (targ_bits[1] - move_bits > 125) {\r\n\r\n                /* if mid channel already has 2x more than average, dont bother */\r\n                /* mean_bits = bits per granule (for both channels) */\r\n                if (targ_bits[0] < mean_bits)\r\n                    targ_bits[0] += move_bits;\r\n                targ_bits[1] -= move_bits;\r\n            } else {\r\n                targ_bits[0] += targ_bits[1] - 125;\r\n                targ_bits[1] = 125;\r\n            }\r\n        }\r\n\r\n        move_bits = targ_bits[0] + targ_bits[1];\r\n        if (move_bits > max_bits) {\r\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\r\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *  Robert Hegemann 2001-04-27:\r\n     *  this adjusts the ATH, keeping the original noise floor\r\n     *  affects the higher frequencies more than the lower ones\r\n     */\r\n    this.athAdjust = function (a, x, athFloor) {\r\n        /*\r\n         * work in progress\r\n         */\r\n        var o = 90.30873362;\r\n        var p = 94.82444863;\r\n        var u = Util.FAST_LOG10_X(x, 10.0);\r\n        var v = a * a;\r\n        var w = 0.0;\r\n        u -= athFloor;\r\n        /* undo scaling */\r\n        if (v > 1E-20)\r\n            w = 1. + Util.FAST_LOG10_X(v, 10.0 / o);\r\n        if (w < 0)\r\n            w = 0.;\r\n        u *= w;\r\n        u += athFloor + o - p;\r\n        /* redo scaling */\r\n\r\n        return Math.pow(10., 0.1 * u);\r\n    };\r\n\r\n    /**\r\n     * Calculate the allowed distortion for each scalefactor band, as determined\r\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\r\n     *\r\n     * returns number of sfb's with energy > ATH\r\n     */\r\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\r\n        var pxminPos = 0;\r\n        var gfc = gfp.internal_flags;\r\n        var gsfb, j = 0, ath_over = 0;\r\n        var ATH = gfc.ATH;\r\n        var xr = cod_info.xr;\r\n        var enable_athaa_fix = (gfp.VBR == VbrMode.vbr_mtrh) ? 1 : 0;\r\n        var masking_lower = gfc.masking_lower;\r\n\r\n        if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\r\n            /* was already done in PSY-Model */\r\n            masking_lower = 1.0;\r\n        }\r\n\r\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\r\n            var en0, xmin;\r\n            var rh1, rh2;\r\n            var width, l;\r\n\r\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\r\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\r\n            else\r\n                xmin = ATH.adjust * ATH.l[gsfb];\r\n\r\n            width = cod_info.width[gsfb];\r\n            rh1 = xmin / width;\r\n            rh2 = DBL_EPSILON;\r\n            l = width >> 1;\r\n            en0 = 0.0;\r\n            do {\r\n                var xa, xb;\r\n                xa = xr[j] * xr[j];\r\n                en0 += xa;\r\n                rh2 += (xa < rh1) ? xa : rh1;\r\n                j++;\r\n                xb = xr[j] * xr[j];\r\n                en0 += xb;\r\n                rh2 += (xb < rh1) ? xb : rh1;\r\n                j++;\r\n            } while (--l > 0);\r\n            if (en0 > xmin)\r\n                ath_over++;\r\n\r\n            if (gsfb == Encoder.SBPSY_l) {\r\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\r\n                if (rh2 < x) {\r\n                    rh2 = x;\r\n                }\r\n            }\r\n            if (enable_athaa_fix != 0) {\r\n                xmin = rh2;\r\n            }\r\n            if (!gfp.ATHonly) {\r\n                var e = ratio.en.l[gsfb];\r\n                if (e > 0.0) {\r\n                    var x;\r\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\r\n                    if (enable_athaa_fix != 0)\r\n                        x *= gfc.nsPsy.longfact[gsfb];\r\n                    if (xmin < x)\r\n                        xmin = x;\r\n                }\r\n            }\r\n            if (enable_athaa_fix != 0)\r\n                pxmin[pxminPos++] = xmin;\r\n            else\r\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\r\n        }\r\n        /* end of long block loop */\r\n\r\n        /* use this function to determine the highest non-zero coeff */\r\n        var max_nonzero = 575;\r\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n            // NORM, START or STOP type, but not SHORT\r\n            var k = 576;\r\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\r\n                max_nonzero = k;\r\n            }\r\n        }\r\n        cod_info.max_nonzero_coeff = max_nonzero;\r\n\r\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\r\n            var width, b;\r\n            var tmpATH;\r\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\r\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\r\n            else\r\n                tmpATH = ATH.adjust * ATH.s[sfb];\r\n\r\n            width = cod_info.width[gsfb];\r\n            for (b = 0; b < 3; b++) {\r\n                var en0 = 0.0, xmin;\r\n                var rh1, rh2;\r\n                var l = width >> 1;\r\n\r\n                rh1 = tmpATH / width;\r\n                rh2 = DBL_EPSILON;\r\n                do {\r\n                    var xa, xb;\r\n                    xa = xr[j] * xr[j];\r\n                    en0 += xa;\r\n                    rh2 += (xa < rh1) ? xa : rh1;\r\n                    j++;\r\n                    xb = xr[j] * xr[j];\r\n                    en0 += xb;\r\n                    rh2 += (xb < rh1) ? xb : rh1;\r\n                    j++;\r\n                } while (--l > 0);\r\n                if (en0 > tmpATH)\r\n                    ath_over++;\r\n                if (sfb == Encoder.SBPSY_s) {\r\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\r\n                    if (rh2 < x) {\r\n                        rh2 = x;\r\n                    }\r\n                }\r\n                if (enable_athaa_fix != 0)\r\n                    xmin = rh2;\r\n                else\r\n                    xmin = tmpATH;\r\n\r\n                if (!gfp.ATHonly && !gfp.ATHshort) {\r\n                    var e = ratio.en.s[sfb][b];\r\n                    if (e > 0.0) {\r\n                        var x;\r\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\r\n                        if (enable_athaa_fix != 0)\r\n                            x *= gfc.nsPsy.shortfact[sfb];\r\n                        if (xmin < x)\r\n                            xmin = x;\r\n                    }\r\n                }\r\n                if (enable_athaa_fix != 0)\r\n                    pxmin[pxminPos++] = xmin;\r\n                else\r\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\r\n            }\r\n            /* b */\r\n            if (gfp.useTemporal) {\r\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\r\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\r\n                        * gfc.decay;\r\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\r\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\r\n                        * gfc.decay;\r\n            }\r\n        }\r\n        /* end of short block sfb loop */\r\n\r\n        return ath_over;\r\n    };\r\n\r\n    function StartLine(j) {\r\n        this.s = j;\r\n    }\r\n\r\n    this.calc_noise_core = function (cod_info, startline, l, step) {\r\n        var noise = 0;\r\n        var j = startline.s;\r\n        var ix = cod_info.l3_enc;\r\n\r\n        if (j > cod_info.count1) {\r\n            while ((l--) != 0) {\r\n                var temp;\r\n                temp = cod_info.xr[j];\r\n                j++;\r\n                noise += temp * temp;\r\n                temp = cod_info.xr[j];\r\n                j++;\r\n                noise += temp * temp;\r\n            }\r\n        } else if (j > cod_info.big_values) {\r\n            var ix01 = new_float(2);\r\n            ix01[0] = 0;\r\n            ix01[1] = step;\r\n            while ((l--) != 0) {\r\n                var temp;\r\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\r\n                j++;\r\n                noise += temp * temp;\r\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\r\n                j++;\r\n                noise += temp * temp;\r\n            }\r\n        } else {\r\n            while ((l--) != 0) {\r\n                var temp;\r\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\r\n                j++;\r\n                noise += temp * temp;\r\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\r\n                j++;\r\n                noise += temp * temp;\r\n            }\r\n        }\r\n\r\n        startline.s = j;\r\n        return noise;\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     * -oo dB  =>  -1.00\r\n     * - 6 dB  =>  -0.97\r\n     * - 3 dB  =>  -0.80\r\n     * - 2 dB  =>  -0.64\r\n     * - 1 dB  =>  -0.38\r\n     *   0 dB  =>   0.00\r\n     * + 1 dB  =>  +0.49\r\n     * + 2 dB  =>  +1.06\r\n     * + 3 dB  =>  +1.68\r\n     * + 6 dB  =>  +3.69\r\n     * +10 dB  =>  +6.45\r\n     * </PRE>\r\n     */\r\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\r\n        var distortPos = 0;\r\n        var l3_xminPos = 0;\r\n        var sfb, l, over = 0;\r\n        var over_noise_db = 0;\r\n        /* 0 dB relative to masking */\r\n        var tot_noise_db = 0;\r\n        /* -200 dB relative to masking */\r\n        var max_noise = -20.0;\r\n        var j = 0;\r\n        var scalefac = cod_info.scalefac;\r\n        var scalefacPos = 0;\r\n\r\n        res.over_SSD = 0;\r\n\r\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\r\n            var s = cod_info.global_gain\r\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\r\n                    : 0)) << (cod_info.scalefac_scale + 1))\r\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\r\n            var noise = 0.0;\r\n\r\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\r\n\r\n                /* use previously computed values */\r\n                noise = prev_noise.noise[sfb];\r\n                j += cod_info.width[sfb];\r\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\r\n\r\n                noise = prev_noise.noise_log[sfb];\r\n\r\n            } else {\r\n                var step = POW20(s);\r\n                l = cod_info.width[sfb] >> 1;\r\n\r\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\r\n                    var usefullsize;\r\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\r\n\r\n                    if (usefullsize > 0)\r\n                        l = usefullsize >> 1;\r\n                    else\r\n                        l = 0;\r\n                }\r\n\r\n                var sl = new StartLine(j);\r\n                noise = this.calc_noise_core(cod_info, sl, l, step);\r\n                j = sl.s;\r\n\r\n                if (prev_noise != null) {\r\n                    /* save noise values */\r\n                    prev_noise.step[sfb] = s;\r\n                    prev_noise.noise[sfb] = noise;\r\n                }\r\n\r\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\r\n\r\n                /* multiplying here is adding in dB, but can overflow */\r\n                noise = Util.FAST_LOG10(Math.max(noise, 1E-20));\r\n\r\n                if (prev_noise != null) {\r\n                    /* save noise values */\r\n                    prev_noise.noise_log[sfb] = noise;\r\n                }\r\n            }\r\n\r\n            if (prev_noise != null) {\r\n                /* save noise values */\r\n                prev_noise.global_gain = cod_info.global_gain;\r\n            }\r\n\r\n            tot_noise_db += noise;\r\n\r\n            if (noise > 0.0) {\r\n                var tmp;\r\n\r\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\r\n                res.over_SSD += tmp * tmp;\r\n\r\n                over++;\r\n                /* multiplying here is adding in dB -but can overflow */\r\n                /* over_noise *= noise; */\r\n                over_noise_db += noise;\r\n            }\r\n            max_noise = Math.max(max_noise, noise);\r\n\r\n        }\r\n\r\n        res.over_count = over;\r\n        res.tot_noise = tot_noise_db;\r\n        res.over_noise = over_noise_db;\r\n        res.max_noise = max_noise;\r\n\r\n        return over;\r\n    }\r\n\r\n    /**\r\n     * updates plotting data\r\n     *\r\n     * Mark Taylor 2000-??-??\r\n     *\r\n     * Robert Hegemann: moved noise/distortion calc into it\r\n     */\r\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\r\n        var gfc = gfp.internal_flags;\r\n        var sfb, sfb2;\r\n        var l;\r\n        var en0, en1;\r\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\r\n        var scalefac = cod_info.scalefac;\r\n\r\n        var l3_xmin = new_float(L3Side.SFBMAX);\r\n        var xfsf = new_float(L3Side.SFBMAX);\r\n        var noise = new CalcNoiseResult();\r\n\r\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\r\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\r\n\r\n        var j = 0;\r\n        sfb2 = cod_info.sfb_lmax;\r\n        if (cod_info.block_type != Encoder.SHORT_TYPE\r\n            && 0 == cod_info.mixed_block_flag)\r\n            sfb2 = 22;\r\n        for (sfb = 0; sfb < sfb2; sfb++) {\r\n            var start = gfc.scalefac_band.l[sfb];\r\n            var end = gfc.scalefac_band.l[sfb + 1];\r\n            var bw = end - start;\r\n            for (en0 = 0.0; j < end; j++)\r\n                en0 += cod_info.xr[j] * cod_info.xr[j];\r\n            en0 /= bw;\r\n            /* convert to MDCT units */\r\n            /* scaling so it shows up on FFT plot */\r\n            en1 = 1e15;\r\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\r\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\r\n\r\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\r\n                en0 = en0 / ratio.en.l[sfb];\r\n            else\r\n                en0 = 0.0;\r\n\r\n            gfc.pinfo.thr[gr][ch][sfb] = en1\r\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\r\n\r\n            /* there is no scalefactor bands >= SBPSY_l */\r\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\r\n            if (cod_info.preflag != 0 && sfb >= 11)\r\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\r\n\r\n            if (sfb < Encoder.SBPSY_l) {\r\n                /* scfsi should be decoded by caller side */\r\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\r\n            }\r\n        }\r\n        /* for sfb */\r\n\r\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n            sfb2 = sfb;\r\n            for (sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\r\n                var start = gfc.scalefac_band.s[sfb];\r\n                var end = gfc.scalefac_band.s[sfb + 1];\r\n                var bw = end - start;\r\n                for (var i = 0; i < 3; i++) {\r\n                    for (en0 = 0.0, l = start; l < end; l++) {\r\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\r\n                        j++;\r\n                    }\r\n                    en0 = Math.max(en0 / bw, 1e-20);\r\n                    /* convert to MDCT units */\r\n                    /* scaling so it shows up on FFT plot */\r\n                    en1 = 1e15;\r\n\r\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\r\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\r\n                        * xfsf[sfb2] / bw;\r\n                    if (ratio.en.s[sfb][i] > 0)\r\n                        en0 = en0 / ratio.en.s[sfb][i];\r\n                    else\r\n                        en0 = 0.0;\r\n                    if (gfp.ATHonly || gfp.ATHshort)\r\n                        en0 = 0;\r\n\r\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\r\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\r\n                            gfc.ATH.s[sfb]);\r\n\r\n                    /* there is no scalefactor bands >= SBPSY_s */\r\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\r\n                        * cod_info.subblock_gain[i];\r\n                    if (sfb < Encoder.SBPSY_s) {\r\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\r\n                            * scalefac[sfb2];\r\n                    }\r\n                    sfb2++;\r\n                }\r\n            }\r\n        }\r\n        /* block type short */\r\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\r\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\r\n            + cod_info.part2_length;\r\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\r\n\r\n        gfc.pinfo.over[gr][ch] = noise.over_count;\r\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\r\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\r\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\r\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\r\n    }\r\n\r\n    /**\r\n     * updates plotting data for a whole frame\r\n     *\r\n     * Robert Hegemann 2000-10-21\r\n     */\r\n    function set_frame_pinfo(gfp, ratio) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        gfc.masking_lower = 1.0;\r\n\r\n        /*\r\n         * for every granule and channel patch l3_enc and set info\r\n         */\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                var cod_info = gfc.l3_side.tt[gr][ch];\r\n                var scalefac_sav = new_int(L3Side.SFBMAX);\r\n                System.arraycopy(cod_info.scalefac, 0, scalefac_sav, 0,\r\n                    scalefac_sav.length);\r\n\r\n                /*\r\n                 * reconstruct the scalefactors in case SCFSI was used\r\n                 */\r\n                if (gr == 1) {\r\n                    var sfb;\r\n                    for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\r\n                        if (cod_info.scalefac[sfb] < 0) /* scfsi */\r\n                            cod_info.scalefac[sfb] = gfc.l3_side.tt[0][ch].scalefac[sfb];\r\n                    }\r\n                }\r\n\r\n                set_pinfo(gfp, cod_info, ratio[gr][ch], gr, ch);\r\n                System.arraycopy(scalefac_sav, 0, cod_info.scalefac, 0,\r\n                    scalefac_sav.length);\r\n            }\r\n            /* for ch */\r\n        }\r\n        /* for gr */\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction CalcNoiseData() {\r\n    this.global_gain = 0;\r\n    this.sfb_count1 = 0;\r\n    this.step = new_int(39);\r\n    this.noise = new_float(39);\r\n    this.noise_log = new_float(39);\r\n}\r\n\r\n//package mp3;\r\n\r\n\r\nfunction GrInfo() {\r\n    //float xr[] = new float[576];\r\n    this.xr = new_float(576);\r\n    //int l3_enc[] = new int[576];\r\n    this.l3_enc = new_int(576);\r\n    //int scalefac[] = new int[L3Side.SFBMAX];\r\n    this.scalefac = new_int(L3Side.SFBMAX);\r\n    this.xrpow_max = 0.;\r\n\r\n    this.part2_3_length = 0;\r\n    this.big_values = 0;\r\n    this.count1 = 0;\r\n    this.global_gain = 0;\r\n    this.scalefac_compress = 0;\r\n    this.block_type = 0;\r\n    this.mixed_block_flag = 0;\r\n    this.table_select = new_int(3);\r\n    this.subblock_gain = new_int(3 + 1);\r\n    this.region0_count = 0;\r\n    this.region1_count = 0;\r\n    this.preflag = 0;\r\n    this.scalefac_scale = 0;\r\n    this.count1table_select = 0;\r\n\r\n    this.part2_length = 0;\r\n    this.sfb_lmax = 0;\r\n    this.sfb_smin = 0;\r\n    this.psy_lmax = 0;\r\n    this.sfbmax = 0;\r\n    this.psymax = 0;\r\n    this.sfbdivide = 0;\r\n    this.width = new_int(L3Side.SFBMAX);\r\n    this.window = new_int(L3Side.SFBMAX);\r\n    this.count1bits = 0;\r\n    /**\r\n     * added for LSF\r\n     */\r\n    this.sfb_partition_table = null;\r\n    this.slen = new_int(4);\r\n\r\n    this.max_nonzero_coeff = 0;\r\n\r\n    var self = this;\r\n    function clone_int(array) {\r\n        return new Int32Array(array);\r\n    }\r\n    function clone_float(array) {\r\n        return new Float32Array(array);\r\n    }\r\n    this.assign = function (other) {\r\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\r\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\r\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\r\n        self.xrpow_max = other.xrpow_max;\r\n\r\n        self.part2_3_length = other.part2_3_length;\r\n        self.big_values = other.big_values;\r\n        self.count1 = other.count1;\r\n        self.global_gain = other.global_gain;\r\n        self.scalefac_compress = other.scalefac_compress;\r\n        self.block_type = other.block_type;\r\n        self.mixed_block_flag = other.mixed_block_flag;\r\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\r\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\r\n        self.region0_count = other.region0_count;\r\n        self.region1_count = other.region1_count;\r\n        self.preflag = other.preflag;\r\n        self.scalefac_scale = other.scalefac_scale;\r\n        self.count1table_select = other.count1table_select;\r\n\r\n        self.part2_length = other.part2_length;\r\n        self.sfb_lmax = other.sfb_lmax;\r\n        self.sfb_smin = other.sfb_smin;\r\n        self.psy_lmax = other.psy_lmax;\r\n        self.sfbmax = other.sfbmax;\r\n        self.psymax = other.psymax;\r\n        self.sfbdivide = other.sfbdivide;\r\n        self.width = clone_int(other.width); //.slice(0); //.clone();\r\n        self.window = clone_int(other.window); //.slice(0); //.clone();\r\n        self.count1bits = other.count1bits;\r\n\r\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\r\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\r\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\r\n    }\r\n}\r\n\r\n\r\nvar L3Side = {};\r\n\r\n\r\n\t/**\r\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\r\n\t */\r\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\r\n\r\n/*\r\n * MP3 quantization\r\n *\r\n *      Copyright (c) 1999-2000 Mark Taylor\r\n *      Copyright (c) 1999-2003 Takehiro Tominaga\r\n *      Copyright (c) 2000-2007 Robert Hegemann\r\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n//package mp3;\r\n\r\n//import java.util.Arrays;\r\n\r\n\r\nfunction Quantize() {\r\n    var bs;\r\n    this.rv = null;\r\n    var rv;\r\n    this.qupvt = null;\r\n    var qupvt;\r\n\r\n    var vbr = new VBRQuantize();\r\n    var tk;\r\n\r\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\r\n        bs = _bs;\r\n        rv = _rv;\r\n        this.rv = _rv;\r\n        qupvt = _qupvt;\r\n        this.qupvt = _qupvt;\r\n        tk = _tk;\r\n        vbr.setModules(qupvt, tk);\r\n    }\r\n\r\n    /**\r\n     * convert from L/R <. Mid/Side\r\n     */\r\n    this.ms_convert = function (l3_side, gr) {\r\n        for (var i = 0; i < 576; ++i) {\r\n            var l = l3_side.tt[gr][0].xr[i];\r\n            var r = l3_side.tt[gr][1].xr[i];\r\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util.SQRT2 * 0.5);\r\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util.SQRT2 * 0.5);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * mt 6/99\r\n     *\r\n     * initializes cod_info, scalefac and xrpow\r\n     *\r\n     * returns 0 if all energies in xr are zero, else 1\r\n     */\r\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\r\n        sum = 0;\r\n        for (var i = 0; i <= upper; ++i) {\r\n            var tmp = Math.abs(cod_info.xr[i]);\r\n            sum += tmp;\r\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\r\n\r\n            if (xrpow[i] > cod_info.xrpow_max)\r\n                cod_info.xrpow_max = xrpow[i];\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\r\n        var sum = 0;\r\n        var upper = 0 | cod_info.max_nonzero_coeff;\r\n\r\n        cod_info.xrpow_max = 0;\r\n\r\n        /*\r\n         * check if there is some energy we have to quantize and calculate xrpow\r\n         * matching our fresh scalefactors\r\n         */\r\n\r\n        Arrays.fill(xrpow, upper, 576, 0);\r\n\r\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\r\n\r\n        /*\r\n         * return 1 if we have something to quantize, else 0\r\n         */\r\n        if (sum > 1E-20) {\r\n            var j = 0;\r\n            if ((gfc.substep_shaping & 2) != 0)\r\n                j = 1;\r\n\r\n            for (var i = 0; i < cod_info.psymax; i++)\r\n                gfc.pseudohalf[i] = j;\r\n\r\n            return true;\r\n        }\r\n\r\n        Arrays.fill(cod_info.l3_enc, 0, 576, 0);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gabriel Bouvigne feb/apr 2003<BR>\r\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\r\n     *\r\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\r\n     * stops on the first coeff higher than ath.\r\n     */\r\n    function psfb21_analogsilence(gfc, cod_info) {\r\n        var ath = gfc.ATH;\r\n        var xr = cod_info.xr;\r\n\r\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n            /* NORM, START or STOP type, but not SHORT blocks */\r\n            var stop = false;\r\n            for (var gsfb = Encoder.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\r\n                var start = gfc.scalefac_band.psfb21[gsfb];\r\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\r\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\r\n                    ath.floor);\r\n\r\n                if (gfc.nsPsy.longfact[21] > 1e-12)\r\n                    ath21 *= gfc.nsPsy.longfact[21];\r\n\r\n                for (var j = end - 1; j >= start; j--) {\r\n                    if (Math.abs(xr[j]) < ath21)\r\n                        xr[j] = 0;\r\n                    else {\r\n                        stop = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            /* note: short blocks coeffs are reordered */\r\n            for (var block = 0; block < 3; block++) {\r\n                var stop = false;\r\n                for (var gsfb = Encoder.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\r\n                    var start = gfc.scalefac_band.s[12]\r\n                        * 3\r\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\r\n                        * block\r\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\r\n                    var end = start\r\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\r\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\r\n                        ath.floor);\r\n\r\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\r\n                        ath12 *= gfc.nsPsy.shortfact[12];\r\n\r\n                    for (var j = end - 1; j >= start; j--) {\r\n                        if (Math.abs(xr[j]) < ath12)\r\n                            xr[j] = 0;\r\n                        else {\r\n                            stop = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    this.init_outer_loop = function (gfc, cod_info) {\r\n        /*\r\n         * initialize fresh cod_info\r\n         */\r\n        cod_info.part2_3_length = 0;\r\n        cod_info.big_values = 0;\r\n        cod_info.count1 = 0;\r\n        cod_info.global_gain = 210;\r\n        cod_info.scalefac_compress = 0;\r\n        /* mixed_block_flag, block_type was set in psymodel.c */\r\n        cod_info.table_select[0] = 0;\r\n        cod_info.table_select[1] = 0;\r\n        cod_info.table_select[2] = 0;\r\n        cod_info.subblock_gain[0] = 0;\r\n        cod_info.subblock_gain[1] = 0;\r\n        cod_info.subblock_gain[2] = 0;\r\n        cod_info.subblock_gain[3] = 0;\r\n        /* this one is always 0 */\r\n        cod_info.region0_count = 0;\r\n        cod_info.region1_count = 0;\r\n        cod_info.preflag = 0;\r\n        cod_info.scalefac_scale = 0;\r\n        cod_info.count1table_select = 0;\r\n        cod_info.part2_length = 0;\r\n        cod_info.sfb_lmax = Encoder.SBPSY_l;\r\n        cod_info.sfb_smin = Encoder.SBPSY_s;\r\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder.SBMAX_l : Encoder.SBPSY_l;\r\n        cod_info.psymax = cod_info.psy_lmax;\r\n        cod_info.sfbmax = cod_info.sfb_lmax;\r\n        cod_info.sfbdivide = 11;\r\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\r\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\r\n                - gfc.scalefac_band.l[sfb];\r\n            /* which is always 0. */\r\n            cod_info.window[sfb] = 3;\r\n        }\r\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n            var ixwork = new_float(576);\r\n\r\n            cod_info.sfb_smin = 0;\r\n            cod_info.sfb_lmax = 0;\r\n            if (cod_info.mixed_block_flag != 0) {\r\n                /*\r\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\r\n                 * sfbs 0-5 long block, 3-12 short blocks\r\n                 */\r\n                cod_info.sfb_smin = 3;\r\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\r\n            }\r\n            cod_info.psymax = cod_info.sfb_lmax\r\n                + 3\r\n                * ((gfc.sfb21_extra ? Encoder.SBMAX_s : Encoder.SBPSY_s) - cod_info.sfb_smin);\r\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\r\n                * (Encoder.SBPSY_s - cod_info.sfb_smin);\r\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\r\n            cod_info.psy_lmax = cod_info.sfb_lmax;\r\n            /* re-order the short blocks, for more efficient encoding below */\r\n            /* By Takehiro TOMINAGA */\r\n            /*\r\n             * Within each scalefactor band, data is given for successive time\r\n             * windows, beginning with window 0 and ending with window 2. Within\r\n             * each window, the quantized values are then arranged in order of\r\n             * increasing frequency...\r\n             */\r\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\r\n            System.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\r\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\r\n                var start = gfc.scalefac_band.s[sfb];\r\n                var end = gfc.scalefac_band.s[sfb + 1];\r\n                for (var window = 0; window < 3; window++) {\r\n                    for (var l = start; l < end; l++) {\r\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\r\n                    }\r\n                }\r\n            }\r\n\r\n            var j = cod_info.sfb_lmax;\r\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\r\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\r\n                    - gfc.scalefac_band.s[sfb];\r\n                cod_info.window[j] = 0;\r\n                cod_info.window[j + 1] = 1;\r\n                cod_info.window[j + 2] = 2;\r\n                j += 3;\r\n            }\r\n        }\r\n\r\n        cod_info.count1bits = 0;\r\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\r\n        cod_info.slen[0] = 0;\r\n        cod_info.slen[1] = 0;\r\n        cod_info.slen[2] = 0;\r\n        cod_info.slen[3] = 0;\r\n\r\n        cod_info.max_nonzero_coeff = 575;\r\n\r\n        /*\r\n         * fresh scalefactors are all zero\r\n         */\r\n        Arrays.fill(cod_info.scalefac, 0);\r\n\r\n        psfb21_analogsilence(gfc, cod_info);\r\n    };\r\n\r\n    function BinSearchDirection(ordinal) {\r\n        this.ordinal = ordinal;\r\n    }\r\n\r\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\r\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\r\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\r\n\r\n    /**\r\n     * author/date??\r\n     *\r\n     * binary step size search used by outer_loop to get a quantizer step size\r\n     * to start with\r\n     */\r\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\r\n        var nBits;\r\n        var CurrentStep = gfc.CurrentStep[ch];\r\n        var flagGoneOver = false;\r\n        var start = gfc.OldValue[ch];\r\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\r\n        cod_info.global_gain = start;\r\n        desired_rate -= cod_info.part2_length;\r\n\r\n        for (; ;) {\r\n            var step;\r\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\r\n\r\n            if (CurrentStep == 1 || nBits == desired_rate)\r\n                break;\r\n            /* nothing to adjust anymore */\r\n\r\n            if (nBits > desired_rate) {\r\n                /* increase Quantize_StepSize */\r\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\r\n                    flagGoneOver = true;\r\n\r\n                if (flagGoneOver)\r\n                    CurrentStep /= 2;\r\n                Direction = BinSearchDirection.BINSEARCH_UP;\r\n                step = CurrentStep;\r\n            } else {\r\n                /* decrease Quantize_StepSize */\r\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\r\n                    flagGoneOver = true;\r\n\r\n                if (flagGoneOver)\r\n                    CurrentStep /= 2;\r\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\r\n                step = -CurrentStep;\r\n            }\r\n            cod_info.global_gain += step;\r\n            if (cod_info.global_gain < 0) {\r\n                cod_info.global_gain = 0;\r\n                flagGoneOver = true;\r\n            }\r\n            if (cod_info.global_gain > 255) {\r\n                cod_info.global_gain = 255;\r\n                flagGoneOver = true;\r\n            }\r\n        }\r\n\r\n\r\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\r\n            cod_info.global_gain++;\r\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\r\n        }\r\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\r\n        gfc.OldValue[ch] = cod_info.global_gain;\r\n        cod_info.part2_3_length = nBits;\r\n        return nBits;\r\n    }\r\n\r\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\r\n        var distort = new_float(L3Side.SFBMAX);\r\n\r\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder.SHORT_TYPE)\r\n            || (gfc.substep_shaping & 0x80) != 0)\r\n            return;\r\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult(), null);\r\n        for (var j = 0; j < 576; j++) {\r\n            var xr = 0.0;\r\n            if (gi.l3_enc[j] != 0)\r\n                xr = Math.abs(gi.xr[j]);\r\n            work[j] = xr;\r\n        }\r\n\r\n        var j = 0;\r\n        var sfb = 8;\r\n        if (gi.block_type == Encoder.SHORT_TYPE)\r\n            sfb = 6;\r\n        do {\r\n            var allowedNoise, trancateThreshold;\r\n            var nsame, start;\r\n\r\n            var width = gi.width[sfb];\r\n            j += width;\r\n            if (distort[sfb] >= 1.0)\r\n                continue;\r\n\r\n            Arrays.sort(work, j - width, width);\r\n            if (BitStream.EQ(work[j - 1], 0.0))\r\n                continue;\r\n            /* all zero sfb */\r\n\r\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\r\n            trancateThreshold = 0.0;\r\n            start = 0;\r\n            do {\r\n                var noise;\r\n                for (nsame = 1; start + nsame < width; nsame++)\r\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\r\n                        + nsame - width]))\r\n                        break;\r\n\r\n                noise = work[start + j - width] * work[start + j - width]\r\n                    * nsame;\r\n                if (allowedNoise < noise) {\r\n                    if (start != 0)\r\n                        trancateThreshold = work[start + j - width - 1];\r\n                    break;\r\n                }\r\n                allowedNoise -= noise;\r\n                start += nsame;\r\n            } while (start < width);\r\n            if (BitStream.EQ(trancateThreshold, 0.0))\r\n                continue;\r\n\r\n            do {\r\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\r\n                    gi.l3_enc[j - width] = 0;\r\n            } while (--width > 0);\r\n        } while (++sfb < gi.psymax);\r\n\r\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\r\n    };\r\n\r\n    /**\r\n     * author/date??\r\n     *\r\n     * Function: Returns zero if there is a scalefac which has not been\r\n     * amplified. Otherwise it returns one.\r\n     */\r\n    function loop_break(cod_info) {\r\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\r\n            if (cod_info.scalefac[sfb]\r\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\r\n                return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\r\n\r\n    function penalties(noise) {\r\n        return Util.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\r\n    }\r\n\r\n    /**\r\n     * author/date??\r\n     *\r\n     * several different codes to decide which quantization is better\r\n     */\r\n    function get_klemm_noise(distort, gi) {\r\n        var klemm_noise = 1E-37;\r\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\r\n            klemm_noise += penalties(distort[sfb]);\r\n\r\n        return Math.max(1e-20, klemm_noise);\r\n    }\r\n\r\n    function quant_compare(quant_comp, best, calc, gi, distort) {\r\n        /**\r\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\r\n         *\r\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\r\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\r\n         * max_noise: max quantization noise\r\n         */\r\n        var better;\r\n\r\n        switch (quant_comp) {\r\n            default:\r\n            case 9:\r\n            {\r\n                if (best.over_count > 0) {\r\n                    /* there are distorted sfb */\r\n                    better = calc.over_SSD <= best.over_SSD;\r\n                    if (calc.over_SSD == best.over_SSD)\r\n                        better = calc.bits < best.bits;\r\n                } else {\r\n                    /* no distorted sfb */\r\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\r\n                }\r\n                break;\r\n            }\r\n\r\n            case 0:\r\n                better = calc.over_count < best.over_count\r\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\r\n                    || (calc.over_count == best.over_count\r\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\r\n                break;\r\n\r\n            case 8:\r\n                calc.max_noise = get_klemm_noise(distort, gi);\r\n            //$FALL-THROUGH$\r\n            case 1:\r\n                better = calc.max_noise < best.max_noise;\r\n                break;\r\n            case 2:\r\n                better = calc.tot_noise < best.tot_noise;\r\n                break;\r\n            case 3:\r\n                better = (calc.tot_noise < best.tot_noise)\r\n                    && (calc.max_noise < best.max_noise);\r\n                break;\r\n            case 4:\r\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\r\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\r\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\r\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\r\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\r\n                    + best.over_noise)\r\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\r\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\r\n                    + calc.over_noise < best.tot_noise\r\n                    + best.over_noise)\r\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\r\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\r\n                    + calc.over_noise + calc.over_noise < best.tot_noise\r\n                    + best.over_noise + best.over_noise);\r\n                break;\r\n            case 5:\r\n                better = calc.over_noise < best.over_noise\r\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\r\n                break;\r\n            case 6:\r\n                better = calc.over_noise < best.over_noise\r\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\r\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\r\n                break;\r\n            case 7:\r\n                better = calc.over_count < best.over_count\r\n                    || calc.over_noise < best.over_noise;\r\n                break;\r\n        }\r\n\r\n        if (best.over_count == 0) {\r\n            /*\r\n             * If no distorted bands, only use this quantization if it is\r\n             * better, and if it uses less bits. Unfortunately, part2_3_length\r\n             * is sometimes a poor estimator of the final size at low bitrates.\r\n             */\r\n            better = better && calc.bits < best.bits;\r\n        }\r\n\r\n        return better;\r\n    }\r\n\r\n    /**\r\n     * author/date??\r\n     *\r\n     * <PRE>\r\n     *  Amplify the scalefactor bands that violate the masking threshold.\r\n     *  See ISO 11172-3 Section C.1.5.4.3.5\r\n     *\r\n     *  distort[] = noise/masking\r\n     *  distort[] > 1   ==> noise is not masked\r\n     *  distort[] < 1   ==> noise is masked\r\n     *  max_dist = maximum value of distort[]\r\n     *\r\n     *  Three algorithms:\r\n     *  noise_shaping_amp\r\n     *        0             Amplify all bands with distort[]>1.\r\n     *\r\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\r\n     *                     ( 50% in the db scale)\r\n     *\r\n     *        2             Amplify first band with distort[] >= max_dist;\r\n     *\r\n     *\r\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\r\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\r\n     *  amplify at least one band.\r\n     * </PRE>\r\n     */\r\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\r\n        var gfc = gfp.internal_flags;\r\n        var ifqstep34;\r\n\r\n        if (cod_info.scalefac_scale == 0) {\r\n            ifqstep34 = 1.29683955465100964055;\r\n            /* 2**(.75*.5) */\r\n        } else {\r\n            ifqstep34 = 1.68179283050742922612;\r\n            /* 2**(.75*1) */\r\n        }\r\n\r\n        /* compute maximum value of distort[] */\r\n        var trigger = 0;\r\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\r\n            if (trigger < distort[sfb])\r\n                trigger = distort[sfb];\r\n        }\r\n\r\n        var noise_shaping_amp = gfc.noise_shaping_amp;\r\n        if (noise_shaping_amp == 3) {\r\n            if (bRefine)\r\n                noise_shaping_amp = 2;\r\n            else\r\n                noise_shaping_amp = 1;\r\n        }\r\n        switch (noise_shaping_amp) {\r\n            case 2:\r\n                /* amplify exactly 1 band */\r\n                break;\r\n\r\n            case 1:\r\n                /* amplify bands within 50% of max (on db scale) */\r\n                if (trigger > 1.0)\r\n                    trigger = Math.pow(trigger, .5);\r\n                else\r\n                    trigger *= .95;\r\n                break;\r\n\r\n            case 0:\r\n            default:\r\n                /* ISO algorithm. amplify all bands with distort>1 */\r\n                if (trigger > 1.0)\r\n                    trigger = 1.0;\r\n                else\r\n                    trigger *= .95;\r\n                break;\r\n        }\r\n\r\n        var j = 0;\r\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\r\n            var width = cod_info.width[sfb];\r\n            var l;\r\n            j += width;\r\n            if (distort[sfb] < trigger)\r\n                continue;\r\n\r\n            if ((gfc.substep_shaping & 2) != 0) {\r\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\r\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\r\n                    return;\r\n            }\r\n            cod_info.scalefac[sfb]++;\r\n            for (l = -width; l < 0; l++) {\r\n                xrpow[j + l] *= ifqstep34;\r\n                if (xrpow[j + l] > cod_info.xrpow_max)\r\n                    cod_info.xrpow_max = xrpow[j + l];\r\n            }\r\n\r\n            if (gfc.noise_shaping_amp == 2)\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Takehiro Tominaga 2000-xx-xx\r\n     *\r\n     * turns on scalefac scale and adjusts scalefactors\r\n     */\r\n    function inc_scalefac_scale(cod_info, xrpow) {\r\n        var ifqstep34 = 1.29683955465100964055;\r\n\r\n        var j = 0;\r\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\r\n            var width = cod_info.width[sfb];\r\n            var s = cod_info.scalefac[sfb];\r\n            if (cod_info.preflag != 0)\r\n                s += qupvt.pretab[sfb];\r\n            j += width;\r\n            if ((s & 1) != 0) {\r\n                s++;\r\n                for (var l = -width; l < 0; l++) {\r\n                    xrpow[j + l] *= ifqstep34;\r\n                    if (xrpow[j + l] > cod_info.xrpow_max)\r\n                        cod_info.xrpow_max = xrpow[j + l];\r\n                }\r\n            }\r\n            cod_info.scalefac[sfb] = s >> 1;\r\n        }\r\n        cod_info.preflag = 0;\r\n        cod_info.scalefac_scale = 1;\r\n    }\r\n\r\n    /**\r\n     * Takehiro Tominaga 2000-xx-xx\r\n     *\r\n     * increases the subblock gain and adjusts scalefactors\r\n     */\r\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\r\n        var sfb;\r\n        var scalefac = cod_info.scalefac;\r\n\r\n        /* subbloc_gain can't do anything in the long block region */\r\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\r\n            if (scalefac[sfb] >= 16)\r\n                return true;\r\n        }\r\n\r\n        for (var window = 0; window < 3; window++) {\r\n            var s1 = 0;\r\n            var s2 = 0;\r\n\r\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\r\n                if (s1 < scalefac[sfb])\r\n                    s1 = scalefac[sfb];\r\n            }\r\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\r\n                if (s2 < scalefac[sfb])\r\n                    s2 = scalefac[sfb];\r\n            }\r\n\r\n            if (s1 < 16 && s2 < 8)\r\n                continue;\r\n\r\n            if (cod_info.subblock_gain[window] >= 7)\r\n                return true;\r\n\r\n            /*\r\n             * even though there is no scalefactor for sfb12 subblock gain\r\n             * affects upper frequencies too, that's why we have to go up to\r\n             * SBMAX_s\r\n             */\r\n            cod_info.subblock_gain[window]++;\r\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\r\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\r\n                var amp;\r\n                var width = cod_info.width[sfb];\r\n                var s = scalefac[sfb];\r\n                s = s - (4 >> cod_info.scalefac_scale);\r\n                if (s >= 0) {\r\n                    scalefac[sfb] = s;\r\n                    j += width * 3;\r\n                    continue;\r\n                }\r\n\r\n                scalefac[sfb] = 0;\r\n                {\r\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\r\n                    amp = qupvt.IPOW20(gain);\r\n                }\r\n                j += width * (window + 1);\r\n                for (var l = -width; l < 0; l++) {\r\n                    xrpow[j + l] *= amp;\r\n                    if (xrpow[j + l] > cod_info.xrpow_max)\r\n                        cod_info.xrpow_max = xrpow[j + l];\r\n                }\r\n                j += width * (3 - window - 1);\r\n            }\r\n\r\n            {\r\n                var amp = qupvt.IPOW20(202);\r\n                j += cod_info.width[sfb] * (window + 1);\r\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\r\n                    xrpow[j + l] *= amp;\r\n                    if (xrpow[j + l] > cod_info.xrpow_max)\r\n                        cod_info.xrpow_max = xrpow[j + l];\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *  Takehiro Tominaga /date??\r\n     *  Robert Hegemann 2000-09-06: made a function of it\r\n     *\r\n     *  amplifies scalefactor bands,\r\n     *   - if all are already amplified returns 0\r\n     *   - if some bands are amplified too much:\r\n     *      * try to increase scalefac_scale\r\n     *      * if already scalefac_scale was set\r\n     *          try on short blocks to increase subblock gain\r\n     * </PRE>\r\n     */\r\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\r\n\r\n        /*\r\n         * check to make sure we have not amplified too much loop_break returns\r\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\r\n         * scalefactors are too large\r\n         */\r\n\r\n        var status = loop_break(cod_info);\r\n\r\n        if (status)\r\n            return false;\r\n        /* all bands amplified */\r\n\r\n        /*\r\n         * not all scalefactors have been amplified. so these scalefacs are\r\n         * possibly valid. encode them:\r\n         */\r\n        if (gfc.mode_gr == 2)\r\n            status = tk.scale_bitcount(cod_info);\r\n        else\r\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\r\n\r\n        if (!status)\r\n            return true;\r\n        /* amplified some bands not exceeding limits */\r\n\r\n        /*\r\n         * some scalefactors are too large. lets try setting scalefac_scale=1\r\n         */\r\n        if (gfc.noise_shaping > 1) {\r\n            Arrays.fill(gfc.pseudohalf, 0);\r\n            if (0 == cod_info.scalefac_scale) {\r\n                inc_scalefac_scale(cod_info, xrpow);\r\n                status = false;\r\n            } else {\r\n                if (cod_info.block_type == Encoder.SHORT_TYPE\r\n                    && gfc.subblock_gain > 0) {\r\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!status) {\r\n            if (gfc.mode_gr == 2)\r\n                status = tk.scale_bitcount(cod_info);\r\n            else\r\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\r\n        }\r\n        return !status;\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *  Function: The outer iteration loop controls the masking conditions\r\n     *  of all scalefactorbands. It computes the best scalefac and\r\n     *  global gain. This module calls the inner iteration loop\r\n     *\r\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\r\n     *  mid/side channels with L/R or mid/side masking thresholds,\r\n     *  and chooses best quantization instead of last quantization when\r\n     *  no distortion free quantization can be found.\r\n     *\r\n     *  added VBR support mt 5/99\r\n\r\n     *\r\n     *  some code shuffle rh 9/00\r\n     * </PRE>\r\n     *\r\n     * @param l3_xmin\r\n     *            allowed distortion\r\n     * @param xrpow\r\n     *            coloured magnitudes of spectral\r\n     * @param targ_bits\r\n     *            maximum allowed bits\r\n     */\r\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\r\n        var gfc = gfp.internal_flags;\r\n        var cod_info_w = new GrInfo();\r\n        var save_xrpow = new_float(576);\r\n        var distort = new_float(L3Side.SFBMAX);\r\n        var best_noise_info = new CalcNoiseResult();\r\n        var better;\r\n        var prev_noise = new CalcNoiseData();\r\n        var best_part2_3_length = 9999999;\r\n        var bEndOfSearch = false;\r\n        var bRefine = false;\r\n        var best_ggain_pass1 = 0;\r\n\r\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\r\n\r\n        if (0 == gfc.noise_shaping)\r\n        /* fast mode, no noise shaping, we are ready */\r\n            return 100;\r\n        /* default noise_info.over_count */\r\n\r\n        /* compute the distortion in this quantization */\r\n        /* coefficients and thresholds both l/r (or both mid/side) */\r\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\r\n            prev_noise);\r\n        best_noise_info.bits = cod_info.part2_3_length;\r\n\r\n        cod_info_w.assign(cod_info);\r\n        var age = 0;\r\n        System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\r\n\r\n        while (!bEndOfSearch) {\r\n            /* BEGIN MAIN LOOP */\r\n            do {\r\n                var noise_info = new CalcNoiseResult();\r\n                var search_limit;\r\n                var maxggain = 255;\r\n\r\n                /*\r\n                 * When quantization with no distorted bands is found, allow up\r\n                 * to X new unsuccesful tries in serial. This gives us more\r\n                 * possibilities for different quant_compare modes. Much more\r\n                 * than 3 makes not a big difference, it is only slower.\r\n                 */\r\n\r\n                if ((gfc.substep_shaping & 2) != 0) {\r\n                    search_limit = 20;\r\n                } else {\r\n                    search_limit = 3;\r\n                }\r\n\r\n                /*\r\n                 * Check if the last scalefactor band is distorted. in VBR mode\r\n                 * we can't get rid of the distortion, so quit now and VBR mode\r\n                 * will try again with more bits. (makes a 10% speed increase,\r\n                 * the files I tested were binary identical, 2000/05/20 Robert\r\n                 * Hegemann) distort[] > 1 means noise > allowed noise\r\n                 */\r\n                if (gfc.sfb21_extra) {\r\n                    if (distort[cod_info_w.sfbmax] > 1.0)\r\n                        break;\r\n                    if (cod_info_w.block_type == Encoder.SHORT_TYPE\r\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\r\n                        break;\r\n                }\r\n\r\n                /* try a new scalefactor conbination on cod_info_w */\r\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\r\n                    break;\r\n                if (cod_info_w.scalefac_scale != 0)\r\n                    maxggain = 254;\r\n\r\n                /*\r\n                 * inner_loop starts with the initial quantization step computed\r\n                 * above and slowly increases until the bits < huff_bits. Thus\r\n                 * it is important not to start with too large of an inital\r\n                 * quantization step. Too small is ok, but inner_loop will take\r\n                 * longer\r\n                 */\r\n                var huff_bits = targ_bits - cod_info_w.part2_length;\r\n                if (huff_bits <= 0)\r\n                    break;\r\n\r\n                /*\r\n                 * increase quantizer stepsize until needed bits are below\r\n                 * maximum\r\n                 */\r\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\r\n                    cod_info_w, prev_noise)) > huff_bits\r\n                && cod_info_w.global_gain <= maxggain)\r\n                    cod_info_w.global_gain++;\r\n\r\n                if (cod_info_w.global_gain > maxggain)\r\n                    break;\r\n\r\n                if (best_noise_info.over_count == 0) {\r\n\r\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\r\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\r\n                    && cod_info_w.global_gain <= maxggain)\r\n                        cod_info_w.global_gain++;\r\n\r\n                    if (cod_info_w.global_gain > maxggain)\r\n                        break;\r\n                }\r\n\r\n                /* compute the distortion in this quantization */\r\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\r\n                    prev_noise);\r\n                noise_info.bits = cod_info_w.part2_3_length;\r\n\r\n                /*\r\n                 * check if this quantization is better than our saved\r\n                 * quantization\r\n                 */\r\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n                    // NORM, START or STOP type\r\n                    better = gfp.quant_comp;\r\n                } else\r\n                    better = gfp.quant_comp_short;\r\n\r\n                better = quant_compare(better, best_noise_info, noise_info,\r\n                    cod_info_w, distort) ? 1 : 0;\r\n\r\n                /* save data so we can restore this quantization later */\r\n                if (better != 0) {\r\n                    best_part2_3_length = cod_info.part2_3_length;\r\n                    best_noise_info = noise_info;\r\n                    cod_info.assign(cod_info_w);\r\n                    age = 0;\r\n                    /* save data so we can restore this quantization later */\r\n                    /* store for later reuse */\r\n                    System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\r\n                } else {\r\n                    /* early stop? */\r\n                    if (gfc.full_outer_loop == 0) {\r\n                        if (++age > search_limit\r\n                            && best_noise_info.over_count == 0)\r\n                            break;\r\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\r\n                            break;\r\n                        if ((gfc.noise_shaping_amp == 3)\r\n                            && bRefine\r\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\r\n                            break;\r\n                    }\r\n                }\r\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\r\n\r\n            if (gfc.noise_shaping_amp == 3) {\r\n                if (!bRefine) {\r\n                    /* refine search */\r\n                    cod_info_w.assign(cod_info);\r\n                    System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\r\n                    age = 0;\r\n                    best_ggain_pass1 = cod_info_w.global_gain;\r\n\r\n                    bRefine = true;\r\n                } else {\r\n                    /* search already refined, stop */\r\n                    bEndOfSearch = true;\r\n                }\r\n\r\n            } else {\r\n                bEndOfSearch = true;\r\n            }\r\n        }\r\n\r\n        /*\r\n         * finish up\r\n         */\r\n        if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\r\n        /* restore for reuse on next try */\r\n            System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\r\n        /*\r\n         * do the 'substep shaping'\r\n         */\r\n        else if ((gfc.substep_shaping & 1) != 0)\r\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\r\n\r\n        return best_noise_info.over_count;\r\n    }\r\n\r\n    /**\r\n     * Robert Hegemann 2000-09-06\r\n     *\r\n     * update reservoir status after FINAL quantization/bitrate\r\n     */\r\n    this.iteration_finish_one = function (gfc, gr, ch) {\r\n        var l3_side = gfc.l3_side;\r\n        var cod_info = l3_side.tt[gr][ch];\r\n\r\n        /*\r\n         * try some better scalefac storage\r\n         */\r\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\r\n\r\n        /*\r\n         * best huffman_divide may save some bits too\r\n         */\r\n        if (gfc.use_best_huffman == 1)\r\n            tk.best_huffman_divide(gfc, cod_info);\r\n\r\n        /*\r\n         * update reservoir status after FINAL quantization/bitrate\r\n         */\r\n        rv.ResvAdjust(gfc, cod_info);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * 2000-09-04 Robert Hegemann\r\n     *\r\n     * @param l3_xmin\r\n     *            allowed distortion of the scalefactor\r\n     * @param xrpow\r\n     *            coloured magnitudes of spectral values\r\n     */\r\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\r\n        var gfc = gfp.internal_flags;\r\n        var bst_cod_info = new GrInfo();\r\n        var bst_xrpow = new_float(576);\r\n        var Max_bits = max_bits;\r\n        var real_bits = max_bits + 1;\r\n        var this_bits = (max_bits + min_bits) / 2;\r\n        var dbits, over, found = 0;\r\n        var sfb21_extra = gfc.sfb21_extra;\r\n\r\n        Arrays.fill(bst_cod_info.l3_enc, 0);\r\n\r\n        /*\r\n         * search within round about 40 bits of optimal\r\n         */\r\n        do {\r\n\r\n            if (this_bits > Max_bits - 42)\r\n                gfc.sfb21_extra = false;\r\n            else\r\n                gfc.sfb21_extra = sfb21_extra;\r\n\r\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\r\n\r\n            /*\r\n             * is quantization as good as we are looking for ? in this case: is\r\n             * no scalefactor band distorted?\r\n             */\r\n            if (over <= 0) {\r\n                found = 1;\r\n                /*\r\n                 * now we know it can be done with \"real_bits\" and maybe we can\r\n                 * skip some iterations\r\n                 */\r\n                real_bits = cod_info.part2_3_length;\r\n\r\n                /*\r\n                 * store best quantization so far\r\n                 */\r\n                bst_cod_info.assign(cod_info);\r\n                System.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\r\n\r\n                /*\r\n                 * try with fewer bits\r\n                 */\r\n                max_bits = real_bits - 32;\r\n                dbits = max_bits - min_bits;\r\n                this_bits = (max_bits + min_bits) / 2;\r\n            } else {\r\n                /*\r\n                 * try with more bits\r\n                 */\r\n                min_bits = this_bits + 32;\r\n                dbits = max_bits - min_bits;\r\n                this_bits = (max_bits + min_bits) / 2;\r\n\r\n                if (found != 0) {\r\n                    found = 2;\r\n                    /*\r\n                     * start again with best quantization so far\r\n                     */\r\n                    cod_info.assign(bst_cod_info);\r\n                    System.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\r\n                }\r\n            }\r\n        } while (dbits > 12);\r\n\r\n        gfc.sfb21_extra = sfb21_extra;\r\n\r\n        /*\r\n         * found=0 => nothing found, use last one found=1 => we just found the\r\n         * best and left the loop found=2 => we restored a good one and have now\r\n         * l3_enc to restore too\r\n         */\r\n        if (found == 2) {\r\n            System.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Robert Hegemann 2000-09-05\r\n     *\r\n     * calculates * how many bits are available for analog silent granules * how\r\n     * many bits to use for the lowest allowed bitrate * how many bits each\r\n     * bitrate would provide\r\n     */\r\n    this.get_framebits = function (gfp, frameBits) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /*\r\n         * always use at least this many bits per granule per channel unless we\r\n         * detect analog silence, see below\r\n         */\r\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\r\n        var bitsPerFrame = bs.getframebits(gfp);\r\n\r\n        /*\r\n         * bits for analog silence\r\n         */\r\n        gfc.bitrate_index = 1;\r\n        bitsPerFrame = bs.getframebits(gfp);\r\n\r\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\r\n            gfc.bitrate_index = i;\r\n            var mb = new MeanBits(bitsPerFrame);\r\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\r\n            bitsPerFrame = mb.bits;\r\n        }\r\n    };\r\n\r\n    /* RH: this one needs to be overhauled sometime */\r\n\r\n    /**\r\n     * <PRE>\r\n     *  2000-09-04 Robert Hegemann\r\n     *\r\n     *  * converts LR to MS coding when necessary\r\n     *  * calculates allowed/adjusted quantization noise amounts\r\n     *  * detects analog silent frames\r\n     *\r\n     *  some remarks:\r\n     *  - lower masking depending on Quality setting\r\n     *  - quality control together with adjusted ATH MDCT scaling\r\n     *    on lower quality setting allocate more noise from\r\n     *    ATH masking, and on higher quality setting allocate\r\n     *    less noise from ATH masking.\r\n     *  - experiments show that going more than 2dB over GPSYCHO's\r\n     *    limits ends up in very annoying artefacts\r\n     * </PRE>\r\n     */\r\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\r\n                                     max_bits, bands) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        var masking_lower_db, adjust = 0.0;\r\n        var analog_silence = 1;\r\n        var bits = 0;\r\n\r\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\r\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\r\n\r\n        get_framebits(gfp, frameBits);\r\n\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\r\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\r\n                ms_convert(gfc.l3_side, gr);\r\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\r\n            }\r\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\r\n                var cod_info = gfc.l3_side.tt[gr][ch];\r\n\r\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\r\n                    // NORM, START or STOP type\r\n                    adjust = 1.28 / (1 + Math\r\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\r\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\r\n                } else {\r\n                    adjust = 2.56 / (1 + Math\r\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\r\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\r\n                }\r\n                gfc.masking_lower = Math.pow(10.0,\r\n                    masking_lower_db * 0.1);\r\n\r\n                init_outer_loop(gfc, cod_info);\r\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\r\n                    l3_xmin[gr][ch]);\r\n                if (bands[gr][ch] != 0)\r\n                    analog_silence = 0;\r\n\r\n                min_bits[gr][ch] = 126;\r\n\r\n                bits += max_bits[gr][ch];\r\n            }\r\n        }\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\r\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\r\n                    max_bits[gr][ch] /= bits;\r\n                }\r\n                if (min_bits[gr][ch] > max_bits[gr][ch])\r\n                    min_bits[gr][ch] = max_bits[gr][ch];\r\n\r\n            }\r\n            /* for ch */\r\n        }\r\n        /* for gr */\r\n\r\n        return analog_silence;\r\n    };\r\n\r\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                var gi = gfc.l3_side.tt[gr][ch];\r\n                var pxmin = l3_xmin[gr][ch];\r\n                var pxminPos = 0;\r\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\r\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\r\n                        / Encoder.SBMAX_l / Encoder.SBMAX_l;\r\n\r\n                if (gi.block_type == Encoder.SHORT_TYPE) {\r\n                    for (var sfb = gi.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\r\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\r\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\r\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\r\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\r\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\r\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\r\n                    }\r\n                }\r\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\r\n                        0.9 * max_bits[gr][ch]);\r\n            }\r\n        }\r\n    };\r\n\r\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        var analog_silence = 1;\r\n        var avg = 0, bits = 0;\r\n        var maximum_framebits;\r\n\r\n        if (!gfp.free_format) {\r\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\r\n\r\n            var mb = new MeanBits(avg);\r\n            rv.ResvFrameBegin(gfp, mb);\r\n            avg = mb.bits;\r\n\r\n            get_framebits(gfp, frameBits);\r\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\r\n        } else {\r\n            gfc.bitrate_index = 0;\r\n            var mb = new MeanBits(avg);\r\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\r\n            avg = mb.bits;\r\n            frameBits[0] = maximum_framebits;\r\n        }\r\n\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\r\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\r\n                ms_convert(gfc.l3_side, gr);\r\n            }\r\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\r\n                var cod_info = gfc.l3_side.tt[gr][ch];\r\n\r\n                gfc.masking_lower = Math.pow(10.0,\r\n                    gfc.PSY.mask_adjust * 0.1);\r\n\r\n                init_outer_loop(gfc, cod_info);\r\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\r\n                        l3_xmin[gr][ch]))\r\n                    analog_silence = 0;\r\n\r\n                bits += max_bits[gr][ch];\r\n            }\r\n        }\r\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                if (bits > maximum_framebits) {\r\n                    max_bits[gr][ch] *= maximum_framebits;\r\n                    max_bits[gr][ch] /= bits;\r\n                }\r\n\r\n            }\r\n            /* for ch */\r\n        }\r\n        /* for gr */\r\n\r\n        return analog_silence;\r\n    };\r\n\r\n    /**\r\n     * calculates target bits for ABR encoding\r\n     *\r\n     * mt 2000/05/31\r\n     */\r\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\r\n        var gfc = gfp.internal_flags;\r\n        var l3_side = gfc.l3_side;\r\n        var res_factor;\r\n        var gr, ch, totbits, mean_bits = 0;\r\n\r\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\r\n        var mb = new MeanBits(mean_bits);\r\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\r\n        mean_bits = mb.bits;\r\n\r\n        gfc.bitrate_index = 1;\r\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\r\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\r\n\r\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\r\n        if ((gfc.substep_shaping & 1) != 0)\r\n            mean_bits *= 1.09;\r\n        mean_bits /= gfp.out_samplerate;\r\n        mean_bits -= gfc.sideinfo_len * 8;\r\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\r\n\r\n        /**\r\n         * <PRE>\r\n         *           res_factor is the percentage of the target bitrate that should\r\n         *           be used on average.  the remaining bits are added to the\r\n         *           bitreservoir and used for difficult to encode frames.\r\n         *\r\n         *           Since we are tracking the average bitrate, we should adjust\r\n         *           res_factor \"on the fly\", increasing it if the average bitrate\r\n         *           is greater than the requested bitrate, and decreasing it\r\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\r\n         *\r\n         *           Until we get the above suggestion working, we use the following\r\n         *           tuning:\r\n         *           compression ratio    res_factor\r\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\r\n         *           11   (128kbps)         .93      7% held for reservoir\r\n         *\r\n         *           with linear interpolation for other values.\r\n         * </PRE>\r\n         */\r\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\r\n            / (11.0 - 5.5);\r\n        if (res_factor < .90)\r\n            res_factor = .90;\r\n        if (res_factor > 1.00)\r\n            res_factor = 1.00;\r\n\r\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n            var sum = 0;\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\r\n\r\n                if (pe[gr][ch] > 700) {\r\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\r\n\r\n                    var cod_info = l3_side.tt[gr][ch];\r\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\r\n\r\n                    /* short blocks use a little extra, no matter what the pe */\r\n                    if (cod_info.block_type == Encoder.SHORT_TYPE) {\r\n                        if (add_bits < mean_bits / 2)\r\n                            add_bits = mean_bits / 2;\r\n                    }\r\n                    /* at most increase bits by 1.5*average */\r\n                    if (add_bits > mean_bits * 3 / 2)\r\n                        add_bits = mean_bits * 3 / 2;\r\n                    else if (add_bits < 0)\r\n                        add_bits = 0;\r\n\r\n                    targ_bits[gr][ch] += add_bits;\r\n                }\r\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\r\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\r\n                }\r\n                sum += targ_bits[gr][ch];\r\n            }\r\n            /* for ch */\r\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\r\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\r\n                    targ_bits[gr][ch] /= sum;\r\n                }\r\n            }\r\n        }\r\n        /* for gr */\r\n\r\n        if (gfc.mode_ext == Encoder.MPG_MD_MS_LR)\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\r\n                    * gfc.channels_out,\r\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\r\n            }\r\n\r\n        /*\r\n         * sum target bits\r\n         */\r\n        totbits = 0;\r\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\r\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\r\n                totbits += targ_bits[gr][ch];\r\n            }\r\n        }\r\n\r\n        /*\r\n         * repartion target bits if needed\r\n         */\r\n        if (totbits > max_frame_bits[0]) {\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    targ_bits[gr][ch] *= max_frame_bits[0];\r\n                    targ_bits[gr][ch] /= totbits;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/*\r\n *      MP3 window subband -> subband filtering -> mdct routine\r\n *\r\n *      Copyright (c) 1999-2000 Takehiro Tominaga\r\n *\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Library General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n/*\r\n *         Special Thanks to Patrick De Smet for your advices.\r\n */\r\n\r\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n//package mp3;\r\n\r\n//import java.util.Arrays;\r\n\r\n\r\n\r\nfunction NewMDCT() {\r\n\r\n\tvar enwindow = [\r\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\r\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\r\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\r\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\r\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\r\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\r\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\r\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\r\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\r\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\r\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\r\n\r\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\r\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\r\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\r\n\r\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\r\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\r\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\r\n\r\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\r\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\r\n\t\t\t1.414213562373095e+00,\r\n\r\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\r\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\r\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\r\n\r\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\r\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\r\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\r\n\r\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\r\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\r\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\r\n\r\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\r\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\r\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\r\n\r\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\r\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\r\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\r\n\r\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\r\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\r\n\r\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\r\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\r\n\r\n\t\t\t3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\t\t\t1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06,\r\n\r\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\r\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\r\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\r\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\r\n\t];\r\n\r\n\tvar NS = 12;\r\n\tvar NL = 36;\r\n\r\n\tvar win = [\r\n\t    [\r\n\t     2.382191739347913e-13,\r\n\t     6.423305872147834e-13,\r\n\t     9.400849094049688e-13,\r\n\t     1.122435026096556e-12,\r\n\t     1.183840321267481e-12,\r\n\t     1.122435026096556e-12,\r\n\t     9.400849094049690e-13,\r\n\t     6.423305872147839e-13,\r\n\t     2.382191739347918e-13,\r\n\r\n\t     5.456116108943412e-12,\r\n\t     4.878985199565852e-12,\r\n\t     4.240448995017367e-12,\r\n\t     3.559909094758252e-12,\r\n\t     2.858043359288075e-12,\r\n\t     2.156177623817898e-12,\r\n\t     1.475637723558783e-12,\r\n\t     8.371015190102974e-13,\r\n\t     2.599706096327376e-13,\r\n\r\n\t     -5.456116108943412e-12,\r\n\t     -4.878985199565852e-12,\r\n\t     -4.240448995017367e-12,\r\n\t     -3.559909094758252e-12,\r\n\t     -2.858043359288076e-12,\r\n\t     -2.156177623817898e-12,\r\n\t     -1.475637723558783e-12,\r\n\t     -8.371015190102975e-13,\r\n\t     -2.599706096327376e-13,\r\n\r\n\t     -2.382191739347923e-13,\r\n\t     -6.423305872147843e-13,\r\n\t     -9.400849094049696e-13,\r\n\t     -1.122435026096556e-12,\r\n\t     -1.183840321267481e-12,\r\n\t     -1.122435026096556e-12,\r\n\t     -9.400849094049694e-13,\r\n\t     -6.423305872147840e-13,\r\n\t     -2.382191739347918e-13,\r\n\t     ],\r\n\t    [\r\n\t     2.382191739347913e-13,\r\n\t     6.423305872147834e-13,\r\n\t     9.400849094049688e-13,\r\n\t     1.122435026096556e-12,\r\n\t     1.183840321267481e-12,\r\n\t     1.122435026096556e-12,\r\n\t     9.400849094049688e-13,\r\n\t     6.423305872147841e-13,\r\n\t     2.382191739347918e-13,\r\n\r\n\t     5.456116108943413e-12,\r\n\t     4.878985199565852e-12,\r\n\t     4.240448995017367e-12,\r\n\t     3.559909094758253e-12,\r\n\t     2.858043359288075e-12,\r\n\t     2.156177623817898e-12,\r\n\t     1.475637723558782e-12,\r\n\t     8.371015190102975e-13,\r\n\t     2.599706096327376e-13,\r\n\r\n\t     -5.461314069809755e-12,\r\n\t     -4.921085770524055e-12,\r\n\t     -4.343405037091838e-12,\r\n\t     -3.732668368707687e-12,\r\n\t     -3.093523840190885e-12,\r\n\t     -2.430835727329465e-12,\r\n\t     -1.734679010007751e-12,\r\n\t     -9.748253656609281e-13,\r\n\t     -2.797435120168326e-13,\r\n\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     -2.283748241799531e-13,\r\n\t     -4.037858874020686e-13,\r\n\t     -2.146547464825323e-13,\r\n\t     ],\r\n\t    [\r\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\r\n\t     4.142135623730950e-01,\r\n\t     7.673269879789602e-01,\r\n\r\n\t     1.091308501069271e+00, /* tantab_l */\r\n\t     1.303225372841206e+00,\r\n\t     1.569685577117490e+00,\r\n\t     1.920982126971166e+00,\r\n\t     2.414213562373094e+00,\r\n\t     3.171594802363212e+00,\r\n\t     4.510708503662055e+00,\r\n\t     7.595754112725146e+00,\r\n\t     2.290376554843115e+01,\r\n\r\n\t     0.98480775301220802032, /* cx */\r\n\t     0.64278760968653936292,\r\n\t     0.34202014332566882393,\r\n\t     0.93969262078590842791,\r\n\t     -0.17364817766693030343,\r\n\t     -0.76604444311897790243,\r\n\t     0.86602540378443870761,\r\n\t     0.500000000000000e+00,\r\n\r\n\t     -5.144957554275265e-01, /* ca */\r\n\t     -4.717319685649723e-01,\r\n\t     -3.133774542039019e-01,\r\n\t     -1.819131996109812e-01,\r\n\t     -9.457419252642064e-02,\r\n\t     -4.096558288530405e-02,\r\n\t     -1.419856857247115e-02,\r\n\t     -3.699974673760037e-03,\r\n\r\n\t     8.574929257125442e-01, /* cs */\r\n\t     8.817419973177052e-01,\r\n\t     9.496286491027329e-01,\r\n\t     9.833145924917901e-01,\r\n\t     9.955178160675857e-01,\r\n\t     9.991605581781475e-01,\r\n\t     9.998991952444470e-01,\r\n\t     9.999931550702802e-01,\r\n\t     ],\r\n\t    [\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     0.000000000000000e+00,\r\n\t     2.283748241799531e-13,\r\n\t     4.037858874020686e-13,\r\n\t     2.146547464825323e-13,\r\n\r\n\t     5.461314069809755e-12,\r\n\t     4.921085770524055e-12,\r\n\t     4.343405037091838e-12,\r\n\t     3.732668368707687e-12,\r\n\t     3.093523840190885e-12,\r\n\t     2.430835727329466e-12,\r\n\t     1.734679010007751e-12,\r\n\t     9.748253656609281e-13,\r\n\t     2.797435120168326e-13,\r\n\r\n\t     -5.456116108943413e-12,\r\n\t     -4.878985199565852e-12,\r\n\t     -4.240448995017367e-12,\r\n\t     -3.559909094758253e-12,\r\n\t     -2.858043359288075e-12,\r\n\t     -2.156177623817898e-12,\r\n\t     -1.475637723558782e-12,\r\n\t     -8.371015190102975e-13,\r\n\t     -2.599706096327376e-13,\r\n\r\n\t     -2.382191739347913e-13,\r\n\t     -6.423305872147834e-13,\r\n\t     -9.400849094049688e-13,\r\n\t     -1.122435026096556e-12,\r\n\t     -1.183840321267481e-12,\r\n\t     -1.122435026096556e-12,\r\n\t     -9.400849094049688e-13,\r\n\t     -6.423305872147841e-13,\r\n\t     -2.382191739347918e-13,\r\n\t     ]\r\n\t];\r\n\r\n\tvar tantab_l = win[Encoder.SHORT_TYPE];\r\n\tvar cx = win[Encoder.SHORT_TYPE];\r\n\tvar ca = win[Encoder.SHORT_TYPE];\r\n\tvar cs = win[Encoder.SHORT_TYPE];\r\n\r\n\t/**\r\n\t * new IDCT routine written by Takehiro TOMINAGA\r\n\t *\r\n\t * PURPOSE: Overlapping window on PCM samples<BR>\r\n\t *\r\n\t * SEMANTICS:<BR>\r\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\r\n\t * concatenated to the end of the window buffer #x#. The updated window\r\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\r\n\t * windowed sample #z#\r\n\t */\r\n\tvar order = [\r\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\r\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\r\n\t];\r\n\r\n\t/**\r\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\r\n\t */\r\n\tfunction window_subband(x1, x1Pos, a) {\r\n\t\tvar wp = 10;\r\n\r\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\r\n\r\n\t\tfor (var i = -15; i < 0; i++) {\r\n\t\t\tvar w, s, t;\r\n\r\n\t\t\tw = enwindow[wp + -10];\r\n\t\t\ts = x1[x2 + -224] * w;\r\n\t\t\tt = x1[x1Pos + 224] * w;\r\n\t\t\tw = enwindow[wp + -9];\r\n\t\t\ts += x1[x2 + -160] * w;\r\n\t\t\tt += x1[x1Pos + 160] * w;\r\n\t\t\tw = enwindow[wp + -8];\r\n\t\t\ts += x1[x2 + -96] * w;\r\n\t\t\tt += x1[x1Pos + 96] * w;\r\n\t\t\tw = enwindow[wp + -7];\r\n\t\t\ts += x1[x2 + -32] * w;\r\n\t\t\tt += x1[x1Pos + 32] * w;\r\n\t\t\tw = enwindow[wp + -6];\r\n\t\t\ts += x1[x2 + 32] * w;\r\n\t\t\tt += x1[x1Pos + -32] * w;\r\n\t\t\tw = enwindow[wp + -5];\r\n\t\t\ts += x1[x2 + 96] * w;\r\n\t\t\tt += x1[x1Pos + -96] * w;\r\n\t\t\tw = enwindow[wp + -4];\r\n\t\t\ts += x1[x2 + 160] * w;\r\n\t\t\tt += x1[x1Pos + -160] * w;\r\n\t\t\tw = enwindow[wp + -3];\r\n\t\t\ts += x1[x2 + 224] * w;\r\n\t\t\tt += x1[x1Pos + -224] * w;\r\n\r\n\t\t\tw = enwindow[wp + -2];\r\n\t\t\ts += x1[x1Pos + -256] * w;\r\n\t\t\tt -= x1[x2 + 256] * w;\r\n\t\t\tw = enwindow[wp + -1];\r\n\t\t\ts += x1[x1Pos + -192] * w;\r\n\t\t\tt -= x1[x2 + 192] * w;\r\n\t\t\tw = enwindow[wp + 0];\r\n\t\t\ts += x1[x1Pos + -128] * w;\r\n\t\t\tt -= x1[x2 + 128] * w;\r\n\t\t\tw = enwindow[wp + 1];\r\n\t\t\ts += x1[x1Pos + -64] * w;\r\n\t\t\tt -= x1[x2 + 64] * w;\r\n\t\t\tw = enwindow[wp + 2];\r\n\t\t\ts += x1[x1Pos + 0] * w;\r\n\t\t\tt -= x1[x2 + 0] * w;\r\n\t\t\tw = enwindow[wp + 3];\r\n\t\t\ts += x1[x1Pos + 64] * w;\r\n\t\t\tt -= x1[x2 + -64] * w;\r\n\t\t\tw = enwindow[wp + 4];\r\n\t\t\ts += x1[x1Pos + 128] * w;\r\n\t\t\tt -= x1[x2 + -128] * w;\r\n\t\t\tw = enwindow[wp + 5];\r\n\t\t\ts += x1[x1Pos + 192] * w;\r\n\t\t\tt -= x1[x2 + -192] * w;\r\n\r\n\t\t\t/*\r\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\r\n\t\t\t * data. thinking about the data cache performance, I think we\r\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\r\n\t\t\t */\r\n\t\t\ts *= enwindow[wp + 6];\r\n\t\t\tw = t - s;\r\n\t\t\ta[30 + i * 2] = t + s;\r\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\r\n\t\t\twp += 18;\r\n\t\t\tx1Pos--;\r\n\t\t\tx2++;\r\n\t\t}\r\n\t\t{\r\n\t\t\tvar s, t, u, v;\r\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\r\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\r\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\r\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\r\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\r\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\r\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\r\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\r\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\r\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\r\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\r\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\r\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\r\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\r\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\r\n\t\t\ts -= x1[x1Pos + 224];\r\n\r\n\t\t\tu = s - t;\r\n\t\t\tv = s + t;\r\n\r\n\t\t\tt = a[14];\r\n\t\t\ts = a[15] - t;\r\n\r\n\t\t\ta[31] = v + t; /* A0 */\r\n\t\t\ta[30] = u + s; /* A1 */\r\n\t\t\ta[15] = u - s; /* A2 */\r\n\t\t\ta[14] = v - t; /* A3 */\r\n\t\t}\r\n\t\t{\r\n\t\t\tvar xr;\r\n\t\t\txr = a[28] - a[0];\r\n\t\t\ta[0] += a[28];\r\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\r\n\t\t\txr = a[29] - a[1];\r\n\t\t\ta[1] += a[29];\r\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\r\n\r\n\t\t\txr = a[26] - a[2];\r\n\t\t\ta[2] += a[26];\r\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\r\n\t\t\txr = a[27] - a[3];\r\n\t\t\ta[3] += a[27];\r\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\r\n\r\n\t\t\txr = a[24] - a[4];\r\n\t\t\ta[4] += a[24];\r\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\r\n\t\t\txr = a[25] - a[5];\r\n\t\t\ta[5] += a[25];\r\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\r\n\r\n\t\t\txr = a[22] - a[6];\r\n\t\t\ta[6] += a[22];\r\n\t\t\ta[22] = xr * Util.SQRT2;\r\n\t\t\txr = a[23] - a[7];\r\n\t\t\ta[7] += a[23];\r\n\t\t\ta[23] = xr * Util.SQRT2 - a[7];\r\n\t\t\ta[7] -= a[6];\r\n\t\t\ta[22] -= a[7];\r\n\t\t\ta[23] -= a[22];\r\n\r\n\t\t\txr = a[6];\r\n\t\t\ta[6] = a[31] - xr;\r\n\t\t\ta[31] = a[31] + xr;\r\n\t\t\txr = a[7];\r\n\t\t\ta[7] = a[30] - xr;\r\n\t\t\ta[30] = a[30] + xr;\r\n\t\t\txr = a[22];\r\n\t\t\ta[22] = a[15] - xr;\r\n\t\t\ta[15] = a[15] + xr;\r\n\t\t\txr = a[23];\r\n\t\t\ta[23] = a[14] - xr;\r\n\t\t\ta[14] = a[14] + xr;\r\n\r\n\t\t\txr = a[20] - a[8];\r\n\t\t\ta[8] += a[20];\r\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\r\n\t\t\txr = a[21] - a[9];\r\n\t\t\ta[9] += a[21];\r\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\r\n\r\n\t\t\txr = a[18] - a[10];\r\n\t\t\ta[10] += a[18];\r\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\r\n\t\t\txr = a[19] - a[11];\r\n\t\t\ta[11] += a[19];\r\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\r\n\r\n\t\t\txr = a[16] - a[12];\r\n\t\t\ta[12] += a[16];\r\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\r\n\t\t\txr = a[17] - a[13];\r\n\t\t\ta[13] += a[17];\r\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\r\n\r\n\t\t\txr = -a[20] + a[24];\r\n\t\t\ta[20] += a[24];\r\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\r\n\t\t\txr = -a[21] + a[25];\r\n\t\t\ta[21] += a[25];\r\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\r\n\r\n\t\t\txr = a[4] - a[8];\r\n\t\t\ta[4] += a[8];\r\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\r\n\t\t\txr = a[5] - a[9];\r\n\t\t\ta[5] += a[9];\r\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\r\n\r\n\t\t\txr = a[0] - a[12];\r\n\t\t\ta[0] += a[12];\r\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\r\n\t\t\txr = a[1] - a[13];\r\n\t\t\ta[1] += a[13];\r\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\r\n\t\t\txr = a[16] - a[28];\r\n\t\t\ta[16] += a[28];\r\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\r\n\t\t\txr = -a[17] + a[29];\r\n\t\t\ta[17] += a[29];\r\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\r\n\r\n\t\t\txr = Util.SQRT2 * (a[2] - a[10]);\r\n\t\t\ta[2] += a[10];\r\n\t\t\ta[10] = xr;\r\n\t\t\txr = Util.SQRT2 * (a[3] - a[11]);\r\n\t\t\ta[3] += a[11];\r\n\t\t\ta[11] = xr;\r\n\t\t\txr = Util.SQRT2 * (-a[18] + a[26]);\r\n\t\t\ta[18] += a[26];\r\n\t\t\ta[26] = xr - a[18];\r\n\t\t\txr = Util.SQRT2 * (-a[19] + a[27]);\r\n\t\t\ta[19] += a[27];\r\n\t\t\ta[27] = xr - a[19];\r\n\r\n\t\t\txr = a[2];\r\n\t\t\ta[19] -= a[3];\r\n\t\t\ta[3] -= xr;\r\n\t\t\ta[2] = a[31] - xr;\r\n\t\t\ta[31] += xr;\r\n\t\t\txr = a[3];\r\n\t\t\ta[11] -= a[19];\r\n\t\t\ta[18] -= xr;\r\n\t\t\ta[3] = a[30] - xr;\r\n\t\t\ta[30] += xr;\r\n\t\t\txr = a[18];\r\n\t\t\ta[27] -= a[11];\r\n\t\t\ta[19] -= xr;\r\n\t\t\ta[18] = a[15] - xr;\r\n\t\t\ta[15] += xr;\r\n\r\n\t\t\txr = a[19];\r\n\t\t\ta[10] -= xr;\r\n\t\t\ta[19] = a[14] - xr;\r\n\t\t\ta[14] += xr;\r\n\t\t\txr = a[10];\r\n\t\t\ta[11] -= xr;\r\n\t\t\ta[10] = a[23] - xr;\r\n\t\t\ta[23] += xr;\r\n\t\t\txr = a[11];\r\n\t\t\ta[26] -= xr;\r\n\t\t\ta[11] = a[22] - xr;\r\n\t\t\ta[22] += xr;\r\n\t\t\txr = a[26];\r\n\t\t\ta[27] -= xr;\r\n\t\t\ta[26] = a[7] - xr;\r\n\t\t\ta[7] += xr;\r\n\r\n\t\t\txr = a[27];\r\n\t\t\ta[27] = a[6] - xr;\r\n\t\t\ta[6] += xr;\r\n\r\n\t\t\txr = Util.SQRT2 * (a[0] - a[4]);\r\n\t\t\ta[0] += a[4];\r\n\t\t\ta[4] = xr;\r\n\t\t\txr = Util.SQRT2 * (a[1] - a[5]);\r\n\t\t\ta[1] += a[5];\r\n\t\t\ta[5] = xr;\r\n\t\t\txr = Util.SQRT2 * (a[16] - a[20]);\r\n\t\t\ta[16] += a[20];\r\n\t\t\ta[20] = xr;\r\n\t\t\txr = Util.SQRT2 * (a[17] - a[21]);\r\n\t\t\ta[17] += a[21];\r\n\t\t\ta[21] = xr;\r\n\r\n\t\t\txr = -Util.SQRT2 * (a[8] - a[12]);\r\n\t\t\ta[8] += a[12];\r\n\t\t\ta[12] = xr - a[8];\r\n\t\t\txr = -Util.SQRT2 * (a[9] - a[13]);\r\n\t\t\ta[9] += a[13];\r\n\t\t\ta[13] = xr - a[9];\r\n\t\t\txr = -Util.SQRT2 * (a[25] - a[29]);\r\n\t\t\ta[25] += a[29];\r\n\t\t\ta[29] = xr - a[25];\r\n\t\t\txr = -Util.SQRT2 * (a[24] + a[28]);\r\n\t\t\ta[24] -= a[28];\r\n\t\t\ta[28] = xr - a[24];\r\n\r\n\t\t\txr = a[24] - a[16];\r\n\t\t\ta[24] = xr;\r\n\t\t\txr = a[20] - xr;\r\n\t\t\ta[20] = xr;\r\n\t\t\txr = a[28] - xr;\r\n\t\t\ta[28] = xr;\r\n\r\n\t\t\txr = a[25] - a[17];\r\n\t\t\ta[25] = xr;\r\n\t\t\txr = a[21] - xr;\r\n\t\t\ta[21] = xr;\r\n\t\t\txr = a[29] - xr;\r\n\t\t\ta[29] = xr;\r\n\r\n\t\t\txr = a[17] - a[1];\r\n\t\t\ta[17] = xr;\r\n\t\t\txr = a[9] - xr;\r\n\t\t\ta[9] = xr;\r\n\t\t\txr = a[25] - xr;\r\n\t\t\ta[25] = xr;\r\n\t\t\txr = a[5] - xr;\r\n\t\t\ta[5] = xr;\r\n\t\t\txr = a[21] - xr;\r\n\t\t\ta[21] = xr;\r\n\t\t\txr = a[13] - xr;\r\n\t\t\ta[13] = xr;\r\n\t\t\txr = a[29] - xr;\r\n\t\t\ta[29] = xr;\r\n\r\n\t\t\txr = a[1] - a[0];\r\n\t\t\ta[1] = xr;\r\n\t\t\txr = a[16] - xr;\r\n\t\t\ta[16] = xr;\r\n\t\t\txr = a[17] - xr;\r\n\t\t\ta[17] = xr;\r\n\t\t\txr = a[8] - xr;\r\n\t\t\ta[8] = xr;\r\n\t\t\txr = a[9] - xr;\r\n\t\t\ta[9] = xr;\r\n\t\t\txr = a[24] - xr;\r\n\t\t\ta[24] = xr;\r\n\t\t\txr = a[25] - xr;\r\n\t\t\ta[25] = xr;\r\n\t\t\txr = a[4] - xr;\r\n\t\t\ta[4] = xr;\r\n\t\t\txr = a[5] - xr;\r\n\t\t\ta[5] = xr;\r\n\t\t\txr = a[20] - xr;\r\n\t\t\ta[20] = xr;\r\n\t\t\txr = a[21] - xr;\r\n\t\t\ta[21] = xr;\r\n\t\t\txr = a[12] - xr;\r\n\t\t\ta[12] = xr;\r\n\t\t\txr = a[13] - xr;\r\n\t\t\ta[13] = xr;\r\n\t\t\txr = a[28] - xr;\r\n\t\t\ta[28] = xr;\r\n\t\t\txr = a[29] - xr;\r\n\t\t\ta[29] = xr;\r\n\r\n\t\t\txr = a[0];\r\n\t\t\ta[0] += a[31];\r\n\t\t\ta[31] -= xr;\r\n\t\t\txr = a[1];\r\n\t\t\ta[1] += a[30];\r\n\t\t\ta[30] -= xr;\r\n\t\t\txr = a[16];\r\n\t\t\ta[16] += a[15];\r\n\t\t\ta[15] -= xr;\r\n\t\t\txr = a[17];\r\n\t\t\ta[17] += a[14];\r\n\t\t\ta[14] -= xr;\r\n\t\t\txr = a[8];\r\n\t\t\ta[8] += a[23];\r\n\t\t\ta[23] -= xr;\r\n\t\t\txr = a[9];\r\n\t\t\ta[9] += a[22];\r\n\t\t\ta[22] -= xr;\r\n\t\t\txr = a[24];\r\n\t\t\ta[24] += a[7];\r\n\t\t\ta[7] -= xr;\r\n\t\t\txr = a[25];\r\n\t\t\ta[25] += a[6];\r\n\t\t\ta[6] -= xr;\r\n\t\t\txr = a[4];\r\n\t\t\ta[4] += a[27];\r\n\t\t\ta[27] -= xr;\r\n\t\t\txr = a[5];\r\n\t\t\ta[5] += a[26];\r\n\t\t\ta[26] -= xr;\r\n\t\t\txr = a[20];\r\n\t\t\ta[20] += a[11];\r\n\t\t\ta[11] -= xr;\r\n\t\t\txr = a[21];\r\n\t\t\ta[21] += a[10];\r\n\t\t\ta[10] -= xr;\r\n\t\t\txr = a[12];\r\n\t\t\ta[12] += a[19];\r\n\t\t\ta[19] -= xr;\r\n\t\t\txr = a[13];\r\n\t\t\ta[13] += a[18];\r\n\t\t\ta[18] -= xr;\r\n\t\t\txr = a[28];\r\n\t\t\ta[28] += a[3];\r\n\t\t\ta[3] -= xr;\r\n\t\t\txr = a[29];\r\n\t\t\ta[29] += a[2];\r\n\t\t\ta[2] -= xr;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\r\n\t * there are 36 coefficents in the time domain and 18 in the frequency\r\n\t * domain.<BR>\r\n\t * In the case of short blocks (type 2) there are 3 transformations with\r\n\t * short length. This leads to 12 coefficents in the time and 6 in the\r\n\t * frequency domain. In this case the results are stored side by side in the\r\n\t * vector out[].\r\n\t *\r\n\t * New layer3\r\n\t */\r\n\tfunction mdct_short(inout, inoutPos) {\r\n\t\tfor (var l = 0; l < 3; l++) {\r\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\r\n\r\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0]\r\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\r\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2]\r\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\r\n\t\t\ttc1 = ts0 + tc0;\r\n\t\t\ttc2 = ts0 - tc0;\r\n\r\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0]\r\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\r\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2]\r\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\r\n\t\t\tts1 = ts0 + tc0;\r\n\t\t\tts2 = -ts0 + tc0;\r\n\r\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\r\n\t\t\t/*\r\n\t\t\t * tritab_s [ 1 ]\r\n\t\t\t */\r\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\r\n\t\t\t/*\r\n\t\t\t * tritab_s [ 1 ]\r\n\t\t\t */\r\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\r\n\t\t\t/*\r\n\t\t\t * tritab_s[ 2 ]\r\n\t\t\t */\r\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\r\n\t\t\t/*\r\n\t\t\t * tritab_s[0 ]\r\n\t\t\t */\r\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\r\n\t\t\t/*\r\n\t\t\t * tritab_s[ 2]\r\n\t\t\t */\r\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\r\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\r\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\r\n\r\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\r\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\r\n\t\t\t/*\r\n\t\t\t * tritab_s[ 0]\r\n\t\t\t */\r\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\r\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\r\n\r\n\t\t\tinoutPos++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction mdct_long(out, outPos, _in) {\r\n\t\tvar ct, st;\r\n\t\t{\r\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\r\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\r\n\t\t\ttc1 = _in[17] - _in[9];\r\n\t\t\ttc3 = _in[15] - _in[11];\r\n\t\t\ttc4 = _in[14] - _in[12];\r\n\t\t\tts5 = _in[0] + _in[8];\r\n\t\t\tts6 = _in[1] + _in[7];\r\n\t\t\tts7 = _in[2] + _in[6];\r\n\t\t\tts8 = _in[3] + _in[5];\r\n\r\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\r\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\r\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\r\n\t\t\tout[outPos + 5] = ct + st;\r\n\t\t\tout[outPos + 6] = ct - st;\r\n\r\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\r\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\r\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\r\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\r\n\t\t\tout[outPos + 1] = ct + st;\r\n\t\t\tout[outPos + 2] = ct - st;\r\n\r\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\r\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\r\n\t\t\tout[outPos + 9] = ct + st;\r\n\t\t\tout[outPos + 10] = ct - st;\r\n\r\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\r\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\r\n\t\t\tout[outPos + 13] = ct + st;\r\n\t\t\tout[outPos + 14] = ct - st;\r\n\t\t}\r\n\t\t{\r\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\r\n\r\n\t\t\tts1 = _in[8] - _in[0];\r\n\t\t\tts3 = _in[6] - _in[2];\r\n\t\t\tts4 = _in[5] - _in[3];\r\n\t\t\ttc5 = _in[17] + _in[9];\r\n\t\t\ttc6 = _in[16] + _in[10];\r\n\t\t\ttc7 = _in[15] + _in[11];\r\n\t\t\ttc8 = _in[14] + _in[12];\r\n\r\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\r\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\r\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\r\n\t\t\tout[outPos + 11] = ct + st;\r\n\t\t\tout[outPos + 12] = ct - st;\r\n\r\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\r\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\r\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\r\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\r\n\t\t\tout[outPos + 3] = ct + st;\r\n\t\t\tout[outPos + 4] = ct - st;\r\n\r\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\r\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\r\n\t\t\tout[outPos + 7] = ct + st;\r\n\t\t\tout[outPos + 8] = ct - st;\r\n\r\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\r\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\r\n\t\t\tout[outPos + 15] = ct + st;\r\n\t\t\tout[outPos + 16] = ct - st;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\r\n\t\tvar wk = w0;\r\n\t\tvar wkPos = 286;\r\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\r\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\r\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\r\n\t\t\t\tvar band;\r\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\r\n\t\t\t\tvar mdct_enc = gi.xr;\r\n\t\t\t\tvar mdct_encPos = 0;\r\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\r\n\t\t\t\tvar sampPos = 0;\r\n\r\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\r\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\r\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\r\n\t\t\t\t\tsampPos += 2;\r\n\t\t\t\t\twkPos += 64;\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Compensate for inversion in the analysis filter\r\n\t\t\t\t\t */\r\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\r\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\r\n\t\t\t\t * subband samples\r\n\t\t\t\t */\r\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\r\n\t\t\t\t\tvar type = gi.block_type;\r\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\r\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\r\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\r\n\t\t\t\t\t\ttype = 0;\r\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\r\n\t\t\t\t\t\tArrays.fill(mdct_enc, mdct_encPos + 0,\r\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\r\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\r\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (type == Encoder.SHORT_TYPE) {\r\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\r\n\t\t\t\t\t\t\t\tvar w = win[Encoder.SHORT_TYPE][k + 3];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\r\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar work = new_float(18);\r\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\r\n\t\t\t\t\t\t\t\tvar a, b;\r\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\r\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\r\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\r\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\r\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\r\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\r\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\r\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\r\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Perform aliasing reduction butterfly\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (type != Encoder.SHORT_TYPE && band != 0) {\r\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\r\n\t\t\t\t\t\t\tvar bu, bd;\r\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\r\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\r\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\r\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\r\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\r\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\r\n\r\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\r\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twk = w1;\r\n\t\t\twkPos = 286;\r\n\t\t\tif (gfc.mode_gr == 1) {\r\n\t\t\t\tfor (var i = 0; i < 18; i++) {\r\n\t\t\t\t\tSystem.arraycopy(gfc.sb_sample[ch][1][i], 0,\r\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//package mp3;\r\n\r\n\r\nfunction III_psy_ratio() {\r\n\tthis.thm = new III_psy_xmin();\r\n\tthis.en = new III_psy_xmin();\r\n}\r\n\r\n\r\n/**\r\n * ENCDELAY The encoder delay.\r\n *\r\n * Minimum allowed is MDCTDELAY (see below)\r\n *\r\n * The first 96 samples will be attenuated, so using a value less than 96\r\n * will result in corrupt data for the first 96-ENCDELAY samples.\r\n *\r\n * suggested: 576 set to 1160 to sync with FhG.\r\n */\r\nEncoder.ENCDELAY = 576;\r\n/**\r\n * make sure there is at least one complete frame after the last frame\r\n * containing real data\r\n *\r\n * Using a value of 288 would be sufficient for a a very sophisticated\r\n * decoder that can decode granule-by-granule instead of frame by frame. But\r\n * lets not assume this, and assume the decoder will not decode frame N\r\n * unless it also has data for frame N+1\r\n */\r\nEncoder.POSTDELAY = 1152;\r\n\r\n/**\r\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\r\n * 528! Takehiro's routines:\r\n */\r\nEncoder.MDCTDELAY = 48;\r\nEncoder.FFTOFFSET = (224 + Encoder.MDCTDELAY);\r\n\r\n/**\r\n * Most decoders, including the one we use, have a delay of 528 samples.\r\n */\r\nEncoder.DECDELAY = 528;\r\n\r\n/**\r\n * number of subbands\r\n */\r\nEncoder.SBLIMIT = 32;\r\n\r\n/**\r\n * parition bands bands\r\n */\r\nEncoder.CBANDS = 64;\r\n\r\n/**\r\n * number of critical bands/scale factor bands where masking is computed\r\n */\r\nEncoder.SBPSY_l = 21;\r\nEncoder.SBPSY_s = 12;\r\n\r\n/**\r\n * total number of scalefactor bands encoded\r\n */\r\nEncoder.SBMAX_l = 22;\r\nEncoder.SBMAX_s = 13;\r\nEncoder.PSFB21 = 6;\r\nEncoder.PSFB12 = 6;\r\n\r\n/**\r\n * FFT sizes\r\n */\r\nEncoder.BLKSIZE = 1024;\r\nEncoder.HBLKSIZE = (Encoder.BLKSIZE / 2 + 1);\r\nEncoder.BLKSIZE_s = 256;\r\nEncoder.HBLKSIZE_s = (Encoder.BLKSIZE_s / 2 + 1);\r\n\r\nEncoder.NORM_TYPE = 0;\r\nEncoder.START_TYPE = 1;\r\nEncoder.SHORT_TYPE = 2;\r\nEncoder.STOP_TYPE = 3;\r\n\r\n/**\r\n * <PRE>\r\n * Mode Extention:\r\n * When we are in stereo mode, there are 4 possible methods to store these\r\n * two channels. The stereo modes -m? are using a subset of them.\r\n *\r\n *  -ms: MPG_MD_LR_LR\r\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\r\n *  -mf: MPG_MD_MS_LR\r\n *  -mi: all\r\n * </PRE>\r\n */\r\nEncoder.MPG_MD_LR_LR = 0;\r\nEncoder.MPG_MD_LR_I = 1;\r\nEncoder.MPG_MD_MS_LR = 2;\r\nEncoder.MPG_MD_MS_I = 3;\r\n\r\nEncoder.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\r\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\r\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\r\n\r\nfunction Encoder() {\r\n\r\n    var FFTOFFSET = Encoder.FFTOFFSET;\r\n    var MPG_MD_MS_LR = Encoder.MPG_MD_MS_LR;\r\n    //BitStream bs;\r\n    //PsyModel psy;\r\n    //VBRTag vbr;\r\n    //QuantizePVT qupvt;\r\n    var bs = null;\r\n    this.psy = null;\r\n    var psy = null;\r\n    var vbr = null;\r\n    var qupvt = null;\r\n\r\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\r\n    //    VBRTag vbr) {\r\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\r\n        bs = _bs;\r\n        this.psy = _psy;\r\n        psy = _psy;\r\n        vbr = _vbr;\r\n        qupvt = _qupvt;\r\n    };\r\n\r\n    var newMDCT = new NewMDCT();\r\n\r\n    /***********************************************************************\r\n     *\r\n     * encoder and decoder delays\r\n     *\r\n     ***********************************************************************/\r\n\r\n    /**\r\n     * <PRE>\r\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\r\n     * layer  II enc->dec delay:   480  (481?)   (observed)\r\n     *\r\n     * polyphase 256-16             (dec or enc)        = 240\r\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\r\n     * total:    512+16\r\n     *\r\n     * My guess is that delay of polyphase filterbank is actualy 240.5\r\n     * (there are technical reasons for this, see postings in mp3encoder).\r\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\r\n     * </PRE>\r\n     */\r\n\r\n\r\n    /**\r\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\r\n     *\r\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\r\n     */\r\n//private void adjust_ATH(final LameInternalFlags gfc) {\r\n    function adjust_ATH(gfc) {\r\n        var gr2_max, max_pow;\r\n\r\n        if (gfc.ATH.useAdjust == 0) {\r\n            gfc.ATH.adjust = 1.0;\r\n            /* no adjustment */\r\n            return;\r\n        }\r\n\r\n        /* jd - 2001 mar 12, 27, jun 30 */\r\n        /* loudness based on equal loudness curve; */\r\n        /* use granule with maximum combined loudness */\r\n        max_pow = gfc.loudness_sq[0][0];\r\n        gr2_max = gfc.loudness_sq[1][0];\r\n        if (gfc.channels_out == 2) {\r\n            max_pow += gfc.loudness_sq[0][1];\r\n            gr2_max += gfc.loudness_sq[1][1];\r\n        } else {\r\n            max_pow += max_pow;\r\n            gr2_max += gr2_max;\r\n        }\r\n        if (gfc.mode_gr == 2) {\r\n            max_pow = Math.max(max_pow, gr2_max);\r\n        }\r\n        max_pow *= 0.5;\r\n        /* max_pow approaches 1.0 for full band noise */\r\n\r\n        /* jd - 2001 mar 31, jun 30 */\r\n        /* user tuning of ATH adjustment region */\r\n        max_pow *= gfc.ATH.aaSensitivityP;\r\n\r\n        /*\r\n         * adjust ATH depending on range of maximum value\r\n         */\r\n\r\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\r\n        /* continuous curves based on approximation */\r\n        /* to GB's original values. */\r\n        /* For an increase in approximate loudness, */\r\n        /* set ATH adjust to adjust_limit immediately */\r\n        /* after a delay of one frame. */\r\n        /* For a loudness decrease, reduce ATH adjust */\r\n        /* towards adjust_limit gradually. */\r\n        /* max_pow is a loudness squared or a power. */\r\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\r\n            if (gfc.ATH.adjust >= 1.0) {\r\n                gfc.ATH.adjust = 1.0;\r\n            } else {\r\n                /* preceding frame has lower ATH adjust; */\r\n                /* ascend only to the preceding adjust_limit */\r\n                /* in case there is leading low volume */\r\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\r\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\r\n                }\r\n            }\r\n            gfc.ATH.adjustLimit = 1.0;\r\n        } else { /* adjustment curve */\r\n            /* about 32 dB maximum adjust (0.000625) */\r\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\r\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\r\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\r\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\r\n                    gfc.ATH.adjust = adj_lim_new;\r\n                }\r\n            } else { /* ascend */\r\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\r\n                    gfc.ATH.adjust = adj_lim_new;\r\n                } else {\r\n                    /* preceding frame has lower ATH adjust; */\r\n                    /* ascend only to the preceding adjust_limit */\r\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\r\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\r\n                    }\r\n                }\r\n            }\r\n            gfc.ATH.adjustLimit = adj_lim_new;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *  some simple statistics\r\n     *\r\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\r\n     *  : bitrates, kbps depending on MPEG version\r\n     *  bitrate index 15: forbidden\r\n     *\r\n     *  mode_ext:\r\n     *  0:  LR\r\n     *  1:  LR-i\r\n     *  2:  MS\r\n     *  3:  MS-i\r\n     * </PRE>\r\n     */\r\n    function updateStats(gfc) {\r\n        var gr, ch;\r\n\r\n        /* count bitrate indices */\r\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\r\n        gfc.bitrate_stereoMode_Hist[15][4]++;\r\n\r\n        /* count 'em for every mode extension in case of 2 channel encoding */\r\n        if (gfc.channels_out == 2) {\r\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\r\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\r\n        }\r\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\r\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\r\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\r\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\r\n                    bt = 4;\r\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\r\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\r\n                gfc.bitrate_blockType_Hist[15][bt]++;\r\n                gfc.bitrate_blockType_Hist[15][5]++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function lame_encode_frame_init(gfp, inbuf) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        var ch, gr;\r\n\r\n        if (gfc.lame_encode_frame_init == 0) {\r\n            /* prime the MDCT/polyphase filterbank with a short block */\r\n            var i, j;\r\n            var primebuff0 = new_float(286 + 1152 + 576);\r\n            var primebuff1 = new_float(286 + 1152 + 576);\r\n            gfc.lame_encode_frame_init = 1;\r\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\r\n                if (i < 576 * gfc.mode_gr) {\r\n                    primebuff0[i] = 0;\r\n                    if (gfc.channels_out == 2)\r\n                        primebuff1[i] = 0;\r\n                } else {\r\n                    primebuff0[i] = inbuf[0][j];\r\n                    if (gfc.channels_out == 2)\r\n                        primebuff1[i] = inbuf[1][j];\r\n                    ++j;\r\n                }\r\n            }\r\n            /* polyphase filtering / mdct */\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.SHORT_TYPE;\r\n                }\r\n            }\r\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\r\n\r\n            /* check FFT will not use a negative starting offset */\r\n            /* check if we have enough data for FFT */\r\n            /* check if we have enough data for polyphase filterbank */\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     * encodeframe()           Layer 3\r\n     *\r\n     * encode a single frame\r\n     *\r\n     *\r\n     *    lame_encode_frame()\r\n     *\r\n     *\r\n     *                           gr 0            gr 1\r\n     *    inbuf:           |--------------|--------------|--------------|\r\n     *\r\n     *\r\n     *    Polyphase (18 windows, each shifted 32)\r\n     *    gr 0:\r\n     *    window1          <----512---.\r\n     *    window18                 <----512---.\r\n     *\r\n     *    gr 1:\r\n     *    window1                         <----512---.\r\n     *    window18                                <----512---.\r\n     *\r\n     *\r\n     *\r\n     *    MDCT output:  |--------------|--------------|--------------|\r\n     *\r\n     *    FFT's                    <---------1024---------.\r\n     *                                             <---------1024-------.\r\n     *\r\n     *\r\n     *\r\n     *        inbuf = buffer of PCM data size=MP3 framesize\r\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\r\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\r\n     *\r\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\r\n     *        next granule.\r\n     *        FFT is centered over granule:  224+576+224\r\n     *        So FFT starts at:   576-224-MDCTDELAY\r\n     *\r\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\r\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\r\n     *\r\n     *        MPEG2:  polyphase first window:  [0..511]\r\n     *                          18th window:   [544..1055]          (1056)\r\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\r\n     *                data needed:  512+framesize-32\r\n     *\r\n     *        A close look newmdct.c shows that the polyphase filterbank\r\n     *        only uses data from [0..510] for each window.  Perhaps because the window\r\n     *        used by the filterbank is zero for the last point, so Takehiro's\r\n     *        code doesn't bother to compute with it.\r\n     *\r\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\r\n     *\r\n     * </PRE>\r\n     */\r\n\r\n\r\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\r\n        var mp3count;\r\n        var masking_LR = new_array_n([2, 2]);\r\n        /*\r\n         * LR masking &\r\n         * energy\r\n         */\r\n        masking_LR[0][0] = new III_psy_ratio();\r\n        masking_LR[0][1] = new III_psy_ratio();\r\n        masking_LR[1][0] = new III_psy_ratio();\r\n        masking_LR[1][1] = new III_psy_ratio();\r\n        var masking_MS = new_array_n([2, 2]);\r\n        /* MS masking & energy */\r\n        masking_MS[0][0] = new III_psy_ratio();\r\n        masking_MS[0][1] = new III_psy_ratio();\r\n        masking_MS[1][0] = new III_psy_ratio();\r\n        masking_MS[1][1] = new III_psy_ratio();\r\n        //III_psy_ratio masking[][];\r\n        var masking;\r\n        /* pointer to selected maskings */\r\n        var inbuf = [null, null];\r\n        var gfc = gfp.internal_flags;\r\n\r\n        var tot_ener = new_float_n([2, 4]);\r\n        var ms_ener_ratio = [.5, .5];\r\n        var pe = [[0., 0.], [0., 0.]];\r\n        var pe_MS = [[0., 0.], [0., 0.]];\r\n\r\n//float[][] pe_use;\r\n        var pe_use;\r\n\r\n        var ch, gr;\r\n\r\n        inbuf[0] = inbuf_l;\r\n        inbuf[1] = inbuf_r;\r\n\r\n        if (gfc.lame_encode_frame_init == 0) {\r\n            /* first run? */\r\n            lame_encode_frame_init(gfp, inbuf);\r\n\r\n        }\r\n\r\n        /********************** padding *****************************/\r\n        /**\r\n         * <PRE>\r\n         * padding method as described in\r\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\r\n         * by Martin Sieler, Ralph Sperschneider\r\n         *\r\n         * note: there is no padding for the very first frame\r\n         *\r\n         * Robert Hegemann 2000-06-22\r\n         * </PRE>\r\n         */\r\n        gfc.padding = 0;\r\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\r\n            gfc.slot_lag += gfp.out_samplerate;\r\n            gfc.padding = 1;\r\n        }\r\n\r\n        /****************************************\r\n         * Stage 1: psychoacoustic model *\r\n         ****************************************/\r\n\r\n        if (gfc.psymodel != 0) {\r\n            /*\r\n             * psychoacoustic model psy model has a 1 granule (576) delay that\r\n             * we must compensate for (mt 6/99).\r\n             */\r\n            var ret;\r\n            var bufp = [null, null];\r\n            /* address of beginning of left & right granule */\r\n            var bufpPos = 0;\r\n            /* address of beginning of left & right granule */\r\n            var blocktype = new_int(2);\r\n\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    bufp[ch] = inbuf[ch];\r\n                    bufpPos = 576 + gr * 576 - Encoder.FFTOFFSET;\r\n                }\r\n                if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\r\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\r\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\r\n                        tot_ener[gr], blocktype);\r\n                } else {\r\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\r\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\r\n                        tot_ener[gr], blocktype);\r\n                }\r\n                if (ret != 0)\r\n                    return -4;\r\n\r\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\r\n                    if (ms_ener_ratio[gr] > 0)\r\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\r\n                }\r\n\r\n                /* block type flags */\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    var cod_info = gfc.l3_side.tt[gr][ch];\r\n                    cod_info.block_type = blocktype[ch];\r\n                    cod_info.mixed_block_flag = 0;\r\n                }\r\n            }\r\n        } else {\r\n            /* no psy model */\r\n            for (gr = 0; gr < gfc.mode_gr; gr++)\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.NORM_TYPE;\r\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\r\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\r\n                }\r\n        }\r\n\r\n        /* auto-adjust of ATH, useful for low volume */\r\n        adjust_ATH(gfc);\r\n\r\n        /****************************************\r\n         * Stage 2: MDCT *\r\n         ****************************************/\r\n\r\n        /* polyphase filtering / mdct */\r\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\r\n\r\n        /****************************************\r\n         * Stage 3: MS/LR decision *\r\n         ****************************************/\r\n\r\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\r\n        gfc.mode_ext = Encoder.MPG_MD_LR_LR;\r\n\r\n        if (gfp.force_ms) {\r\n            gfc.mode_ext = Encoder.MPG_MD_MS_LR;\r\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n            /*\r\n             * ms_ratio = is scaled, for historical reasons, to look like a\r\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\r\n             * uncorrelated\r\n             */\r\n\r\n            /**\r\n             * <PRE>\r\n             * [0] and [1] are the results for the two granules in MPEG-1,\r\n             * in MPEG-2 it's only a faked averaging of the same value\r\n             * _prev is the value of the last granule of the previous frame\r\n             * _next is the value of the first granule of the next frame\r\n             * </PRE>\r\n             */\r\n\r\n            var sum_pe_MS = 0.;\r\n            var sum_pe_LR = 0.;\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    sum_pe_MS += pe_MS[gr][ch];\r\n                    sum_pe_LR += pe[gr][ch];\r\n                }\r\n            }\r\n\r\n            /* based on PE: M/S coding would not use much more bits than L/R */\r\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\r\n\r\n                var gi0 = gfc.l3_side.tt[0];\r\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\r\n\r\n                if (gi0[0].block_type == gi0[1].block_type\r\n                    && gi1[0].block_type == gi1[1].block_type) {\r\n\r\n                    gfc.mode_ext = Encoder.MPG_MD_MS_LR;\r\n                }\r\n            }\r\n        }\r\n\r\n        /* bit and noise allocation */\r\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\r\n            masking = masking_MS;\r\n            /* use MS masking */\r\n            pe_use = pe_MS;\r\n        } else {\r\n            masking = masking_LR;\r\n            /* use LR masking */\r\n            pe_use = pe;\r\n        }\r\n\r\n        /* copy data for MP3 frame analyzer */\r\n        if (gfp.analysis && gfc.pinfo != null) {\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\r\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\r\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\r\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\r\n                    System.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\r\n                        gfc.pinfo.xr[gr][ch], 0, 576);\r\n                    /*\r\n                     * in psymodel, LR and MS data was stored in pinfo. switch\r\n                     * to MS data:\r\n                     */\r\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\r\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\r\n                        System.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\r\n                            gfc.pinfo.energy[gr][ch], 0,\r\n                            gfc.pinfo.energy[gr][ch].length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /****************************************\r\n         * Stage 4: quantization loop *\r\n         ****************************************/\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr) {\r\n\r\n            var i;\r\n            var f;\r\n\r\n            for (i = 0; i < 18; i++)\r\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\r\n\r\n            f = 0.0;\r\n            for (gr = 0; gr < gfc.mode_gr; gr++)\r\n                for (ch = 0; ch < gfc.channels_out; ch++)\r\n                    f += pe_use[gr][ch];\r\n            gfc.nsPsy.pefirbuf[18] = f;\r\n\r\n            f = gfc.nsPsy.pefirbuf[9];\r\n            for (i = 0; i < 9; i++)\r\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\r\n                    * Encoder.fircoef[i];\r\n\r\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\r\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\r\n                for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                    pe_use[gr][ch] *= f;\r\n                }\r\n            }\r\n        }\r\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\r\n\r\n        /****************************************\r\n         * Stage 5: bitstream formatting *\r\n         ****************************************/\r\n\r\n        /* write the frame to the bitstream */\r\n        bs.format_bitstream(gfp);\r\n\r\n        /* copy mp3 bit buffer into array */\r\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\r\n\r\n        if (gfp.bWriteVbrTag)\r\n            vbr.addVbrFrame(gfp);\r\n\r\n        if (gfp.analysis && gfc.pinfo != null) {\r\n            for (ch = 0; ch < gfc.channels_out; ch++) {\r\n                var j;\r\n                for (j = 0; j < FFTOFFSET; j++)\r\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\r\n                    + gfp.framesize];\r\n                for (j = FFTOFFSET; j < 1600; j++) {\r\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\r\n                }\r\n            }\r\n            qupvt.set_frame_pinfo(gfp, masking);\r\n        }\r\n\r\n        updateStats(gfc);\r\n\r\n        return mp3count;\r\n    }\r\n}\r\n\r\n\r\n//package mp3;\r\n\r\nfunction VBRSeekInfo() {\r\n    /**\r\n     * What we have seen so far.\r\n     */\r\n    this.sum = 0;\r\n    /**\r\n     * How many frames we have seen in this chunk.\r\n     */\r\n    this.seen = 0;\r\n    /**\r\n     * How many frames we want to collect into one chunk.\r\n     */\r\n    this.want = 0;\r\n    /**\r\n     * Actual position in our bag.\r\n     */\r\n    this.pos = 0;\r\n    /**\r\n     * Size of our bag.\r\n     */\r\n    this.size = 0;\r\n    /**\r\n     * Pointer to our bag.\r\n     */\r\n    this.bag = null;\r\n    this.nVbrNumFrames = 0;\r\n    this.nBytesWritten = 0;\r\n    /* VBR tag data */\r\n    this.TotalFrameSize = 0;\r\n}\r\n\r\n\r\n\r\nfunction IIISideInfo() {\r\n    this.tt = [[null, null], [null, null]];\r\n    this.main_data_begin = 0;\r\n    this.private_bits = 0;\r\n    this.resvDrain_pre = 0;\r\n    this.resvDrain_post = 0;\r\n    this.scfsi = [new_int(4), new_int(4)];\r\n\r\n    for (var gr = 0; gr < 2; gr++) {\r\n        for (var ch = 0; ch < 2; ch++) {\r\n            this.tt[gr][ch] = new GrInfo();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction III_psy_xmin() {\r\n    this.l = new_float(Encoder.SBMAX_l);\r\n    this.s = new_float_n([Encoder.SBMAX_s, 3]);\r\n\r\n    var self = this;\r\n    this.assign = function (iii_psy_xmin) {\r\n        System.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder.SBMAX_l);\r\n        for (var i = 0; i < Encoder.SBMAX_s; i++) {\r\n            for (var j = 0; j < 3; j++) {\r\n                self.s[i][j] = iii_psy_xmin.s[i][j];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n//package mp3;\r\n\r\n/**\r\n * Variables used for --nspsytune\r\n *\r\n * @author Ken\r\n *\r\n */\r\nfunction NsPsy() {\r\n    this.last_en_subshort = new_float_n([4, 9]);\r\n    this.lastAttacks = new_int(4);\r\n    this.pefirbuf = new_float(19);\r\n    this.longfact = new_float(Encoder.SBMAX_l);\r\n    this.shortfact = new_float(Encoder.SBMAX_s);\r\n\r\n    /**\r\n     * short block tuning\r\n     */\r\n    this.attackthre = 0.;\r\n    this.attackthre_s = 0.;\r\n}\r\n\r\n\r\n\r\n\r\nLameInternalFlags.MFSIZE = (3 * 1152 + Encoder.ENCDELAY - Encoder.MDCTDELAY);\r\nLameInternalFlags.MAX_HEADER_BUF = 256;\r\nLameInternalFlags.MAX_BITS_PER_CHANNEL = 4095;\r\nLameInternalFlags.MAX_BITS_PER_GRANULE = 7680;\r\nLameInternalFlags.BPC = 320;\r\n\r\nfunction LameInternalFlags() {\r\n    var MAX_HEADER_LEN = 40;\r\n\r\n\r\n    /********************************************************************\r\n     * internal variables NOT set by calling program, and should not be *\r\n     * modified by the calling program *\r\n     ********************************************************************/\r\n\r\n    /**\r\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\r\n     * pointer to this struct. It is very unlikely that a pointer to\r\n     * lame_global_flags has the same 32 bits in it's structure (large and other\r\n     * special properties, for instance prime).\r\n     *\r\n     * To test that the structure is right and initialized, use: if ( gfc .\r\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\r\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\r\n     * NOT \"if (flag)\". Unintended modification of this element will be\r\n     * otherwise misinterpreted as an init.\r\n     */\r\n    this.Class_ID = 0;\r\n\r\n    this.lame_encode_frame_init = 0;\r\n    this.iteration_init_init = 0;\r\n    this.fill_buffer_resample_init = 0;\r\n\r\n    //public float mfbuf[][] = new float[2][MFSIZE];\r\n    this.mfbuf = new_float_n([2, LameInternalFlags.MFSIZE]);\r\n\r\n    /**\r\n     * granules per frame\r\n     */\r\n    this.mode_gr = 0;\r\n    /**\r\n     * number of channels in the input data stream (PCM or decoded PCM)\r\n     */\r\n    this.channels_in = 0;\r\n    /**\r\n     * number of channels in the output data stream (not used for decoding)\r\n     */\r\n    this.channels_out = 0;\r\n    /**\r\n     * input_samp_rate/output_samp_rate\r\n     */\r\n        //public double resample_ratio;\r\n    this.resample_ratio = 0.;\r\n\r\n    this.mf_samples_to_encode = 0;\r\n    this.mf_size = 0;\r\n    /**\r\n     * min bitrate index\r\n     */\r\n    this.VBR_min_bitrate = 0;\r\n    /**\r\n     * max bitrate index\r\n     */\r\n    this.VBR_max_bitrate = 0;\r\n    this.bitrate_index = 0;\r\n    this.samplerate_index = 0;\r\n    this.mode_ext = 0;\r\n\r\n    /* lowpass and highpass filter control */\r\n    /**\r\n     * normalized frequency bounds of passband\r\n     */\r\n    this.lowpass1 = 0.;\r\n    this.lowpass2 = 0.;\r\n    /**\r\n     * normalized frequency bounds of passband\r\n     */\r\n    this.highpass1 = 0.;\r\n    this.highpass2 = 0.;\r\n\r\n    /**\r\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\r\n     */\r\n    this.noise_shaping = 0;\r\n\r\n    /**\r\n     * 0 = ISO model: amplify all distorted bands<BR>\r\n     * 1 = amplify within 50% of max (on db scale)<BR>\r\n     * 2 = amplify only most distorted band<BR>\r\n     * 3 = method 1 and refine with method 2<BR>\r\n     */\r\n    this.noise_shaping_amp = 0;\r\n    /**\r\n     * 0 = no substep<BR>\r\n     * 1 = use substep shaping at last step(VBR only)<BR>\r\n     * (not implemented yet)<BR>\r\n     * 2 = use substep inside loop<BR>\r\n     * 3 = use substep inside loop and last step<BR>\r\n     */\r\n    this.substep_shaping = 0;\r\n\r\n    /**\r\n     * 1 = gpsycho. 0 = none\r\n     */\r\n    this.psymodel = 0;\r\n    /**\r\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\r\n     * a scalefac has reached max value<BR>\r\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\r\n     * 2 = stop when all scalefacs amplified\r\n     */\r\n    this.noise_shaping_stop = 0;\r\n\r\n    /**\r\n     * 0 = no, 1 = yes\r\n     */\r\n    this.subblock_gain = 0;\r\n    /**\r\n     * 0 = no. 1=outside loop 2=inside loop(slow)\r\n     */\r\n    this.use_best_huffman = 0;\r\n\r\n    /**\r\n     * 0 = stop early after 0 distortion found. 1 = full search\r\n     */\r\n    this.full_outer_loop = 0;\r\n\r\n    //public IIISideInfo l3_side = new IIISideInfo();\r\n    this.l3_side = new IIISideInfo();\r\n    this.ms_ratio = new_float(2);\r\n\r\n    /* used for padding */\r\n    /**\r\n     * padding for the current frame?\r\n     */\r\n    this.padding = 0;\r\n    this.frac_SpF = 0;\r\n    this.slot_lag = 0;\r\n\r\n    /**\r\n     * optional ID3 tags\r\n     */\r\n        //public ID3TagSpec tag_spec;\r\n    this.tag_spec = null;\r\n    this.nMusicCRC = 0;\r\n\r\n    /* variables used by Quantize */\r\n    //public int OldValue[] = new int[2];\r\n    this.OldValue = new_int(2);\r\n    //public int CurrentStep[] = new int[2];\r\n    this.CurrentStep = new_int(2);\r\n\r\n    this.masking_lower = 0.;\r\n    //public int bv_scf[] = new int[576];\r\n    this.bv_scf = new_int(576);\r\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\r\n    this.pseudohalf = new_int(L3Side.SFBMAX);\r\n\r\n    /**\r\n     * will be set in lame_init_params\r\n     */\r\n    this.sfb21_extra = false;\r\n\r\n    /* BPC = maximum number of filter convolution windows to precompute */\r\n    //public float[][] inbuf_old = new float[2][];\r\n    this.inbuf_old = new Array(2);\r\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\r\n    this.blackfilt = new Array(2 * LameInternalFlags.BPC + 1);\r\n    //public double itime[] = new double[2];\r\n    this.itime = new_double(2);\r\n    this.sideinfo_len = 0;\r\n\r\n    /* variables for newmdct.c */\r\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\r\n    this.sb_sample = new_float_n([2, 2, 18, Encoder.SBLIMIT]);\r\n    this.amp_filter = new_float(32);\r\n\r\n    /* variables for BitStream */\r\n\r\n    /**\r\n     * <PRE>\r\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\r\n     * max number of frames in reservoir:  8\r\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\r\n     * with VBR, if you are encoding all silence, it is possible to\r\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\r\n     * to buffer up to 255 headers!\r\n     * </PRE>\r\n     */\r\n    /**\r\n     * also, max_header_buf has to be a power of two\r\n     */\r\n    /**\r\n     * max size of header is 38\r\n     */\r\n\r\n    function Header() {\r\n        this.write_timing = 0;\r\n        this.ptr = 0;\r\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\r\n        this.buf = new_byte(MAX_HEADER_LEN);\r\n    }\r\n\r\n    this.header = new Array(LameInternalFlags.MAX_HEADER_BUF);\r\n\r\n    this.h_ptr = 0;\r\n    this.w_ptr = 0;\r\n    this.ancillary_flag = 0;\r\n\r\n    /* variables for Reservoir */\r\n    /**\r\n     * in bits\r\n     */\r\n    this.ResvSize = 0;\r\n    /**\r\n     * in bits\r\n     */\r\n    this.ResvMax = 0;\r\n\r\n    //public ScaleFac scalefac_band = new ScaleFac();\r\n    this.scalefac_band = new ScaleFac();\r\n\r\n    /* daa from PsyModel */\r\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\r\n    /* to be remembered for the unpredictability measure. For \"r\" and */\r\n    /* \"phi_sav\", the first index from the left is the channel select and */\r\n    /* the second index is the \"age\" of the data. */\r\n    this.minval_l = new_float(Encoder.CBANDS);\r\n    this.minval_s = new_float(Encoder.CBANDS);\r\n    this.nb_1 = new_float_n([4, Encoder.CBANDS]);\r\n    this.nb_2 = new_float_n([4, Encoder.CBANDS]);\r\n    this.nb_s1 = new_float_n([4, Encoder.CBANDS]);\r\n    this.nb_s2 = new_float_n([4, Encoder.CBANDS]);\r\n    this.s3_ss = null;\r\n    this.s3_ll = null;\r\n    this.decay = 0.;\r\n\r\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\r\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\r\n    this.thm = new Array(4);\r\n    this.en = new Array(4);\r\n\r\n    /**\r\n     * fft and energy calculation\r\n     */\r\n    this.tot_ener = new_float(4);\r\n\r\n    /* loudness calculation (for adaptive threshold of hearing) */\r\n    /**\r\n     * loudness^2 approx. per granule and channel\r\n     */\r\n    this.loudness_sq = new_float_n([2, 2]);\r\n    /**\r\n     * account for granule delay of L3psycho_anal\r\n     */\r\n    this.loudness_sq_save = new_float(2);\r\n\r\n    /**\r\n     * Scale Factor Bands\r\n     */\r\n    this.mld_l = new_float(Encoder.SBMAX_l);\r\n    this.mld_s = new_float(Encoder.SBMAX_s);\r\n    this.bm_l = new_int(Encoder.SBMAX_l);\r\n    this.bo_l = new_int(Encoder.SBMAX_l);\r\n    this.bm_s = new_int(Encoder.SBMAX_s);\r\n    this.bo_s = new_int(Encoder.SBMAX_s);\r\n    this.npart_l = 0;\r\n    this.npart_s = 0;\r\n\r\n    this.s3ind = new_int_n([Encoder.CBANDS, 2]);\r\n    this.s3ind_s = new_int_n([Encoder.CBANDS, 2]);\r\n\r\n    this.numlines_s = new_int(Encoder.CBANDS);\r\n    this.numlines_l = new_int(Encoder.CBANDS);\r\n    this.rnumlines_l = new_float(Encoder.CBANDS);\r\n    this.mld_cb_l = new_float(Encoder.CBANDS);\r\n    this.mld_cb_s = new_float(Encoder.CBANDS);\r\n    this.numlines_s_num1 = 0;\r\n    this.numlines_l_num1 = 0;\r\n\r\n    /* ratios */\r\n    this.pe = new_float(4);\r\n    this.ms_ratio_s_old = 0.;\r\n    this.ms_ratio_l_old = 0.;\r\n    this.ms_ener_ratio_old = 0.;\r\n\r\n    /**\r\n     * block type\r\n     */\r\n    this.blocktype_old = new_int(2);\r\n\r\n    /**\r\n     * variables used for --nspsytune\r\n     */\r\n    this.nsPsy = new NsPsy();\r\n\r\n    /**\r\n     * used for Xing VBR header\r\n     */\r\n    this.VBR_seek_table = new VBRSeekInfo();\r\n\r\n    /**\r\n     * all ATH related stuff\r\n     */\r\n        //public ATH ATH;\r\n    this.ATH = null;\r\n\r\n    this.PSY = null;\r\n\r\n    this.nogap_total = 0;\r\n    this.nogap_current = 0;\r\n\r\n    /* ReplayGain */\r\n    this.decode_on_the_fly = true;\r\n    this.findReplayGain = true;\r\n    this.findPeakSample = true;\r\n    this.PeakSample = 0.;\r\n    this.RadioGain = 0;\r\n    this.AudiophileGain = 0;\r\n    //public ReplayGain rgdata;\r\n    this.rgdata = null;\r\n\r\n    /**\r\n     * gain change required for preventing clipping\r\n     */\r\n    this.noclipGainChange = 0;\r\n    /**\r\n     * user-specified scale factor required for preventing clipping\r\n     */\r\n    this.noclipScale = 0.;\r\n\r\n    /* simple statistics */\r\n    this.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\r\n    /**\r\n     * norm/start/short/stop/mixed(short)/sum\r\n     */\r\n    this.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\r\n\r\n    //public PlottingData pinfo;\r\n    //public MPGLib.mpstr_tag hip;\r\n    this.pinfo = null;\r\n    this.hip = null;\r\n\r\n    this.in_buffer_nsamples = 0;\r\n    //public float[] in_buffer_0;\r\n    //public float[] in_buffer_1;\r\n    this.in_buffer_0 = null;\r\n    this.in_buffer_1 = null;\r\n\r\n    //public IIterationLoop iteration_loop;\r\n    this.iteration_loop = null;\r\n\r\n    for (var i = 0; i < this.en.length; i++) {\r\n        this.en[i] = new III_psy_xmin();\r\n    }\r\n    for (var i = 0; i < this.thm.length; i++) {\r\n        this.thm[i] = new III_psy_xmin();\r\n    }\r\n    for (var i = 0; i < this.header.length; i++) {\r\n        this.header[i] = new Header();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction FFT() {\r\n\r\n    var window = new_float(Encoder.BLKSIZE);\r\n    var window_s = new_float(Encoder.BLKSIZE_s / 2);\r\n\r\n    var costab = [\r\n        9.238795325112867e-01, 3.826834323650898e-01,\r\n        9.951847266721969e-01, 9.801714032956060e-02,\r\n        9.996988186962042e-01, 2.454122852291229e-02,\r\n        9.999811752826011e-01, 6.135884649154475e-03\r\n    ];\r\n\r\n    function fht(fz, fzPos, n) {\r\n        var tri = 0;\r\n        var k4;\r\n        var fi;\r\n        var gi;\r\n\r\n        n <<= 1;\r\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\r\n        var fn = fzPos + n;\r\n        k4 = 4;\r\n        do {\r\n            var s1, c1;\r\n            var i, k1, k2, k3, kx;\r\n            kx = k4 >> 1;\r\n            k1 = k4;\r\n            k2 = k4 << 1;\r\n            k3 = k2 + k1;\r\n            k4 = k2 << 1;\r\n            fi = fzPos;\r\n            gi = fi + kx;\r\n            do {\r\n                var f0, f1, f2, f3;\r\n                f1 = fz[fi + 0] - fz[fi + k1];\r\n                f0 = fz[fi + 0] + fz[fi + k1];\r\n                f3 = fz[fi + k2] - fz[fi + k3];\r\n                f2 = fz[fi + k2] + fz[fi + k3];\r\n                fz[fi + k2] = f0 - f2;\r\n                fz[fi + 0] = f0 + f2;\r\n                fz[fi + k3] = f1 - f3;\r\n                fz[fi + k1] = f1 + f3;\r\n                f1 = fz[gi + 0] - fz[gi + k1];\r\n                f0 = fz[gi + 0] + fz[gi + k1];\r\n                f3 = (Util.SQRT2 * fz[gi + k3]);\r\n                f2 = (Util.SQRT2 * fz[gi + k2]);\r\n                fz[gi + k2] = f0 - f2;\r\n                fz[gi + 0] = f0 + f2;\r\n                fz[gi + k3] = f1 - f3;\r\n                fz[gi + k1] = f1 + f3;\r\n                gi += k4;\r\n                fi += k4;\r\n            } while (fi < fn);\r\n            c1 = costab[tri + 0];\r\n            s1 = costab[tri + 1];\r\n            for (i = 1; i < kx; i++) {\r\n                var c2, s2;\r\n                c2 = 1 - (2 * s1) * s1;\r\n                s2 = (2 * s1) * c1;\r\n                fi = fzPos + i;\r\n                gi = fzPos + k1 - i;\r\n                do {\r\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\r\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\r\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\r\n                    f1 = fz[fi + 0] - a;\r\n                    f0 = fz[fi + 0] + a;\r\n                    g1 = fz[gi + 0] - b;\r\n                    g0 = fz[gi + 0] + b;\r\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\r\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\r\n                    f3 = fz[fi + k2] - a;\r\n                    f2 = fz[fi + k2] + a;\r\n                    g3 = fz[gi + k2] - b;\r\n                    g2 = fz[gi + k2] + b;\r\n                    b = s1 * f2 - c1 * g3;\r\n                    a = c1 * f2 + s1 * g3;\r\n                    fz[fi + k2] = f0 - a;\r\n                    fz[fi + 0] = f0 + a;\r\n                    fz[gi + k3] = g1 - b;\r\n                    fz[gi + k1] = g1 + b;\r\n                    b = c1 * g2 - s1 * f3;\r\n                    a = s1 * g2 + c1 * f3;\r\n                    fz[gi + k2] = g0 - a;\r\n                    fz[gi + 0] = g0 + a;\r\n                    fz[fi + k3] = f1 - b;\r\n                    fz[fi + k1] = f1 + b;\r\n                    gi += k4;\r\n                    fi += k4;\r\n                } while (fi < fn);\r\n                c2 = c1;\r\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\r\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\r\n            }\r\n            tri += 2;\r\n        } while (k4 < n);\r\n    }\r\n\r\n    var rv_tbl = [0x00, 0x80, 0x40,\r\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\r\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\r\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\r\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\r\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\r\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\r\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\r\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\r\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\r\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\r\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\r\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\r\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\r\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\r\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\r\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\r\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\r\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\r\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\r\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\r\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\r\n\r\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\r\n        for (var b = 0; b < 3; b++) {\r\n            var x = Encoder.BLKSIZE_s / 2;\r\n            var k = 0xffff & ((576 / 3) * (b + 1));\r\n            var j = Encoder.BLKSIZE_s / 8 - 1;\r\n            do {\r\n                var f0, f1, f2, f3, w;\r\n                var i = rv_tbl[j << 2] & 0xff;\r\n\r\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\r\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\r\n                f1 = f0 - w;\r\n                f0 = f0 + w;\r\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\r\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\r\n                f3 = f2 - w;\r\n                f2 = f2 + w;\r\n\r\n                x -= 4;\r\n                x_real[b][x + 0] = f0 + f2;\r\n                x_real[b][x + 2] = f0 - f2;\r\n                x_real[b][x + 1] = f1 + f3;\r\n                x_real[b][x + 3] = f1 - f3;\r\n\r\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\r\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\r\n                f1 = f0 - w;\r\n                f0 = f0 + w;\r\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\r\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\r\n                f3 = f2 - w;\r\n                f2 = f2 + w;\r\n\r\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 0] = f0 + f2;\r\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 2] = f0 - f2;\r\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 1] = f1 + f3;\r\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 3] = f1 - f3;\r\n            } while (--j >= 0);\r\n\r\n            fht(x_real[b], x, Encoder.BLKSIZE_s / 2);\r\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\r\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\r\n        }\r\n    }\r\n\r\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\r\n        var jj = Encoder.BLKSIZE / 8 - 1;\r\n        var x = Encoder.BLKSIZE / 2;\r\n\r\n        do {\r\n            var f0, f1, f2, f3, w;\r\n            var i = rv_tbl[jj] & 0xff;\r\n            f0 = window[i] * buffer[chn][bufPos + i];\r\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\r\n            f1 = f0 - w;\r\n            f0 = f0 + w;\r\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\r\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\r\n            f3 = f2 - w;\r\n            f2 = f2 + w;\r\n\r\n            x -= 4;\r\n            y[x + 0] = f0 + f2;\r\n            y[x + 2] = f0 - f2;\r\n            y[x + 1] = f1 + f3;\r\n            y[x + 3] = f1 - f3;\r\n\r\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\r\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\r\n            f1 = f0 - w;\r\n            f0 = f0 + w;\r\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\r\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\r\n            f3 = f2 - w;\r\n            f2 = f2 + w;\r\n\r\n            y[x + Encoder.BLKSIZE / 2 + 0] = f0 + f2;\r\n            y[x + Encoder.BLKSIZE / 2 + 2] = f0 - f2;\r\n            y[x + Encoder.BLKSIZE / 2 + 1] = f1 + f3;\r\n            y[x + Encoder.BLKSIZE / 2 + 3] = f1 - f3;\r\n        } while (--jj >= 0);\r\n\r\n        fht(y, x, Encoder.BLKSIZE / 2);\r\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\r\n    }\r\n\r\n    this.init_fft = function (gfc) {\r\n        /* The type of window used here will make no real difference, but */\r\n        /*\r\n         * in the interest of merging nspsytune stuff - switch to blackman\r\n         * window\r\n         */\r\n        for (var i = 0; i < Encoder.BLKSIZE; i++)\r\n            /* blackman window */\r\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\r\n                / Encoder.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\r\n                / Encoder.BLKSIZE));\r\n\r\n        for (var i = 0; i < Encoder.BLKSIZE_s / 2; i++)\r\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\r\n                * (i + 0.5) / Encoder.BLKSIZE_s)));\r\n\r\n    }\r\n\r\n}\r\n\r\n/*\r\n *      psymodel.c\r\n *\r\n *      Copyright (c) 1999-2000 Mark Taylor\r\n *      Copyright (c) 2001-2002 Naoki Shibata\r\n *      Copyright (c) 2000-2003 Takehiro Tominaga\r\n *      Copyright (c) 2000-2008 Robert Hegemann\r\n *      Copyright (c) 2000-2005 Gabriel Bouvigne\r\n *      Copyright (c) 2000-2005 Alexander Leidinger\r\n *\r\n * This library is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 2 of the License, or (at your option) any later version.\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Library General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public\r\n * License along with this library; if not, write to the\r\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\r\n * Boston, MA 02111-1307, USA.\r\n */\r\n\r\n/* $Id: PsyModel.java,v 1.27 2011/05/24 20:48:06 kenchis Exp $ */\r\n\r\n\r\n/*\r\n PSYCHO ACOUSTICS\r\n\r\n\r\n This routine computes the psycho acoustics, delayed by one granule.\r\n\r\n Input: buffer of PCM data (1024 samples).\r\n\r\n This window should be centered over the 576 sample granule window.\r\n The routine will compute the psycho acoustics for\r\n this granule, but return the psycho acoustics computed\r\n for the *previous* granule.  This is because the block\r\n type of the previous granule can only be determined\r\n after we have computed the psycho acoustics for the following\r\n granule.\r\n\r\n Output:  maskings and energies for each scalefactor band.\r\n block type, PE, and some correlation measures.\r\n The PE is used by CBR modes to determine if extra bits\r\n from the bit reservoir should be used.  The correlation\r\n measures are used to determine mid/side or regular stereo.\r\n */\r\n/*\r\n Notation:\r\n\r\n barks:  a non-linear frequency scale.  Mapping from frequency to\r\n barks is given by freq2bark()\r\n\r\n scalefactor bands: The spectrum (frequencies) are broken into\r\n SBMAX \"scalefactor bands\".  Thes bands\r\n are determined by the MPEG ISO spec.  In\r\n the noise shaping/quantization code, we allocate\r\n bits among the partition bands to achieve the\r\n best possible quality\r\n\r\n partition bands:   The spectrum is also broken into about\r\n 64 \"partition bands\".  Each partition\r\n band is about .34 barks wide.  There are about 2-5\r\n partition bands for each scalefactor band.\r\n\r\n LAME computes all psycho acoustic information for each partition\r\n band.  Then at the end of the computations, this information\r\n is mapped to scalefactor bands.  The energy in each scalefactor\r\n band is taken as the sum of the energy in all partition bands\r\n which overlap the scalefactor band.  The maskings can be computed\r\n in the same way (and thus represent the average masking in that band)\r\n or by taking the minmum value multiplied by the number of\r\n partition bands used (which represents a minimum masking in that band).\r\n */\r\n/*\r\n The general outline is as follows:\r\n\r\n 1. compute the energy in each partition band\r\n 2. compute the tonality in each partition band\r\n 3. compute the strength of each partion band \"masker\"\r\n 4. compute the masking (via the spreading function applied to each masker)\r\n 5. Modifications for mid/side masking.\r\n\r\n Each partition band is considiered a \"masker\".  The strength\r\n of the i'th masker in band j is given by:\r\n\r\n s3(bark(i)-bark(j))*strength(i)\r\n\r\n The strength of the masker is a function of the energy and tonality.\r\n The more tonal, the less masking.  LAME uses a simple linear formula\r\n (controlled by NMT and TMN) which says the strength is given by the\r\n energy divided by a linear function of the tonality.\r\n */\r\n/*\r\n s3() is the \"spreading function\".  It is given by a formula\r\n determined via listening tests.\r\n\r\n The total masking in the j'th partition band is the sum over\r\n all maskings i.  It is thus given by the convolution of\r\n the strength with s3(), the \"spreading function.\"\r\n\r\n masking(j) = sum_over_i  s3(i-j)*strength(i)  = s3 o strength\r\n\r\n where \"o\" = convolution operator.  s3 is given by a formula determined\r\n via listening tests.  It is normalized so that s3 o 1 = 1.\r\n\r\n Note: instead of a simple convolution, LAME also has the\r\n option of using \"additive masking\"\r\n\r\n The most critical part is step 2, computing the tonality of each\r\n partition band.  LAME has two tonality estimators.  The first\r\n is based on the ISO spec, and measures how predictiable the\r\n signal is over time.  The more predictable, the more tonal.\r\n The second measure is based on looking at the spectrum of\r\n a single granule.  The more peaky the spectrum, the more\r\n tonal.  By most indications, the latter approach is better.\r\n\r\n Finally, in step 5, the maskings for the mid and side\r\n channel are possibly increased.  Under certain circumstances,\r\n noise in the mid & side channels is assumed to also\r\n be masked by strong maskers in the L or R channels.\r\n\r\n\r\n Other data computed by the psy-model:\r\n\r\n ms_ratio        side-channel / mid-channel masking ratio (for previous granule)\r\n ms_ratio_next   side-channel / mid-channel masking ratio for this granule\r\n\r\n percep_entropy[2]     L and R values (prev granule) of PE - A measure of how\r\n much pre-echo is in the previous granule\r\n percep_entropy_MS[2]  mid and side channel values (prev granule) of percep_entropy\r\n energy[4]             L,R,M,S energy in each channel, prev granule\r\n blocktype_d[2]        block type to use for previous granule\r\n */\r\n//package mp3;\r\n\r\n//import java.util.Arrays;\r\n\r\n\r\nfunction PsyModel() {\r\n\r\n    var fft = new FFT();\r\n\r\n    var LOG10 = 2.30258509299404568402;\r\n\r\n    var rpelev = 2;\r\n    var rpelev2 = 16;\r\n    var rpelev_s = 2;\r\n    var rpelev2_s = 16;\r\n\r\n    /* size of each partition band, in barks: */\r\n    var DELBARK = .34;\r\n\r\n    /* tuned for output level (sensitive to energy scale) */\r\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder.BLKSIZE / 2));\r\n\r\n    var temporalmask_sustain_sec = 0.01;\r\n\r\n    var NS_PREECHO_ATT0 = 0.8;\r\n    var NS_PREECHO_ATT1 = 0.6;\r\n    var NS_PREECHO_ATT2 = 0.3;\r\n\r\n    var NS_MSFIX = 3.5;\r\n\r\n    var NSATTACKTHRE = 4.4;\r\n    var NSATTACKTHRE_S = 25;\r\n\r\n    var NSFIRLEN = 21;\r\n\r\n    /* size of each partition band, in barks: */\r\n    var LN_TO_LOG10 = 0.2302585093;\r\n\r\n    function NON_LINEAR_SCALE_ENERGY(x) {\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * <PRE>\r\n     *       L3psycho_anal.  Compute psycho acoustics.\r\n     *\r\n     *       Data returned to the calling program must be delayed by one\r\n     *       granule.\r\n     *\r\n     *       This is done in two places.\r\n     *       If we do not need to know the blocktype, the copying\r\n     *       can be done here at the top of the program: we copy the data for\r\n     *       the last granule (computed during the last call) before it is\r\n     *       overwritten with the new data.  It looks like this:\r\n     *\r\n     *       0. static psymodel_data\r\n     *       1. calling_program_data = psymodel_data\r\n     *       2. compute psymodel_data\r\n     *\r\n     *       For data which needs to know the blocktype, the copying must be\r\n     *       done at the end of this loop, and the old values must be saved:\r\n     *\r\n     *       0. static psymodel_data_old\r\n     *       1. compute psymodel_data\r\n     *       2. compute possible block type of this granule\r\n     *       3. compute final block type of previous granule based on #2.\r\n     *       4. calling_program_data = psymodel_data_old\r\n     *       5. psymodel_data_old = psymodel_data\r\n     *     psycho_loudness_approx\r\n     *       jd - 2001 mar 12\r\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\r\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\r\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\r\n     *             of 1.0 for signals near clipping.\r\n     *    notes:   When calibrated, feeding this function binary white noise at sample\r\n     *             values +32767 or -32768 should return values that approach 3.\r\n     *             ATHformula is used to approximate an equal loudness curve.\r\n     *    future:  Data indicates that the shape of the equal loudness curve varies\r\n     *             with intensity.  This function might be improved by using an equal\r\n     *             loudness curve shaped for typical playback levels (instead of the\r\n     *             ATH, that is shaped for the threshold).  A flexible realization might\r\n     *             simply bend the existing ATH curve to achieve the desired shape.\r\n     *             However, the potential gain may not be enough to justify an effort.\r\n     * </PRE>\r\n     */\r\n    function psycho_loudness_approx(energy, gfc) {\r\n        var loudness_power = 0.0;\r\n        /* apply weights to power in freq. bands */\r\n        for (var i = 0; i < Encoder.BLKSIZE / 2; ++i)\r\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\r\n        loudness_power *= VO_SCALE;\r\n\r\n        return loudness_power;\r\n    }\r\n\r\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\r\n        var gfc = gfp.internal_flags;\r\n        if (chn < 2) {\r\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\r\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\r\n        }\r\n        /* FFT data for mid and side channel is derived from L & R */\r\n        else if (chn == 2) {\r\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\r\n                var l = wsamp_l[wsamp_lPos + 0][j];\r\n                var r = wsamp_l[wsamp_lPos + 1][j];\r\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\r\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\r\n            }\r\n            for (var b = 2; b >= 0; --b) {\r\n                for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\r\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\r\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\r\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util.SQRT2 * 0.5;\r\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util.SQRT2 * 0.5;\r\n                }\r\n            }\r\n        }\r\n\r\n        /*********************************************************************\r\n         * compute energies\r\n         *********************************************************************/\r\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\r\n        fftenergy[0] *= fftenergy[0];\r\n\r\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\r\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 - j];\r\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 + j];\r\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\r\n                * re + im * im) * 0.5);\r\n        }\r\n        for (var b = 2; b >= 0; --b) {\r\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\r\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\r\n            for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\r\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\r\n                / 2 - j];\r\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\r\n                / 2 + j];\r\n                fftenergy_s[b][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\r\n                    * re + im * im) * 0.5);\r\n            }\r\n        }\r\n        /* total energy */\r\n        {\r\n            var totalenergy = 0.0;\r\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\r\n                totalenergy += fftenergy[j];\r\n\r\n            gfc.tot_ener[chn] = totalenergy;\r\n        }\r\n\r\n        if (gfp.analysis) {\r\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\r\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\r\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\r\n            }\r\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\r\n        }\r\n\r\n        /*********************************************************************\r\n         * compute loudness approximation (used for ATH auto-level adjustment)\r\n         *********************************************************************/\r\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\r\n            // no loudness for mid/side ch\r\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\r\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\r\n        }\r\n    }\r\n\r\n    /* mask_add optimization */\r\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\r\n\r\n    /**\r\n     * <PRE>\r\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\r\n     *\r\n     * abs(i)>8 is equivalent (as i is an integer) to\r\n     * abs(i)>=9\r\n     * i>=9 || i<=-9\r\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\r\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\r\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\r\n     * exp10 is strictly increasing thus this is equivalent to\r\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\r\n     * </PRE>\r\n     */\r\n\r\n    /**\r\n     * as in if(i>8)\r\n     */\r\n    var I1LIMIT = 8;\r\n    /**\r\n     * as in if(i>24) . changed 23\r\n     */\r\n    var I2LIMIT = 23;\r\n    /**\r\n     * as in if(m<15)\r\n     */\r\n    var MLIMIT = 15;\r\n\r\n    var ma_max_i1;\r\n    var ma_max_i2;\r\n    var ma_max_m;\r\n\r\n    /**\r\n     * This is the masking table:<BR>\r\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\r\n     * After additive masking computation, 8dB are added, so final values are\r\n     * going from 8dB to 17.3dB\r\n     *\r\n     * pow(10, -0.0..-0.6)\r\n     */\r\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\r\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\r\n\r\n    function init_mask_add_max_values() {\r\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\r\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\r\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\r\n    }\r\n\r\n    var table1 = [3.3246 * 3.3246,\r\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\r\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\r\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\r\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\r\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\r\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\r\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\r\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\r\n\r\n    var table2 = [1.33352 * 1.33352,\r\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\r\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\r\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\r\n\r\n    var table3 = [2.35364 * 2.35364,\r\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\r\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\r\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\r\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\r\n        1.03826 * 1.03826];\r\n\r\n    /**\r\n     * addition of simultaneous masking Naoki Shibata 2000/7\r\n     */\r\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\r\n        var ratio;\r\n\r\n        if (m2 > m1) {\r\n            if (m2 < (m1 * ma_max_i2))\r\n                ratio = m2 / m1;\r\n            else\r\n                return (m1 + m2);\r\n        } else {\r\n            if (m1 >= (m2 * ma_max_i2))\r\n                return (m1 + m2);\r\n            ratio = m1 / m2;\r\n        }\r\n\r\n        /* Should always be true, just checking */\r\n\r\n        m1 += m2;\r\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\r\n        if ((b + 3) <= 3 + 3) {\r\n            /* approximately, 1 bark = 3 partitions */\r\n            /* 65% of the cases */\r\n            /* originally 'if(i > 8)' */\r\n            if (ratio >= ma_max_i1) {\r\n                /* 43% of the total */\r\n                return m1;\r\n            }\r\n\r\n            /* 22% of the total */\r\n            var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\r\n            return m1 * table2[i];\r\n        }\r\n\r\n        /**\r\n         * <PRE>\r\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\r\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\r\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\r\n         * </PRE>\r\n         */\r\n        var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\r\n        if (shortblock != 0) {\r\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\r\n        } else {\r\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\r\n        }\r\n        if (m1 < ma_max_m * m2) {\r\n            /* 3% of the total */\r\n            /* Originally if (m > 0) { */\r\n            if (m1 > m2) {\r\n                var f, r;\r\n\r\n                f = 1.0;\r\n                if (i <= 13)\r\n                    f = table3[i];\r\n\r\n                r = Util.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\r\n                return m1 * ((table1[i] - f) * r + f);\r\n            }\r\n\r\n            if (i > 13)\r\n                return m1;\r\n\r\n            return m1 * table3[i];\r\n        }\r\n\r\n        /* 10% of total */\r\n        return m1 * table1[i];\r\n    }\r\n\r\n    var table2_ = [1.33352 * 1.33352,\r\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\r\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\r\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\r\n\r\n    /**\r\n     * addition of simultaneous masking Naoki Shibata 2000/7\r\n     */\r\n    function vbrpsy_mask_add(m1, m2, b) {\r\n        var ratio;\r\n\r\n        if (m1 < 0) {\r\n            m1 = 0;\r\n        }\r\n        if (m2 < 0) {\r\n            m2 = 0;\r\n        }\r\n        if (m1 <= 0) {\r\n            return m2;\r\n        }\r\n        if (m2 <= 0) {\r\n            return m1;\r\n        }\r\n        if (m2 > m1) {\r\n            ratio = m2 / m1;\r\n        } else {\r\n            ratio = m1 / m2;\r\n        }\r\n        if (-2 <= b && b <= 2) {\r\n            /* approximately, 1 bark = 3 partitions */\r\n            /* originally 'if(i > 8)' */\r\n            if (ratio >= ma_max_i1) {\r\n                return m1 + m2;\r\n            } else {\r\n                var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\r\n                return (m1 + m2) * table2_[i];\r\n            }\r\n        }\r\n        if (ratio < ma_max_i2) {\r\n            return m1 + m2;\r\n        }\r\n        if (m1 < m2) {\r\n            m1 = m2;\r\n        }\r\n        return m1;\r\n    }\r\n\r\n    /**\r\n     * compute interchannel masking effects\r\n     */\r\n    function calc_interchannel_masking(gfp, ratio) {\r\n        var gfc = gfp.internal_flags;\r\n        if (gfc.channels_out > 1) {\r\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\r\n                var l = gfc.thm[0].l[sb];\r\n                var r = gfc.thm[1].l[sb];\r\n                gfc.thm[0].l[sb] += r * ratio;\r\n                gfc.thm[1].l[sb] += l * ratio;\r\n            }\r\n            for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n                for (var sblock = 0; sblock < 3; sblock++) {\r\n                    var l = gfc.thm[0].s[sb][sblock];\r\n                    var r = gfc.thm[1].s[sb][sblock];\r\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\r\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\r\n     */\r\n    function msfix1(gfc) {\r\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\r\n            /* use this fix if L & R masking differs by 2db or less */\r\n            /* if db = 10*log10(x2/x1) < 2 */\r\n            /* if (x2 < 1.58*x1) { */\r\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\r\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\r\n                continue;\r\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\r\n            var rmid = Math.max(gfc.thm[2].l[sb],\r\n                Math.min(gfc.thm[3].l[sb], mld));\r\n\r\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\r\n            var rside = Math.max(gfc.thm[3].l[sb],\r\n                Math.min(gfc.thm[2].l[sb], mld));\r\n            gfc.thm[2].l[sb] = rmid;\r\n            gfc.thm[3].l[sb] = rside;\r\n        }\r\n\r\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n            for (var sblock = 0; sblock < 3; sblock++) {\r\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\r\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\r\n                    continue;\r\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\r\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\r\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\r\n\r\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\r\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\r\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\r\n\r\n                gfc.thm[2].s[sb][sblock] = rmid;\r\n                gfc.thm[3].s[sb][sblock] = rside;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adjust M/S maskings if user set \"msfix\"\r\n     *\r\n     * Naoki Shibata 2000\r\n     */\r\n    function ns_msfix(gfc, msfix, athadjust) {\r\n        var msfix2 = msfix;\r\n        var athlower = Math.pow(10, athadjust);\r\n\r\n        msfix *= 2.0;\r\n        msfix2 *= 2.0;\r\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\r\n            var thmLR, thmM, thmS, ath;\r\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\r\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\r\n                Math.max(gfc.thm[1].l[sb], ath));\r\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\r\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\r\n            if (thmLR * msfix < thmM + thmS) {\r\n                var f = thmLR * msfix2 / (thmM + thmS);\r\n                thmM *= f;\r\n                thmS *= f;\r\n            }\r\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\r\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\r\n        }\r\n\r\n        athlower *= ( Encoder.BLKSIZE_s / Encoder.BLKSIZE);\r\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n            for (var sblock = 0; sblock < 3; sblock++) {\r\n                var thmLR, thmM, thmS, ath;\r\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\r\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\r\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\r\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\r\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\r\n\r\n                if (thmLR * msfix < thmM + thmS) {\r\n                    var f = thmLR * msfix / (thmM + thmS);\r\n                    thmM *= f;\r\n                    thmS *= f;\r\n                }\r\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\r\n                    thmM);\r\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\r\n                    thmS);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * short block threshold calculation (part 2)\r\n     *\r\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\r\n     * to the next one sfb+1; enn and thmm have to be split between them\r\n     */\r\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\r\n        var sb, b;\r\n        var enn = 0.0;\r\n        var thmm = 0.0;\r\n        for (sb = b = 0; sb < Encoder.SBMAX_s; ++b, ++sb) {\r\n            var bo_s_sb = gfc.bo_s[sb];\r\n            var npart_s = gfc.npart_s;\r\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\r\n            while (b < b_lim) {\r\n                // iff failed, it may indicate some index error elsewhere\r\n                enn += eb[b];\r\n                thmm += thr[b];\r\n                b++;\r\n            }\r\n            gfc.en[chn].s[sb][sblock] = enn;\r\n            gfc.thm[chn].s[sb][sblock] = thmm;\r\n\r\n            if (b >= npart_s) {\r\n                ++sb;\r\n                break;\r\n            }\r\n            // iff failed, it may indicate some index error elsewhere\r\n            {\r\n                /* at transition sfb . sfb+1 */\r\n                var w_curr = gfc.PSY.bo_s_weight[sb];\r\n                var w_next = 1.0 - w_curr;\r\n                enn = w_curr * eb[b];\r\n                thmm = w_curr * thr[b];\r\n                gfc.en[chn].s[sb][sblock] += enn;\r\n                gfc.thm[chn].s[sb][sblock] += thmm;\r\n                enn = w_next * eb[b];\r\n                thmm = w_next * thr[b];\r\n            }\r\n        }\r\n        /* zero initialize the rest */\r\n        for (; sb < Encoder.SBMAX_s; ++sb) {\r\n            gfc.en[chn].s[sb][sblock] = 0;\r\n            gfc.thm[chn].s[sb][sblock] = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * longblock threshold calculation (part 2)\r\n     */\r\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\r\n        var sb, b;\r\n        var enn = 0.0;\r\n        var thmm = 0.0;\r\n        for (sb = b = 0; sb < Encoder.SBMAX_l; ++b, ++sb) {\r\n            var bo_l_sb = gfc.bo_l[sb];\r\n            var npart_l = gfc.npart_l;\r\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\r\n            while (b < b_lim) {\r\n                // iff failed, it may indicate some index error elsewhere\r\n                enn += eb[b];\r\n                thmm += thr[b];\r\n                b++;\r\n            }\r\n            gfc.en[chn].l[sb] = enn;\r\n            gfc.thm[chn].l[sb] = thmm;\r\n\r\n            if (b >= npart_l) {\r\n                ++sb;\r\n                break;\r\n            }\r\n            {\r\n                /* at transition sfb . sfb+1 */\r\n                var w_curr = gfc.PSY.bo_l_weight[sb];\r\n                var w_next = 1.0 - w_curr;\r\n                enn = w_curr * eb[b];\r\n                thmm = w_curr * thr[b];\r\n                gfc.en[chn].l[sb] += enn;\r\n                gfc.thm[chn].l[sb] += thmm;\r\n                enn = w_next * eb[b];\r\n                thmm = w_next * thr[b];\r\n            }\r\n        }\r\n        /* zero initialize the rest */\r\n        for (; sb < Encoder.SBMAX_l; ++sb) {\r\n            gfc.en[chn].l[sb] = 0;\r\n            gfc.thm[chn].l[sb] = 0;\r\n        }\r\n    }\r\n\r\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\r\n        var gfc = gfp.internal_flags;\r\n        var j, b;\r\n\r\n        for (b = j = 0; b < gfc.npart_s; ++b) {\r\n            var ebb = 0, m = 0;\r\n            var n = gfc.numlines_s[b];\r\n            for (var i = 0; i < n; ++i, ++j) {\r\n                var el = fftenergy_s[sblock][j];\r\n                ebb += el;\r\n                if (m < el)\r\n                    m = el;\r\n            }\r\n            eb[b] = ebb;\r\n        }\r\n        for (j = b = 0; b < gfc.npart_s; b++) {\r\n            var kk = gfc.s3ind_s[b][0];\r\n            var ecb = gfc.s3_ss[j++] * eb[kk];\r\n            ++kk;\r\n            while (kk <= gfc.s3ind_s[b][1]) {\r\n                ecb += gfc.s3_ss[j] * eb[kk];\r\n                ++j;\r\n                ++kk;\r\n            }\r\n\r\n            { /* limit calculated threshold by previous granule */\r\n                var x = rpelev_s * gfc.nb_s1[chn][b];\r\n                thr[b] = Math.min(ecb, x);\r\n            }\r\n            if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) {\r\n                /* limit calculated threshold by even older granule */\r\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\r\n                var y = thr[b];\r\n                thr[b] = Math.min(x, y);\r\n            }\r\n\r\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\r\n            gfc.nb_s1[chn][b] = ecb;\r\n        }\r\n        for (; b <= Encoder.CBANDS; ++b) {\r\n            eb[b] = 0;\r\n            thr[b] = 0;\r\n        }\r\n    }\r\n\r\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\r\n                /* force both channels to use the same block type */\r\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\r\n                /* But even without ms_stereo, FhG does this */\r\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\r\n            uselongblock[0] = uselongblock[1] = 0;\r\n\r\n        /*\r\n         * update the blocktype of the previous granule, since it depends on\r\n         * what happend in this granule\r\n         */\r\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\r\n            blocktype[chn] = Encoder.NORM_TYPE;\r\n            /* disable short blocks */\r\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed)\r\n                uselongblock[chn] = 1;\r\n            if (gfp.short_blocks == ShortBlock.short_block_forced)\r\n                uselongblock[chn] = 0;\r\n\r\n            if (uselongblock[chn] != 0) {\r\n                /* no attack : use long blocks */\r\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\r\n                    blocktype[chn] = Encoder.STOP_TYPE;\r\n            } else {\r\n                /* attack : use short blocks */\r\n                blocktype[chn] = Encoder.SHORT_TYPE;\r\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\r\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\r\n                }\r\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\r\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\r\n            }\r\n\r\n            blocktype_d[chn] = gfc.blocktype_old[chn];\r\n            // value returned to calling program\r\n            gfc.blocktype_old[chn] = blocktype[chn];\r\n            // save for next call to l3psy_anal\r\n        }\r\n    }\r\n\r\n    function NS_INTERP(x, y, r) {\r\n        /* was pow((x),(r))*pow((y),1-(r)) */\r\n        if (r >= 1.0) {\r\n            /* 99.7% of the time */\r\n            return x;\r\n        }\r\n        if (r <= 0.0)\r\n            return y;\r\n        if (y > 0.0) {\r\n            /* rest of the time */\r\n            return (Math.pow(x / y, r) * y);\r\n        }\r\n        /* never happens */\r\n        return 0.0;\r\n    }\r\n\r\n    /**\r\n     * these values are tuned only for 44.1kHz...\r\n     */\r\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\r\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\r\n        /* 255.8 */\r\n    ];\r\n\r\n    function pecalc_s(mr, masking_lower) {\r\n        var pe_s = 1236.28 / 4;\r\n        for (var sb = 0; sb < Encoder.SBMAX_s - 1; sb++) {\r\n            for (var sblock = 0; sblock < 3; sblock++) {\r\n                var thm = mr.thm.s[sb][sblock];\r\n                if (thm > 0.0) {\r\n                    var x = thm * masking_lower;\r\n                    var en = mr.en.s[sb][sblock];\r\n                    if (en > x) {\r\n                        if (en > x * 1e10) {\r\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\r\n                        } else {\r\n                            pe_s += regcoef_s[sb] * Util.FAST_LOG10(en / x);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return pe_s;\r\n    }\r\n\r\n    /**\r\n     * these values are tuned only for 44.1kHz...\r\n     */\r\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\r\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\r\n        60.7, 73.9, 85.7, 93.4, 126.1,\r\n        /* 241.3 */\r\n    ];\r\n\r\n    function pecalc_l(mr, masking_lower) {\r\n        var pe_l = 1124.23 / 4;\r\n        for (var sb = 0; sb < Encoder.SBMAX_l - 1; sb++) {\r\n            var thm = mr.thm.l[sb];\r\n            if (thm > 0.0) {\r\n                var x = thm * masking_lower;\r\n                var en = mr.en.l[sb];\r\n                if (en > x) {\r\n                    if (en > x * 1e10) {\r\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\r\n                    } else {\r\n                        pe_l += regcoef_l[sb] * Util.FAST_LOG10(en / x);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return pe_l;\r\n    }\r\n\r\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\r\n        var b, j;\r\n\r\n        for (b = j = 0; b < gfc.npart_l; ++b) {\r\n            var ebb = 0, m = 0;\r\n            var i;\r\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\r\n                var el = fftenergy[j];\r\n                ebb += el;\r\n                if (m < el)\r\n                    m = el;\r\n            }\r\n            eb[b] = ebb;\r\n            max[b] = m;\r\n            avg[b] = ebb * gfc.rnumlines_l[b];\r\n        }\r\n    }\r\n\r\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\r\n        var last_tab_entry = tab.length - 1;\r\n        var b = 0;\r\n        var a = avg[b] + avg[b + 1];\r\n        if (a > 0.0) {\r\n            var m = max[b];\r\n            if (m < max[b + 1])\r\n                m = max[b + 1];\r\n            a = 20.0 * (m * 2.0 - a)\r\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\r\n            var k = 0 | a;\r\n            if (k > last_tab_entry)\r\n                k = last_tab_entry;\r\n            mask_idx[b] = k;\r\n        } else {\r\n            mask_idx[b] = 0;\r\n        }\r\n\r\n        for (b = 1; b < gfc.npart_l - 1; b++) {\r\n            a = avg[b - 1] + avg[b] + avg[b + 1];\r\n            if (a > 0.0) {\r\n                var m = max[b - 1];\r\n                if (m < max[b])\r\n                    m = max[b];\r\n                if (m < max[b + 1])\r\n                    m = max[b + 1];\r\n                a = 20.0\r\n                    * (m * 3.0 - a)\r\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\r\n                    + gfc.numlines_l[b + 1] - 1));\r\n                var k = 0 | a;\r\n                if (k > last_tab_entry)\r\n                    k = last_tab_entry;\r\n                mask_idx[b] = k;\r\n            } else {\r\n                mask_idx[b] = 0;\r\n            }\r\n        }\r\n\r\n        a = avg[b - 1] + avg[b];\r\n        if (a > 0.0) {\r\n            var m = max[b - 1];\r\n            if (m < max[b])\r\n                m = max[b];\r\n            a = 20.0 * (m * 2.0 - a)\r\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\r\n            var k = 0 | a;\r\n            if (k > last_tab_entry)\r\n                k = last_tab_entry;\r\n            mask_idx[b] = k;\r\n        } else {\r\n            mask_idx[b] = 0;\r\n        }\r\n    }\r\n\r\n    var fircoef = [\r\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\r\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\r\n        -5.52212e-17 * 2, -0.313819 * 2\r\n    ];\r\n\r\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\r\n        /*\r\n         * to get a good cache performance, one has to think about the sequence,\r\n         * in which the variables are used.\r\n         */\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /* fft and energy calculation */\r\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\r\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\r\n\r\n        /* convolution */\r\n        var eb_l = new_float(Encoder.CBANDS + 1);\r\n        var eb_s = new_float(Encoder.CBANDS + 1);\r\n        var thr = new_float(Encoder.CBANDS + 2);\r\n\r\n        /* block type */\r\n        var blocktype = new_int(2), uselongblock = new_int(2);\r\n\r\n        /* usual variables like loop indices, etc.. */\r\n        var numchn, chn;\r\n        var b, i, j, k;\r\n        var sb, sblock;\r\n\r\n        /* variables used for --nspsytune */\r\n        var ns_hpfsmpl = new_float_n([2, 576]);\r\n        var pcfact;\r\n        var mask_idx_l = new_int(Encoder.CBANDS + 2), mask_idx_s = new_int(Encoder.CBANDS + 2);\r\n\r\n        Arrays.fill(mask_idx_s, 0);\r\n\r\n        numchn = gfc.channels_out;\r\n        /* chn=2 and 3 = Mid and Side channels */\r\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\r\n            numchn = 4;\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off)\r\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\r\n            / gfc.ResvMax * 0.5;\r\n        else if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh\r\n            || gfp.VBR == VbrMode.vbr_mt) {\r\n            pcfact = 0.6;\r\n        } else\r\n            pcfact = 1.0;\r\n\r\n        /**********************************************************************\r\n         * Apply HPF of fs/4 to the input signal. This is used for attack\r\n         * detection / handling.\r\n         **********************************************************************/\r\n        /* Don't copy the input buffer into a temporary buffer */\r\n        /* unroll the loop 2 times */\r\n        for (chn = 0; chn < gfc.channels_out; chn++) {\r\n            /* apply high pass filter of fs/4 */\r\n            var firbuf = buffer[chn];\r\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\r\n            for (i = 0; i < 576; i++) {\r\n                var sum1, sum2;\r\n                sum1 = firbuf[firbufPos + i + 10];\r\n                sum2 = 0.0;\r\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\r\n                    sum1 += fircoef[j]\r\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\r\n                        + NSFIRLEN - j]);\r\n                    sum2 += fircoef[j + 1]\r\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\r\n                        + i + NSFIRLEN - j - 1]);\r\n                }\r\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\r\n            }\r\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\r\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\r\n            if (numchn > 2) {\r\n                /* MS maskings */\r\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\r\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\r\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\r\n            }\r\n        }\r\n\r\n        for (chn = 0; chn < numchn; chn++) {\r\n            var wsamp_l;\r\n            var wsamp_s;\r\n            var en_subshort = new_float(12);\r\n            var en_short = [0, 0, 0, 0];\r\n            var attack_intensity = new_float(12);\r\n            var ns_uselongblock = 1;\r\n            var attackThreshold;\r\n            var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\r\n            var ns_attacks = [0, 0, 0, 0];\r\n            var fftenergy = new_float(Encoder.HBLKSIZE);\r\n            var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\r\n\r\n            /*\r\n             * rh 20040301: the following loops do access one off the limits so\r\n             * I increase the array dimensions by one and initialize the\r\n             * accessed values to zero\r\n             */\r\n\r\n            /***************************************************************\r\n             * determine the block type (window type)\r\n             ***************************************************************/\r\n            /* calculate energies of each sub-shortblocks */\r\n            for (i = 0; i < 3; i++) {\r\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\r\n                attack_intensity[i] = en_subshort[i]\r\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\r\n                en_short[0] += en_subshort[i];\r\n            }\r\n\r\n            if (chn == 2) {\r\n                for (i = 0; i < 576; i++) {\r\n                    var l, r;\r\n                    l = ns_hpfsmpl[0][i];\r\n                    r = ns_hpfsmpl[1][i];\r\n                    ns_hpfsmpl[0][i] = l + r;\r\n                    ns_hpfsmpl[1][i] = l - r;\r\n                }\r\n            }\r\n            {\r\n                var pf = ns_hpfsmpl[chn & 1];\r\n                var pfPos = 0;\r\n                for (i = 0; i < 9; i++) {\r\n                    var pfe = pfPos + 576 / 9;\r\n                    var p = 1.;\r\n                    for (; pfPos < pfe; pfPos++)\r\n                        if (p < Math.abs(pf[pfPos]))\r\n                            p = Math.abs(pf[pfPos]);\r\n\r\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\r\n                    en_short[1 + i / 3] += p;\r\n                    if (p > en_subshort[i + 3 - 2]) {\r\n                        p = p / en_subshort[i + 3 - 2];\r\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\r\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\r\n                    } else\r\n                        p = 0.0;\r\n                    attack_intensity[i + 3] = p;\r\n                }\r\n            }\r\n\r\n            if (gfp.analysis) {\r\n                var x = attack_intensity[0];\r\n                for (i = 1; i < 12; i++)\r\n                    if (x < attack_intensity[i])\r\n                        x = attack_intensity[i];\r\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\r\n                gfc.pinfo.ers_save[chn] = x;\r\n            }\r\n\r\n            /* compare energies between sub-shortblocks */\r\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\r\n                : gfc.nsPsy.attackthre;\r\n            for (i = 0; i < 12; i++)\r\n                if (0 == ns_attacks[i / 3]\r\n                    && attack_intensity[i] > attackThreshold)\r\n                    ns_attacks[i / 3] = (i % 3) + 1;\r\n\r\n            /*\r\n             * should have energy change between short blocks, in order to avoid\r\n             * periodic signals\r\n             */\r\n            for (i = 1; i < 4; i++) {\r\n                var ratio;\r\n                if (en_short[i - 1] > en_short[i]) {\r\n                    ratio = en_short[i - 1] / en_short[i];\r\n                } else {\r\n                    ratio = en_short[i] / en_short[i - 1];\r\n                }\r\n                if (ratio < 1.7) {\r\n                    ns_attacks[i] = 0;\r\n                    if (i == 1)\r\n                        ns_attacks[0] = 0;\r\n                }\r\n            }\r\n\r\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\r\n                ns_attacks[0] = 0;\r\n\r\n            if (gfc.nsPsy.lastAttacks[chn] == 3\r\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\r\n                ns_uselongblock = 0;\r\n\r\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\r\n                    ns_attacks[1] = 0;\r\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\r\n                    ns_attacks[2] = 0;\r\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\r\n                    ns_attacks[3] = 0;\r\n            }\r\n\r\n            if (chn < 2) {\r\n                uselongblock[chn] = ns_uselongblock;\r\n            } else {\r\n                if (ns_uselongblock == 0) {\r\n                    uselongblock[0] = uselongblock[1] = 0;\r\n                }\r\n            }\r\n\r\n            /*\r\n             * there is a one granule delay. Copy maskings computed last call\r\n             * into masking_ratio to return to calling program.\r\n             */\r\n            energy[chn] = gfc.tot_ener[chn];\r\n\r\n            /*********************************************************************\r\n             * compute FFTs\r\n             *********************************************************************/\r\n            wsamp_s = wsamp_S;\r\n            wsamp_l = wsamp_L;\r\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\r\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\r\n\r\n            /*********************************************************************\r\n             * Calculate the energy and the tonality of each partition.\r\n             *********************************************************************/\r\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\r\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\r\n            /* compute masking thresholds for short blocks */\r\n            for (sblock = 0; sblock < 3; sblock++) {\r\n                var enn, thmm;\r\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\r\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\r\n                /**** short block pre-echo control ****/\r\n                for (sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n                    thmm = gfc.thm[chn].s[sb][sblock];\r\n\r\n                    thmm *= NS_PREECHO_ATT0;\r\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\r\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\r\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                            NS_PREECHO_ATT1 * pcfact);\r\n                        thmm = Math.min(thmm, p);\r\n                    }\r\n\r\n                    if (ns_attacks[sblock] == 1) {\r\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\r\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                            NS_PREECHO_ATT2 * pcfact);\r\n                        thmm = Math.min(thmm, p);\r\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\r\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\r\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\r\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                            NS_PREECHO_ATT2 * pcfact);\r\n                        thmm = Math.min(thmm, p);\r\n                    }\r\n\r\n                    /* pulse like signal detection for fatboy.wav and so on */\r\n                    enn = en_subshort[sblock * 3 + 3]\r\n                        + en_subshort[sblock * 3 + 4]\r\n                        + en_subshort[sblock * 3 + 5];\r\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\r\n                        thmm *= 0.5;\r\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\r\n                            thmm *= 0.5;\r\n                    }\r\n\r\n                    gfc.thm[chn].s[sb][sblock] = thmm;\r\n                }\r\n            }\r\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\r\n\r\n            /*********************************************************************\r\n             * convolve the partitioned energy and unpredictability with the\r\n             * spreading function, s3_l[b][k]\r\n             ********************************************************************/\r\n            k = 0;\r\n            {\r\n                for (b = 0; b < gfc.npart_l; b++) {\r\n                    /*\r\n                     * convolve the partitioned energy with the spreading\r\n                     * function\r\n                     */\r\n                    var kk = gfc.s3ind[b][0];\r\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\r\n                    var ecb = gfc.s3_ll[k++] * eb2;\r\n                    while (++kk <= gfc.s3ind[b][1]) {\r\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\r\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\r\n                            gfc, 0);\r\n                    }\r\n                    ecb *= 0.158489319246111;\r\n                    /* pow(10,-0.8) */\r\n\r\n                    /**** long block pre-echo control ****/\r\n                    /**\r\n                     * <PRE>\r\n                     * dont use long block pre-echo control if previous granule was\r\n                     * a short block.  This is to avoid the situation:\r\n                     * frame0:  quiet (very low masking)\r\n                     * frame1:  surge  (triggers short blocks)\r\n                     * frame2:  regular frame.  looks like pre-echo when compared to\r\n                     *          frame0, but all pre-echo was in frame1.\r\n                     * </PRE>\r\n                     */\r\n                    /*\r\n                     * chn=0,1 L and R channels\r\n                     *\r\n                     * chn=2,3 S and M channels.\r\n                     */\r\n\r\n                    if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE)\r\n                        thr[b] = ecb;\r\n                    else\r\n                        thr[b] = NS_INTERP(\r\n                            Math.min(ecb, Math.min(rpelev\r\n                                * gfc.nb_1[chn][b], rpelev2\r\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\r\n\r\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\r\n                    gfc.nb_1[chn][b] = ecb;\r\n                }\r\n            }\r\n            for (; b <= Encoder.CBANDS; ++b) {\r\n                eb_l[b] = 0;\r\n                thr[b] = 0;\r\n            }\r\n            /* compute masking thresholds for long blocks */\r\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\r\n        }\r\n        /* end loop over chn */\r\n\r\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\r\n            if (gfp.interChRatio > 0.0) {\r\n                calc_interchannel_masking(gfp, gfp.interChRatio);\r\n            }\r\n        }\r\n\r\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n            var msfix;\r\n            msfix1(gfc);\r\n            msfix = gfp.msfix;\r\n            if (Math.abs(msfix) > 0.0)\r\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\r\n        }\r\n\r\n        /***************************************************************\r\n         * determine final block type\r\n         ***************************************************************/\r\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\r\n\r\n        /*********************************************************************\r\n         * compute the value of PE to return ... no delay and advance\r\n         *********************************************************************/\r\n        for (chn = 0; chn < numchn; chn++) {\r\n            var ppe;\r\n            var ppePos = 0;\r\n            var type;\r\n            var mr;\r\n\r\n            if (chn > 1) {\r\n                ppe = percep_MS_entropy;\r\n                ppePos = -2;\r\n                type = Encoder.NORM_TYPE;\r\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\r\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\r\n                    type = Encoder.SHORT_TYPE;\r\n                mr = masking_MS_ratio[gr_out][chn - 2];\r\n            } else {\r\n                ppe = percep_entropy;\r\n                ppePos = 0;\r\n                type = blocktype_d[chn];\r\n                mr = masking_ratio[gr_out][chn];\r\n            }\r\n\r\n            if (type == Encoder.SHORT_TYPE)\r\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\r\n            else\r\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\r\n\r\n            if (gfp.analysis)\r\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\r\n\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\r\n        var gfc = gfp.internal_flags;\r\n        if (chn < 2) {\r\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\r\n        } else if (chn == 2) {\r\n            /* FFT data for mid and side channel is derived from L & R */\r\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\r\n                var l = wsamp_l[wsamp_lPos + 0][j];\r\n                var r = wsamp_l[wsamp_lPos + 1][j];\r\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\r\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\r\n            }\r\n        }\r\n\r\n        /*********************************************************************\r\n         * compute energies\r\n         *********************************************************************/\r\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\r\n        fftenergy[0] *= fftenergy[0];\r\n\r\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\r\n            var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\r\n            var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\r\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\r\n                * re + im * im) * 0.5);\r\n        }\r\n        /* total energy */\r\n        {\r\n            var totalenergy = 0.0;\r\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\r\n                totalenergy += fftenergy[j];\r\n\r\n            gfc.tot_ener[chn] = totalenergy;\r\n        }\r\n\r\n        if (gfp.analysis) {\r\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\r\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\r\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\r\n            }\r\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\r\n        }\r\n    }\r\n\r\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (sblock == 0 && chn < 2) {\r\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\r\n        }\r\n        if (chn == 2) {\r\n            /* FFT data for mid and side channel is derived from L & R */\r\n            for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\r\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\r\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\r\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util.SQRT2 * 0.5;\r\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util.SQRT2 * 0.5;\r\n            }\r\n        }\r\n\r\n        /*********************************************************************\r\n         * compute energies\r\n         *********************************************************************/\r\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\r\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\r\n        for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\r\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 - j];\r\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 + j];\r\n            fftenergy_s[sblock][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\r\n                * re + im * im) * 0.5);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute loudness approximation (used for ATH auto-level adjustment)\r\n     */\r\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\r\n        var gfc = gfp.internal_flags;\r\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\r\n            // no loudness for mid/side ch\r\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\r\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\r\n        }\r\n    }\r\n\r\n    var fircoef_ = [-8.65163e-18 * 2,\r\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\r\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\r\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\r\n\r\n    /**\r\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\r\n     * / handling.\r\n     */\r\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\r\n        var ns_hpfsmpl = new_float_n([2, 576]);\r\n        var gfc = gfp.internal_flags;\r\n        var n_chn_out = gfc.channels_out;\r\n        /* chn=2 and 3 = Mid and Side channels */\r\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\r\n        /* Don't copy the input buffer into a temporary buffer */\r\n        /* unroll the loop 2 times */\r\n        for (var chn = 0; chn < n_chn_out; chn++) {\r\n            /* apply high pass filter of fs/4 */\r\n            firbuf = buffer[chn];\r\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\r\n            for (var i = 0; i < 576; i++) {\r\n                var sum1, sum2;\r\n                sum1 = firbuf[firbufPos + i + 10];\r\n                sum2 = 0.0;\r\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\r\n                    sum1 += fircoef_[j]\r\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\r\n                        + NSFIRLEN - j]);\r\n                    sum2 += fircoef_[j + 1]\r\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\r\n                        + i + NSFIRLEN - j - 1]);\r\n                }\r\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\r\n            }\r\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\r\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\r\n            if (n_chn_psy > 2) {\r\n                /* MS maskings */\r\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\r\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\r\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\r\n            }\r\n        }\r\n        for (var chn = 0; chn < n_chn_psy; chn++) {\r\n            var attack_intensity = new_float(12);\r\n            var en_subshort = new_float(12);\r\n            var en_short = [0, 0, 0, 0];\r\n            var pf = ns_hpfsmpl[chn & 1];\r\n            var pfPos = 0;\r\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\r\n                : gfc.nsPsy.attackthre;\r\n            var ns_uselongblock = 1;\r\n\r\n            if (chn == 2) {\r\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\r\n                    var l = ns_hpfsmpl[0][i];\r\n                    var r = ns_hpfsmpl[1][i];\r\n                    ns_hpfsmpl[0][i] = l + r;\r\n                    ns_hpfsmpl[1][i] = l - r;\r\n                }\r\n            }\r\n            /***************************************************************\r\n             * determine the block type (window type)\r\n             ***************************************************************/\r\n            /* calculate energies of each sub-shortblocks */\r\n            for (var i = 0; i < 3; i++) {\r\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\r\n                attack_intensity[i] = en_subshort[i]\r\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\r\n                en_short[0] += en_subshort[i];\r\n            }\r\n\r\n            for (var i = 0; i < 9; i++) {\r\n                var pfe = pfPos + 576 / 9;\r\n                var p = 1.;\r\n                for (; pfPos < pfe; pfPos++)\r\n                    if (p < Math.abs(pf[pfPos]))\r\n                        p = Math.abs(pf[pfPos]);\r\n\r\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\r\n                en_short[1 + i / 3] += p;\r\n                if (p > en_subshort[i + 3 - 2]) {\r\n                    p = p / en_subshort[i + 3 - 2];\r\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\r\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\r\n                } else {\r\n                    p = 0.0;\r\n                }\r\n                attack_intensity[i + 3] = p;\r\n            }\r\n            /* pulse like signal detection for fatboy.wav and so on */\r\n            for (var i = 0; i < 3; ++i) {\r\n                var enn = en_subshort[i * 3 + 3]\r\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\r\n                var factor = 1.;\r\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\r\n                    factor *= 0.5;\r\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\r\n                        factor *= 0.5;\r\n                    }\r\n                }\r\n                sub_short_factor[chn][i] = factor;\r\n            }\r\n\r\n            if (gfp.analysis) {\r\n                var x = attack_intensity[0];\r\n                for (var i = 1; i < 12; i++) {\r\n                    if (x < attack_intensity[i]) {\r\n                        x = attack_intensity[i];\r\n                    }\r\n                }\r\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\r\n                gfc.pinfo.ers_save[chn] = x;\r\n            }\r\n\r\n            /* compare energies between sub-shortblocks */\r\n            for (var i = 0; i < 12; i++) {\r\n                if (0 == ns_attacks[chn][i / 3]\r\n                    && attack_intensity[i] > attackThreshold) {\r\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\r\n                }\r\n            }\r\n\r\n            /*\r\n             * should have energy change between short blocks, in order to avoid\r\n             * periodic signals\r\n             */\r\n            /* Good samples to show the effect are Trumpet test songs */\r\n            /*\r\n             * GB: tuned (1) to avoid too many short blocks for test sample\r\n             * TRUMPET\r\n             */\r\n            /*\r\n             * RH: tuned (2) to let enough short blocks through for test sample\r\n             * FSOL and SNAPS\r\n             */\r\n            for (var i = 1; i < 4; i++) {\r\n                var u = en_short[i - 1];\r\n                var v = en_short[i];\r\n                var m = Math.max(u, v);\r\n                if (m < 40000) { /* (2) */\r\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\r\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\r\n                            ns_attacks[chn][0] = 0;\r\n                        }\r\n                        ns_attacks[chn][i] = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\r\n                ns_attacks[chn][0] = 0;\r\n            }\r\n\r\n            if (gfc.nsPsy.lastAttacks[chn] == 3\r\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\r\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\r\n                ns_uselongblock = 0;\r\n\r\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\r\n                    ns_attacks[chn][1] = 0;\r\n                }\r\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\r\n                    ns_attacks[chn][2] = 0;\r\n                }\r\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\r\n                    ns_attacks[chn][3] = 0;\r\n                }\r\n            }\r\n            if (chn < 2) {\r\n                uselongblock[chn] = ns_uselongblock;\r\n            } else {\r\n                if (ns_uselongblock == 0) {\r\n                    uselongblock[0] = uselongblock[1] = 0;\r\n                }\r\n            }\r\n\r\n            /*\r\n             * there is a one granule delay. Copy maskings computed last call\r\n             * into masking_ratio to return to calling program.\r\n             */\r\n            energy[chn] = gfc.tot_ener[chn];\r\n        }\r\n    }\r\n\r\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\r\n        if (sblock == 0) {\r\n            for (var b = 0; b < gfc.npart_s; b++) {\r\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\r\n                gfc.nb_s1[chn][b] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function vbrpsy_skip_masking_l(gfc, chn) {\r\n        for (var b = 0; b < gfc.npart_l; b++) {\r\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\r\n            gfc.nb_1[chn][b] = 0;\r\n        }\r\n    }\r\n\r\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\r\n        var last_tab_entry = tab.length - 1;\r\n        var b = 0;\r\n        var a = avg[b] + avg[b + 1];\r\n        if (a > 0.0) {\r\n            var m = max[b];\r\n            if (m < max[b + 1])\r\n                m = max[b + 1];\r\n            a = 20.0 * (m * 2.0 - a)\r\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\r\n            var k = 0 | a;\r\n            if (k > last_tab_entry)\r\n                k = last_tab_entry;\r\n            mask_idx[b] = k;\r\n        } else {\r\n            mask_idx[b] = 0;\r\n        }\r\n\r\n        for (b = 1; b < gfc.npart_s - 1; b++) {\r\n            a = avg[b - 1] + avg[b] + avg[b + 1];\r\n            if (a > 0.0) {\r\n                var m = max[b - 1];\r\n                if (m < max[b])\r\n                    m = max[b];\r\n                if (m < max[b + 1])\r\n                    m = max[b + 1];\r\n                a = 20.0\r\n                    * (m * 3.0 - a)\r\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\r\n                    + gfc.numlines_s[b + 1] - 1));\r\n                var k = 0 | a;\r\n                if (k > last_tab_entry)\r\n                    k = last_tab_entry;\r\n                mask_idx[b] = k;\r\n            } else {\r\n                mask_idx[b] = 0;\r\n            }\r\n        }\r\n\r\n        a = avg[b - 1] + avg[b];\r\n        if (a > 0.0) {\r\n            var m = max[b - 1];\r\n            if (m < max[b])\r\n                m = max[b];\r\n            a = 20.0 * (m * 2.0 - a)\r\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\r\n            var k = 0 | a;\r\n            if (k > last_tab_entry)\r\n                k = last_tab_entry;\r\n            mask_idx[b] = k;\r\n        } else {\r\n            mask_idx[b] = 0;\r\n        }\r\n    }\r\n\r\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\r\n        var gfc = gfp.internal_flags;\r\n        var max = new float[Encoder.CBANDS], avg = new_float(Encoder.CBANDS);\r\n        var i, j, b;\r\n        var mask_idx_s = new int[Encoder.CBANDS];\r\n\r\n        for (b = j = 0; b < gfc.npart_s; ++b) {\r\n            var ebb = 0, m = 0;\r\n            var n = gfc.numlines_s[b];\r\n            for (i = 0; i < n; ++i, ++j) {\r\n                var el = fftenergy_s[sblock][j];\r\n                ebb += el;\r\n                if (m < el)\r\n                    m = el;\r\n            }\r\n            eb[b] = ebb;\r\n            max[b] = m;\r\n            avg[b] = ebb / n;\r\n        }\r\n        for (; b < Encoder.CBANDS; ++b) {\r\n            max[b] = 0;\r\n            avg[b] = 0;\r\n        }\r\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\r\n        for (j = b = 0; b < gfc.npart_s; b++) {\r\n            var kk = gfc.s3ind_s[b][0];\r\n            var last = gfc.s3ind_s[b][1];\r\n            var dd, dd_n;\r\n            var x, ecb, avg_mask;\r\n            dd = mask_idx_s[kk];\r\n            dd_n = 1;\r\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\r\n            ++j;\r\n            ++kk;\r\n            while (kk <= last) {\r\n                dd += mask_idx_s[kk];\r\n                dd_n += 1;\r\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\r\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\r\n                ++j;\r\n                ++kk;\r\n            }\r\n            dd = (1 + 2 * dd) / (2 * dd_n);\r\n            avg_mask = tab[dd] * 0.5;\r\n            ecb *= avg_mask;\r\n            thr[b] = ecb;\r\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\r\n            gfc.nb_s1[chn][b] = ecb;\r\n            {\r\n                /*\r\n                 * if THR exceeds EB, the quantization routines will take the\r\n                 * difference from other bands. in case of strong tonal samples\r\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\r\n                 * we limit THR here.\r\n                 */\r\n                x = max[b];\r\n                x *= gfc.minval_s[b];\r\n                x *= avg_mask;\r\n                if (thr[b] > x) {\r\n                    thr[b] = x;\r\n                }\r\n            }\r\n            if (gfc.masking_lower > 1) {\r\n                thr[b] *= gfc.masking_lower;\r\n            }\r\n            if (thr[b] > eb[b]) {\r\n                thr[b] = eb[b];\r\n            }\r\n            if (gfc.masking_lower < 1) {\r\n                thr[b] *= gfc.masking_lower;\r\n            }\r\n\r\n        }\r\n        for (; b < Encoder.CBANDS; ++b) {\r\n            eb[b] = 0;\r\n            thr[b] = 0;\r\n        }\r\n    }\r\n\r\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\r\n        var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\r\n        var mask_idx_l = new_int(Encoder.CBANDS + 2);\r\n        var b;\r\n\r\n        /*********************************************************************\r\n         * Calculate the energy and the tonality of each partition.\r\n         *********************************************************************/\r\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\r\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\r\n\r\n        /*********************************************************************\r\n         * convolve the partitioned energy and unpredictability with the\r\n         * spreading function, s3_l[b][k]\r\n         ********************************************************************/\r\n        var k = 0;\r\n        for (b = 0; b < gfc.npart_l; b++) {\r\n            var x, ecb, avg_mask, t;\r\n            /* convolve the partitioned energy with the spreading function */\r\n            var kk = gfc.s3ind[b][0];\r\n            var last = gfc.s3ind[b][1];\r\n            var dd = 0, dd_n = 0;\r\n            dd = mask_idx_l[kk];\r\n            dd_n += 1;\r\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\r\n            ++k;\r\n            ++kk;\r\n            while (kk <= last) {\r\n                dd += mask_idx_l[kk];\r\n                dd_n += 1;\r\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\r\n                t = vbrpsy_mask_add(ecb, x, kk - b);\r\n                ecb = t;\r\n                ++k;\r\n                ++kk;\r\n            }\r\n            dd = (1 + 2 * dd) / (2 * dd_n);\r\n            avg_mask = tab[dd] * 0.5;\r\n            ecb *= avg_mask;\r\n\r\n            /**** long block pre-echo control ****/\r\n            /**\r\n             * <PRE>\r\n             * dont use long block pre-echo control if previous granule was\r\n             * a short block.  This is to avoid the situation:\r\n             * frame0:  quiet (very low masking)\r\n             * frame1:  surge  (triggers short blocks)\r\n             * frame2:  regular frame.  looks like pre-echo when compared to\r\n             *          frame0, but all pre-echo was in frame1.\r\n             * </PRE>\r\n             */\r\n            /*\r\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\r\n             */\r\n            if (gfc.blocktype_old[chn & 0x01] == Encoder.SHORT_TYPE) {\r\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\r\n                if (ecb_limit > 0) {\r\n                    thr[b] = Math.min(ecb, ecb_limit);\r\n                } else {\r\n                    /**\r\n                     * <PRE>\r\n                     * Robert 071209:\r\n                     * Because we don't calculate long block psy when we know a granule\r\n                     * should be of short blocks, we don't have any clue how the granule\r\n                     * before would have looked like as a long block. So we have to guess\r\n                     * a little bit for this END_TYPE block.\r\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\r\n                     * The speed increase is worth it.\r\n                     * </PRE>\r\n                     */\r\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\r\n                }\r\n            } else {\r\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\r\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\r\n                var ecb_limit;\r\n                if (ecb_limit_2 <= 0) {\r\n                    ecb_limit_2 = ecb;\r\n                }\r\n                if (ecb_limit_1 <= 0) {\r\n                    ecb_limit_1 = ecb;\r\n                }\r\n                if (gfc.blocktype_old[chn & 0x01] == Encoder.NORM_TYPE) {\r\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\r\n                } else {\r\n                    ecb_limit = ecb_limit_1;\r\n                }\r\n                thr[b] = Math.min(ecb, ecb_limit);\r\n            }\r\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\r\n            gfc.nb_1[chn][b] = ecb;\r\n            {\r\n                /*\r\n                 * if THR exceeds EB, the quantization routines will take the\r\n                 * difference from other bands. in case of strong tonal samples\r\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\r\n                 * we limit THR here.\r\n                 */\r\n                x = max[b];\r\n                x *= gfc.minval_l[b];\r\n                x *= avg_mask;\r\n                if (thr[b] > x) {\r\n                    thr[b] = x;\r\n                }\r\n            }\r\n            if (gfc.masking_lower > 1) {\r\n                thr[b] *= gfc.masking_lower;\r\n            }\r\n            if (thr[b] > eb_l[b]) {\r\n                thr[b] = eb_l[b];\r\n            }\r\n            if (gfc.masking_lower < 1) {\r\n                thr[b] *= gfc.masking_lower;\r\n            }\r\n        }\r\n        for (; b < Encoder.CBANDS; ++b) {\r\n            eb_l[b] = 0;\r\n            thr[b] = 0;\r\n        }\r\n    }\r\n\r\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\r\n                /* force both channels to use the same block type */\r\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\r\n                /* But even without ms_stereo, FhG does this */\r\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\r\n            uselongblock[0] = uselongblock[1] = 0;\r\n\r\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\r\n            /* disable short blocks */\r\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed) {\r\n                uselongblock[chn] = 1;\r\n            }\r\n            if (gfp.short_blocks == ShortBlock.short_block_forced) {\r\n                uselongblock[chn] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /*\r\n         * update the blocktype of the previous granule, since it depends on\r\n         * what happend in this granule\r\n         */\r\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\r\n            var blocktype = Encoder.NORM_TYPE;\r\n            /* disable short blocks */\r\n\r\n            if (uselongblock[chn] != 0) {\r\n                /* no attack : use long blocks */\r\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\r\n                    blocktype = Encoder.STOP_TYPE;\r\n            } else {\r\n                /* attack : use short blocks */\r\n                blocktype = Encoder.SHORT_TYPE;\r\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\r\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\r\n                }\r\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\r\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\r\n            }\r\n\r\n            blocktype_d[chn] = gfc.blocktype_old[chn];\r\n            // value returned to calling program\r\n            gfc.blocktype_old[chn] = blocktype;\r\n            // save for next call to l3psy_anal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\r\n     */\r\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\r\n        var msfix2 = msfix * 2;\r\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\r\n        var rside, rmid;\r\n        for (var b = 0; b < n; ++b) {\r\n            var ebM = eb[2][b];\r\n            var ebS = eb[3][b];\r\n            var thmL = thr[0][b];\r\n            var thmR = thr[1][b];\r\n            var thmM = thr[2][b];\r\n            var thmS = thr[3][b];\r\n\r\n            /* use this fix if L & R masking differs by 2db or less */\r\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\r\n                var mld_m = cb_mld[b] * ebS;\r\n                var mld_s = cb_mld[b] * ebM;\r\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\r\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\r\n            } else {\r\n                rmid = thmM;\r\n                rside = thmS;\r\n            }\r\n            if (msfix > 0) {\r\n                /***************************************************************/\r\n                /* Adjust M/S maskings if user set \"msfix\" */\r\n                /***************************************************************/\r\n                /* Naoki Shibata 2000 */\r\n                var thmLR, thmMS;\r\n                var ath = ath_cb[b] * athlower;\r\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\r\n                thmM = Math.max(rmid, ath);\r\n                thmS = Math.max(rside, ath);\r\n                thmMS = thmM + thmS;\r\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\r\n                    var f = thmLR * msfix2 / thmMS;\r\n                    thmM *= f;\r\n                    thmS *= f;\r\n                }\r\n                rmid = Math.min(thmM, rmid);\r\n                rside = Math.min(thmS, rside);\r\n            }\r\n            if (rmid > ebM) {\r\n                rmid = ebM;\r\n            }\r\n            if (rside > ebS) {\r\n                rside = ebS;\r\n            }\r\n            thr[2][b] = rmid;\r\n            thr[3][b] = rside;\r\n        }\r\n    }\r\n\r\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /* fft and energy calculation */\r\n        var wsamp_l;\r\n        var wsamp_s;\r\n        var fftenergy = new_float(Encoder.HBLKSIZE);\r\n        var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\r\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\r\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\r\n        var eb = new_float_n([4, Encoder.CBANDS]), thr = new_float_n([4, Encoder.CBANDS]);\r\n        var sub_short_factor = new_float_n([4, 3]);\r\n        var pcfact = 0.6;\r\n\r\n        /* block type */\r\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\r\n            [0, 0, 0, 0]];\r\n        var uselongblock = new_int(2);\r\n\r\n        /* usual variables like loop indices, etc.. */\r\n\r\n        /* chn=2 and 3 = Mid and Side channels */\r\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\r\n            : gfc.channels_out;\r\n\r\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\r\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\r\n            uselongblock);\r\n\r\n        vbrpsy_compute_block_type(gfp, uselongblock);\r\n\r\n        /* LONG BLOCK CASE */\r\n        {\r\n            for (var chn = 0; chn < n_chn_psy; chn++) {\r\n                var ch01 = chn & 0x01;\r\n                wsamp_l = wsamp_L;\r\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\r\n                    fftenergy, wsamp_l, ch01);\r\n\r\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\r\n                    fftenergy);\r\n\r\n                if (uselongblock[ch01] != 0) {\r\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\r\n                        chn);\r\n                } else {\r\n                    vbrpsy_skip_masking_l(gfc, chn);\r\n                }\r\n            }\r\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\r\n                /* M/S channel */\r\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\r\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\r\n                        gfp.msfix, gfc.npart_l);\r\n                }\r\n            }\r\n            /* TODO: apply adaptive ATH masking here ?? */\r\n            for (var chn = 0; chn < n_chn_psy; chn++) {\r\n                var ch01 = chn & 0x01;\r\n                if (uselongblock[ch01] != 0) {\r\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* SHORT BLOCKS CASE */\r\n        {\r\n            for (var sblock = 0; sblock < 3; sblock++) {\r\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\r\n                    var ch01 = chn & 0x01;\r\n\r\n                    if (uselongblock[ch01] != 0) {\r\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\r\n                    } else {\r\n                        /* compute masking thresholds for short blocks */\r\n                        wsamp_s = wsamp_S;\r\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\r\n                            fftenergy_s, wsamp_s, ch01);\r\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\r\n                            thr[chn], chn, sblock);\r\n                    }\r\n                }\r\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\r\n                    /* M/S channel */\r\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\r\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\r\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\r\n                            gfp.msfix, gfc.npart_s);\r\n                    }\r\n                    /* L/R channel */\r\n                }\r\n                /* TODO: apply adaptive ATH masking here ?? */\r\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\r\n                    var ch01 = chn & 0x01;\r\n                    if (0 == uselongblock[ch01]) {\r\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\r\n                            chn, sblock);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**** short block pre-echo control ****/\r\n            for (var chn = 0; chn < n_chn_psy; chn++) {\r\n                var ch01 = chn & 0x01;\r\n\r\n                if (uselongblock[ch01] != 0) {\r\n                    continue;\r\n                }\r\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n                    var new_thmm = new_float(3);\r\n                    for (var sblock = 0; sblock < 3; sblock++) {\r\n                        var thmm = gfc.thm[chn].s[sb][sblock];\r\n                        thmm *= NS_PREECHO_ATT0;\r\n\r\n                        if (ns_attacks[chn][sblock] >= 2\r\n                            || ns_attacks[chn][sblock + 1] == 1) {\r\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\r\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                                NS_PREECHO_ATT1 * pcfact);\r\n                            thmm = Math.min(thmm, p);\r\n                        } else if (ns_attacks[chn][sblock] == 1) {\r\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\r\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                                NS_PREECHO_ATT2 * pcfact);\r\n                            thmm = Math.min(thmm, p);\r\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\r\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\r\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\r\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\r\n                                NS_PREECHO_ATT2 * pcfact);\r\n                            thmm = Math.min(thmm, p);\r\n                        }\r\n\r\n                        /* pulse like signal detection for fatboy.wav and so on */\r\n                        thmm *= sub_short_factor[chn][sblock];\r\n\r\n                        new_thmm[sblock] = thmm;\r\n                    }\r\n                    for (var sblock = 0; sblock < 3; sblock++) {\r\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (var chn = 0; chn < n_chn_psy; chn++) {\r\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\r\n        }\r\n\r\n        /***************************************************************\r\n         * determine final block type\r\n         ***************************************************************/\r\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\r\n\r\n        /*********************************************************************\r\n         * compute the value of PE to return ... no delay and advance\r\n         *********************************************************************/\r\n        for (var chn = 0; chn < n_chn_psy; chn++) {\r\n            var ppe;\r\n            var ppePos;\r\n            var type;\r\n            var mr;\r\n\r\n            if (chn > 1) {\r\n                ppe = percep_MS_entropy;\r\n                ppePos = -2;\r\n                type = Encoder.NORM_TYPE;\r\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\r\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\r\n                    type = Encoder.SHORT_TYPE;\r\n                mr = masking_MS_ratio[gr_out][chn - 2];\r\n            } else {\r\n                ppe = percep_entropy;\r\n                ppePos = 0;\r\n                type = blocktype_d[chn];\r\n                mr = masking_ratio[gr_out][chn];\r\n            }\r\n\r\n            if (type == Encoder.SHORT_TYPE) {\r\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\r\n            } else {\r\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\r\n            }\r\n\r\n            if (gfp.analysis) {\r\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function s3_func_x(bark, hf_slope) {\r\n        var tempx = bark, tempy;\r\n\r\n        if (tempx >= 0) {\r\n            tempy = -tempx * 27;\r\n        } else {\r\n            tempy = tempx * hf_slope;\r\n        }\r\n        if (tempy <= -72.0) {\r\n            return 0;\r\n        }\r\n        return Math.exp(tempy * LN_TO_LOG10);\r\n    }\r\n\r\n    function norm_s3_func_x(hf_slope) {\r\n        var lim_a = 0, lim_b = 0;\r\n        {\r\n            var x = 0, l, h;\r\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\r\n                ;\r\n            l = x;\r\n            h = 0;\r\n            while (Math.abs(h - l) > 1e-12) {\r\n                x = (h + l) / 2;\r\n                if (s3_func_x(x, hf_slope) > 0) {\r\n                    h = x;\r\n                } else {\r\n                    l = x;\r\n                }\r\n            }\r\n            lim_a = l;\r\n        }\r\n        {\r\n            var x = 0, l, h;\r\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\r\n                ;\r\n            l = 0;\r\n            h = x;\r\n            while (Math.abs(h - l) > 1e-12) {\r\n                x = (h + l) / 2;\r\n                if (s3_func_x(x, hf_slope) > 0) {\r\n                    l = x;\r\n                } else {\r\n                    h = x;\r\n                }\r\n            }\r\n            lim_b = h;\r\n        }\r\n        {\r\n            var sum = 0;\r\n            var m = 1000;\r\n            var i;\r\n            for (i = 0; i <= m; ++i) {\r\n                var x = lim_a + i * (lim_b - lim_a) / m;\r\n                var y = s3_func_x(x, hf_slope);\r\n                sum += y;\r\n            }\r\n            {\r\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\r\n                /* printf( \"norm = %lf\\n\",norm); */\r\n                return norm;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *   The spreading function.  Values returned in units of energy\r\n     */\r\n    function s3_func(bark) {\r\n        var tempx, x, tempy, temp;\r\n        tempx = bark;\r\n        if (tempx >= 0)\r\n            tempx *= 3;\r\n        else\r\n            tempx *= 1.5;\r\n\r\n        if (tempx >= 0.5 && tempx <= 2.5) {\r\n            temp = tempx - 0.5;\r\n            x = 8.0 * (temp * temp - 2.0 * temp);\r\n        } else\r\n            x = 0.0;\r\n        tempx += 0.474;\r\n        tempy = 15.811389 + 7.5 * tempx - 17.5\r\n            * Math.sqrt(1.0 + tempx * tempx);\r\n\r\n        if (tempy <= -60.0)\r\n            return 0.0;\r\n\r\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\r\n\r\n        /**\r\n         * <PRE>\r\n         * Normalization.  The spreading function should be normalized so that:\r\n         * +inf\r\n         * /\r\n         * |  s3 [ bark ]  d(bark)   =  1\r\n         * /\r\n         * -inf\r\n         * </PRE>\r\n         */\r\n        tempx /= .6609193;\r\n        return tempx;\r\n    }\r\n\r\n    /**\r\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\r\n     */\r\n    function freq2bark(freq) {\r\n        /* input: freq in hz output: barks */\r\n        if (freq < 0)\r\n            freq = 0;\r\n        freq = freq * 0.001;\r\n        return 13.0 * Math.atan(.76 * freq) + 3.5\r\n            * Math.atan(freq * freq / (7.5 * 7.5));\r\n    }\r\n\r\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\r\n        var b_frq = new_float(Encoder.CBANDS + 1);\r\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\r\n        var partition = new_int(Encoder.HBLKSIZE);\r\n        var i;\r\n        sfreq /= blksize;\r\n        var j = 0;\r\n        var ni = 0;\r\n        /* compute numlines, the number of spectral lines in each partition band */\r\n        /* each partition band should be about DELBARK wide. */\r\n        for (i = 0; i < Encoder.CBANDS; i++) {\r\n            var bark1;\r\n            var j2;\r\n            bark1 = freq2bark(sfreq * j);\r\n\r\n            b_frq[i] = sfreq * j;\r\n\r\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\r\n            && j2 <= blksize / 2; j2++)\r\n                ;\r\n\r\n            numlines[i] = j2 - j;\r\n            ni = i + 1;\r\n\r\n            while (j < j2) {\r\n                partition[j++] = i;\r\n            }\r\n            if (j > blksize / 2) {\r\n                j = blksize / 2;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        b_frq[i] = sfreq * j;\r\n\r\n        for (var sfb = 0; sfb < sbmax; sfb++) {\r\n            var i1, i2, start, end;\r\n            var arg;\r\n            start = scalepos[sfb];\r\n            end = scalepos[sfb + 1];\r\n\r\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\r\n            if (i1 < 0)\r\n                i1 = 0;\r\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\r\n\r\n            if (i2 > blksize / 2)\r\n                i2 = blksize / 2;\r\n\r\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\r\n            bo[sfb] = partition[i2];\r\n            var f_tmp = sample_freq_frac * end;\r\n            /*\r\n             * calculate how much of this band belongs to current scalefactor\r\n             * band\r\n             */\r\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\r\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\r\n            if (bo_w[sfb] < 0) {\r\n                bo_w[sfb] = 0;\r\n            } else {\r\n                if (bo_w[sfb] > 1) {\r\n                    bo_w[sfb] = 1;\r\n                }\r\n            }\r\n            /* setup stereo demasking thresholds */\r\n            /* formula reverse enginerred from plot in paper */\r\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\r\n            arg = ( Math.min(arg, 15.5) / 15.5);\r\n\r\n            mld[sfb] = Math.pow(10.0,\r\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\r\n        }\r\n\r\n        /* compute bark values of each critical band */\r\n        j = 0;\r\n        for (var k = 0; k < ni; k++) {\r\n            var w = numlines[k];\r\n            var bark1, bark2;\r\n\r\n            bark1 = freq2bark(sfreq * (j));\r\n            bark2 = freq2bark(sfreq * (j + w - 1));\r\n            bval[k] = .5 * (bark1 + bark2);\r\n\r\n            bark1 = freq2bark(sfreq * (j - .5));\r\n            bark2 = freq2bark(sfreq * (j + w - .5));\r\n            bval_width[k] = bark2 - bark1;\r\n            j += w;\r\n        }\r\n\r\n        return ni;\r\n    }\r\n\r\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\r\n        var s3 = new_float_n([Encoder.CBANDS, Encoder.CBANDS]);\r\n        /*\r\n         * The s3 array is not linear in the bark scale.\r\n         *\r\n         * bval[x] should be used to get the bark value.\r\n         */\r\n        var j;\r\n        var numberOfNoneZero = 0;\r\n\r\n        /**\r\n         * <PRE>\r\n         * s[i][j], the value of the spreading function,\r\n         * centered at band j (masker), for band i (maskee)\r\n         *\r\n         * i.e.: sum over j to spread into signal barkval=i\r\n         * NOTE: i and j are used opposite as in the ISO docs\r\n         * </PRE>\r\n         */\r\n        if (use_old_s3) {\r\n            for (var i = 0; i < npart; i++) {\r\n                for (j = 0; j < npart; j++) {\r\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\r\n                    s3[i][j] = v * norm[i];\r\n                }\r\n            }\r\n        } else {\r\n            for (j = 0; j < npart; j++) {\r\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\r\n                var s3_x_norm = norm_s3_func_x(hf_slope);\r\n                for (var i = 0; i < npart; i++) {\r\n                    var v = s3_x_norm\r\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\r\n                        * bval_width[j];\r\n                    s3[i][j] = v * norm[i];\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < npart; i++) {\r\n            for (j = 0; j < npart; j++) {\r\n                if (s3[i][j] > 0.0)\r\n                    break;\r\n            }\r\n            s3ind[i][0] = j;\r\n\r\n            for (j = npart - 1; j > 0; j--) {\r\n                if (s3[i][j] > 0.0)\r\n                    break;\r\n            }\r\n            s3ind[i][1] = j;\r\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\r\n        }\r\n\r\n        var p = new_float(numberOfNoneZero);\r\n        var k = 0;\r\n        for (var i = 0; i < npart; i++)\r\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\r\n                p[k++] = s3[i][j];\r\n\r\n        return p;\r\n    }\r\n\r\n    function stereo_demask(f) {\r\n        /* setup stereo demasking thresholds */\r\n        /* formula reverse enginerred from plot in paper */\r\n        var arg = freq2bark(f);\r\n        arg = (Math.min(arg, 15.5) / 15.5);\r\n\r\n        return Math.pow(10.0,\r\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\r\n    }\r\n\r\n    /**\r\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\r\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\r\n     * does not use this feature. (Robert 071216)\r\n     */\r\n    this.psymodel_init = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        var i;\r\n        var useOldS3 = true;\r\n        var bvl_a = 13, bvl_b = 24;\r\n        var snr_l_a = 0, snr_l_b = 0;\r\n        var snr_s_a = -8.25, snr_s_b = -4.5;\r\n        var bval = new_float(Encoder.CBANDS);\r\n        var bval_width = new_float(Encoder.CBANDS);\r\n        var norm = new_float(Encoder.CBANDS);\r\n        var sfreq = gfp.out_samplerate;\r\n\r\n        switch (gfp.experimentalZ) {\r\n            default:\r\n            case 0:\r\n                useOldS3 = true;\r\n                break;\r\n            case 1:\r\n                useOldS3 = (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) ? false\r\n                    : true;\r\n                break;\r\n            case 2:\r\n                useOldS3 = false;\r\n                break;\r\n            case 3:\r\n                bvl_a = 8;\r\n                snr_l_a = -1.75;\r\n                snr_l_b = -0.0125;\r\n                snr_s_a = -8.25;\r\n                snr_s_b = -2.25;\r\n                break;\r\n        }\r\n        gfc.ms_ener_ratio_old = .25;\r\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder.NORM_TYPE;\r\n        // the vbr header is long blocks\r\n\r\n        for (i = 0; i < 4; ++i) {\r\n            for (var j = 0; j < Encoder.CBANDS; ++j) {\r\n                gfc.nb_1[i][j] = 1e20;\r\n                gfc.nb_2[i][j] = 1e20;\r\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\r\n            }\r\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\r\n                gfc.en[i].l[sb] = 1e20;\r\n                gfc.thm[i].l[sb] = 1e20;\r\n            }\r\n            for (var j = 0; j < 3; ++j) {\r\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\r\n                    gfc.en[i].s[sb][j] = 1e20;\r\n                    gfc.thm[i].s[sb][j] = 1e20;\r\n                }\r\n                gfc.nsPsy.lastAttacks[i] = 0;\r\n            }\r\n            for (var j = 0; j < 9; j++)\r\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\r\n        }\r\n\r\n        /* init. for loudness approx. -jd 2001 mar 27 */\r\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\r\n\r\n        /*************************************************************************\r\n         * now compute the psychoacoustic model specific constants\r\n         ************************************************************************/\r\n        /* compute numlines, bo, bm, bval, bval_width, mld */\r\n\r\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\r\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\r\n            Encoder.BLKSIZE, gfc.scalefac_band.l, Encoder.BLKSIZE\r\n            / (2.0 * 576), Encoder.SBMAX_l);\r\n        /* compute the spreading function */\r\n        for (i = 0; i < gfc.npart_l; i++) {\r\n            var snr = snr_l_a;\r\n            if (bval[i] >= bvl_a) {\r\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\r\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\r\n            }\r\n            norm[i] = Math.pow(10.0, snr / 10.0);\r\n            if (gfc.numlines_l[i] > 0) {\r\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\r\n            } else {\r\n                gfc.rnumlines_l[i] = 0;\r\n            }\r\n        }\r\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\r\n            norm, useOldS3);\r\n\r\n        /* compute long block specific values, ATH and MINVAL */\r\n        var j = 0;\r\n        for (i = 0; i < gfc.npart_l; i++) {\r\n            var x;\r\n\r\n            /* ATH */\r\n            x = Float.MAX_VALUE;\r\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\r\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE);\r\n                var level;\r\n                /*\r\n                 * ATH below 100 Hz constant, not further climbing\r\n                 */\r\n                level = this.ATHformula(freq * 1000, gfp) - 20;\r\n                // scale to FFT units; returned value is in dB\r\n                level = Math.pow(10., 0.1 * level);\r\n                // convert from dB . energy\r\n                level *= gfc.numlines_l[i];\r\n                if (x > level)\r\n                    x = level;\r\n            }\r\n            gfc.ATH.cb_l[i] = x;\r\n\r\n            /*\r\n             * MINVAL. For low freq, the strength of the masking is limited by\r\n             * minval this is an ISO MPEG1 thing, dont know if it is really\r\n             * needed\r\n             */\r\n            /*\r\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\r\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\r\n             * TODO: Further refinement of the shape of this hack.\r\n             */\r\n            x = -20 + bval[i] * 20 / 10;\r\n            if (x > 6) {\r\n                x = 100;\r\n            }\r\n            if (x < -15) {\r\n                x = -15;\r\n            }\r\n            x -= 8.;\r\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\r\n        }\r\n\r\n        /************************************************************************\r\n         * do the same things for short blocks\r\n         ************************************************************************/\r\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\r\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\r\n            Encoder.BLKSIZE_s, gfc.scalefac_band.s, Encoder.BLKSIZE_s\r\n            / (2.0 * 192), Encoder.SBMAX_s);\r\n\r\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\r\n        j = 0;\r\n        for (i = 0; i < gfc.npart_s; i++) {\r\n            var x;\r\n            var snr = snr_s_a;\r\n            if (bval[i] >= bvl_a) {\r\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\r\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\r\n            }\r\n            norm[i] = Math.pow(10.0, snr / 10.0);\r\n\r\n            /* ATH */\r\n            x = Float.MAX_VALUE;\r\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\r\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE_s);\r\n                var level;\r\n                /* freq = Min(.1,freq); */\r\n                /*\r\n                 * ATH below 100 Hz constant, not\r\n                 * further climbing\r\n                 */\r\n                level = this.ATHformula(freq * 1000, gfp) - 20;\r\n                // scale to FFT units; returned value is in dB\r\n                level = Math.pow(10., 0.1 * level);\r\n                // convert from dB . energy\r\n                level *= gfc.numlines_s[i];\r\n                if (x > level)\r\n                    x = level;\r\n            }\r\n            gfc.ATH.cb_s[i] = x;\r\n\r\n            /*\r\n             * MINVAL. For low freq, the strength of the masking is limited by\r\n             * minval this is an ISO MPEG1 thing, dont know if it is really\r\n             * needed\r\n             */\r\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\r\n            if (bval[i] > 12) {\r\n                x *= 1 + Math.log(1 + x) * 3.1;\r\n            }\r\n            if (bval[i] < 12) {\r\n                x *= 1 + Math.log(1 - x) * 2.3;\r\n            }\r\n            if (x < -15) {\r\n                x = -15;\r\n            }\r\n            x -= 8;\r\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\r\n                * gfc.numlines_s[i];\r\n        }\r\n\r\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\r\n            norm, useOldS3);\r\n\r\n        init_mask_add_max_values();\r\n        fft.init_fft(gfc);\r\n\r\n        /* setup temporal masking */\r\n        gfc.decay = Math.exp(-1.0 * LOG10\r\n            / (temporalmask_sustain_sec * sfreq / 192.0));\r\n\r\n        {\r\n            var msfix;\r\n            msfix = NS_MSFIX;\r\n            if ((gfp.exp_nspsytune & 2) != 0)\r\n                msfix = 1.0;\r\n            if (Math.abs(gfp.msfix) > 0.0)\r\n                msfix = gfp.msfix;\r\n            gfp.msfix = msfix;\r\n\r\n            /*\r\n             * spread only from npart_l bands. Normally, we use the spreading\r\n             * function to convolve from npart_l down to npart_l bands\r\n             */\r\n            for (var b = 0; b < gfc.npart_l; b++)\r\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\r\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\r\n        }\r\n\r\n        /*\r\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\r\n         * per second\r\n         */\r\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\r\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\r\n        gfc.ATH.adjust = 0.01;\r\n        /* minimum, for leading low loudness */\r\n        gfc.ATH.adjustLimit = 1.0;\r\n        /* on lead, allow adjust up to maximum */\r\n\r\n\r\n        if (gfp.ATHtype != -1) {\r\n            /* compute equal loudness weights (eql_w) */\r\n            var freq;\r\n            var freq_inc = gfp.out_samplerate\r\n                / (Encoder.BLKSIZE);\r\n            var eql_balance = 0.0;\r\n            freq = 0.0;\r\n            for (i = 0; i < Encoder.BLKSIZE / 2; ++i) {\r\n                /* convert ATH dB to relative power (not dB) */\r\n                /* to determine eql_w */\r\n                freq += freq_inc;\r\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\r\n                eql_balance += gfc.ATH.eql_w[i];\r\n            }\r\n            eql_balance = 1.0 / eql_balance;\r\n            for (i = Encoder.BLKSIZE / 2; --i >= 0;) { /* scale weights */\r\n                gfc.ATH.eql_w[i] *= eql_balance;\r\n            }\r\n        }\r\n        {\r\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\r\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\r\n                    ++j;\r\n                }\r\n            }\r\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\r\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\r\n                    ++j;\r\n                }\r\n            }\r\n        }\r\n        j = 0;\r\n        for (i = 0; i < gfc.npart_l; i++) {\r\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder.BLKSIZE);\r\n            gfc.mld_cb_l[i] = stereo_demask(freq);\r\n            j += gfc.numlines_l[i];\r\n        }\r\n        for (; i < Encoder.CBANDS; ++i) {\r\n            gfc.mld_cb_l[i] = 1;\r\n        }\r\n        j = 0;\r\n        for (i = 0; i < gfc.npart_s; i++) {\r\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder.BLKSIZE_s);\r\n            gfc.mld_cb_s[i] = stereo_demask(freq);\r\n            j += gfc.numlines_s[i];\r\n        }\r\n        for (; i < Encoder.CBANDS; ++i) {\r\n            gfc.mld_cb_s[i] = 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Those ATH formulas are returning their minimum value for input = -1\r\n     */\r\n    function ATHformula_GB(f, value) {\r\n        /**\r\n         * <PRE>\r\n         *  from Painter & Spanias\r\n         *           modified by Gabriel Bouvigne to better fit the reality\r\n         *           ath =    3.640 * pow(f,-0.8)\r\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\r\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\r\n         *           + 0.6* 0.001 * pow(f,4.0);\r\n         *\r\n         *\r\n         *           In the past LAME was using the Painter &Spanias formula.\r\n         *           But we had some recurrent problems with HF content.\r\n         *           We measured real ATH values, and found the older formula\r\n         *           to be inaccurate in the higher part. So we made this new\r\n         *           formula and this solved most of HF problematic test cases.\r\n         *           The tradeoff is that in VBR mode it increases a lot the\r\n         *           bitrate.\r\n         * </PRE>\r\n         */\r\n\r\n        /*\r\n         * This curve can be adjusted according to the VBR scale: it adjusts\r\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\r\n         * formula for V0. This way the VBR bitrate is more balanced according\r\n         * to the -V value.\r\n         */\r\n\r\n        // the following Hack allows to ask for the lowest value\r\n        if (f < -.3)\r\n            f = 3410;\r\n\r\n        // convert to khz\r\n        f /= 1000;\r\n        f = Math.max(0.1, f);\r\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\r\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\r\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\r\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\r\n        return ath;\r\n    }\r\n\r\n    this.ATHformula = function (f, gfp) {\r\n        var ath;\r\n        switch (gfp.ATHtype) {\r\n            case 0:\r\n                ath = ATHformula_GB(f, 9);\r\n                break;\r\n            case 1:\r\n                // over sensitive, should probably be removed\r\n                ath = ATHformula_GB(f, -1);\r\n                break;\r\n            case 2:\r\n                ath = ATHformula_GB(f, 0);\r\n                break;\r\n            case 3:\r\n                // modification of GB formula by Roel\r\n                ath = ATHformula_GB(f, 1) + 6;\r\n                break;\r\n            case 4:\r\n                ath = ATHformula_GB(f, gfp.ATHcurve);\r\n                break;\r\n            default:\r\n                ath = ATHformula_GB(f, 0);\r\n                break;\r\n        }\r\n        return ath;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction Lame() {\r\n    var self = this;\r\n    var LAME_MAXALBUMART = (128 * 1024);\r\n\r\n    Lame.V9 = 410;\r\n    Lame.V8 = 420;\r\n    Lame.V7 = 430;\r\n    Lame.V6 = 440;\r\n    Lame.V5 = 450;\r\n    Lame.V4 = 460;\r\n    Lame.V3 = 470;\r\n    Lame.V2 = 480;\r\n    Lame.V1 = 490;\r\n    Lame.V0 = 500;\r\n\r\n    /* still there for compatibility */\r\n\r\n    Lame.R3MIX = 1000;\r\n    Lame.STANDARD = 1001;\r\n    Lame.EXTREME = 1002;\r\n    Lame.INSANE = 1003;\r\n    Lame.STANDARD_FAST = 1004;\r\n    Lame.EXTREME_FAST = 1005;\r\n    Lame.MEDIUM = 1006;\r\n    Lame.MEDIUM_FAST = 1007;\r\n\r\n    /**\r\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\r\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\r\n     * (LAME_MAXMP3BUFFER is now obsolete)\r\n     */\r\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\r\n    Lame.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\r\n\r\n    var ga;\r\n    var bs;\r\n    var p;\r\n    var qupvt;\r\n    var qu;\r\n    var psy = new PsyModel();\r\n    var vbr;\r\n    var ver;\r\n    var id3;\r\n    var mpglib;\r\n    this.enc = new Encoder();\r\n\r\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\r\n        ga = _ga;\r\n        bs = _bs;\r\n        p = _p;\r\n        qupvt = _qupvt;\r\n        qu = _qu;\r\n        vbr = _vbr;\r\n        ver = _ver;\r\n        id3 = _id3;\r\n        mpglib = _mpglib;\r\n        this.enc.setModules(bs, psy, qupvt, vbr);\r\n    }\r\n\r\n    /**\r\n     * PSY Model related stuff\r\n     */\r\n    function PSY() {\r\n        /**\r\n         * The dbQ stuff.\r\n         */\r\n        this.mask_adjust = 0.;\r\n        /**\r\n         * The dbQ stuff.\r\n         */\r\n        this.mask_adjust_short = 0.;\r\n        /* at transition from one scalefactor band to next */\r\n        /**\r\n         * Band weight long scalefactor bands.\r\n         */\r\n        this.bo_l_weight = new_float(Encoder.SBMAX_l);\r\n        /**\r\n         * Band weight short scalefactor bands.\r\n         */\r\n        this.bo_s_weight = new_float(Encoder.SBMAX_s);\r\n    }\r\n\r\n    function LowPassHighPass() {\r\n        this.lowerlimit = 0.;\r\n    }\r\n\r\n    function BandPass(bitrate, lPass) {\r\n        this.lowpass = lPass;\r\n    }\r\n\r\n    var LAME_ID = 0xFFF88E3B;\r\n\r\n    function lame_init_old(gfp) {\r\n        var gfc;\r\n\r\n        gfp.class_id = LAME_ID;\r\n\r\n        gfc = gfp.internal_flags = new LameInternalFlags();\r\n\r\n        /* Global flags. set defaults here for non-zero values */\r\n        /* see lame.h for description */\r\n        /*\r\n         * set integer values to -1 to mean that LAME will compute the best\r\n         * value, UNLESS the calling program as set it (and the value is no\r\n         * longer -1)\r\n         */\r\n\r\n        gfp.mode = MPEGMode.NOT_SET;\r\n        gfp.original = 1;\r\n        gfp.in_samplerate = 44100;\r\n        gfp.num_channels = 2;\r\n        gfp.num_samples = -1;\r\n\r\n        gfp.bWriteVbrTag = true;\r\n        gfp.quality = -1;\r\n        gfp.short_blocks = null;\r\n        gfc.subblock_gain = -1;\r\n\r\n        gfp.lowpassfreq = 0;\r\n        gfp.highpassfreq = 0;\r\n        gfp.lowpasswidth = -1;\r\n        gfp.highpasswidth = -1;\r\n\r\n        gfp.VBR = VbrMode.vbr_off;\r\n        gfp.VBR_q = 4;\r\n        gfp.ATHcurve = -1;\r\n        gfp.VBR_mean_bitrate_kbps = 128;\r\n        gfp.VBR_min_bitrate_kbps = 0;\r\n        gfp.VBR_max_bitrate_kbps = 0;\r\n        gfp.VBR_hard_min = 0;\r\n        gfc.VBR_min_bitrate = 1;\r\n        /* not 0 ????? */\r\n        gfc.VBR_max_bitrate = 13;\r\n        /* not 14 ????? */\r\n\r\n        gfp.quant_comp = -1;\r\n        gfp.quant_comp_short = -1;\r\n\r\n        gfp.msfix = -1;\r\n\r\n        gfc.resample_ratio = 1;\r\n\r\n        gfc.OldValue[0] = 180;\r\n        gfc.OldValue[1] = 180;\r\n        gfc.CurrentStep[0] = 4;\r\n        gfc.CurrentStep[1] = 4;\r\n        gfc.masking_lower = 1;\r\n        gfc.nsPsy.attackthre = -1;\r\n        gfc.nsPsy.attackthre_s = -1;\r\n\r\n        gfp.scale = -1;\r\n\r\n        gfp.athaa_type = -1;\r\n        gfp.ATHtype = -1;\r\n        /* default = -1 = set in lame_init_params */\r\n        gfp.athaa_loudapprox = -1;\r\n        /* 1 = flat loudness approx. (total energy) */\r\n        /* 2 = equal loudness curve */\r\n        gfp.athaa_sensitivity = 0.0;\r\n        /* no offset */\r\n        gfp.useTemporal = null;\r\n        gfp.interChRatio = -1;\r\n\r\n        /*\r\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\r\n         * ENCDELAY = internal encoder delay. And then we have to add\r\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\r\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\r\n         * this granule we need the previous granule for the first 288 samples\r\n         * (no problem), and the next granule for the next 288 samples (not\r\n         * possible if this is last granule). So we need to pad with 288 samples\r\n         * to make sure we can encode the 576 samples we are interested in.\r\n         */\r\n        gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\r\n        gfp.encoder_padding = 0;\r\n        gfc.mf_size = Encoder.ENCDELAY - Encoder.MDCTDELAY;\r\n        /*\r\n         * we pad input with this many 0's\r\n         */\r\n\r\n        gfp.findReplayGain = false;\r\n        gfp.decode_on_the_fly = false;\r\n\r\n        gfc.decode_on_the_fly = false;\r\n        gfc.findReplayGain = false;\r\n        gfc.findPeakSample = false;\r\n\r\n        gfc.RadioGain = 0;\r\n        gfc.AudiophileGain = 0;\r\n        gfc.noclipGainChange = 0;\r\n        gfc.noclipScale = -1.0;\r\n\r\n        gfp.preset = 0;\r\n\r\n        gfp.write_id3tag_automatic = true;\r\n        return 0;\r\n    }\r\n\r\n    this.lame_init = function () {\r\n        var gfp = new LameGlobalFlags();\r\n\r\n        var ret = lame_init_old(gfp);\r\n        if (ret != 0) {\r\n            return null;\r\n        }\r\n\r\n        gfp.lame_allocated_gfp = 1;\r\n        return gfp;\r\n    }\r\n\r\n    function filter_coef(x) {\r\n        if (x > 1.0)\r\n            return 0.0;\r\n        if (x <= 0.0)\r\n            return 1.0;\r\n\r\n        return Math.cos(Math.PI / 2 * x);\r\n    }\r\n\r\n    this.nearestBitrateFullIndex = function (bitrate) {\r\n        /* borrowed from DM abr presets */\r\n\r\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\r\n            96, 112, 128, 160, 192, 224, 256, 320];\r\n\r\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\r\n\r\n        /* We assume specified bitrate will be 320kbps */\r\n        upper_range_kbps = full_bitrate_table[16];\r\n        upper_range = 16;\r\n        lower_range_kbps = full_bitrate_table[16];\r\n        lower_range = 16;\r\n\r\n        /*\r\n         * Determine which significant bitrates the value specified falls\r\n         * between, if loop ends without breaking then we were correct above\r\n         * that the value was 320\r\n         */\r\n        for (var b = 0; b < 16; b++) {\r\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\r\n                upper_range_kbps = full_bitrate_table[b + 1];\r\n                upper_range = b + 1;\r\n                lower_range_kbps = full_bitrate_table[b];\r\n                lower_range = (b);\r\n                break;\r\n                /* We found upper range */\r\n            }\r\n        }\r\n\r\n        /* Determine which range the value specified is closer to */\r\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\r\n            return lower_range;\r\n        }\r\n        return upper_range;\r\n    }\r\n\r\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\r\n        /*\r\n         * Rules:\r\n         *\r\n         * - if possible, sfb21 should NOT be used\r\n         */\r\n        var suggested_samplefreq = 44100;\r\n\r\n        if (input_samplefreq >= 48000)\r\n            suggested_samplefreq = 48000;\r\n        else if (input_samplefreq >= 44100)\r\n            suggested_samplefreq = 44100;\r\n        else if (input_samplefreq >= 32000)\r\n            suggested_samplefreq = 32000;\r\n        else if (input_samplefreq >= 24000)\r\n            suggested_samplefreq = 24000;\r\n        else if (input_samplefreq >= 22050)\r\n            suggested_samplefreq = 22050;\r\n        else if (input_samplefreq >= 16000)\r\n            suggested_samplefreq = 16000;\r\n        else if (input_samplefreq >= 12000)\r\n            suggested_samplefreq = 12000;\r\n        else if (input_samplefreq >= 11025)\r\n            suggested_samplefreq = 11025;\r\n        else if (input_samplefreq >= 8000)\r\n            suggested_samplefreq = 8000;\r\n\r\n        if (lowpassfreq == -1)\r\n            return suggested_samplefreq;\r\n\r\n        if (lowpassfreq <= 15960)\r\n            suggested_samplefreq = 44100;\r\n        if (lowpassfreq <= 15250)\r\n            suggested_samplefreq = 32000;\r\n        if (lowpassfreq <= 11220)\r\n            suggested_samplefreq = 24000;\r\n        if (lowpassfreq <= 9970)\r\n            suggested_samplefreq = 22050;\r\n        if (lowpassfreq <= 7230)\r\n            suggested_samplefreq = 16000;\r\n        if (lowpassfreq <= 5420)\r\n            suggested_samplefreq = 12000;\r\n        if (lowpassfreq <= 4510)\r\n            suggested_samplefreq = 11025;\r\n        if (lowpassfreq <= 3970)\r\n            suggested_samplefreq = 8000;\r\n\r\n        if (input_samplefreq < suggested_samplefreq) {\r\n            /*\r\n             * choose a valid MPEG sample frequency above the input sample\r\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\r\n             */\r\n            if (input_samplefreq > 44100) {\r\n                return 48000;\r\n            }\r\n            if (input_samplefreq > 32000) {\r\n                return 44100;\r\n            }\r\n            if (input_samplefreq > 24000) {\r\n                return 32000;\r\n            }\r\n            if (input_samplefreq > 22050) {\r\n                return 24000;\r\n            }\r\n            if (input_samplefreq > 16000) {\r\n                return 22050;\r\n            }\r\n            if (input_samplefreq > 12000) {\r\n                return 16000;\r\n            }\r\n            if (input_samplefreq > 11025) {\r\n                return 12000;\r\n            }\r\n            if (input_samplefreq > 8000) {\r\n                return 11025;\r\n            }\r\n            return 8000;\r\n        }\r\n        return suggested_samplefreq;\r\n    }\r\n\r\n    /**\r\n     * convert samp freq in Hz to index\r\n     */\r\n    function SmpFrqIndex(sample_freq, gpf) {\r\n        switch (sample_freq) {\r\n            case 44100:\r\n                gpf.version = 1;\r\n                return 0;\r\n            case 48000:\r\n                gpf.version = 1;\r\n                return 1;\r\n            case 32000:\r\n                gpf.version = 1;\r\n                return 2;\r\n            case 22050:\r\n                gpf.version = 0;\r\n                return 0;\r\n            case 24000:\r\n                gpf.version = 0;\r\n                return 1;\r\n            case 16000:\r\n                gpf.version = 0;\r\n                return 2;\r\n            case 11025:\r\n                gpf.version = 0;\r\n                return 0;\r\n            case 12000:\r\n                gpf.version = 0;\r\n                return 1;\r\n            case 8000:\r\n                gpf.version = 0;\r\n                return 2;\r\n            default:\r\n                gpf.version = 0;\r\n                return -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param bRate\r\n     *            legal rates from 8 to 320\r\n     */\r\n    function FindNearestBitrate(bRate, version, samplerate) {\r\n        /* MPEG-1 or MPEG-2 LSF */\r\n        if (samplerate < 16000)\r\n            version = 2;\r\n\r\n        var bitrate = Tables.bitrate_table[version][1];\r\n\r\n        for (var i = 2; i <= 14; i++) {\r\n            if (Tables.bitrate_table[version][i] > 0) {\r\n                if (Math.abs(Tables.bitrate_table[version][i] - bRate) < Math\r\n                        .abs(bitrate - bRate))\r\n                    bitrate = Tables.bitrate_table[version][i];\r\n            }\r\n        }\r\n        return bitrate;\r\n    }\r\n\r\n    /**\r\n     * @param bRate\r\n     *            legal rates from 32 to 448 kbps\r\n     * @param version\r\n     *            MPEG-1 or MPEG-2/2.5 LSF\r\n     */\r\n    function BitrateIndex(bRate, version, samplerate) {\r\n        /* convert bitrate in kbps to index */\r\n        if (samplerate < 16000)\r\n            version = 2;\r\n        for (var i = 0; i <= 14; i++) {\r\n            if (Tables.bitrate_table[version][i] > 0) {\r\n                if (Tables.bitrate_table[version][i] == bRate) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    function optimum_bandwidth(lh, bitrate) {\r\n        /**\r\n         * <PRE>\r\n         *  Input:\r\n         *      bitrate     total bitrate in kbps\r\n         *\r\n         *   Output:\r\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\r\n         *      upperlimit: best highpass frequency limit for input filter in Hz\r\n         * </PRE>\r\n         */\r\n        var freq_map = [new BandPass(8, 2000),\r\n            new BandPass(16, 3700), new BandPass(24, 3900),\r\n            new BandPass(32, 5500), new BandPass(40, 7000),\r\n            new BandPass(48, 7500), new BandPass(56, 10000),\r\n            new BandPass(64, 11000), new BandPass(80, 13500),\r\n            new BandPass(96, 15100), new BandPass(112, 15600),\r\n            new BandPass(128, 17000), new BandPass(160, 17500),\r\n            new BandPass(192, 18600), new BandPass(224, 19400),\r\n            new BandPass(256, 19700), new BandPass(320, 20500)];\r\n\r\n        var table_index = self.nearestBitrateFullIndex(bitrate);\r\n        lh.lowerlimit = freq_map[table_index].lowpass;\r\n    }\r\n\r\n    function lame_init_params_ppflt(gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        /***************************************************************/\r\n        /* compute info needed for polyphase filter (filter type==0, default) */\r\n        /***************************************************************/\r\n\r\n        var lowpass_band = 32;\r\n        var highpass_band = -1;\r\n\r\n        if (gfc.lowpass1 > 0) {\r\n            var minband = 999;\r\n            for (var band = 0; band <= 31; band++) {\r\n                var freq = (band / 31.0);\r\n                /* this band and above will be zeroed: */\r\n                if (freq >= gfc.lowpass2) {\r\n                    lowpass_band = Math.min(lowpass_band, band);\r\n                }\r\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\r\n                    minband = Math.min(minband, band);\r\n                }\r\n            }\r\n\r\n            /*\r\n             * compute the *actual* transition band implemented by the polyphase\r\n             * filter\r\n             */\r\n            if (minband == 999) {\r\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\r\n            } else {\r\n                gfc.lowpass1 = (minband - .75) / 31.0;\r\n            }\r\n            gfc.lowpass2 = lowpass_band / 31.0;\r\n        }\r\n\r\n        /*\r\n         * make sure highpass filter is within 90% of what the effective\r\n         * highpass frequency will be\r\n         */\r\n        if (gfc.highpass2 > 0) {\r\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\r\n                gfc.highpass1 = 0;\r\n                gfc.highpass2 = 0;\r\n                System.err.println(\"Warning: highpass filter disabled.  \"\r\n                    + \"highpass frequency too small\\n\");\r\n            }\r\n        }\r\n\r\n        if (gfc.highpass2 > 0) {\r\n            var maxband = -1;\r\n            for (var band = 0; band <= 31; band++) {\r\n                var freq = band / 31.0;\r\n                /* this band and below will be zereod */\r\n                if (freq <= gfc.highpass1) {\r\n                    highpass_band = Math.max(highpass_band, band);\r\n                }\r\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\r\n                    maxband = Math.max(maxband, band);\r\n                }\r\n            }\r\n            /*\r\n             * compute the *actual* transition band implemented by the polyphase\r\n             * filter\r\n             */\r\n            gfc.highpass1 = highpass_band / 31.0;\r\n            if (maxband == -1) {\r\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\r\n            } else {\r\n                gfc.highpass2 = (maxband + .75) / 31.0;\r\n            }\r\n        }\r\n\r\n        for (var band = 0; band < 32; band++) {\r\n            var fc1, fc2;\r\n            var freq = band / 31.0;\r\n            if (gfc.highpass2 > gfc.highpass1) {\r\n                fc1 = filter_coef((gfc.highpass2 - freq)\r\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\r\n            } else {\r\n                fc1 = 1.0;\r\n            }\r\n            if (gfc.lowpass2 > gfc.lowpass1) {\r\n                fc2 = filter_coef((freq - gfc.lowpass1)\r\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\r\n            } else {\r\n                fc2 = 1.0;\r\n            }\r\n            gfc.amp_filter[band] = (fc1 * fc2);\r\n        }\r\n    }\r\n\r\n    function lame_init_qval(gfp) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        switch (gfp.quality) {\r\n            default:\r\n            case 9: /* no psymodel, no noise shaping */\r\n                gfc.psymodel = 0;\r\n                gfc.noise_shaping = 0;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                gfc.use_best_huffman = 0;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 8:\r\n                gfp.quality = 7;\r\n            //$FALL-THROUGH$\r\n            case 7:\r\n                /*\r\n                 * use psymodel (for short block and m/s switching), but no noise\r\n                 * shapping\r\n                 */\r\n                gfc.psymodel = 1;\r\n                gfc.noise_shaping = 0;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                gfc.use_best_huffman = 0;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 6:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 0;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 5:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 0;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 4:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                gfc.noise_shaping_amp = 0;\r\n                gfc.noise_shaping_stop = 0;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 3:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                gfc.noise_shaping_amp = 1;\r\n                gfc.noise_shaping_stop = 1;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 2:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                if (gfc.substep_shaping == 0)\r\n                    gfc.substep_shaping = 2;\r\n                gfc.noise_shaping_amp = 1;\r\n                gfc.noise_shaping_stop = 1;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                /* inner loop */\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 1:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                if (gfc.substep_shaping == 0)\r\n                    gfc.substep_shaping = 2;\r\n                gfc.noise_shaping_amp = 2;\r\n                gfc.noise_shaping_stop = 1;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                gfc.full_outer_loop = 0;\r\n                break;\r\n\r\n            case 0:\r\n                gfc.psymodel = 1;\r\n                if (gfc.noise_shaping == 0)\r\n                    gfc.noise_shaping = 1;\r\n                if (gfc.substep_shaping == 0)\r\n                    gfc.substep_shaping = 2;\r\n                gfc.noise_shaping_amp = 2;\r\n                gfc.noise_shaping_stop = 1;\r\n                if (gfc.subblock_gain == -1)\r\n                    gfc.subblock_gain = 1;\r\n                gfc.use_best_huffman = 1;\r\n                /*\r\n                 * type 2 disabled because of it slowness, in favor of full outer\r\n                 * loop search\r\n                 */\r\n                gfc.full_outer_loop = 0;\r\n                /*\r\n                 * full outer loop search disabled because of audible distortions it\r\n                 * may generate rh 060629\r\n                 */\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    function lame_init_bitstream(gfp) {\r\n        var gfc = gfp.internal_flags;\r\n        gfp.frameNum = 0;\r\n\r\n        if (gfp.write_id3tag_automatic) {\r\n            id3.id3tag_write_v2(gfp);\r\n        }\r\n        /* initialize histogram data optionally used by frontend */\r\n\r\n        gfc.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\r\n        gfc.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\r\n\r\n        gfc.PeakSample = 0.0;\r\n\r\n        /* Write initial VBR Header to bitstream and init VBR data */\r\n        if (gfp.bWriteVbrTag)\r\n            vbr.InitVbrTag(gfp);\r\n    }\r\n\r\n    /********************************************************************\r\n     * initialize internal params based on data in gf (globalflags struct filled\r\n     * in by calling program)\r\n     *\r\n     * OUTLINE:\r\n     *\r\n     * We first have some complex code to determine bitrate, output samplerate\r\n     * and mode. It is complicated by the fact that we allow the user to set\r\n     * some or all of these parameters, and need to determine best possible\r\n     * values for the rest of them:\r\n     *\r\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\r\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\r\n     * set compression ratio user may have set a bitrate user may have set a\r\n     * output samplerate 4. set some options which depend on output samplerate\r\n     * 5. compute the actual compression ratio 6. set mode based on compression\r\n     * ratio\r\n     *\r\n     * The remaining code is much simpler - it just sets options based on the\r\n     * mode & compression ratio:\r\n     *\r\n     * set allow_diff_short based on mode select lowpass filter based on\r\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\r\n     * VBR modes disable VBR tag if it is not appropriate initialize the\r\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\r\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\r\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\r\n     * frames (based on a lot of data)\r\n     *\r\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\r\n     * code\r\n     *\r\n     * Finally, we set the algorithm flags based on the gfp.quality value\r\n     * lame_init_qval(gfp);\r\n     *\r\n     ********************************************************************/\r\n    this.lame_init_params = function (gfp) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        gfc.Class_ID = 0;\r\n        if (gfc.ATH == null)\r\n            gfc.ATH = new ATH();\r\n        if (gfc.PSY == null)\r\n            gfc.PSY = new PSY();\r\n        if (gfc.rgdata == null)\r\n            gfc.rgdata = new ReplayGain();\r\n\r\n        gfc.channels_in = gfp.num_channels;\r\n        if (gfc.channels_in == 1)\r\n            gfp.mode = MPEGMode.MONO;\r\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\r\n        gfc.mode_ext = Encoder.MPG_MD_MS_LR;\r\n        if (gfp.mode == MPEGMode.MONO)\r\n            gfp.force_ms = false;\r\n        /*\r\n         * don't allow forced mid/side stereo for mono output\r\n         */\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\r\n            && gfp.brate == 0)\r\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_mtrh\r\n            || gfp.VBR == VbrMode.vbr_mt) {\r\n            /* these modes can handle free format condition */\r\n        } else {\r\n            gfp.free_format = false;\r\n            /* mode can't be mixed with free format */\r\n        }\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off && gfp.brate == 0) {\r\n            /* no bitrate or compression ratio specified, use 11.025 */\r\n            if (BitStream.EQ(gfp.compression_ratio, 0))\r\n                gfp.compression_ratio = 11.025;\r\n            /*\r\n             * rate to compress a CD down to exactly 128000 bps\r\n             */\r\n        }\r\n\r\n        /* find bitrate if user specify a compression ratio */\r\n        if (gfp.VBR == VbrMode.vbr_off && gfp.compression_ratio > 0) {\r\n\r\n            if (gfp.out_samplerate == 0)\r\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\r\n            /*\r\n             * round up with a margin of 3 %\r\n             */\r\n\r\n            /*\r\n             * choose a bitrate for the output samplerate which achieves\r\n             * specified compression ratio\r\n             */\r\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\r\n\r\n            /* we need the version for the bitrate table look up */\r\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\r\n\r\n            if (!gfp.free_format) /*\r\n             * for non Free Format find the nearest allowed\r\n             * bitrate\r\n             */\r\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\r\n                    gfp.out_samplerate);\r\n        }\r\n\r\n        if (gfp.out_samplerate != 0) {\r\n            if (gfp.out_samplerate < 16000) {\r\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\r\n                    8);\r\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\r\n                    64);\r\n            } else if (gfp.out_samplerate < 32000) {\r\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\r\n                    8);\r\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\r\n                    160);\r\n            } else {\r\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\r\n                    32);\r\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\r\n                    320);\r\n            }\r\n        }\r\n\r\n        /****************************************************************/\r\n        /* if a filter has not been enabled, see if we should add one: */\r\n        /****************************************************************/\r\n        if (gfp.lowpassfreq == 0) {\r\n            var lowpass = 16000.;\r\n\r\n            switch (gfp.VBR) {\r\n                case VbrMode.vbr_off:\r\n                {\r\n                    var lh = new LowPassHighPass();\r\n                    optimum_bandwidth(lh, gfp.brate);\r\n                    lowpass = lh.lowerlimit;\r\n                    break;\r\n                }\r\n                case VbrMode.vbr_abr:\r\n                {\r\n                    var lh = new LowPassHighPass();\r\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\r\n                    lowpass = lh.lowerlimit;\r\n                    break;\r\n                }\r\n                case VbrMode.vbr_rh:\r\n                {\r\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\r\n                        15600, 14900, 12500, 10000, 3950];\r\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\r\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\r\n                        lowpass = linear_int(a, b, m);\r\n                    } else {\r\n                        lowpass = 19500;\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                {\r\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\r\n                        15500, 14500, 12500, 9500, 3950];\r\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\r\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\r\n                        lowpass = linear_int(a, b, m);\r\n                    } else {\r\n                        lowpass = 19500;\r\n                    }\r\n                }\r\n            }\r\n            if (gfp.mode == MPEGMode.MONO\r\n                && (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr))\r\n                lowpass *= 1.5;\r\n\r\n            gfp.lowpassfreq = lowpass | 0;\r\n        }\r\n\r\n        if (gfp.out_samplerate == 0) {\r\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\r\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\r\n            }\r\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\r\n                gfp.in_samplerate);\r\n        }\r\n\r\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\r\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off) {\r\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\r\n                / (1.e3 * gfp.brate);\r\n        }\r\n        if (gfp.VBR == VbrMode.vbr_abr) {\r\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\r\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\r\n        }\r\n\r\n        /*\r\n         * do not compute ReplayGain values and do not find the peak sample if\r\n         * we can't store them\r\n         */\r\n        if (!gfp.bWriteVbrTag) {\r\n            gfp.findReplayGain = false;\r\n            gfp.decode_on_the_fly = false;\r\n            gfc.findPeakSample = false;\r\n        }\r\n        gfc.findReplayGain = gfp.findReplayGain;\r\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\r\n\r\n        if (gfc.decode_on_the_fly)\r\n            gfc.findPeakSample = true;\r\n\r\n        if (gfc.findReplayGain) {\r\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\r\n                gfp.internal_flags = null;\r\n                return -6;\r\n            }\r\n        }\r\n\r\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\r\n            if (gfc.hip != null) {\r\n                mpglib.hip_decode_exit(gfc.hip);\r\n            }\r\n            gfc.hip = mpglib.hip_decode_init();\r\n        }\r\n\r\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\r\n        /*\r\n         * Number of granules per frame\r\n         */\r\n        gfp.framesize = 576 * gfc.mode_gr;\r\n        gfp.encoder_delay = Encoder.ENCDELAY;\r\n\r\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\r\n\r\n        /**\r\n         * <PRE>\r\n         *  sample freq       bitrate     compression ratio\r\n         *     [kHz]      [kbps/channel]   for 16 bit input\r\n         *     44.1            56               12.6\r\n         *     44.1            64               11.025\r\n         *     44.1            80                8.82\r\n         *     22.05           24               14.7\r\n         *     22.05           32               11.025\r\n         *     22.05           40                8.82\r\n         *     16              16               16.0\r\n         *     16              24               10.667\r\n         * </PRE>\r\n         */\r\n        /**\r\n         * <PRE>\r\n         *  For VBR, take a guess at the compression_ratio.\r\n         *  For example:\r\n         *\r\n         *    VBR_q    compression     like\r\n         *     -        4.4         320 kbps/44 kHz\r\n         *   0...1      5.5         256 kbps/44 kHz\r\n         *     2        7.3         192 kbps/44 kHz\r\n         *     4        8.8         160 kbps/44 kHz\r\n         *     6       11           128 kbps/44 kHz\r\n         *     9       14.7          96 kbps\r\n         *\r\n         *  for lower bitrates, downsample with --resample\r\n         * </PRE>\r\n         */\r\n        switch (gfp.VBR) {\r\n            case VbrMode.vbr_mt:\r\n            case VbrMode.vbr_rh:\r\n            case VbrMode.vbr_mtrh:\r\n            {\r\n                /* numbers are a bit strange, but they determine the lowpass value */\r\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\r\n                    15, 16.5];\r\n                gfp.compression_ratio = cmp[gfp.VBR_q];\r\n            }\r\n                break;\r\n            case VbrMode.vbr_abr:\r\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\r\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\r\n                break;\r\n            default:\r\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\r\n                    / (1.e3 * gfp.brate);\r\n                break;\r\n        }\r\n\r\n        /*\r\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\r\n         * channel). If mode has not been set, then select J-STEREO\r\n         */\r\n        if (gfp.mode == MPEGMode.NOT_SET) {\r\n            gfp.mode = MPEGMode.JOINT_STEREO;\r\n        }\r\n\r\n        /* apply user driven high pass filter */\r\n        if (gfp.highpassfreq > 0) {\r\n            gfc.highpass1 = 2. * gfp.highpassfreq;\r\n\r\n            if (gfp.highpasswidth >= 0)\r\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\r\n            else\r\n            /* 0% above on default */\r\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\r\n\r\n            gfc.highpass1 /= gfp.out_samplerate;\r\n            gfc.highpass2 /= gfp.out_samplerate;\r\n        } else {\r\n            gfc.highpass1 = 0;\r\n            gfc.highpass2 = 0;\r\n        }\r\n        /* apply user driven low pass filter */\r\n        if (gfp.lowpassfreq > 0) {\r\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\r\n            if (gfp.lowpasswidth >= 0) {\r\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\r\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\r\n                    gfc.lowpass1 = 0;\r\n            } else { /* 0% below on default */\r\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\r\n            }\r\n            gfc.lowpass1 /= gfp.out_samplerate;\r\n            gfc.lowpass2 /= gfp.out_samplerate;\r\n        } else {\r\n            gfc.lowpass1 = 0;\r\n            gfc.lowpass2 = 0;\r\n        }\r\n\r\n        /**********************************************************************/\r\n        /* compute info needed for polyphase filter (filter type==0, default) */\r\n        /**********************************************************************/\r\n        lame_init_params_ppflt(gfp);\r\n        /*******************************************************\r\n         * samplerate and bitrate index\r\n         *******************************************************/\r\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\r\n        if (gfc.samplerate_index < 0) {\r\n            gfp.internal_flags = null;\r\n            return -1;\r\n        }\r\n\r\n        if (gfp.VBR == VbrMode.vbr_off) {\r\n            if (gfp.free_format) {\r\n                gfc.bitrate_index = 0;\r\n            } else {\r\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\r\n                    gfp.out_samplerate);\r\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\r\n                    gfp.out_samplerate);\r\n                if (gfc.bitrate_index <= 0) {\r\n                    gfp.internal_flags = null;\r\n                    return -1;\r\n                }\r\n            }\r\n        } else {\r\n            gfc.bitrate_index = 1;\r\n        }\r\n\r\n        /* for CBR, we will write an \"info\" tag. */\r\n\r\n        if (gfp.analysis)\r\n            gfp.bWriteVbrTag = false;\r\n\r\n        /* some file options not allowed if output is: not specified or stdout */\r\n        if (gfc.pinfo != null)\r\n            gfp.bWriteVbrTag = false;\r\n        /* disable Xing VBR tag */\r\n\r\n        bs.init_bit_stream_w(gfc);\r\n\r\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\r\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\r\n        for (var i = 0; i < Encoder.SBMAX_l + 1; i++)\r\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\r\n\r\n        for (var i = 0; i < Encoder.PSFB21 + 1; i++) {\r\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\r\n                / Encoder.PSFB21;\r\n            var start = gfc.scalefac_band.l[21] + i * size;\r\n            gfc.scalefac_band.psfb21[i] = start;\r\n        }\r\n        gfc.scalefac_band.psfb21[Encoder.PSFB21] = 576;\r\n\r\n        for (var i = 0; i < Encoder.SBMAX_s + 1; i++)\r\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\r\n\r\n        for (var i = 0; i < Encoder.PSFB12 + 1; i++) {\r\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\r\n                / Encoder.PSFB12;\r\n            var start = gfc.scalefac_band.s[12] + i * size;\r\n            gfc.scalefac_band.psfb12[i] = start;\r\n        }\r\n        gfc.scalefac_band.psfb12[Encoder.PSFB12] = 192;\r\n        /* determine the mean bitrate for main data */\r\n        if (gfp.version == 1) /* MPEG 1 */\r\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\r\n        else\r\n        /* MPEG 2 */\r\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\r\n\r\n        if (gfp.error_protection)\r\n            gfc.sideinfo_len += 2;\r\n\r\n        lame_init_bitstream(gfp);\r\n\r\n        gfc.Class_ID = LAME_ID;\r\n\r\n        {\r\n            var k;\r\n\r\n            for (k = 0; k < 19; k++)\r\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\r\n\r\n            if (gfp.ATHtype == -1)\r\n                gfp.ATHtype = 4;\r\n        }\r\n\r\n        switch (gfp.VBR) {\r\n\r\n            case VbrMode.vbr_mt:\r\n                gfp.VBR = VbrMode.vbr_mtrh;\r\n            //$FALL-THROUGH$\r\n            case VbrMode.vbr_mtrh:\r\n            {\r\n                if (gfp.useTemporal == null) {\r\n                    gfp.useTemporal = false;\r\n                    /* off by default for this VBR mode */\r\n                }\r\n\r\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\r\n                /**\r\n                 * <PRE>\r\n                 *   The newer VBR code supports only a limited\r\n                 *     subset of quality levels:\r\n                 *     9-5=5 are the same, uses x^3/4 quantization\r\n                 *   4-0=0 are the same  5 plus best huffman divide code\r\n                 * </PRE>\r\n                 */\r\n                if (gfp.quality < 0)\r\n                    gfp.quality = LAME_DEFAULT_QUALITY;\r\n                if (gfp.quality < 5)\r\n                    gfp.quality = 0;\r\n                if (gfp.quality > 5)\r\n                    gfp.quality = 5;\r\n\r\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\r\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\r\n\r\n                /*\r\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\r\n                 */\r\n                if (gfp.experimentalY)\r\n                    gfc.sfb21_extra = false;\r\n                else\r\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\r\n\r\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\r\n                break;\r\n\r\n            }\r\n            case VbrMode.vbr_rh:\r\n            {\r\n\r\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\r\n\r\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\r\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\r\n\r\n                /*\r\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\r\n                 */\r\n                if (gfp.experimentalY)\r\n                    gfc.sfb21_extra = false;\r\n                else\r\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\r\n\r\n                /*\r\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\r\n                 * that by setting a minimum quality level, actually level 6 does\r\n                 * it. down to level 6\r\n                 */\r\n                if (gfp.quality > 6)\r\n                    gfp.quality = 6;\r\n\r\n                if (gfp.quality < 0)\r\n                    gfp.quality = LAME_DEFAULT_QUALITY;\r\n\r\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\r\n                break;\r\n            }\r\n\r\n            default: /* cbr/abr */\r\n            {\r\n                var vbrmode;\r\n\r\n                /*\r\n                 * no sfb21 extra with CBR code\r\n                 */\r\n                gfc.sfb21_extra = false;\r\n\r\n                if (gfp.quality < 0)\r\n                    gfp.quality = LAME_DEFAULT_QUALITY;\r\n\r\n                vbrmode = gfp.VBR;\r\n                if (vbrmode == VbrMode.vbr_off)\r\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\r\n                /* second, set parameters depending on bitrate */\r\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\r\n                gfp.VBR = vbrmode;\r\n\r\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\r\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\r\n\r\n                if (vbrmode == VbrMode.vbr_off) {\r\n                    gfc.iteration_loop = new CBRNewIterationLoop(qu);\r\n                } else {\r\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        /* initialize default values common for all modes */\r\n\r\n        if (gfp.VBR != VbrMode.vbr_off) { /* choose a min/max bitrate for VBR */\r\n            /* if the user didn't specify VBR_max_bitrate: */\r\n            gfc.VBR_min_bitrate = 1;\r\n            /*\r\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\r\n             */\r\n            gfc.VBR_max_bitrate = 14;\r\n            /*\r\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\r\n             */\r\n            if (gfp.out_samplerate < 16000)\r\n                gfc.VBR_max_bitrate = 8;\r\n            /* default: allow 64 kbps (MPEG-2.5) */\r\n            if (gfp.VBR_min_bitrate_kbps != 0) {\r\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\r\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\r\n                    gfp.out_samplerate);\r\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\r\n                    gfp.version, gfp.out_samplerate);\r\n                if (gfc.VBR_min_bitrate < 0)\r\n                    return -1;\r\n            }\r\n            if (gfp.VBR_max_bitrate_kbps != 0) {\r\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\r\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\r\n                    gfp.out_samplerate);\r\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\r\n                    gfp.version, gfp.out_samplerate);\r\n                if (gfc.VBR_max_bitrate < 0)\r\n                    return -1;\r\n            }\r\n            gfp.VBR_min_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\r\n            gfp.VBR_max_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\r\n            gfp.VBR_mean_bitrate_kbps = Math.min(\r\n                Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\r\n                gfp.VBR_mean_bitrate_kbps);\r\n            gfp.VBR_mean_bitrate_kbps = Math.max(\r\n                Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\r\n                gfp.VBR_mean_bitrate_kbps);\r\n        }\r\n\r\n        /* just another daily changing developer switch */\r\n        if (gfp.tune) {\r\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\r\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\r\n        }\r\n\r\n        /* initialize internal qval settings */\r\n        lame_init_qval(gfp);\r\n        /*\r\n         * automatic ATH adjustment on\r\n         */\r\n        if (gfp.athaa_type < 0)\r\n            gfc.ATH.useAdjust = 3;\r\n        else\r\n            gfc.ATH.useAdjust = gfp.athaa_type;\r\n\r\n        /* initialize internal adaptive ATH settings -jd */\r\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\r\n            / -10.0);\r\n\r\n        if (gfp.short_blocks == null) {\r\n            gfp.short_blocks = ShortBlock.short_block_allowed;\r\n        }\r\n\r\n        /*\r\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\r\n         * regular stereo mode unless they are coupled (same type in both\r\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\r\n         * use uncoupled short blocks, so lets turn them off until we decide how\r\n         * to handle this. No other encoders allow uncoupled short blocks, even\r\n         * though it is in the standard.\r\n         */\r\n        /*\r\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\r\n         */\r\n        if (gfp.short_blocks == ShortBlock.short_block_allowed\r\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\r\n            gfp.short_blocks = ShortBlock.short_block_coupled;\r\n        }\r\n\r\n        if (gfp.quant_comp < 0)\r\n            gfp.quant_comp = 1;\r\n        if (gfp.quant_comp_short < 0)\r\n            gfp.quant_comp_short = 0;\r\n\r\n        if (gfp.msfix < 0)\r\n            gfp.msfix = 0;\r\n\r\n        /* select psychoacoustic model */\r\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\r\n\r\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\r\n            gfp.internal_flags.nsPsy.attackthre = PsyModel.NSATTACKTHRE;\r\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\r\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel.NSATTACKTHRE_S;\r\n\r\n\r\n        if (gfp.scale < 0)\r\n            gfp.scale = 1;\r\n\r\n        if (gfp.ATHtype < 0)\r\n            gfp.ATHtype = 4;\r\n\r\n        if (gfp.ATHcurve < 0)\r\n            gfp.ATHcurve = 4;\r\n\r\n        if (gfp.athaa_loudapprox < 0)\r\n            gfp.athaa_loudapprox = 2;\r\n\r\n        if (gfp.interChRatio < 0)\r\n            gfp.interChRatio = 0;\r\n\r\n        if (gfp.useTemporal == null)\r\n            gfp.useTemporal = true;\r\n        /* on by default */\r\n\r\n        /*\r\n         * padding method as described in\r\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\r\n         * Sperschneider\r\n         *\r\n         * note: there is no padding for the very first frame\r\n         *\r\n         * Robert Hegemann 2000-06-22\r\n         */\r\n        gfc.slot_lag = gfc.frac_SpF = 0;\r\n        if (gfp.VBR == VbrMode.vbr_off)\r\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\r\n\r\n        qupvt.iteration_init(gfp);\r\n        psy.psymodel_init(gfp);\r\n        return 0;\r\n    }\r\n\r\n    function update_inbuffer_size(gfc, nsamples) {\r\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\r\n            gfc.in_buffer_0 = new_float(nsamples);\r\n            gfc.in_buffer_1 = new_float(nsamples);\r\n            gfc.in_buffer_nsamples = nsamples;\r\n        }\r\n    }\r\n\r\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\r\n        var gfc = gfp.internal_flags;\r\n        var buffer = new_short_n([2, 1152]);\r\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\r\n\r\n        /*\r\n         * we always add POSTDELAY=288 padding to make sure granule with real\r\n         * data can be complety decoded (because of 50% overlap with next\r\n         * granule\r\n         */\r\n        var end_padding;\r\n        var frames_left;\r\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder.POSTDELAY;\r\n        var mf_needed = calcNeeded(gfp);\r\n\r\n        /* Was flush already called? */\r\n        if (gfc.mf_samples_to_encode < 1) {\r\n            return 0;\r\n        }\r\n        mp3count = 0;\r\n\r\n        if (gfp.in_samplerate != gfp.out_samplerate) {\r\n            /*\r\n             * delay due to resampling; needs to be fixed, if resampling code\r\n             * gets changed\r\n             */\r\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\r\n        }\r\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\r\n        if (end_padding < 576)\r\n            end_padding += gfp.framesize;\r\n        gfp.encoder_padding = end_padding;\r\n\r\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\r\n\r\n        /*\r\n         * send in a frame of 0 padding until all internal sample buffers are\r\n         * flushed\r\n         */\r\n        while (frames_left > 0 && imp3 >= 0) {\r\n            var bunch = mf_needed - gfc.mf_size;\r\n            var frame_num = gfp.frameNum;\r\n\r\n            bunch *= gfp.in_samplerate;\r\n            bunch /= gfp.out_samplerate;\r\n            if (bunch > 1152)\r\n                bunch = 1152;\r\n            if (bunch < 1)\r\n                bunch = 1;\r\n\r\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\r\n\r\n            /* if user specifed buffer size = 0, dont check size */\r\n            if (mp3buffer_size == 0)\r\n                mp3buffer_size_remaining = 0;\r\n\r\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\r\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\r\n\r\n            mp3bufferPos += imp3;\r\n            mp3count += imp3;\r\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\r\n        }\r\n        /*\r\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\r\n         * calling it more than once in a row.\r\n         */\r\n        gfc.mf_samples_to_encode = 0;\r\n\r\n        if (imp3 < 0) {\r\n            /* some type of fatal error */\r\n            return imp3;\r\n        }\r\n\r\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\r\n        /* if user specifed buffer size = 0, dont check size */\r\n        if (mp3buffer_size == 0)\r\n            mp3buffer_size_remaining = 0;\r\n\r\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\r\n        bs.flush_bitstream(gfp);\r\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\r\n            mp3buffer_size_remaining, 1);\r\n        if (imp3 < 0) {\r\n            /* some type of fatal error */\r\n            return imp3;\r\n        }\r\n        mp3bufferPos += imp3;\r\n        mp3count += imp3;\r\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\r\n        /* if user specifed buffer size = 0, dont check size */\r\n        if (mp3buffer_size == 0)\r\n            mp3buffer_size_remaining = 0;\r\n\r\n        if (gfp.write_id3tag_automatic) {\r\n            /* write a id3 tag to the bitstream */\r\n            id3.id3tag_write_v1(gfp);\r\n\r\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\r\n                mp3buffer_size_remaining, 0);\r\n\r\n            if (imp3 < 0) {\r\n                return imp3;\r\n            }\r\n            mp3count += imp3;\r\n        }\r\n        return mp3count;\r\n    };\r\n\r\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\r\n        var gfc = gfp.internal_flags;\r\n        var in_buffer = [null, null];\r\n\r\n        if (gfc.Class_ID != LAME_ID)\r\n            return -3;\r\n\r\n        if (nsamples == 0)\r\n            return 0;\r\n\r\n        update_inbuffer_size(gfc, nsamples);\r\n\r\n        in_buffer[0] = gfc.in_buffer_0;\r\n        in_buffer[1] = gfc.in_buffer_1;\r\n\r\n        /* make a copy of input buffer, changing type to sample_t */\r\n        for (var i = 0; i < nsamples; i++) {\r\n            in_buffer[0][i] = buffer_l[i];\r\n            if (gfc.channels_in > 1)\r\n                in_buffer[1][i] = buffer_r[i];\r\n        }\r\n\r\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\r\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\r\n    }\r\n\r\n    function calcNeeded(gfp) {\r\n        var mf_needed = Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET;\r\n        /*\r\n         * amount needed for FFT\r\n         */\r\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\r\n\r\n        return mf_needed;\r\n    }\r\n\r\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\r\n        var gfc = gfp.internal_flags;\r\n        var mp3size = 0, ret, i, ch, mf_needed;\r\n        var mp3out;\r\n        var mfbuf = [null, null];\r\n        var in_buffer = [null, null];\r\n\r\n        if (gfc.Class_ID != LAME_ID)\r\n            return -3;\r\n\r\n        if (nsamples == 0)\r\n            return 0;\r\n\r\n        /* copy out any tags that may have been written into bitstream */\r\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\r\n        if (mp3out < 0)\r\n            return mp3out;\r\n        /* not enough buffer space */\r\n        mp3bufPos += mp3out;\r\n        mp3size += mp3out;\r\n\r\n        in_buffer[0] = buffer_l;\r\n        in_buffer[1] = buffer_r;\r\n\r\n        /* Apply user defined re-scaling */\r\n\r\n        /* user selected scaling of the samples */\r\n        if (BitStream.NEQ(gfp.scale, 0) && BitStream.NEQ(gfp.scale, 1.0)) {\r\n            for (i = 0; i < nsamples; ++i) {\r\n                in_buffer[0][i] *= gfp.scale;\r\n                if (gfc.channels_out == 2)\r\n                    in_buffer[1][i] *= gfp.scale;\r\n            }\r\n        }\r\n\r\n        /* user selected scaling of the channel 0 (left) samples */\r\n        if (BitStream.NEQ(gfp.scale_left, 0)\r\n            && BitStream.NEQ(gfp.scale_left, 1.0)) {\r\n            for (i = 0; i < nsamples; ++i) {\r\n                in_buffer[0][i] *= gfp.scale_left;\r\n            }\r\n        }\r\n\r\n        /* user selected scaling of the channel 1 (right) samples */\r\n        if (BitStream.NEQ(gfp.scale_right, 0)\r\n            && BitStream.NEQ(gfp.scale_right, 1.0)) {\r\n            for (i = 0; i < nsamples; ++i) {\r\n                in_buffer[1][i] *= gfp.scale_right;\r\n            }\r\n        }\r\n\r\n        /* Downsample to Mono if 2 channels in and 1 channel out */\r\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\r\n            for (i = 0; i < nsamples; ++i) {\r\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\r\n                in_buffer[1][i] = 0.0;\r\n            }\r\n        }\r\n\r\n        mf_needed = calcNeeded(gfp);\r\n\r\n        mfbuf[0] = gfc.mfbuf[0];\r\n        mfbuf[1] = gfc.mfbuf[1];\r\n\r\n        var in_bufferPos = 0;\r\n        while (nsamples > 0) {\r\n            var in_buffer_ptr = [null, null];\r\n            var n_in = 0;\r\n            /* number of input samples processed with fill_buffer */\r\n            var n_out = 0;\r\n            /* number of samples output with fill_buffer */\r\n            /* n_in <> n_out if we are resampling */\r\n\r\n            in_buffer_ptr[0] = in_buffer[0];\r\n            in_buffer_ptr[1] = in_buffer[1];\r\n            /* copy in new samples into mfbuf, with resampling */\r\n            var inOut = new InOut();\r\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\r\n                inOut);\r\n            n_in = inOut.n_in;\r\n            n_out = inOut.n_out;\r\n\r\n            /* compute ReplayGain of resampled input if requested */\r\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\r\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\r\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\r\n                    return -6;\r\n\r\n            /* update in_buffer counters */\r\n            nsamples -= n_in;\r\n            in_bufferPos += n_in;\r\n            if (gfc.channels_out == 2)\r\n                ;// in_bufferPos += n_in;\r\n\r\n            /* update mfbuf[] counters */\r\n            gfc.mf_size += n_out;\r\n\r\n            /*\r\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\r\n             * have to reinitialize it here when that happened.\r\n             */\r\n            if (gfc.mf_samples_to_encode < 1) {\r\n                gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\r\n            }\r\n            gfc.mf_samples_to_encode += n_out;\r\n\r\n            if (gfc.mf_size >= mf_needed) {\r\n                /* encode the frame. */\r\n                /* mp3buf = pointer to current location in buffer */\r\n                /* mp3buf_size = size of original mp3 output buffer */\r\n                /* = 0 if we should not worry about the */\r\n                /* buffer size because calling program is */\r\n                /* to lazy to compute it */\r\n                /* mp3size = size of data written to buffer so far */\r\n                /* mp3buf_size-mp3size = amount of space avalable */\r\n\r\n                var buf_size = mp3buf_size - mp3size;\r\n                if (mp3buf_size == 0)\r\n                    buf_size = 0;\r\n\r\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\r\n                    mp3bufPos, buf_size);\r\n\r\n                if (ret < 0)\r\n                    return ret;\r\n                mp3bufPos += ret;\r\n                mp3size += ret;\r\n\r\n                /* shift out old samples */\r\n                gfc.mf_size -= gfp.framesize;\r\n                gfc.mf_samples_to_encode -= gfp.framesize;\r\n                for (ch = 0; ch < gfc.channels_out; ch++)\r\n                    for (i = 0; i < gfc.mf_size; i++)\r\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\r\n            }\r\n        }\r\n\r\n        return mp3size;\r\n    }\r\n\r\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\r\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\r\n            mp3bufPos, mp3buf_size);\r\n        gfp.frameNum++;\r\n        return ret;\r\n    }\r\n\r\n    function InOut() {\r\n        this.n_in = 0;\r\n        this.n_out = 0;\r\n    }\r\n\r\n\r\n    function NumUsed() {\r\n        this.num_used = 0;\r\n    }\r\n\r\n    /**\r\n     * Greatest common divisor.\r\n     * <p>\r\n     * Joint work of Euclid and M. Hendry\r\n     */\r\n    function gcd(i, j) {\r\n        return j != 0 ? gcd(j, i % j) : i;\r\n    }\r\n\r\n    /**\r\n     * Resampling via FIR filter, blackman window.\r\n     */\r\n    function blackman(x, fcn, l) {\r\n        /*\r\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\r\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\r\n         */\r\n        var wcn = (Math.PI * fcn);\r\n\r\n        x /= l;\r\n        if (x < 0)\r\n            x = 0;\r\n        if (x > 1)\r\n            x = 1;\r\n        var x2 = x - .5;\r\n\r\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\r\n        if (Math.abs(x2) < 1e-9)\r\n            return (wcn / Math.PI);\r\n        else\r\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\r\n    }\r\n\r\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\r\n        var gfc = gfp.internal_flags;\r\n        var i, j = 0, k;\r\n        /* number of convolution functions to pre-compute */\r\n        var bpc = gfp.out_samplerate\r\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\r\n        if (bpc > LameInternalFlags.BPC)\r\n            bpc = LameInternalFlags.BPC;\r\n\r\n        var intratio = (Math.abs(gfc.resample_ratio\r\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\r\n        var fcn = 1.00 / gfc.resample_ratio;\r\n        if (fcn > 1.00)\r\n            fcn = 1.00;\r\n        var filter_l = 31;\r\n        if (0 == filter_l % 2)\r\n            --filter_l;\r\n        /* must be odd */\r\n        filter_l += intratio;\r\n        /* unless resample_ratio=int, it must be even */\r\n\r\n        var BLACKSIZE = filter_l + 1;\r\n        /* size of data needed for FIR */\r\n\r\n        if (gfc.fill_buffer_resample_init == 0) {\r\n            gfc.inbuf_old[0] = new_float(BLACKSIZE);\r\n            gfc.inbuf_old[1] = new_float(BLACKSIZE);\r\n            for (i = 0; i <= 2 * bpc; ++i)\r\n                gfc.blackfilt[i] = new_float(BLACKSIZE);\r\n\r\n            gfc.itime[0] = 0;\r\n            gfc.itime[1] = 0;\r\n\r\n            /* precompute blackman filter coefficients */\r\n            for (j = 0; j <= 2 * bpc; j++) {\r\n                var sum = 0.;\r\n                var offset = (j - bpc) / (2. * bpc);\r\n                for (i = 0; i <= filter_l; i++)\r\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\r\n                        filter_l);\r\n                for (i = 0; i <= filter_l; i++)\r\n                    gfc.blackfilt[j][i] /= sum;\r\n            }\r\n            gfc.fill_buffer_resample_init = 1;\r\n        }\r\n\r\n        var inbuf_old = gfc.inbuf_old[ch];\r\n\r\n        /* time of j'th element in inbuf = itime + j/ifreq; */\r\n        /* time of k'th element in outbuf = j/ofreq */\r\n        for (k = 0; k < desired_len; k++) {\r\n            var time0;\r\n            var joff;\r\n\r\n            time0 = k * gfc.resample_ratio;\r\n            /* time of k'th output sample */\r\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\r\n\r\n            /* check if we need more input data */\r\n            if ((filter_l + j - filter_l / 2) >= len)\r\n                break;\r\n\r\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\r\n            /* but we want a window centered at time0. */\r\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\r\n\r\n            /* find the closest precomputed window for this offset: */\r\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\r\n            var xvalue = 0.;\r\n            for (i = 0; i <= filter_l; ++i) {\r\n                var j2 = i + j - filter_l / 2;\r\n                var y;\r\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\r\n                + j2];\r\n                xvalue += y * gfc.blackfilt[joff][i];\r\n            }\r\n            outbuf[outbufPos + k] = xvalue;\r\n        }\r\n\r\n        /* k = number of samples added to outbuf */\r\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\r\n\r\n        /* how many samples of input data were used: */\r\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\r\n\r\n        /*\r\n         * adjust our input time counter. Incriment by the number of samples\r\n         * used, then normalize so that next output sample is at time 0, next\r\n         * input buffer is at time itime[ch]\r\n         */\r\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\r\n\r\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\r\n        if (num_used.num_used >= BLACKSIZE) {\r\n            for (i = 0; i < BLACKSIZE; i++)\r\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\r\n                - BLACKSIZE];\r\n        } else {\r\n            /* shift in num_used.num_used samples into inbuf_old */\r\n            var n_shift = BLACKSIZE - num_used.num_used;\r\n            /*\r\n             * number of samples to\r\n             * shift\r\n             */\r\n\r\n            /*\r\n             * shift n_shift samples by num_used.num_used, to make room for the\r\n             * num_used new samples\r\n             */\r\n            for (i = 0; i < n_shift; ++i)\r\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\r\n\r\n            /* shift in the num_used.num_used samples */\r\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\r\n                inbuf_old[i] = inbuf[in_bufferPos + j];\r\n\r\n        }\r\n        return k;\r\n        /* return the number samples created at the new samplerate */\r\n    }\r\n\r\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\r\n        var gfc = gfp.internal_flags;\r\n\r\n        /* copy in new samples into mfbuf, with resampling if necessary */\r\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\r\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\r\n                var numUsed = new NumUsed();\r\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\r\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\r\n                    numUsed, ch);\r\n                io.n_in = numUsed.num_used;\r\n            }\r\n        } else {\r\n            io.n_out = Math.min(gfp.framesize, nsamples);\r\n            io.n_in = io.n_out;\r\n            for (var i = 0; i < io.n_out; ++i) {\r\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\r\n                if (gfc.channels_out == 2)\r\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction GetAudio() {\r\n    var parse;\r\n    var mpg;\r\n\r\n    this.setModules = function (parse2, mpg2) {\r\n        parse = parse2;\r\n        mpg = mpg2;\r\n    }\r\n}\r\n\r\n\r\nfunction Parse() {\r\n    var ver;\r\n    var id3;\r\n    var pre;\r\n\r\n    this.setModules = function (ver2, id32, pre2) {\r\n        ver = ver2;\r\n        id3 = id32;\r\n        pre = pre2;\r\n    }\r\n}\r\n\r\nfunction MPGLib() {\r\n}\r\n\r\nfunction ID3Tag() {\r\n    var bits;\r\n    var ver;\r\n\r\n    this.setModules = function (_bits, _ver) {\r\n        bits = _bits;\r\n        ver = _ver;\r\n    }\r\n}\r\n\r\nfunction Mp3Encoder(channels, samplerate, kbps) {\r\n    if (arguments.length != 3) {\r\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\r\n        channels = 1;\r\n        samplerate = 44100;\r\n        kbps = 128;\r\n    }\r\n    var lame = new Lame();\r\n    var gaud = new GetAudio();\r\n    var ga = new GainAnalysis();\r\n    var bs = new BitStream();\r\n    var p = new Presets();\r\n    var qupvt = new QuantizePVT();\r\n    var qu = new Quantize();\r\n    var vbr = new VBRTag();\r\n    var ver = new Version();\r\n    var id3 = new ID3Tag();\r\n    var rv = new Reservoir();\r\n    var tak = new Takehiro();\r\n    var parse = new Parse();\r\n    var mpg = new MPGLib();\r\n\r\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\r\n    bs.setModules(ga, mpg, ver, vbr);\r\n    id3.setModules(bs, ver);\r\n    p.setModules(lame);\r\n    qu.setModules(bs, rv, qupvt, tak);\r\n    qupvt.setModules(tak, rv, lame.enc.psy);\r\n    rv.setModules(bs);\r\n    tak.setModules(qupvt);\r\n    vbr.setModules(lame, bs, ver);\r\n    gaud.setModules(parse, mpg);\r\n    parse.setModules(ver, id3, p);\r\n\r\n    var gfp = lame.lame_init();\r\n\r\n    gfp.num_channels = channels;\r\n    gfp.in_samplerate = samplerate;\r\n    gfp.out_samplerate = samplerate;//fix by xiangyuecn 2018-12-6 01:48:12 64kbps以下可能无声音，手动控制输出码率\r\n    gfp.brate = kbps;\r\n    gfp.mode = MPEGMode.STEREO;\r\n    gfp.quality = 3;\r\n    gfp.bWriteVbrTag = false;\r\n    gfp.disable_reservoir = true;\r\n    gfp.write_id3tag_automatic = false;\r\n\r\n    var retcode = lame.lame_init_params(gfp);\r\n    var maxSamples = 1152;\r\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\r\n    var mp3buf = new_byte(mp3buf_size);\r\n\r\n    this.encodeBuffer = function (left, right) {\r\n        if (channels == 1) {\r\n            right = left;\r\n        }\r\n        if (left.length > maxSamples) {\r\n            maxSamples = left.length;\r\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\r\n            mp3buf = new_byte(mp3buf_size);\r\n        }\r\n\r\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\r\n        return new Int8Array(mp3buf.subarray(0, _sz));\r\n    };\r\n\r\n    this.flush = function () {\r\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\r\n        return new Int8Array(mp3buf.subarray(0, _sz));\r\n    };\r\n}\r\n\r\nfunction WavHeader() {\r\n    this.dataOffset = 0;\r\n    this.dataLen = 0;\r\n    this.channels = 0;\r\n    this.sampleRate = 0;\r\n}\r\n\r\nfunction fourccToInt(fourcc) {\r\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\r\n}\r\n\r\nWavHeader.RIFF = fourccToInt(\"RIFF\");\r\nWavHeader.WAVE = fourccToInt(\"WAVE\");\r\nWavHeader.fmt_ = fourccToInt(\"fmt \");\r\nWavHeader.data = fourccToInt(\"data\");\r\n\r\nWavHeader.readHeader = function (dataView) {\r\n    var w = new WavHeader();\r\n\r\n    var header = dataView.getUint32(0, false);\r\n    if (WavHeader.RIFF != header) {\r\n        return;\r\n    }\r\n    var fileLen = dataView.getUint32(4, true);\r\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\r\n        return;\r\n    }\r\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\r\n        return;\r\n    }\r\n    var fmtLen = dataView.getUint32(16, true);\r\n    var pos = 16 + 4;\r\n    switch (fmtLen) {\r\n        case 16:\r\n        case 18:\r\n            w.channels = dataView.getUint16(pos + 2, true);\r\n            w.sampleRate = dataView.getUint32(pos + 4, true);\r\n            break;\r\n        default:\r\n            throw 'extended fmt chunk not implemented';\r\n    }\r\n    pos += fmtLen;\r\n    var data = WavHeader.data;\r\n    var len = 0;\r\n    while (data != header) {\r\n        header = dataView.getUint32(pos, false);\r\n        len = dataView.getUint32(pos + 4, true);\r\n        if (data == header) {\r\n            break;\r\n        }\r\n        pos += (len + 8);\r\n    }\r\n    w.dataLen = len;\r\n    w.dataOffset = pos + 8;\r\n    return w;\r\n};\r\n\r\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\r\n//testFullLength();\r\nlamejs.Mp3Encoder = Mp3Encoder;\r\nlamejs.WavHeader = WavHeader;\r\n}\r\n//fs=require('fs');\r\nlamejs();\r\n\r\n\r\nRecorder.lamejs=lamejs;\r\n\r\n//end3 ****结束copy lamejs*****\r\n})();","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $lastIndexOf = require('../internals/array-last-index-of');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.lastIndexOf` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof\n// eslint-disable-next-line no-unused-vars -- required for `.length`\nexportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {\n  return $lastIndexOf.apply(aTypedArray(this), arguments);\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('audio',{attrs:{\"id\":\"audio\"}}),_c('div',{staticClass:\"iconfont icon-sound\"}),_c('el-progress',{attrs:{\"show-text\":false,\"stroke-width\":5,\"percentage\":_vm.Recordingtage,\"color\":\"#2E70ED\"}}),_c('div',{staticClass:\"time-text\"},[_vm._v(_vm._s(_vm.Recordingtime))]),_c('el-button',{staticClass:\"record-btn\"}),(!_vm.bengin)?_c('button',{on:{\"click\":_vm.startRecording}},[_vm._v(\"开始录音\")]):_vm._e(),(_vm.bengin)?_c('button',{on:{\"click\":_vm.endRecording}},[_vm._v(\"结束录音\")]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <audio id=\"audio\"></audio>\r\n    <div class=\"iconfont icon-sound\"></div>\r\n    <el-progress :show-text=\"false\" :stroke-width=\"5\" :percentage=\"Recordingtage\" color=\"#2E70ED\"></el-progress>\r\n    <div class=\"time-text\">{{Recordingtime}}</div>\r\n    <el-button class=\"record-btn\" ></el-button>\r\n    <button @click=\"startRecording\" v-if=\"!bengin\">开始录音</button>\r\n    <button @click=\"endRecording\" v-if=\"bengin\">结束录音</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import '@/assets/js/recorder.mp3.min';\r\n// import '../js/luyin'\r\n\r\n// import Recorder from \"recorder-js\";    // 引入录音插件\r\n// const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n// const recorder = new Recorder(audioContext, {\r\n//   // An array of 255 Numbers\r\n//   // You can use this to visualize the audio stream\r\n//   // If you use react, check out react-wave-stream\r\n//   onAnalysed: data => {\r\n//     console.log(\"recorder data\",data, 321)\r\n//   }\r\n// });\r\n\r\n// console.log(recorder);\r\nimport \"@/assets/recordermaster/src/recorder-core.js\";\r\nimport \"@/assets/recordermaster/src/extensions/waveview.js\";\r\nimport \"@/assets/recordermaster/src/extensions/jquery.js\";\r\nimport \"@/assets/recordermaster/src/engine/mp3-engine.js\";\r\nimport \"@/assets/recordermaster/src/engine/mp3.js\";\r\n\r\nexport default {\r\n  name: \"recorderDemo\",\r\n  data() {\r\n    return {\r\n      bengin: false,\r\n      Recordingtime: \"00\",\r\n      Recordingtage: \"30\",\r\n      Recordingnum: \"\"\r\n    };\r\n  },\r\n  created() {},\r\n  mounted(){\r\n    // let type=\"mp3\";\r\n    // let engines=['mp3','mp3-engine'];\r\n    // console.log(type);\r\n\t\t// if(!window.Recorder.prototype.mp3){\r\n\t\t// \tconsole.log(\"正在加载mp3编码器...\");\r\n\t\t// \tlet i=-1;\r\n\t\t// \tlet load=function(){\r\n\t\t// \t\ti++;\r\n\t\t// \t\tif(i>=engines.length){\r\n\t\t// \t\t\tconsole.log(\"mp3编码器已准备好\");\r\n\t\t// \t\t\treturn;\r\n\t\t// \t\t}\r\n\t\t// \t\tlet head=document.querySelector(\"head\");\r\n\t\t// \t\tlet elem=document.createElement(\"script\");\r\n\t\t// \t\telem.setAttribute(\"type\",\"text/javascript\");\r\n\t\t// \t\telem.setAttribute(\"src\",\"src/engine/\"+engines[i]+\".js\");\r\n\t\t// \t\telem.onload=function(){\r\n\t\t// \t\t\tload();\r\n    //     };\r\n\t\t// \t\thead.appendChild(elem);\r\n\t\t// \t};\r\n\t\t// \tload();\r\n\t\t// }\r\n  },\r\n  methods: {\r\n    startRecording() {\r\n      this.bengin = true;\r\n      recopen();\r\n    },\r\n    endRecording() {\r\n      this.bengin = false;\r\n      recstop();\r\n    }\r\n  }\r\n};\r\n\r\nvar rec;\r\n// var r = null;\r\nvar time = 0;\r\n// var timeInterval = null;\r\nconsole.log(time);\r\n\r\nfunction recopen(){  //打开录音\r\n\t// var type=$(\"[name=type]:checked\").val();\r\n\t// var bit=+$(\".bit\").val();\r\n  // var sample=+$(\".sample\").val();\r\n  var type = \"mp3\"; // 类型\r\n  var bit = 16; // kbps mp3、wav取值8位16位\r\n  var sample = 16000; // mp3标准值，wav任意\r\n\r\n\t// var wave,waveSet=$(\".recwaveSet\")[0].checked;\r\n\trec=window.Recorder({\r\n    type:type,\r\n    bitRate:bit,\r\n    sampleRate:sample,\r\n    onProcess:function(buffers,level,time,sampleRate){\r\n      console.log('成功参数1：', buffers);\r\n      console.log('成功参数1：', level);\r\n      console.log('成功参数1：', time);\r\n      console.log('成功参数1：', sampleRate);\r\n      \r\n\t\t\t// $(\".recpowerx\").css(\"width\",level+\"%\");\r\n\t\t\t// $(\".recpowert\").html(time+\"/\"+level);\r\n\t\t\t\r\n\t\t\t// waveSet && wave.input(buffers[buffers.length-1],level,sampleRate);\r\n\t\t}\r\n\t});\r\n\trec.open(\r\n\t\tfunction(){\r\n\t\t\tconsole.log(\"已打开:\"+type+\" \"+bit+\"kbps\");\r\n\t\t\t\r\n\t\t\t// wave=Recorder.WaveView({elem:\".recwave\"});\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){  //正常打开录音后开始录音\r\n\t\t\t\trecstart();\r\n\t\t\t},200)\r\n\t\t},\r\n\t\tfunction(e,isUserNotAllow){\r\n\t\t\tconsole.log((isUserNotAllow?\"UserNotAllow，\":\"\")+\"打开失败：\"+e);\r\n\t\t}\r\n\t);\r\n}\r\n\r\nfunction recstop(batCall){\r\n\tconsole.log('batCall:', batCall);\r\n\tif(rec){\r\n\t\tif(!batCall){\r\n\t\t\tconsole.log(\"正在编码\"+rec.set.type+\"...\");\r\n\t\t}\r\n\t\trec.stop(\r\n\t\tfunction(blob,time){\r\n      console.log('blob:=======', blob);\r\n\t\t\tconsole.log('time:=======', time);\r\n\t\t\tconsole.log('l录制完成')\r\n\t\t},function(s){\r\n\t\t\tconsole.log(\"失败：\"+s);\r\n\t\t\tbatCall&&batCall();\r\n\t\t});\r\n\t}\r\n\tsetTimeout(function(){\r\n\t\trecclose()\r\n\t},200)\r\n}\r\n\r\n\r\nfunction recstart() {\r\n  if (rec) {\r\n    rec.start();\r\n    console.log(\"录制中...\");\r\n  }\r\n}\r\nfunction recclose() { // 关闭网页录音功能\r\n\tif (rec) {\r\n\t\trec.close(function() {\r\n\t\t\tconsole.log(\"已关闭\");// 控制台提示已关闭\r\n\t\t});\r\n\t}\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./recorderDemo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./recorderDemo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./recorderDemo.vue?vue&type=template&id=dfd157aa&scoped=true&\"\nimport script from \"./recorderDemo.vue?vue&type=script&lang=js&\"\nexport * from \"./recorderDemo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"dfd157aa\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $findIndex = require('../internals/array-iteration').findIndex;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.findIndex` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex\nexportTypedArrayMethod('findIndex', function findIndex(predicate /* , thisArg */) {\n  return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toOffset = require('../internals/to-offset');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  new Int8Array(1).set({});\n});\n\n// `%TypedArray%.prototype.set` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\nexportTypedArrayMethod('set', function set(arrayLike /* , offset */) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var length = this.length;\n  var src = toObject(arrayLike);\n  var len = lengthOfArrayLike(src);\n  var index = 0;\n  if (len + offset > length) throw RangeError('Wrong length');\n  while (index < len) this[offset + index] = src[index++];\n}, FORCED);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $map = require('../internals/array-iteration').map;\nvar typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.map` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map\nexportTypedArrayMethod('map', function map(mapfn /* , thisArg */) {\n  return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {\n    return new (typedArraySpeciesConstructor(O))(length);\n  });\n});\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar getMethod = require('../internals/get-method');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);\n      return matcher ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Float64Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Float64', function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar enforceInternalState = require('../internals/internal-state').enforce;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\n// TODO: Use only propper RegExpIdentifierName\nvar IS_NCG = /^\\?<[^\\s\\d!#%&*+<=>@^][^\\s!#%&*+<=>@^]*>/;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar BASE_FORCED = DESCRIPTORS &&\n  (!CORRECT_NEW || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {\n    re2[MATCH] = false;\n    // RegExp constructor can alter flags and IsRegExp works correct with @@match\n    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n  }));\n\nvar handleDotAll = function (string) {\n  var length = string.length;\n  var index = 0;\n  var result = '';\n  var brackets = false;\n  var chr;\n  for (; index <= length; index++) {\n    chr = string.charAt(index);\n    if (chr === '\\\\') {\n      result += chr + string.charAt(++index);\n      continue;\n    }\n    if (!brackets && chr === '.') {\n      result += '[\\\\s\\\\S]';\n    } else {\n      if (chr === '[') {\n        brackets = true;\n      } else if (chr === ']') {\n        brackets = false;\n      } result += chr;\n    }\n  } return result;\n};\n\nvar handleNCG = function (string) {\n  var length = string.length;\n  var index = 0;\n  var result = '';\n  var named = [];\n  var names = {};\n  var brackets = false;\n  var ncg = false;\n  var groupid = 0;\n  var groupname = '';\n  var chr;\n  for (; index <= length; index++) {\n    chr = string.charAt(index);\n    if (chr === '\\\\') {\n      chr = chr + string.charAt(++index);\n    } else if (chr === ']') {\n      brackets = false;\n    } else if (!brackets) switch (true) {\n      case chr === '[':\n        brackets = true;\n        break;\n      case chr === '(':\n        if (IS_NCG.test(string.slice(index + 1))) {\n          index += 2;\n          ncg = true;\n        }\n        result += chr;\n        groupid++;\n        continue;\n      case chr === '>' && ncg:\n        if (groupname === '' || hasOwn(names, groupname)) {\n          throw new SyntaxError('Invalid capture group name');\n        }\n        names[groupname] = true;\n        named.push([groupname, groupid]);\n        ncg = false;\n        groupname = '';\n        continue;\n    }\n    if (ncg) groupname += chr;\n    else result += chr;\n  } return [result, named];\n};\n\n// `RegExp` constructor\n// https://tc39.es/ecma262/#sec-regexp-constructor\nif (isForced('RegExp', BASE_FORCED)) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var groups = [];\n    var rawPattern = pattern;\n    var rawFlags, dotAll, sticky, handled, result, state;\n\n    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {\n      return pattern;\n    }\n\n    if (patternIsRegExp || pattern instanceof RegExpWrapper) {\n      pattern = pattern.source;\n      if (flagsAreUndefined) flags = 'flags' in rawPattern ? rawPattern.flags : getFlags.call(rawPattern);\n    }\n\n    pattern = pattern === undefined ? '' : toString(pattern);\n    flags = flags === undefined ? '' : toString(flags);\n    rawPattern = pattern;\n\n    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {\n      dotAll = !!flags && flags.indexOf('s') > -1;\n      if (dotAll) flags = flags.replace(/s/g, '');\n    }\n\n    rawFlags = flags;\n\n    if (UNSUPPORTED_Y && 'sticky' in re1) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    if (UNSUPPORTED_NCG) {\n      handled = handleNCG(pattern);\n      pattern = handled[0];\n      groups = handled[1];\n    }\n\n    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n\n    if (dotAll || sticky || groups.length) {\n      state = enforceInternalState(result);\n      if (dotAll) {\n        state.dotAll = true;\n        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);\n      }\n      if (sticky) state.sticky = true;\n      if (groups.length) state.groups = groups;\n    }\n\n    if (pattern !== rawPattern) try {\n      // fails in old engines, but we have no alternatives for unsupported regex syntax\n      createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);\n    } catch (error) { /* empty */ }\n\n    return result;\n  };\n\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n\n  for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {\n    proxy(keys[index++]);\n  }\n\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.es/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort.call(array) : nativeSort.call(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) items.push(array[index]);\n    }\n\n    items = internalSort(items, getSortCompare(comparefn));\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) delete array[index++];\n\n    return array;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getMethod = require('../internals/get-method');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n      return replacer\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(toString(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (string, replaceValue) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (\n        typeof replaceValue === 'string' &&\n        replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1 &&\n        replaceValue.indexOf('$<') === -1\n      ) {\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var functionalReplace = isCallable(replaceValue);\n      if (!functionalReplace) replaceValue = toString(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = toString(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = toString(result[0]);\n        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = toString(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectDefinePropertyModule = require('../internals/object-define-property');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  return Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call({ dotAll: true, sticky: true }) !== 'sy';\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) objectDefinePropertyModule.f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $join = [].join;\n\n// `%TypedArray%.prototype.join` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join\n// eslint-disable-next-line no-unused-vars -- required for `.length`\nexportTypedArrayMethod('join', function join(separator) {\n  return $join.apply(aTypedArray(this), arguments);\n});\n","'use strict';\nvar global = require('../internals/global');\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar ArrayIterators = require('../modules/es.array.iterator');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar Uint8Array = global.Uint8Array;\nvar arrayValues = ArrayIterators.values;\nvar arrayKeys = ArrayIterators.keys;\nvar arrayEntries = ArrayIterators.entries;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar nativeTypedArrayIterator = Uint8Array && Uint8Array.prototype[ITERATOR];\n\nvar PROPER_ARRAY_VALUES_NAME = !!nativeTypedArrayIterator && nativeTypedArrayIterator.name === 'values';\n\nvar typedArrayValues = function values() {\n  return arrayValues.call(aTypedArray(this));\n};\n\n// `%TypedArray%.prototype.entries` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries\nexportTypedArrayMethod('entries', function entries() {\n  return arrayEntries.call(aTypedArray(this));\n});\n// `%TypedArray%.prototype.keys` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys\nexportTypedArrayMethod('keys', function keys() {\n  return arrayKeys.call(aTypedArray(this));\n});\n// `%TypedArray%.prototype.values` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values\nexportTypedArrayMethod('values', typedArrayValues, PROPER_FUNCTION_NAME && !PROPER_ARRAY_VALUES_NAME);\n// `%TypedArray%.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator\nexportTypedArrayMethod(ITERATOR, typedArrayValues, PROPER_FUNCTION_NAME && !PROPER_ARRAY_VALUES_NAME);\n","'use strict';\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\nvar FunctionName = require('../internals/function-name');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefineAll = require('../internals/redefine-all');\nvar fails = require('../internals/fails');\nvar anInstance = require('../internals/an-instance');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toIndex = require('../internals/to-index');\nvar IEEE754 = require('../internals/ieee754');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar arrayFill = require('../internals/array-fill');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length';\nvar WRONG_INDEX = 'Wrong index';\nvar NativeArrayBuffer = global[ARRAY_BUFFER];\nvar $ArrayBuffer = NativeArrayBuffer;\nvar $DataView = global[DATA_VIEW];\nvar $DataViewPrototype = $DataView && $DataView[PROTOTYPE];\nvar ObjectPrototype = Object.prototype;\nvar RangeError = global.RangeError;\n\nvar packIEEE754 = IEEE754.pack;\nvar unpackIEEE754 = IEEE754.unpack;\n\nvar packInt8 = function (number) {\n  return [number & 0xFF];\n};\n\nvar packInt16 = function (number) {\n  return [number & 0xFF, number >> 8 & 0xFF];\n};\n\nvar packInt32 = function (number) {\n  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];\n};\n\nvar unpackInt32 = function (buffer) {\n  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];\n};\n\nvar packFloat32 = function (number) {\n  return packIEEE754(number, 23, 4);\n};\n\nvar packFloat64 = function (number) {\n  return packIEEE754(number, 52, 8);\n};\n\nvar addGetter = function (Constructor, key) {\n  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });\n};\n\nvar get = function (view, count, index, isLittleEndian) {\n  var intIndex = toIndex(index);\n  var store = getInternalState(view);\n  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);\n  var bytes = getInternalState(store.buffer).bytes;\n  var start = intIndex + store.byteOffset;\n  var pack = bytes.slice(start, start + count);\n  return isLittleEndian ? pack : pack.reverse();\n};\n\nvar set = function (view, count, index, conversion, value, isLittleEndian) {\n  var intIndex = toIndex(index);\n  var store = getInternalState(view);\n  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);\n  var bytes = getInternalState(store.buffer).bytes;\n  var start = intIndex + store.byteOffset;\n  var pack = conversion(+value);\n  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];\n};\n\nif (!NATIVE_ARRAY_BUFFER) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    setInternalState(this, {\n      bytes: arrayFill.call(new Array(byteLength), 0),\n      byteLength: byteLength\n    });\n    if (!DESCRIPTORS) this.byteLength = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = getInternalState(buffer).byteLength;\n    var offset = toIntegerOrInfinity(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    setInternalState(this, {\n      buffer: buffer,\n      byteLength: byteLength,\n      byteOffset: offset\n    });\n    if (!DESCRIPTORS) {\n      this.buffer = buffer;\n      this.byteLength = byteLength;\n      this.byteOffset = offset;\n    }\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, 'byteLength');\n    addGetter($DataView, 'buffer');\n    addGetter($DataView, 'byteLength');\n    addGetter($DataView, 'byteOffset');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packInt8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packInt8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);\n    }\n  });\n} else {\n  var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME && NativeArrayBuffer.name !== ARRAY_BUFFER;\n  /* eslint-disable no-new -- required for testing */\n  if (!fails(function () {\n    NativeArrayBuffer(1);\n  }) || !fails(function () {\n    new NativeArrayBuffer(-1);\n  }) || fails(function () {\n    new NativeArrayBuffer();\n    new NativeArrayBuffer(1.5);\n    new NativeArrayBuffer(NaN);\n    return INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;\n  })) {\n  /* eslint-enable no-new -- required for testing */\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new NativeArrayBuffer(toIndex(length));\n    };\n    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];\n    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) {\n        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);\n      }\n    }\n    ArrayBufferPrototype.constructor = $ArrayBuffer;\n  } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {\n    createNonEnumerableProperty(NativeArrayBuffer, 'name', ARRAY_BUFFER);\n  }\n\n  // WebKit bug - the same parent prototype for typed arrays and data view\n  if (setPrototypeOf && getPrototypeOf($DataViewPrototype) !== ObjectPrototype) {\n    setPrototypeOf($DataViewPrototype, ObjectPrototype);\n  }\n\n  // iOS Safari 7.x bug\n  var testView = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataViewPrototype.setInt8;\n  testView.setInt8(0, 2147483648);\n  testView.setInt8(1, 2147483649);\n  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataViewPrototype, {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, { unsafe: true });\n}\n\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\n\nmodule.exports = {\n  ArrayBuffer: $ArrayBuffer,\n  DataView: $DataView\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $some = require('../internals/array-iteration').some;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.some` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some\nexportTypedArrayMethod('some', function some(callbackfn /* , thisArg */) {\n  return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","var $ = require('../internals/export');\n\nvar log = Math.log;\nvar LOG10E = Math.LOG10E;\n\n// `Math.log10` method\n// https://tc39.es/ecma262/#sec-math.log10\n$({ target: 'Math', stat: true }, {\n  log10: function log10(x) {\n    return log(x) * LOG10E;\n  }\n});\n","/*eslint-disable*/\r\n/*! jQuery v1.9.1 | (c) 2005, 2012 jQuery Foundation, Inc. | jquery.org/license\r\n//@ sourceMappingURL=jquery.min.map\r\n*/(function(e,t){var n,r,i=typeof t,o=e.document,a=e.location,s=e.jQuery,u=e.$,l={},c=[],p=\"1.9.1\",f=c.concat,d=c.push,h=c.slice,g=c.indexOf,m=l.toString,y=l.hasOwnProperty,v=p.trim,b=function(e,t){return new b.fn.init(e,t,r)},x=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,w=/\\S+/g,T=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,N=/^(?:(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,C=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,k=/^[\\],:{}\\s]*$/,E=/(?:^|:|,)(?:\\s*\\[)+/g,S=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,A=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,j=/^-ms-/,D=/-([\\da-z])/gi,L=function(e,t){return t.toUpperCase()},H=function(e){(o.addEventListener||\"load\"===e.type||\"complete\"===o.readyState)&&(q(),b.ready())},q=function(){o.addEventListener?(o.removeEventListener(\"DOMContentLoaded\",H,!1),e.removeEventListener(\"load\",H,!1)):(o.detachEvent(\"onreadystatechange\",H),e.detachEvent(\"onload\",H))};b.fn=b.prototype={jquery:p,constructor:b,init:function(e,n,r){var i,a;if(!e)return this;if(\"string\"==typeof e){if(i=\"<\"===e.charAt(0)&&\">\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof b?n[0]:n,b.merge(this,b.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:o,!0)),C.test(i[1])&&b.isPlainObject(n))for(i in n)b.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(a=o.getElementById(i[2]),a&&a.parentNode){if(a.id!==i[2])return r.find(e);this.length=1,this[0]=a}return this.context=o,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):b.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),b.makeArray(e,this))},selector:\"\",length:0,size:function(){return this.length},toArray:function(){return h.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=b.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return b.each(this,e,t)},ready:function(e){return b.ready.promise().done(e),this},slice:function(){return this.pushStack(h.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(b.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:d,sort:[].sort,splice:[].splice},b.fn.init.prototype=b.fn,b.extend=b.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},u=1,l=arguments.length,c=!1;for(\"boolean\"==typeof s&&(c=s,s=arguments[1]||{},u=2),\"object\"==typeof s||b.isFunction(s)||(s={}),l===u&&(s=this,--u);l>u;u++)if(null!=(o=arguments[u]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(b.isPlainObject(r)||(n=b.isArray(r)))?(n?(n=!1,a=e&&b.isArray(e)?e:[]):a=e&&b.isPlainObject(e)?e:{},s[i]=b.extend(c,a,r)):r!==t&&(s[i]=r));return s},b.extend({noConflict:function(t){return e.$===b&&(e.$=u),t&&e.jQuery===b&&(e.jQuery=s),b},isReady:!1,readyWait:1,holdReady:function(e){e?b.readyWait++:b.ready(!0)},ready:function(e){if(e===!0?!--b.readyWait:!b.isReady){if(!o.body)return setTimeout(b.ready);b.isReady=!0,e!==!0&&--b.readyWait>0||(n.resolveWith(o,[b]),b.fn.trigger&&b(o).trigger(\"ready\").off(\"ready\"))}},isFunction:function(e){return\"function\"===b.type(e)},isArray:Array.isArray||function(e){return\"array\"===b.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?l[m.call(e)]||\"object\":typeof e},isPlainObject:function(e){if(!e||\"object\"!==b.type(e)||e.nodeType||b.isWindow(e))return!1;try{if(e.constructor&&!y.call(e,\"constructor\")&&!y.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(n){return!1}var r;for(r in e);return r===t||y.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||o;var r=C.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=b.buildFragment([e],t,i),i&&b(i).remove(),b.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:\"string\"==typeof n&&(n=b.trim(n),n&&k.test(n.replace(S,\"@\").replace(A,\"]\").replace(E,\"\")))?Function(\"return \"+n)():(b.error(\"Invalid JSON: \"+n),t)},parseXML:function(n){var r,i;if(!n||\"string\"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,\"text/xml\")):(r=new ActiveXObject(\"Microsoft.XMLDOM\"),r.async=\"false\",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length||b.error(\"Invalid XML: \"+n),r},noop:function(){},globalEval:function(t){t&&b.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(j,\"ms-\").replace(D,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:v&&!v.call(\"\\ufeff\\u00a0\")?function(e){return null==e?\"\":v.call(e)}:function(e){return null==e?\"\":(e+\"\").replace(T,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?b.merge(n,\"string\"==typeof e?[e]:e):d.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(g)return g.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if(\"number\"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return f.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return\"string\"==typeof n&&(o=e[n],n=e,e=o),b.isFunction(e)?(r=h.call(arguments,2),i=function(){return e.apply(n||this,r.concat(h.call(arguments)))},i.guid=e.guid=e.guid||b.guid++,i):t},access:function(e,n,r,i,o,a,s){var u=0,l=e.length,c=null==r;if(\"object\"===b.type(r)){o=!0;for(u in r)b.access(e,n,u,r[u],!0,a,s)}else if(i!==t&&(o=!0,b.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(b(e),n)})),n))for(;l>u;u++)n(e[u],r,s?i:i.call(e[u],u,n(e[u],r)));return o?e:c?n.call(e):l?n(e[0],r):a},now:function(){return(new Date).getTime()}}),b.ready.promise=function(t){if(!n)if(n=b.Deferred(),\"complete\"===o.readyState)setTimeout(b.ready);else if(o.addEventListener)o.addEventListener(\"DOMContentLoaded\",H,!1),e.addEventListener(\"load\",H,!1);else{o.attachEvent(\"onreadystatechange\",H),e.attachEvent(\"onload\",H);var r=!1;try{r=null==e.frameElement&&o.documentElement}catch(i){}r&&r.doScroll&&function a(){if(!b.isReady){try{r.doScroll(\"left\")}catch(e){return setTimeout(a,50)}q(),b.ready()}}()}return n.promise(t)},b.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){l[\"[object \"+t+\"]\"]=t.toLowerCase()});function M(e){var t=e.length,n=b.type(e);return b.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}r=b(o);var _={};function F(e){var t=_[e]={};return b.each(e.match(w)||[],function(e,n){t[n]=!0}),t}b.Callbacks=function(e){e=\"string\"==typeof e?_[e]||F(e):b.extend({},e);var n,r,i,o,a,s,u=[],l=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=u.length,n=!0;u&&o>a;a++)if(u[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,u&&(l?l.length&&c(l.shift()):r?u=[]:p.disable())},p={add:function(){if(u){var t=u.length;(function i(t){b.each(t,function(t,n){var r=b.type(n);\"function\"===r?e.unique&&p.has(n)||u.push(n):n&&n.length&&\"string\"!==r&&i(n)})})(arguments),n?o=u.length:r&&(s=t,c(r))}return this},remove:function(){return u&&b.each(arguments,function(e,t){var r;while((r=b.inArray(t,u,r))>-1)u.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?b.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],this},disable:function(){return u=l=r=t,this},disabled:function(){return!u},lock:function(){return l=t,r||p.disable(),this},locked:function(){return!l},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],!u||i&&!l||(n?l.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},b.extend({Deferred:function(e){var t=[[\"resolve\",\"done\",b.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",b.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",b.Callbacks(\"memory\")]],n=\"pending\",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return b.Deferred(function(n){b.each(t,function(t,o){var a=o[0],s=b.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&b.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+\"With\"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?b.extend(e,r):r}},i={};return r.pipe=r.then,b.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+\"With\"](this===i?r:this,arguments),this},i[o[0]+\"With\"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=h.call(arguments),r=n.length,i=1!==r||e&&b.isFunction(e.promise)?r:0,o=1===i?e:b.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?h.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,u,l;if(r>1)for(s=Array(r),u=Array(r),l=Array(r);r>t;t++)n[t]&&b.isFunction(n[t].promise)?n[t].promise().done(a(t,l,n)).fail(o.reject).progress(a(t,u,s)):--i;return i||o.resolveWith(l,n),o.promise()}}),b.support=function(){var t,n,r,a,s,u,l,c,p,f,d=o.createElement(\"div\");if(d.setAttribute(\"className\",\"t\"),d.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",n=d.getElementsByTagName(\"*\"),r=d.getElementsByTagName(\"a\")[0],!n||!r||!n.length)return{};s=o.createElement(\"select\"),l=s.appendChild(o.createElement(\"option\")),a=d.getElementsByTagName(\"input\")[0],r.style.cssText=\"top:1px;float:left;opacity:.5\",t={getSetAttribute:\"t\"!==d.className,leadingWhitespace:3===d.firstChild.nodeType,tbody:!d.getElementsByTagName(\"tbody\").length,htmlSerialize:!!d.getElementsByTagName(\"link\").length,style:/top/.test(r.getAttribute(\"style\")),hrefNormalized:\"/a\"===r.getAttribute(\"href\"),opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:!!a.value,optSelected:l.selected,enctype:!!o.createElement(\"form\").enctype,html5Clone:\"<:nav></:nav>\"!==o.createElement(\"nav\").cloneNode(!0).outerHTML,boxModel:\"CSS1Compat\"===o.compatMode,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},a.checked=!0,t.noCloneChecked=a.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!l.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}a=o.createElement(\"input\"),a.setAttribute(\"value\",\"\"),t.input=\"\"===a.getAttribute(\"value\"),a.value=\"t\",a.setAttribute(\"type\",\"radio\"),t.radioValue=\"t\"===a.value,a.setAttribute(\"checked\",\"t\"),a.setAttribute(\"name\",\"t\"),u=o.createDocumentFragment(),u.appendChild(a),t.appendChecked=a.checked,t.checkClone=u.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent(\"onclick\",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c=\"on\"+f,\"t\"),t[f+\"Bubbles\"]=c in e||d.attributes[c].expando===!1;return d.style.backgroundClip=\"content-box\",d.cloneNode(!0).style.backgroundClip=\"\",t.clearCloneStyle=\"content-box\"===d.style.backgroundClip,b(function(){var n,r,a,s=\"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",u=o.getElementsByTagName(\"body\")[0];u&&(n=o.createElement(\"div\"),n.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",u.appendChild(n).appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",a=d.getElementsByTagName(\"td\"),a[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",p=0===a[0].offsetHeight,a[0].style.display=\"\",a[1].style.display=\"none\",t.reliableHiddenOffsets=p&&0===a[0].offsetHeight,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",t.boxSizing=4===d.offsetWidth,t.doesNotIncludeMarginInBodyOffset=1!==u.offsetTop,e.getComputedStyle&&(t.pixelPosition=\"1%\"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable=\"4px\"===(e.getComputedStyle(d,null)||{width:\"4px\"}).width,r=d.appendChild(o.createElement(\"div\")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width=\"0\",d.style.width=\"1px\",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML=\"\",d.style.cssText=s+\"width:1px;padding:1px;display:inline;zoom:1\",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display=\"block\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(u.style.zoom=1)),u.removeChild(n),n=d=a=r=null)}),n=s=u=l=r=a=null,t}();var O=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,B=/([A-Z])/g;function P(e,n,r,i){if(b.acceptData(e)){var o,a,s=b.expando,u=\"string\"==typeof n,l=e.nodeType,p=l?b.cache:e,f=l?e[s]:e[s]&&s;if(f&&p[f]&&(i||p[f].data)||!u||r!==t)return f||(l?e[s]=f=c.pop()||b.guid++:f=s),p[f]||(p[f]={},l||(p[f].toJSON=b.noop)),(\"object\"==typeof n||\"function\"==typeof n)&&(i?p[f]=b.extend(p[f],n):p[f].data=b.extend(p[f].data,n)),o=p[f],i||(o.data||(o.data={}),o=o.data),r!==t&&(o[b.camelCase(n)]=r),u?(a=o[n],null==a&&(a=o[b.camelCase(n)])):a=o,a}}function R(e,t,n){if(b.acceptData(e)){var r,i,o,a=e.nodeType,s=a?b.cache:e,u=a?e[b.expando]:b.expando;if(s[u]){if(t&&(o=n?s[u]:s[u].data)){b.isArray(t)?t=t.concat(b.map(t,b.camelCase)):t in o?t=[t]:(t=b.camelCase(t),t=t in o?[t]:t.split(\" \"));for(r=0,i=t.length;i>r;r++)delete o[t[r]];if(!(n?$:b.isEmptyObject)(o))return}(n||(delete s[u].data,$(s[u])))&&(a?b.cleanData([e],!0):b.support.deleteExpando||s!=s.window?delete s[u]:s[u]=null)}}}b.extend({cache:{},expando:\"jQuery\"+(p+Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",applet:!0},hasData:function(e){return e=e.nodeType?b.cache[e[b.expando]]:e[b.expando],!!e&&!$(e)},data:function(e,t,n){return P(e,t,n)},removeData:function(e,t){return R(e,t)},_data:function(e,t,n){return P(e,t,n,!0)},_removeData:function(e,t){return R(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&b.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute(\"classid\")===t}}),b.fn.extend({data:function(e,n){var r,i,o=this[0],a=0,s=null;if(e===t){if(this.length&&(s=b.data(o),1===o.nodeType&&!b._data(o,\"parsedAttrs\"))){for(r=o.attributes;r.length>a;a++)i=r[a].name,i.indexOf(\"data-\")||(i=b.camelCase(i.slice(5)),W(o,i,s[i]));b._data(o,\"parsedAttrs\",!0)}return s}return\"object\"==typeof e?this.each(function(){b.data(this,e)}):b.access(this,function(n){return n===t?o?W(o,e,b.data(o,e)):null:(this.each(function(){b.data(this,e,n)}),t)},null,n,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){b.removeData(this,e)})}});function W(e,n,r){if(r===t&&1===e.nodeType){var i=\"data-\"+n.replace(B,\"-$1\").toLowerCase();if(r=e.getAttribute(i),\"string\"==typeof r){try{r=\"true\"===r?!0:\"false\"===r?!1:\"null\"===r?null:+r+\"\"===r?+r:O.test(r)?b.parseJSON(r):r}catch(o){}b.data(e,n,r)}else r=t}return r}function $(e){var t;for(t in e)if((\"data\"!==t||!b.isEmptyObject(e[t]))&&\"toJSON\"!==t)return!1;return!0}b.extend({queue:function(e,n,r){var i;return e?(n=(n||\"fx\")+\"queue\",i=b._data(e,n),r&&(!i||b.isArray(r)?i=b._data(e,n,b.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||\"fx\";var n=b.queue(e,t),r=n.length,i=n.shift(),o=b._queueHooks(e,t),a=function(){b.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),o.cur=i,i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return b._data(e,n)||b._data(e,n,{empty:b.Callbacks(\"once memory\").add(function(){b._removeData(e,t+\"queue\"),b._removeData(e,n)})})}}),b.fn.extend({queue:function(e,n){var r=2;return\"string\"!=typeof e&&(n=e,e=\"fx\",r--),r>arguments.length?b.queue(this[0],e):n===t?this:this.each(function(){var t=b.queue(this,e,n);b._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==t[0]&&b.dequeue(this,e)})},dequeue:function(e){return this.each(function(){b.dequeue(this,e)})},delay:function(e,t){return e=b.fx?b.fx.speeds[e]||e:e,t=t||\"fx\",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,n){var r,i=1,o=b.Deferred(),a=this,s=this.length,u=function(){--i||o.resolveWith(a,[a])};\"string\"!=typeof e&&(n=e,e=t),e=e||\"fx\";while(s--)r=b._data(a[s],e+\"queueHooks\"),r&&r.empty&&(i++,r.empty.add(u));return u(),o.promise(n)}});var I,z,X=/[\\t\\r\\n]/g,U=/\\r/g,V=/^(?:input|select|textarea|button|object)$/i,Y=/^(?:a|area)$/i,J=/^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i,G=/^(?:checked|selected)$/i,Q=b.support.getSetAttribute,K=b.support.input;b.fn.extend({attr:function(e,t){return b.access(this,b.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){b.removeAttr(this,e)})},prop:function(e,t){return b.access(this,b.prop,e,t,arguments.length>1)},removeProp:function(e){return e=b.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=\"string\"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(X,\" \"):\" \")){o=0;while(i=t[o++])0>r.indexOf(\" \"+i+\" \")&&(r+=i+\" \");n.className=b.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=0===arguments.length||\"string\"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(X,\" \"):\"\")){o=0;while(i=t[o++])while(r.indexOf(\" \"+i+\" \")>=0)r=r.replace(\" \"+i+\" \",\" \");n.className=e?b.trim(r):\"\"}return this},toggleClass:function(e,t){var n=typeof e,r=\"boolean\"==typeof t;return b.isFunction(e)?this.each(function(n){b(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(\"string\"===n){var o,a=0,s=b(this),u=t,l=e.match(w)||[];while(o=l[a++])u=r?u:!s.hasClass(o),s[u?\"addClass\":\"removeClass\"](o)}else(n===i||\"boolean\"===n)&&(this.className&&b._data(this,\"__className__\",this.className),this.className=this.className||e===!1?\"\":b._data(this,\"__className__\")||\"\")})},hasClass:function(e){var t=\" \"+e+\" \",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(\" \"+this[n].className+\" \").replace(X,\" \").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=b.isFunction(e),this.each(function(n){var o,a=b(this);1===this.nodeType&&(o=i?e.call(this,n,a.val()):e,null==o?o=\"\":\"number\"==typeof o?o+=\"\":b.isArray(o)&&(o=b.map(o,function(e){return null==e?\"\":e+\"\"})),r=b.valHooks[this.type]||b.valHooks[this.nodeName.toLowerCase()],r&&\"set\"in r&&r.set(this,o,\"value\")!==t||(this.value=o))});if(o)return r=b.valHooks[o.type]||b.valHooks[o.nodeName.toLowerCase()],r&&\"get\"in r&&(n=r.get(o,\"value\"))!==t?n:(n=o.value,\"string\"==typeof n?n.replace(U,\"\"):null==n?\"\":n)}}}),b.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o=\"select-one\"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,u=0>i?s:o?i:0;for(;s>u;u++)if(n=r[u],!(!n.selected&&u!==i||(b.support.optDisabled?n.disabled:null!==n.getAttribute(\"disabled\"))||n.parentNode.disabled&&b.nodeName(n.parentNode,\"optgroup\"))){if(t=b(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n=b.makeArray(t);return b(e).find(\"option\").each(function(){this.selected=b.inArray(b(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attr:function(e,n,r){var o,a,s,u=e.nodeType;if(e&&3!==u&&8!==u&&2!==u)return typeof e.getAttribute===i?b.prop(e,n,r):(a=1!==u||!b.isXMLDoc(e),a&&(n=n.toLowerCase(),o=b.attrHooks[n]||(J.test(n)?z:I)),r===t?o&&a&&\"get\"in o&&null!==(s=o.get(e,n))?s:(typeof e.getAttribute!==i&&(s=e.getAttribute(n)),null==s?t:s):null!==r?o&&a&&\"set\"in o&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+\"\"),r):(b.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(w);if(o&&1===e.nodeType)while(n=o[i++])r=b.propFix[n]||n,J.test(n)?!Q&&G.test(n)?e[b.camelCase(\"default-\"+n)]=e[r]=!1:e[r]=!1:b.attr(e,n,\"\"),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!b.support.radioValue&&\"radio\"===t&&b.nodeName(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},propFix:{tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!b.isXMLDoc(e),a&&(n=b.propFix[n]||n,o=b.propHooks[n]),r!==t?o&&\"set\"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&\"get\"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode(\"tabindex\");return n&&n.specified?parseInt(n.value,10):V.test(e.nodeName)||Y.test(e.nodeName)&&e.href?0:t}}}}),z={get:function(e,n){var r=b.prop(e,n),i=\"boolean\"==typeof r&&e.getAttribute(n),o=\"boolean\"==typeof r?K&&Q?null!=i:G.test(n)?e[b.camelCase(\"default-\"+n)]:!!i:e.getAttributeNode(n);return o&&o.value!==!1?n.toLowerCase():t},set:function(e,t,n){return t===!1?b.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&b.propFix[n]||n,n):e[b.camelCase(\"default-\"+n)]=e[n]=!0,n}},K&&Q||(b.attrHooks.value={get:function(e,n){var r=e.getAttributeNode(n);return b.nodeName(e,\"input\")?e.defaultValue:r&&r.specified?r.value:t},set:function(e,n,r){return b.nodeName(e,\"input\")?(e.defaultValue=n,t):I&&I.set(e,n,r)}}),Q||(I=b.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&(\"id\"===n||\"name\"===n||\"coords\"===n?\"\"!==r.value:r.specified)?r.value:t},set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+=\"\",\"value\"===r||n===e.getAttribute(r)?n:t}},b.attrHooks.contenteditable={get:I.get,set:function(e,t,n){I.set(e,\"\"===t?!1:t,n)}},b.each([\"width\",\"height\"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{set:function(e,r){return\"\"===r?(e.setAttribute(n,\"auto\"),r):t}})})),b.support.hrefNormalized||(b.each([\"href\",\"src\",\"width\",\"height\"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return null==r?t:r}})}),b.each([\"href\",\"src\"],function(e,t){b.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}})),b.support.style||(b.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+\"\"}}),b.support.optSelected||(b.propHooks.selected=b.extend(b.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),b.support.enctype||(b.propFix.enctype=\"encoding\"),b.support.checkOn||b.each([\"radio\",\"checkbox\"],function(){b.valHooks[this]={get:function(e){return null===e.getAttribute(\"value\")?\"on\":e.value}}}),b.each([\"radio\",\"checkbox\"],function(){b.valHooks[this]=b.extend(b.valHooks[this],{set:function(e,n){return b.isArray(n)?e.checked=b.inArray(b(e).val(),n)>=0:t}})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\\.(.+)|)$/;function it(){return!0}function ot(){return!1}b.event={global:{},add:function(e,n,r,o,a){var s,u,l,c,p,f,d,h,g,m,y,v=b._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=b.guid++),(u=v.events)||(u=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof b===i||e&&b.event.triggered===e.type?t:b.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||\"\").match(w)||[\"\"],l=n.length;while(l--)s=rt.exec(n[l])||[],g=y=s[1],m=(s[2]||\"\").split(\".\").sort(),p=b.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=b.event.special[g]||{},d=b.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&b.expr.match.needsContext.test(a),namespace:m.join(\".\")},c),(h=u[g])||(h=u[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent(\"on\"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),b.event.global[g]=!0;e=null}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,p,f,d,h,g,m=b.hasData(e)&&b._data(e);if(m&&(c=m.events)){t=(t||\"\").match(w)||[\"\"],l=t.length;while(l--)if(s=rt.exec(t[l])||[],d=g=s[1],h=(s[2]||\"\").split(\".\").sort(),d){p=b.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),u=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&(\"**\"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));u&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||b.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)b.event.remove(e,d+t[l],n,r,!0);b.isEmptyObject(c)&&(delete m.handle,b._removeData(e,\"events\"))}},trigger:function(n,r,i,a){var s,u,l,c,p,f,d,h=[i||o],g=y.call(n,\"type\")?n.type:n,m=y.call(n,\"namespace\")?n.namespace.split(\".\"):[];if(l=f=i=i||o,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+b.event.triggered)&&(g.indexOf(\".\")>=0&&(m=g.split(\".\"),g=m.shift(),m.sort()),u=0>g.indexOf(\":\")&&\"on\"+g,n=n[b.expando]?n:new b.Event(g,\"object\"==typeof n&&n),n.isTrigger=!0,n.namespace=m.join(\".\"),n.namespace_re=n.namespace?RegExp(\"(^|\\\\.)\"+m.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:b.makeArray(r,[n]),p=b.event.special[g]||{},a||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!a&&!p.noBubble&&!b.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(l=l.parentNode);l;l=l.parentNode)h.push(l),f=l;f===(i.ownerDocument||o)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((l=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(b._data(l,\"events\")||{})[n.type]&&b._data(l,\"handle\"),s&&s.apply(l,r),s=u&&l[u],s&&b.acceptData(l)&&s.apply&&s.apply(l,r)===!1&&n.preventDefault();if(n.type=g,!(a||n.isDefaultPrevented()||p._default&&p._default.apply(i.ownerDocument,r)!==!1||\"click\"===g&&b.nodeName(i,\"a\")||!b.acceptData(i)||!u||!i[g]||b.isWindow(i))){f=i[u],f&&(i[u]=null),b.event.triggered=g;try{i[g]()}catch(v){}b.event.triggered=t,f&&(i[u]=f)}return n.result}},dispatch:function(e){e=b.event.fix(e);var n,r,i,o,a,s=[],u=h.call(arguments),l=(b._data(this,\"events\")||{})[e.type]||[],c=b.event.special[e.type]||{};if(u[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=b.event.handlers.call(this,e,l),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((b.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,u),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],u=n.delegateCount,l=e.target;if(u&&l.nodeType&&(!e.button||\"click\"!==e.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||\"click\"!==e.type)){for(o=[],a=0;u>a;a++)i=n[a],r=i.selector+\" \",o[r]===t&&(o[r]=i.needsContext?b(r,this).index(l)>=0:b.find(r,this,null,[l]).length),o[r]&&o.push(i);o.length&&s.push({elem:l,handlers:o})}return n.length>u&&s.push({elem:this,handlers:n.slice(u)}),s},fix:function(e){if(e[b.expando])return e;var t,n,r,i=e.type,a=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new b.Event(a),t=r.length;while(t--)n=r[t],e[n]=a[n];return e.target||(e.target=a.srcElement||o),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,a):e},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(e,n){var r,i,a,s=n.button,u=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||o,a=i.documentElement,r=i.body,e.pageX=n.clientX+(a&&a.scrollLeft||r&&r.scrollLeft||0)-(a&&a.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(a&&a.scrollTop||r&&r.scrollTop||0)-(a&&a.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&u&&(e.relatedTarget=u===e.target?n.toElement:u),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},click:{trigger:function(){return b.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):t}},focus:{trigger:function(){if(this!==o.activeElement&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===o.activeElement&&this.blur?(this.blur(),!1):t},delegateType:\"focusout\"},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=b.extend(new b.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?b.event.trigger(i,null,t):b.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},b.removeEvent=o.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r=\"on\"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},b.Event=function(e,n){return this instanceof b.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&b.extend(this,n),this.timeStamp=e&&e.timeStamp||b.now(),this[b.expando]=!0,t):new b.Event(e,n)},b.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},b.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(e,t){b.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;\r\nreturn(!i||i!==r&&!b.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),b.support.submitBubbles||(b.event.special.submit={setup:function(){return b.nodeName(this,\"form\")?!1:(b.event.add(this,\"click._submit keypress._submit\",function(e){var n=e.target,r=b.nodeName(n,\"input\")||b.nodeName(n,\"button\")?n.form:t;r&&!b._data(r,\"submitBubbles\")&&(b.event.add(r,\"submit._submit\",function(e){e._submit_bubble=!0}),b._data(r,\"submitBubbles\",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&b.event.simulate(\"submit\",this.parentNode,e,!0))},teardown:function(){return b.nodeName(this,\"form\")?!1:(b.event.remove(this,\"._submit\"),t)}}),b.support.changeBubbles||(b.event.special.change={setup:function(){return Z.test(this.nodeName)?((\"checkbox\"===this.type||\"radio\"===this.type)&&(b.event.add(this,\"propertychange._change\",function(e){\"checked\"===e.originalEvent.propertyName&&(this._just_changed=!0)}),b.event.add(this,\"click._change\",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),b.event.simulate(\"change\",this,e,!0)})),!1):(b.event.add(this,\"beforeactivate._change\",function(e){var t=e.target;Z.test(t.nodeName)&&!b._data(t,\"changeBubbles\")&&(b.event.add(t,\"change._change\",function(e){!this.parentNode||e.isSimulated||e.isTrigger||b.event.simulate(\"change\",this.parentNode,e,!0)}),b._data(t,\"changeBubbles\",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||\"radio\"!==n.type&&\"checkbox\"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return b.event.remove(this,\"._change\"),!Z.test(this.nodeName)}}),b.support.focusinBubbles||b.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=0,r=function(e){b.event.simulate(t,e.target,b.event.fix(e),!0)};b.event.special[t]={setup:function(){0===n++&&o.addEventListener(e,r,!0)},teardown:function(){0===--n&&o.removeEventListener(e,r,!0)}}}),b.fn.extend({on:function(e,n,r,i,o){var a,s;if(\"object\"==typeof e){\"string\"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&(\"string\"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return b().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=b.guid++)),this.each(function(){b.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,b(e.delegateTarget).off(i.namespace?i.origType+\".\"+i.namespace:i.origType,i.selector,i.handler),this;if(\"object\"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||\"function\"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){b.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)},trigger:function(e,t){return this.each(function(){b.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?b.event.trigger(e,n,r,!0):t}}),function(e,t){var n,r,i,o,a,s,u,l,c,p,f,d,h,g,m,y,v,x=\"sizzle\"+-new Date,w=e.document,T={},N=0,C=0,k=it(),E=it(),S=it(),A=typeof t,j=1<<31,D=[],L=D.pop,H=D.push,q=D.slice,M=D.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},_=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",F=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=F.replace(\"w\",\"w#\"),B=\"([*^$|!~]?=)\",P=\"\\\\[\"+_+\"*(\"+F+\")\"+_+\"*(?:\"+B+_+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+O+\")|)|)\"+_+\"*\\\\]\",R=\":(\"+F+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P.replace(3,8)+\")*)|.*)\\\\)|)\",W=RegExp(\"^\"+_+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+_+\"+$\",\"g\"),$=RegExp(\"^\"+_+\"*,\"+_+\"*\"),I=RegExp(\"^\"+_+\"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\"+_+\"*\"),z=RegExp(R),X=RegExp(\"^\"+O+\"$\"),U={ID:RegExp(\"^#(\"+F+\")\"),CLASS:RegExp(\"^\\\\.(\"+F+\")\"),NAME:RegExp(\"^\\\\[name=['\\\"]?(\"+F+\")['\\\"]?\\\\]\"),TAG:RegExp(\"^(\"+F.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+P),PSEUDO:RegExp(\"^\"+R),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+_+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+_+\"*(?:([+-]|)\"+_+\"*(\\\\d+)|))\"+_+\"*\\\\)|)\",\"i\"),needsContext:RegExp(\"^\"+_+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+_+\"*((?:-\\\\d)?\\\\d*)\"+_+\"*\\\\)|)(?=[^-]|$)\",\"i\")},V=/[\\x20\\t\\r\\n\\f]*[+~]/,Y=/^[^{]+\\{\\s*\\[native code/,J=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,G=/^(?:input|select|textarea|button)$/i,Q=/^h\\d$/i,K=/'|\\\\/g,Z=/\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,et=/\\\\([\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|.)/g,tt=function(e,t){var n=\"0x\"+t-65536;return n!==n?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(55296|n>>10,56320|1023&n)};try{q.call(w.documentElement.childNodes,0)[0].nodeType}catch(nt){q=function(e){var t,n=[];while(t=this[e++])n.push(t);return n}}function rt(e){return Y.test(e+\"\")}function it(){var e,t=[];return e=function(n,r){return t.push(n+=\" \")>i.cacheLength&&delete e[t.shift()],e[n]=r}}function ot(e){return e[x]=!0,e}function at(e){var t=p.createElement(\"div\");try{return e(t)}catch(n){return!1}finally{t=null}}function st(e,t,n,r){var i,o,a,s,u,l,f,g,m,v;if((t?t.ownerDocument||t:w)!==p&&c(t),t=t||p,n=n||[],!e||\"string\"!=typeof e)return n;if(1!==(s=t.nodeType)&&9!==s)return[];if(!d&&!r){if(i=J.exec(e))if(a=i[1]){if(9===s){if(o=t.getElementById(a),!o||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&y(t,o)&&o.id===a)return n.push(o),n}else{if(i[2])return H.apply(n,q.call(t.getElementsByTagName(e),0)),n;if((a=i[3])&&T.getByClassName&&t.getElementsByClassName)return H.apply(n,q.call(t.getElementsByClassName(a),0)),n}if(T.qsa&&!h.test(e)){if(f=!0,g=x,m=t,v=9===s&&e,1===s&&\"object\"!==t.nodeName.toLowerCase()){l=ft(e),(f=t.getAttribute(\"id\"))?g=f.replace(K,\"\\\\$&\"):t.setAttribute(\"id\",g),g=\"[id='\"+g+\"'] \",u=l.length;while(u--)l[u]=g+dt(l[u]);m=V.test(e)&&t.parentNode||t,v=l.join(\",\")}if(v)try{return H.apply(n,q.call(m.querySelectorAll(v),0)),n}catch(b){}finally{f||t.removeAttribute(\"id\")}}}return wt(e.replace(W,\"$1\"),t,n,r)}a=st.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?\"HTML\"!==t.nodeName:!1},c=st.setDocument=function(e){var n=e?e.ownerDocument||e:w;return n!==p&&9===n.nodeType&&n.documentElement?(p=n,f=n.documentElement,d=a(n),T.tagNameNoComments=at(function(e){return e.appendChild(n.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),T.attributes=at(function(e){e.innerHTML=\"<select></select>\";var t=typeof e.lastChild.getAttribute(\"multiple\");return\"boolean\"!==t&&\"string\"!==t}),T.getByClassName=at(function(e){return e.innerHTML=\"<div class='hidden e'></div><div class='hidden'></div>\",e.getElementsByClassName&&e.getElementsByClassName(\"e\").length?(e.lastChild.className=\"e\",2===e.getElementsByClassName(\"e\").length):!1}),T.getByName=at(function(e){e.id=x+0,e.innerHTML=\"<a name='\"+x+\"'></a><div name='\"+x+\"'></div>\",f.insertBefore(e,f.firstChild);var t=n.getElementsByName&&n.getElementsByName(x).length===2+n.getElementsByName(x+0).length;return T.getIdNotName=!n.getElementById(x),f.removeChild(e),t}),i.attrHandle=at(function(e){return e.innerHTML=\"<a href='#'></a>\",e.firstChild&&typeof e.firstChild.getAttribute!==A&&\"#\"===e.firstChild.getAttribute(\"href\")})?{}:{href:function(e){return e.getAttribute(\"href\",2)},type:function(e){return e.getAttribute(\"type\")}},T.getIdNotName?(i.find.ID=function(e,t){if(typeof t.getElementById!==A&&!d){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){return e.getAttribute(\"id\")===t}}):(i.find.ID=function(e,n){if(typeof n.getElementById!==A&&!d){var r=n.getElementById(e);return r?r.id===e||typeof r.getAttributeNode!==A&&r.getAttributeNode(\"id\").value===e?[r]:t:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){var n=typeof e.getAttributeNode!==A&&e.getAttributeNode(\"id\");return n&&n.value===t}}),i.find.TAG=T.tagNameNoComments?function(e,n){return typeof n.getElementsByTagName!==A?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},i.find.NAME=T.getByName&&function(e,n){return typeof n.getElementsByName!==A?n.getElementsByName(name):t},i.find.CLASS=T.getByClassName&&function(e,n){return typeof n.getElementsByClassName===A||d?t:n.getElementsByClassName(e)},g=[],h=[\":focus\"],(T.qsa=rt(n.querySelectorAll))&&(at(function(e){e.innerHTML=\"<select><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||h.push(\"\\\\[\"+_+\"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\"),e.querySelectorAll(\":checked\").length||h.push(\":checked\")}),at(function(e){e.innerHTML=\"<input type='hidden' i=''/>\",e.querySelectorAll(\"[i^='']\").length&&h.push(\"[*^$]=\"+_+\"*(?:\\\"\\\"|'')\"),e.querySelectorAll(\":enabled\").length||h.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),h.push(\",.*:\")})),(T.matchesSelector=rt(m=f.matchesSelector||f.mozMatchesSelector||f.webkitMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&at(function(e){T.disconnectedMatch=m.call(e,\"div\"),m.call(e,\"[s!='']:x\"),g.push(\"!=\",R)}),h=RegExp(h.join(\"|\")),g=RegExp(g.join(\"|\")),y=rt(f.contains)||f.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},v=f.compareDocumentPosition?function(e,t){var r;return e===t?(u=!0,0):(r=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t))?1&r||e.parentNode&&11===e.parentNode.nodeType?e===n||y(w,e)?-1:t===n||y(w,t)?1:0:4&r?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return u=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:0;if(o===a)return ut(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?ut(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},u=!1,[0,0].sort(v),T.detectDuplicates=u,p):p},st.matches=function(e,t){return st(e,null,null,t)},st.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&c(e),t=t.replace(Z,\"='$1']\"),!(!T.matchesSelector||d||g&&g.test(t)||h.test(t)))try{var n=m.call(e,t);if(n||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(r){}return st(t,p,null,[e]).length>0},st.contains=function(e,t){return(e.ownerDocument||e)!==p&&c(e),y(e,t)},st.attr=function(e,t){var n;return(e.ownerDocument||e)!==p&&c(e),d||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):d||T.attributes?e.getAttribute(t):((n=e.getAttributeNode(t))||e.getAttribute(t))&&e[t]===!0?t:n&&n.specified?n.value:null},st.error=function(e){throw Error(\"Syntax error, unrecognized expression: \"+e)},st.uniqueSort=function(e){var t,n=[],r=1,i=0;if(u=!T.detectDuplicates,e.sort(v),u){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e};function ut(e,t){var n=t&&e,r=n&&(~t.sourceIndex||j)-(~e.sourceIndex||j);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function lt(e){return function(t){var n=t.nodeName.toLowerCase();return\"input\"===n&&t.type===e}}function ct(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function pt(e){return ot(function(t){return t=+t,ot(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}o=st.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=o(t);return n},i=st.selectors={cacheLength:50,createPseudo:ot,match:U,find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(et,tt),e[3]=(e[4]||e[5]||\"\").replace(et,tt),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||st.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&st.error(e[0]),e},PSEUDO:function(e){var t,n=!e[5]&&e[2];return U.CHILD.test(e[0])?null:(e[4]?e[2]=e[4]:n&&z.test(n)&&(t=ft(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){return\"*\"===e?function(){return!0}:(e=e.replace(et,tt).toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[e+\" \"];return t||(t=RegExp(\"(^|\"+_+\")\"+e+\"(\"+_+\"|$)\"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==A&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=st.attr(r,e);return null==i?\"!=\"===t:t?(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i+\" \").indexOf(n)>-1:\"|=\"===t?i===n||i.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,p,f,d,h,g=o!==a?\"nextSibling\":\"previousSibling\",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!u&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g=\"only\"===e&&!h&&\"nextSibling\"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[x]||(m[x]={}),l=c[e]||[],d=l[0]===N&&l[1],f=l[0]===N&&l[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[N,d,f];break}}else if(v&&(l=(t[x]||(t[x]={}))[e])&&l[0]===N)f=l[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[x]||(p[x]={}))[e]=[N,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||st.error(\"unsupported pseudo: \"+e);return r[x]?r(t):r.length>1?(n=[e,e,\"\",t],i.setFilters.hasOwnProperty(e.toLowerCase())?ot(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=M.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ot(function(e){var t=[],n=[],r=s(e.replace(W,\"$1\"));return r[x]?ot(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:ot(function(e){return function(t){return st(e,t).length>0}}),contains:ot(function(e){return function(t){return(t.textContent||t.innerText||o(t)).indexOf(e)>-1}}),lang:ot(function(e){return X.test(e||\"\")||st.error(\"unsupported lang: \"+e),e=e.replace(et,tt).toLowerCase(),function(t){var n;do if(n=d?t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"):t.lang)return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>\"@\"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return G.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||t.toLowerCase()===e.type)},first:pt(function(){return[0]}),last:pt(function(e,t){return[t-1]}),eq:pt(function(e,t,n){return[0>n?n+t:n]}),even:pt(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:pt(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:pt(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:pt(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}};for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[n]=lt(n);for(n in{submit:!0,reset:!0})i.pseudos[n]=ct(n);function ft(e,t){var n,r,o,a,s,u,l,c=E[e+\" \"];if(c)return t?0:c.slice(0);s=e,u=[],l=i.preFilter;while(s){(!n||(r=$.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),u.push(o=[])),n=!1,(r=I.exec(s))&&(n=r.shift(),o.push({value:n,type:r[0].replace(W,\" \")}),s=s.slice(n.length));for(a in i.filter)!(r=U[a].exec(s))||l[a]&&!(r=l[a](r))||(n=r.shift(),o.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?st.error(e):E(e,u).slice(0)}function dt(e){var t=0,n=e.length,r=\"\";for(;n>t;t++)r+=e[t].value;return r}function ht(e,t,n){var i=t.dir,o=n&&\"parentNode\"===i,a=C++;return t.first?function(t,n,r){while(t=t[i])if(1===t.nodeType||o)return e(t,n,r)}:function(t,n,s){var u,l,c,p=N+\" \"+a;if(s){while(t=t[i])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[i])if(1===t.nodeType||o)if(c=t[x]||(t[x]={}),(l=c[i])&&l[0]===p){if((u=l[1])===!0||u===r)return u===!0}else if(l=c[i]=[p],l[1]=e(t,n,s)||r,l[1]===!0)return!0}}function gt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function mt(e,t,n,r,i){var o,a=[],s=0,u=e.length,l=null!=t;for(;u>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),l&&t.push(s));return a}function yt(e,t,n,r,i,o){return r&&!r[x]&&(r=yt(r)),i&&!i[x]&&(i=yt(i,o)),ot(function(o,a,s,u){var l,c,p,f=[],d=[],h=a.length,g=o||xt(t||\"*\",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:mt(g,f,e,s,u),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,u),r){l=mt(y,d),r(l,[],s,u),c=l.length;while(c--)(p=l[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){l=[],c=y.length;while(c--)(p=y[c])&&l.push(m[c]=p);i(null,y=[],l,u)}c=y.length;while(c--)(p=y[c])&&(l=i?M.call(o,p):f[c])>-1&&(o[l]=!(a[l]=p))}}else y=mt(y===a?y.splice(h,y.length):y),i?i(null,a,y,u):H.apply(a,y)})}function vt(e){var t,n,r,o=e.length,a=i.relative[e[0].type],s=a||i.relative[\" \"],u=a?1:0,c=ht(function(e){return e===t},s,!0),p=ht(function(e){return M.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==l)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;o>u;u++)if(n=i.relative[e[u].type])f=[ht(gt(f),n)];else{if(n=i.filter[e[u].type].apply(null,e[u].matches),n[x]){for(r=++u;o>r;r++)if(i.relative[e[r].type])break;return yt(u>1&&gt(f),u>1&&dt(e.slice(0,u-1)).replace(W,\"$1\"),n,r>u&&vt(e.slice(u,r)),o>r&&vt(e=e.slice(r)),o>r&&dt(e))}f.push(n)}return gt(f)}function bt(e,t){var n=0,o=t.length>0,a=e.length>0,s=function(s,u,c,f,d){var h,g,m,y=[],v=0,b=\"0\",x=s&&[],w=null!=d,T=l,C=s||a&&i.find.TAG(\"*\",d&&u.parentNode||u),k=N+=null==T?1:Math.random()||.1;for(w&&(l=u!==p&&u,r=n);null!=(h=C[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,u,c)){f.push(h);break}w&&(N=k,r=++n)}o&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,o&&b!==v){g=0;while(m=t[g++])m(x,y,u,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=L.call(f));y=mt(y)}H.apply(f,y),w&&!s&&y.length>0&&v+t.length>1&&st.uniqueSort(f)}return w&&(N=k,l=T),x};return o?ot(s):s}s=st.compile=function(e,t){var n,r=[],i=[],o=S[e+\" \"];if(!o){t||(t=ft(e)),n=t.length;while(n--)o=vt(t[n]),o[x]?r.push(o):i.push(o);o=S(e,bt(i,r))}return o};function xt(e,t,n){var r=0,i=t.length;for(;i>r;r++)st(e,t[r],n);return n}function wt(e,t,n,r){var o,a,u,l,c,p=ft(e);if(!r&&1===p.length){if(a=p[0]=p[0].slice(0),a.length>2&&\"ID\"===(u=a[0]).type&&9===t.nodeType&&!d&&i.relative[a[1].type]){if(t=i.find.ID(u.matches[0].replace(et,tt),t)[0],!t)return n;e=e.slice(a.shift().value.length)}o=U.needsContext.test(e)?0:a.length;while(o--){if(u=a[o],i.relative[l=u.type])break;if((c=i.find[l])&&(r=c(u.matches[0].replace(et,tt),V.test(a[0].type)&&t.parentNode||t))){if(a.splice(o,1),e=r.length&&dt(a),!e)return H.apply(n,q.call(r,0)),n;break}}}return s(e,p)(r,t,d,n,V.test(e)),n}i.pseudos.nth=i.pseudos.eq;function Tt(){}i.filters=Tt.prototype=i.pseudos,i.setFilters=new Tt,c(),st.attr=b.attr,b.find=st,b.expr=st.selectors,b.expr[\":\"]=b.expr.pseudos,b.unique=st.uniqueSort,b.text=st.getText,b.isXMLDoc=st.isXML,b.contains=st.contains}(e);var at=/Until$/,st=/^(?:parents|prev(?:Until|All))/,ut=/^.[^:#\\[\\.,]*$/,lt=b.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};b.fn.extend({find:function(e){var t,n,r,i=this.length;if(\"string\"!=typeof e)return r=this,this.pushStack(b(e).filter(function(){for(t=0;i>t;t++)if(b.contains(r[t],this))return!0}));for(n=[],t=0;i>t;t++)b.find(e,this[t],n);return n=this.pushStack(i>1?b.unique(n):n),n.selector=(this.selector?this.selector+\" \":\"\")+e,n},has:function(e){var t,n=b(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(b.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1))},filter:function(e){return this.pushStack(ft(this,e,!0))},is:function(e){return!!e&&(\"string\"==typeof e?lt.test(e)?b(e,this.context).index(this[0])>=0:b.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,o=[],a=lt.test(e)||\"string\"!=typeof e?b(e,t||this.context):0;for(;i>r;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&11!==n.nodeType){if(a?a.index(n)>-1:b.find.matchesSelector(n,e)){o.push(n);break}n=n.parentNode}}return this.pushStack(o.length>1?b.unique(o):o)},index:function(e){return e?\"string\"==typeof e?b.inArray(this[0],b(e)):b.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n=\"string\"==typeof e?b(e,t):b.makeArray(e&&e.nodeType?[e]:e),r=b.merge(this.get(),n);return this.pushStack(b.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),b.fn.andSelf=b.fn.addBack;function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}b.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return b.dir(e,\"parentNode\")},parentsUntil:function(e,t,n){return b.dir(e,\"parentNode\",n)},next:function(e){return pt(e,\"nextSibling\")},prev:function(e){return pt(e,\"previousSibling\")},nextAll:function(e){return b.dir(e,\"nextSibling\")},prevAll:function(e){return b.dir(e,\"previousSibling\")},nextUntil:function(e,t,n){return b.dir(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return b.dir(e,\"previousSibling\",n)},siblings:function(e){return b.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return b.sibling(e.firstChild)},contents:function(e){return b.nodeName(e,\"iframe\")?e.contentDocument||e.contentWindow.document:b.merge([],e.childNodes)}},function(e,t){b.fn[e]=function(n,r){var i=b.map(this,t,n);return at.test(e)||(r=n),r&&\"string\"==typeof r&&(i=b.filter(r,i)),i=this.length>1&&!ct[e]?b.unique(i):i,this.length>1&&st.test(e)&&(i=i.reverse()),this.pushStack(i)}}),b.extend({filter:function(e,t,n){return n&&(e=\":not(\"+e+\")\"),1===t.length?b.find.matchesSelector(t[0],e)?[t[0]]:[]:b.find.matches(e,t)},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!b(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(t=t||0,b.isFunction(t))return b.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return b.grep(e,function(e){return e===t===n});if(\"string\"==typeof t){var r=b.grep(e,function(e){return 1===e.nodeType});if(ut.test(t))return b.filter(t,r,!n);t=b.filter(t,r)}return b.grep(e,function(e){return b.inArray(e,t)>=0===n})}function dt(e){var t=ht.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",gt=/ jQuery\\d+=\"(?:null|\\d+)\"/g,mt=RegExp(\"<(?:\"+ht+\")[\\\\s/>]\",\"i\"),yt=/^\\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bt=/<([\\w:]+)/,xt=/<tbody/i,wt=/<|&#?\\w+;/,Tt=/<(?:script|style|link)/i,Nt=/^(?:checkbox|radio)$/i,Ct=/checked\\s*(?:[^=]|=\\s*.checked.)/i,kt=/^$|\\/(?:java|ecma)script/i,Et=/^true\\/(.*)/,St=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,At={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:b.support.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]},jt=dt(o),Dt=jt.appendChild(o.createElement(\"div\"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,b.fn.extend({text:function(e){return b.access(this,function(e){return e===t?b.text(this):this.empty().append((this[0]&&this[0].ownerDocument||o).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(b.isFunction(e))return this.each(function(t){b(this).wrapAll(e.call(this,t))});if(this[0]){var t=b(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return b.isFunction(e)?this.each(function(t){b(this).wrapInner(e.call(this,t))}):this.each(function(){var t=b(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=b.isFunction(e);return this.each(function(n){b(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){b.nodeName(this,\"body\")||b(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.insertBefore(e,this.firstChild)})},before:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=0;for(;null!=(n=this[r]);r++)(!e||b.filter(e,[n]).length>0)&&(t||1!==n.nodeType||b.cleanData(Ot(n)),n.parentNode&&(t&&b.contains(n.ownerDocument,n)&&Mt(Ot(n,\"script\")),n.parentNode.removeChild(n)));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&b.cleanData(Ot(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&b.nodeName(e,\"select\")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return b.clone(this,e,t)})},html:function(e){return b.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,\"\"):t;if(!(\"string\"!=typeof e||Tt.test(e)||!b.support.htmlSerialize&&mt.test(e)||!b.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||[\"\",\"\"])[1].toLowerCase()])){e=e.replace(vt,\"<$1></$2>\");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(b.cleanData(Ot(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){var t=b.isFunction(e);return t||\"string\"==typeof e||(e=b(e).not(this).detach()),this.domManip([e],!0,function(e){var t=this.nextSibling,n=this.parentNode;n&&(b(this).remove(),n.insertBefore(e,t))})},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=f.apply([],e);var i,o,a,s,u,l,c=0,p=this.length,d=this,h=p-1,g=e[0],m=b.isFunction(g);if(m||!(1>=p||\"string\"!=typeof g||b.support.checkClone)&&Ct.test(g))return this.each(function(i){var o=d.eq(i);m&&(e[0]=g.call(this,i,n?o.html():t)),o.domManip(e,n,r)});if(p&&(l=b.buildFragment(e,this[0].ownerDocument,!1,this),i=l.firstChild,1===l.childNodes.length&&(l=i),i)){for(n=n&&b.nodeName(i,\"tr\"),s=b.map(Ot(l,\"script\"),Ht),a=s.length;p>c;c++)o=l,c!==h&&(o=b.clone(o,!0,!0),a&&b.merge(s,Ot(o,\"script\"))),r.call(n&&b.nodeName(this[c],\"table\")?Lt(this[c],\"tbody\"):this[c],o,c);if(a)for(u=s[s.length-1].ownerDocument,b.map(s,qt),c=0;a>c;c++)o=s[c],kt.test(o.type||\"\")&&!b._data(o,\"globalEval\")&&b.contains(u,o)&&(o.src?b.ajax({url:o.src,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0}):b.globalEval((o.text||o.textContent||o.innerHTML||\"\").replace(St,\"\")));l=i=null}return this}});function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function Ht(e){var t=e.getAttributeNode(\"type\");return e.type=(t&&t.specified)+\"/\"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute(\"type\"),e}function Mt(e,t){var n,r=0;for(;null!=(n=e[r]);r++)b._data(n,\"globalEval\",!t||b._data(t[r],\"globalEval\"))}function _t(e,t){if(1===t.nodeType&&b.hasData(e)){var n,r,i,o=b._data(e),a=b._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)b.event.add(t,n,s[n][r])}a.data&&(a.data=b.extend({},a.data))}}function Ft(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!b.support.noCloneEvent&&t[b.expando]){i=b._data(t);for(r in i.events)b.removeEvent(t,r,i.handle);t.removeAttribute(b.expando)}\"script\"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):\"object\"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),b.support.html5Clone&&e.innerHTML&&!b.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):\"input\"===n&&Nt.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):\"option\"===n?t.defaultSelected=t.selected=e.defaultSelected:(\"input\"===n||\"textarea\"===n)&&(t.defaultValue=e.defaultValue)}}b.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){b.fn[e]=function(e){var n,r=0,i=[],o=b(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),b(o[r])[t](n),d.apply(i,n.get());return this.pushStack(i)}});function Ot(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||\"*\"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||\"*\"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||b.nodeName(o,n)?s.push(o):b.merge(s,Ot(o,n));return n===t||n&&b.nodeName(e,n)?b.merge([e],s):s}function Bt(e){Nt.test(e.type)&&(e.defaultChecked=e.checked)}b.extend({clone:function(e,t,n){var r,i,o,a,s,u=b.contains(e.ownerDocument,e);if(b.support.html5Clone||b.isXMLDoc(e)||!mt.test(\"<\"+e.nodeName+\">\")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(b.support.noCloneEvent&&b.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||b.isXMLDoc(e)))for(r=Ot(o),s=Ot(e),a=0;null!=(i=s[a]);++a)r[a]&&Ft(i,r[a]);if(t)if(n)for(s=s||Ot(e),r=r||Ot(o),a=0;null!=(i=s[a]);a++)_t(i,r[a]);else _t(e,o);return r=Ot(o,\"script\"),r.length>0&&Mt(r,!u&&Ot(e,\"script\")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,u,l,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if(\"object\"===b.type(o))b.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement(\"div\")),u=(bt.exec(o)||[\"\",\"\"])[1].toLowerCase(),c=At[u]||At._default,s.innerHTML=c[1]+o.replace(vt,\"<$1></$2>\")+c[2],i=c[0];while(i--)s=s.lastChild;if(!b.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!b.support.tbody){o=\"table\"!==u||xt.test(o)?\"<table>\"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)b.nodeName(l=o.childNodes[i],\"tbody\")&&!l.childNodes.length&&o.removeChild(l)\r\n}b.merge(d,s.childNodes),s.textContent=\"\";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),b.support.appendChecked||b.grep(Ot(d,\"input\"),Bt),h=0;while(o=d[h++])if((!r||-1===b.inArray(o,r))&&(a=b.contains(o.ownerDocument,o),s=Ot(f.appendChild(o),\"script\"),a&&Mt(s),n)){i=0;while(o=s[i++])kt.test(o.type||\"\")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,u=b.expando,l=b.cache,p=b.support.deleteExpando,f=b.event.special;for(;null!=(n=e[s]);s++)if((t||b.acceptData(n))&&(o=n[u],a=o&&l[o])){if(a.events)for(r in a.events)f[r]?b.event.remove(n,r):b.removeEvent(n,r,a.handle);l[o]&&(delete l[o],p?delete n[u]:typeof n.removeAttribute!==i?n.removeAttribute(u):n[u]=null,c.push(o))}}});var Pt,Rt,Wt,$t=/alpha\\([^)]*\\)/i,It=/opacity\\s*=\\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp(\"^(\"+x+\")(.*)$\",\"i\"),Yt=RegExp(\"^(\"+x+\")(?!px)[a-z%]+$\",\"i\"),Jt=RegExp(\"^([+-])=(\"+x+\")\",\"i\"),Gt={BODY:\"block\"},Qt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Kt={letterSpacing:0,fontWeight:400},Zt=[\"Top\",\"Right\",\"Bottom\",\"Left\"],en=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,\"none\"===b.css(e,\"display\")||!b.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=b._data(r,\"olddisplay\"),n=r.style.display,t?(o[a]||\"none\"!==n||(r.style.display=\"\"),\"\"===r.style.display&&nn(r)&&(o[a]=b._data(r,\"olddisplay\",un(r.nodeName)))):o[a]||(i=nn(r),(n&&\"none\"!==n||!i)&&b._data(r,\"olddisplay\",i?n:b.css(r,\"display\"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&\"none\"!==r.style.display&&\"\"!==r.style.display||(r.style.display=t?o[a]||\"\":\"none\"));return e}b.fn.extend({css:function(e,n){return b.access(this,function(e,n,r){var i,o,a={},s=0;if(b.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=b.css(e,n[s],!1,o);return a}return r!==t?b.style(e,n,r):b.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){var t=\"boolean\"==typeof e;return this.each(function(){(t?e:nn(this))?b(this).show():b(this).hide()})}}),b.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":b.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,u=b.camelCase(n),l=e.style;if(n=b.cssProps[u]||(b.cssProps[u]=tn(l,u)),s=b.cssHooks[n]||b.cssHooks[u],r===t)return s&&\"get\"in s&&(o=s.get(e,!1,i))!==t?o:l[n];if(a=typeof r,\"string\"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(b.css(e,n)),a=\"number\"),!(null==r||\"number\"===a&&isNaN(r)||(\"number\"!==a||b.cssNumber[u]||(r+=\"px\"),b.support.clearCloneStyle||\"\"!==r||0!==n.indexOf(\"background\")||(l[n]=\"inherit\"),s&&\"set\"in s&&(r=s.set(e,r,i))===t)))try{l[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,u=b.camelCase(n);return n=b.cssProps[u]||(b.cssProps[u]=tn(e.style,u)),s=b.cssHooks[n]||b.cssHooks[u],s&&\"get\"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),\"normal\"===a&&n in Kt&&(a=Kt[n]),\"\"===r||r?(o=parseFloat(a),r===!0||b.isNumeric(o)?o||0:a):a},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s.getPropertyValue(n)||s[n]:t,l=e.style;return s&&(\"\"!==u||b.contains(e.ownerDocument,e)||(u=b.style(e,n)),Yt.test(u)&&Ut.test(n)&&(i=l.width,o=l.minWidth,a=l.maxWidth,l.minWidth=l.maxWidth=l.width=u,u=s.width,l.width=i,l.minWidth=o,l.maxWidth=a)),u}):o.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s[n]:t,l=e.style;return null==u&&l&&l[n]&&(u=l[n]),Yt.test(u)&&!zt.test(n)&&(i=l.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),l.left=\"fontSize\"===n?\"1em\":u,u=l.pixelLeft+\"px\",l.left=i,a&&(o.left=a)),\"\"===u?\"auto\":u});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||\"px\"):t}function an(e,t,n,r,i){var o=n===(r?\"border\":\"content\")?4:\"width\"===t?1:0,a=0;for(;4>o;o+=2)\"margin\"===n&&(a+=b.css(e,n+Zt[o],!0,i)),r?(\"content\"===n&&(a-=b.css(e,\"padding\"+Zt[o],!0,i)),\"margin\"!==n&&(a-=b.css(e,\"border\"+Zt[o]+\"Width\",!0,i))):(a+=b.css(e,\"padding\"+Zt[o],!0,i),\"padding\"!==n&&(a+=b.css(e,\"border\"+Zt[o]+\"Width\",!0,i)));return a}function sn(e,t,n){var r=!0,i=\"width\"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=b.support.boxSizing&&\"border-box\"===b.css(e,\"boxSizing\",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(b.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?\"border\":\"content\"),r,o)+\"px\"}function un(e){var t=o,n=Gt[e];return n||(n=ln(e,t),\"none\"!==n&&n||(Pt=(Pt||b(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write(\"<!doctype html><html><body>\"),t.close(),n=ln(e,t),Pt.detach()),Gt[e]=n),n}function ln(e,t){var n=b(t.createElement(e)).appendTo(t.body),r=b.css(n[0],\"display\");return n.remove(),r}b.each([\"height\",\"width\"],function(e,n){b.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(b.css(e,\"display\"))?b.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,b.support.boxSizing&&\"border-box\"===b.css(e,\"boxSizing\",!1,i),i):0)}}}),b.support.opacity||(b.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":t?\"1\":\"\"},set:function(e,t){var n=e.style,r=e.currentStyle,i=b.isNumeric(t)?\"alpha(opacity=\"+100*t+\")\":\"\",o=r&&r.filter||n.filter||\"\";n.zoom=1,(t>=1||\"\"===t)&&\"\"===b.trim(o.replace($t,\"\"))&&n.removeAttribute&&(n.removeAttribute(\"filter\"),\"\"===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+\" \"+i)}}),b(function(){b.support.reliableMarginRight||(b.cssHooks.marginRight={get:function(e,n){return n?b.swap(e,{display:\"inline-block\"},Wt,[e,\"marginRight\"]):t}}),!b.support.pixelPosition&&b.fn.position&&b.each([\"top\",\"left\"],function(e,n){b.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?b(e).position()[n]+\"px\":r):t}}})}),b.expr&&b.expr.filters&&(b.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!b.support.reliableHiddenOffsets&&\"none\"===(e.style&&e.style.display||b.css(e,\"display\"))},b.expr.filters.visible=function(e){return!b.expr.filters.hidden(e)}),b.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){b.cssHooks[e+t]={expand:function(n){var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(b.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\\[\\]$/,fn=/\\r?\\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;b.fn.extend({serialize:function(){return b.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=b.prop(this,\"elements\");return e?b.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!b(this).is(\":disabled\")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Nt.test(e))}).map(function(e,t){var n=b(this).val();return null==n?null:b.isArray(n)?b.map(n,function(e){return{name:t.name,value:e.replace(fn,\"\\r\\n\")}}):{name:t.name,value:n.replace(fn,\"\\r\\n\")}}).get()}}),b.param=function(e,n){var r,i=[],o=function(e,t){t=b.isFunction(t)?t():null==t?\"\":t,i[i.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(t)};if(n===t&&(n=b.ajaxSettings&&b.ajaxSettings.traditional),b.isArray(e)||e.jquery&&!b.isPlainObject(e))b.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join(\"&\").replace(cn,\"+\")};function gn(e,t,n,r){var i;if(b.isArray(t))b.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+\"[\"+(\"object\"==typeof i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==b.type(t))r(e,t);else for(i in t)gn(e+\"[\"+i+\"]\",t[i],n,r)}b.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(e,t){b.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),b.fn.hover=function(e,t){return this.mouseenter(e).mouseleave(t||e)};var mn,yn,vn=b.now(),bn=/\\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Nn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Cn=/^(?:GET|HEAD)$/,kn=/^\\/\\//,En=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,Sn=b.fn.load,An={},jn={},Dn=\"*/\".concat(\"*\");try{yn=a.href}catch(Ln){yn=o.createElement(\"a\"),yn.href=\"\",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(w)||[];if(b.isFunction(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(u){var l;return o[u]=!0,b.each(e[u]||[],function(e,u){var c=u(n,r,i);return\"string\"!=typeof c||a||o[c]?a?!(l=c):t:(n.dataTypes.unshift(c),s(c),!1)}),l}return s(n.dataTypes[0])||!o[\"*\"]&&s(\"*\")}function Mn(e,n){var r,i,o=b.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&b.extend(!0,e,r),e}b.fn.load=function(e,n,r){if(\"string\"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,u=e.indexOf(\" \");return u>=0&&(i=e.slice(u,e.length),e=e.slice(0,u)),b.isFunction(n)?(r=n,n=t):n&&\"object\"==typeof n&&(a=\"POST\"),s.length>0&&b.ajax({url:e,type:a,dataType:\"html\",data:n}).done(function(e){o=arguments,s.html(i?b(\"<div>\").append(b.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},b.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){b.fn[t]=function(e){return this.on(t,e)}}),b.each([\"get\",\"post\"],function(e,n){b[n]=function(e,r,i,o){return b.isFunction(r)&&(o=o||i,i=r,r=t),b.ajax({url:e,type:n,dataType:o,data:r,success:i})}}),b.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:\"GET\",isLocal:Nn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Dn,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":e.String,\"text html\":!0,\"text json\":b.parseJSON,\"text xml\":b.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Mn(Mn(e,b.ajaxSettings),t):Mn(b.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){\"object\"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,u,l,c,p=b.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?b(f):b.event,h=b.Deferred(),g=b.Callbacks(\"once memory\"),m=p.statusCode||{},y={},v={},x=0,T=\"canceled\",N={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return x||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)m[t]=[m[t],e[t]];else N.always(e[N.status]);return this},abort:function(e){var t=e||T;return l&&l.abort(t),k(0,t),this}};if(h.promise(N).complete=g.add,N.success=N.done,N.error=N.fail,p.url=((e||p.url||yn)+\"\").replace(xn,\"\").replace(kn,mn[1]+\"//\"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=b.trim(p.dataType||\"*\").toLowerCase().match(w)||[\"\"],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||(\"http:\"===r[1]?80:443))==(mn[3]||(\"http:\"===mn[1]?80:443)))),p.data&&p.processData&&\"string\"!=typeof p.data&&(p.data=b.param(p.data,p.traditional)),qn(An,p,n,N),2===x)return N;u=p.global,u&&0===b.active++&&b.event.trigger(\"ajaxStart\"),p.type=p.type.toUpperCase(),p.hasContent=!Cn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?\"&\":\"?\")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,\"$1_=\"+vn++):o+(bn.test(o)?\"&\":\"?\")+\"_=\"+vn++)),p.ifModified&&(b.lastModified[o]&&N.setRequestHeader(\"If-Modified-Since\",b.lastModified[o]),b.etag[o]&&N.setRequestHeader(\"If-None-Match\",b.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&N.setRequestHeader(\"Content-Type\",p.contentType),N.setRequestHeader(\"Accept\",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+(\"*\"!==p.dataTypes[0]?\", \"+Dn+\"; q=0.01\":\"\"):p.accepts[\"*\"]);for(i in p.headers)N.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,N,p)===!1||2===x))return N.abort();T=\"abort\";for(i in{success:1,error:1,complete:1})N[i](p[i]);if(l=qn(jn,p,n,N)){N.readyState=1,u&&d.trigger(\"ajaxSend\",[N,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){N.abort(\"timeout\")},p.timeout));try{x=1,l.send(y,k)}catch(C){if(!(2>x))throw C;k(-1,C)}}else k(-1,\"No Transport\");function k(e,n,r,i){var c,y,v,w,T,C=n;2!==x&&(x=2,s&&clearTimeout(s),l=t,a=i||\"\",N.readyState=e>0?4:0,r&&(w=_n(p,N,r)),e>=200&&300>e||304===e?(p.ifModified&&(T=N.getResponseHeader(\"Last-Modified\"),T&&(b.lastModified[o]=T),T=N.getResponseHeader(\"etag\"),T&&(b.etag[o]=T)),204===e?(c=!0,C=\"nocontent\"):304===e?(c=!0,C=\"notmodified\"):(c=Fn(p,w),C=c.state,y=c.data,v=c.error,c=!v)):(v=C,(e||!C)&&(C=\"error\",0>e&&(e=0))),N.status=e,N.statusText=(n||C)+\"\",c?h.resolveWith(f,[y,C,N]):h.rejectWith(f,[N,C,v]),N.statusCode(m),m=t,u&&d.trigger(c?\"ajaxSuccess\":\"ajaxError\",[N,p,c?y:v]),g.fireWith(f,[N,C]),u&&(d.trigger(\"ajaxComplete\",[N,p]),--b.active||b.event.trigger(\"ajaxStop\")))}return N},getScript:function(e,n){return b.get(e,t,n,\"script\")},getJSON:function(e,t,n){return b.get(e,t,n,\"json\")}});function _n(e,n,r){var i,o,a,s,u=e.contents,l=e.dataTypes,c=e.responseFields;for(s in c)s in r&&(n[c[s]]=r[s]);while(\"*\"===l[0])l.shift(),o===t&&(o=e.mimeType||n.getResponseHeader(\"Content-Type\"));if(o)for(s in u)if(u[s]&&u[s].test(o)){l.unshift(s);break}if(l[0]in r)a=l[0];else{for(s in r){if(!l[0]||e.converters[s+\" \"+l[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==l[0]&&l.unshift(a),r[a]):t}function Fn(e,t){var n,r,i,o,a={},s=0,u=e.dataTypes.slice(),l=u[0];if(e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u[1])for(i in e.converters)a[i.toLowerCase()]=e.converters[i];for(;r=u[++s];)if(\"*\"!==r){if(\"*\"!==l&&l!==r){if(i=a[l+\" \"+r]||a[\"* \"+r],!i)for(n in a)if(o=n.split(\" \"),o[1]===r&&(i=a[l+\" \"+o[0]]||a[\"* \"+o[0]])){i===!0?i=a[n]:a[n]!==!0&&(r=o[0],u.splice(s--,0,r));break}if(i!==!0)if(i&&e[\"throws\"])t=i(t);else try{t=i(t)}catch(c){return{state:\"parsererror\",error:i?c:\"No conversion from \"+l+\" to \"+r}}}l=r}return{state:\"success\",data:t}}b.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(e){return b.globalEval(e),e}}}),b.ajaxPrefilter(\"script\",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\",e.global=!1)}),b.ajaxTransport(\"script\",function(e){if(e.crossDomain){var n,r=o.head||b(\"head\")[0]||o.documentElement;return{send:function(t,i){n=o.createElement(\"script\"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,\"success\"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var On=[],Bn=/(=)\\?(?=&|$)|\\?\\?/;b.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=On.pop()||b.expando+\"_\"+vn++;return this[e]=!0,e}}),b.ajaxPrefilter(\"json jsonp\",function(n,r,i){var o,a,s,u=n.jsonp!==!1&&(Bn.test(n.url)?\"url\":\"string\"==typeof n.data&&!(n.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Bn.test(n.data)&&\"data\");return u||\"jsonp\"===n.dataTypes[0]?(o=n.jsonpCallback=b.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,u?n[u]=n[u].replace(Bn,\"$1\"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?\"&\":\"?\")+n.jsonp+\"=\"+o),n.converters[\"script json\"]=function(){return s||b.error(o+\" was not called\"),s[0]},n.dataTypes[0]=\"json\",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,On.push(o)),s&&b.isFunction(a)&&a(s[0]),s=a=t}),\"script\"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(t){}}b.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=b.ajaxSettings.xhr(),b.support.cors=!!Rn&&\"withCredentials\"in Rn,Rn=b.support.ajax=!!Rn,Rn&&b.ajaxTransport(function(n){if(!n.crossDomain||b.support.cors){var r;return{send:function(i,o){var a,s,u=n.xhr();if(n.username?u.open(n.type,n.url,n.async,n.username,n.password):u.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)u[s]=n.xhrFields[s];n.mimeType&&u.overrideMimeType&&u.overrideMimeType(n.mimeType),n.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(s in i)u.setRequestHeader(s,i[s])}catch(l){}u.send(n.hasContent&&n.data||null),r=function(e,i){var s,l,c,p;try{if(r&&(i||4===u.readyState))if(r=t,a&&(u.onreadystatechange=b.noop,$n&&delete Pn[a]),i)4!==u.readyState&&u.abort();else{p={},s=u.status,l=u.getAllResponseHeaders(),\"string\"==typeof u.responseText&&(p.text=u.responseText);try{c=u.statusText}catch(f){c=\"\"}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,l)},n.async?4===u.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},b(e).unload($n)),Pn[a]=r),u.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp(\"^(?:([+-])=|)(\"+x+\")([a-z%]*)$\",\"i\"),Jn=/queueHooks$/,Gn=[nr],Qn={\"*\":[function(e,t){var n,r,i=this.createTween(e,t),o=Yn.exec(t),a=i.cur(),s=+a||0,u=1,l=20;if(o){if(n=+o[2],r=o[3]||(b.cssNumber[e]?\"\":\"px\"),\"px\"!==r&&s){s=b.css(i.elem,e,!0)||n||1;do u=u||\".5\",s/=u,b.style(i.elem,e,s+r);while(u!==(u=i.cur()/a)&&1!==u&&--l)}i.unit=r,i.start=s,i.end=o[1]?s+(o[1]+1)*n:n}return i}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=b.now()}function Zn(e,t){b.each(t,function(t,n){var r=(Qn[t]||[]).concat(Qn[\"*\"]),i=0,o=r.length;for(;o>i;i++)if(r[i].call(e,t,n))return})}function er(e,t,n){var r,i,o=0,a=Gn.length,s=b.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,a=0,u=l.tweens.length;for(;u>a;a++)l.tweens[a].run(o);return s.notifyWith(e,[l,o,n]),1>o&&u?n:(s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:b.extend({},t),opts:b.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=b.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?s.resolveWith(e,[l,t]):s.rejectWith(e,[l,t]),this}}),c=l.props;for(tr(c,l.opts.specialEasing);a>o;o++)if(r=Gn[o].call(l,e,c,l.opts))return r;return Zn(l,c),b.isFunction(l.opts.start)&&l.opts.start.call(e,l),b.fx.timer(b.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function tr(e,t){var n,r,i,o,a;for(i in e)if(r=b.camelCase(i),o=t[r],n=e[i],b.isArray(n)&&(o=n[1],n=e[i]=n[0]),i!==r&&(e[r]=n,delete e[i]),a=b.cssHooks[r],a&&\"expand\"in a){n=a.expand(n),delete e[r];for(i in n)i in e||(e[i]=n[i],t[i]=o)}else t[r]=o}b.Animation=b.extend(er,{tweener:function(e,t){b.isFunction(e)?(t=e,e=[\"*\"]):e=e.split(\" \");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,u,l,c,p,f=this,d=e.style,h={},g=[],m=e.nodeType&&nn(e);n.queue||(c=b._queueHooks(e,\"fx\"),null==c.unqueued&&(c.unqueued=0,p=c.empty.fire,c.empty.fire=function(){c.unqueued||p()}),c.unqueued++,f.always(function(){f.always(function(){c.unqueued--,b.queue(e,\"fx\").length||c.empty.fire()})})),1===e.nodeType&&(\"height\"in t||\"width\"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],\"inline\"===b.css(e,\"display\")&&\"none\"===b.css(e,\"float\")&&(b.support.inlineBlockNeedsLayout&&\"inline\"!==un(e.nodeName)?d.zoom=1:d.display=\"inline-block\")),n.overflow&&(d.overflow=\"hidden\",b.support.shrinkWrapBlocks||f.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(i in t)if(a=t[i],Vn.exec(a)){if(delete t[i],u=u||\"toggle\"===a,a===(m?\"hide\":\"show\"))continue;g.push(i)}if(o=g.length){s=b._data(e,\"fxshow\")||b._data(e,\"fxshow\",{}),\"hidden\"in s&&(m=s.hidden),u&&(s.hidden=!m),m?b(e).show():f.done(function(){b(e).hide()}),f.done(function(){var t;b._removeData(e,\"fxshow\");for(t in h)b.style(e,t,h[t])});for(i=0;o>i;i++)r=g[i],l=f.createTween(r,m?s[r]:0),h[r]=s[r]||b.style(e,r),r in s||(s[r]=l.start,m&&(l.end=l.start,l.start=\"width\"===r||\"height\"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}b.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||\"swing\",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(b.cssNumber[n]?\"\":\"px\")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?b.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=b.css(e.elem,e.prop,\"\"),t&&\"auto\"!==t?t:0):e.elem[e.prop]},set:function(e){b.fx.step[e.prop]?b.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[b.cssProps[e.prop]]||b.cssHooks[e.prop])?b.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},b.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=b.fn[t];b.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),b.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=b.isEmptyObject(e),o=b.speed(t,n,r),a=function(){var t=er(this,b.extend({},e),o);a.finish=function(){t.stop(!0)},(i||b._data(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return\"string\"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,n=null!=e&&e+\"queueHooks\",o=b.timers,a=b._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&b.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||\"fx\"),this.each(function(){var t,n=b._data(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=b.timers,a=r?r.length:0;for(n.finish=!0,b.queue(this,e,[]),i&&i.cur&&i.cur.finish&&i.cur.finish.call(this),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r[\"margin\"+n]=r[\"padding\"+n]=e;return t&&(r.opacity=r.width=e),r}b.each({slideDown:ir(\"show\"),slideUp:ir(\"hide\"),slideToggle:ir(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){b.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),b.speed=function(e,t,n){var r=e&&\"object\"==typeof e?b.extend({},e):{complete:n||!n&&t||b.isFunction(e)&&e,duration:e,easing:n&&t||t&&!b.isFunction(t)&&t};return r.duration=b.fx.off?0:\"number\"==typeof r.duration?r.duration:r.duration in b.fx.speeds?b.fx.speeds[r.duration]:b.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){b.isFunction(r.old)&&r.old.call(this),r.queue&&b.dequeue(this,r.queue)},r},b.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},b.timers=[],b.fx=rr.prototype.init,b.fx.tick=function(){var e,n=b.timers,r=0;for(Xn=b.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||b.fx.stop(),Xn=t},b.fx.timer=function(e){e()&&b.timers.push(e)&&b.fx.start()},b.fx.interval=13,b.fx.start=function(){Un||(Un=setInterval(b.fx.tick,b.fx.interval))},b.fx.stop=function(){clearInterval(Un),Un=null},b.fx.speeds={slow:600,fast:200,_default:400},b.fx.step={},b.expr&&b.expr.filters&&(b.expr.filters.animated=function(e){return b.grep(b.timers,function(t){return e===t.elem}).length}),b.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){b.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,b.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},b.offset={setOffset:function(e,t,n){var r=b.css(e,\"position\");\"static\"===r&&(e.style.position=\"relative\");var i=b(e),o=i.offset(),a=b.css(e,\"top\"),s=b.css(e,\"left\"),u=(\"absolute\"===r||\"fixed\"===r)&&b.inArray(\"auto\",[a,s])>-1,l={},c={},p,f;u?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),b.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(l.top=t.top-o.top+p),null!=t.left&&(l.left=t.left-o.left+f),\"using\"in t?t.using.call(e,l):i.css(l)}},b.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return\"fixed\"===b.css(r,\"position\")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),b.nodeName(e[0],\"html\")||(n=e.offset()),n.top+=b.css(e[0],\"borderTopWidth\",!0),n.left+=b.css(e[0],\"borderLeftWidth\",!0)),{top:t.top-n.top-b.css(r,\"marginTop\",!0),left:t.left-n.left-b.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||o.documentElement;while(e&&!b.nodeName(e,\"html\")&&\"static\"===b.css(e,\"position\"))e=e.offsetParent;return e||o.documentElement})}}),b.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,n){var r=/Y/.test(n);b.fn[e]=function(i){return b.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?b(a).scrollLeft():o,r?o:b(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return b.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}b.each({Height:\"height\",Width:\"width\"},function(e,n){b.each({padding:\"inner\"+e,content:n,\"\":\"outer\"+e},function(r,i){b.fn[i]=function(i,o){var a=arguments.length&&(r||\"boolean\"!=typeof i),s=r||(i===!0||o===!0?\"margin\":\"border\");return b.access(this,function(n,r,i){var o;return b.isWindow(n)?n.document.documentElement[\"client\"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body[\"scroll\"+e],o[\"scroll\"+e],n.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):i===t?b.css(n,r,s):b.style(n,r,i,s)},n,a?i:t,a,null)}})}),e.jQuery=e.$=b,\"function\"==typeof define&&define.amd&&define.amd.jQuery&&define(\"jquery\",[],function(){return b})})(window);","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar exportTypedArrayMethod = require('../internals/array-buffer-view-core').exportTypedArrayMethod;\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar Uint8Array = global.Uint8Array;\nvar Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};\nvar arrayToString = [].toString;\nvar arrayJoin = [].join;\n\nif (fails(function () { arrayToString.call({}); })) {\n  arrayToString = function toString() {\n    return arrayJoin.call(this);\n  };\n}\n\nvar IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;\n\n// `%TypedArray%.prototype.toString` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring\nexportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $fill = require('../internals/array-fill');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.fill` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill\n// eslint-disable-next-line no-unused-vars -- required for `.length`\nexportTypedArrayMethod('fill', function fill(value /* , start, end */) {\n  return $fill.apply(aTypedArray(this), arguments);\n});\n","var path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-array-constructors-require-wrappers');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar ArrayBufferModule = require('../internals/array-buffer');\nvar anInstance = require('../internals/an-instance');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar isIntegralNumber = require('../internals/is-integral-number');\nvar toLength = require('../internals/to-length');\nvar toIndex = require('../internals/to-index');\nvar toOffset = require('../internals/to-offset');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar create = require('../internals/object-create');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar typedArrayFrom = require('../internals/typed-array-from');\nvar forEach = require('../internals/array-iteration').forEach;\nvar setSpecies = require('../internals/set-species');\nvar definePropertyModule = require('../internals/object-define-property');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar InternalStateModule = require('../internals/internal-state');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar round = Math.round;\nvar RangeError = global.RangeError;\nvar ArrayBuffer = ArrayBufferModule.ArrayBuffer;\nvar DataView = ArrayBufferModule.DataView;\nvar NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\nvar TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;\nvar TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;\nvar TypedArray = ArrayBufferViewCore.TypedArray;\nvar TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\nvar isTypedArray = ArrayBufferViewCore.isTypedArray;\nvar BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\nvar WRONG_LENGTH = 'Wrong length';\n\nvar fromList = function (C, list) {\n  var index = 0;\n  var length = list.length;\n  var result = new (aTypedArrayConstructor(C))(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n\nvar addGetter = function (it, key) {\n  nativeDefineProperty(it, key, { get: function () {\n    return getInternalState(this)[key];\n  } });\n};\n\nvar isArrayBuffer = function (it) {\n  var klass;\n  return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';\n};\n\nvar isTypedArrayIndex = function (target, key) {\n  return isTypedArray(target)\n    && !isSymbol(key)\n    && key in target\n    && isIntegralNumber(+key)\n    && key >= 0;\n};\n\nvar wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {\n  key = toPropertyKey(key);\n  return isTypedArrayIndex(target, key)\n    ? createPropertyDescriptor(2, target[key])\n    : nativeGetOwnPropertyDescriptor(target, key);\n};\n\nvar wrappedDefineProperty = function defineProperty(target, key, descriptor) {\n  key = toPropertyKey(key);\n  if (isTypedArrayIndex(target, key)\n    && isObject(descriptor)\n    && hasOwn(descriptor, 'value')\n    && !hasOwn(descriptor, 'get')\n    && !hasOwn(descriptor, 'set')\n    // TODO: add validation descriptor w/o calling accessors\n    && !descriptor.configurable\n    && (!hasOwn(descriptor, 'writable') || descriptor.writable)\n    && (!hasOwn(descriptor, 'enumerable') || descriptor.enumerable)\n  ) {\n    target[key] = descriptor.value;\n    return target;\n  } return nativeDefineProperty(target, key, descriptor);\n};\n\nif (DESCRIPTORS) {\n  if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;\n    definePropertyModule.f = wrappedDefineProperty;\n    addGetter(TypedArrayPrototype, 'buffer');\n    addGetter(TypedArrayPrototype, 'byteOffset');\n    addGetter(TypedArrayPrototype, 'byteLength');\n    addGetter(TypedArrayPrototype, 'length');\n  }\n\n  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {\n    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,\n    defineProperty: wrappedDefineProperty\n  });\n\n  module.exports = function (TYPE, wrapper, CLAMPED) {\n    var BYTES = TYPE.match(/\\d+$/)[0] / 8;\n    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + TYPE;\n    var SETTER = 'set' + TYPE;\n    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];\n    var TypedArrayConstructor = NativeTypedArrayConstructor;\n    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;\n    var exported = {};\n\n    var getter = function (that, index) {\n      var data = getInternalState(that);\n      return data.view[GETTER](index * BYTES + data.byteOffset, true);\n    };\n\n    var setter = function (that, index, value) {\n      var data = getInternalState(that);\n      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;\n      data.view[SETTER](index * BYTES + data.byteOffset, value, true);\n    };\n\n    var addElement = function (that, index) {\n      nativeDefineProperty(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n\n    if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {\n        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        var index = 0;\n        var byteOffset = 0;\n        var buffer, byteLength, length;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new ArrayBuffer(byteLength);\n        } else if (isArrayBuffer(data)) {\n          buffer = data;\n          byteOffset = toOffset(offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - byteOffset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (isTypedArray(data)) {\n          return fromList(TypedArrayConstructor, data);\n        } else {\n          return typedArrayFrom.call(TypedArrayConstructor, data);\n        }\n        setInternalState(that, {\n          buffer: buffer,\n          byteOffset: byteOffset,\n          byteLength: byteLength,\n          length: length,\n          view: new DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);\n    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {\n      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {\n        anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        return inheritIfRequired(function () {\n          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));\n          if (isArrayBuffer(data)) return $length !== undefined\n            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)\n            : typedArrayOffset !== undefined\n              ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))\n              : new NativeTypedArrayConstructor(data);\n          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);\n          return typedArrayFrom.call(TypedArrayConstructor, data);\n        }(), dummy, TypedArrayConstructor);\n      });\n\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {\n        if (!(key in TypedArrayConstructor)) {\n          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);\n        }\n      });\n      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;\n    }\n\n    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);\n    }\n\n    createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_CONSTRUCTOR, TypedArrayConstructor);\n\n    if (TYPED_ARRAY_TAG) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);\n    }\n\n    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;\n\n    $({\n      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS\n    }, exported);\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {\n      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    setSpecies(CONSTRUCTOR_NAME);\n  };\n} else module.exports = function () { /* empty */ };\n","// IEEE754 conversions based on https://github.com/feross/ieee754\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nvar pack = function (number, mantissaLength, bytes) {\n  var buffer = new Array(bytes);\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;\n  var index = 0;\n  var exponent, mantissa, c;\n  number = abs(number);\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (number != number || number === Infinity) {\n    // eslint-disable-next-line no-self-compare -- NaN check\n    mantissa = number != number ? 1 : 0;\n    exponent = eMax;\n  } else {\n    exponent = floor(log(number) / LN2);\n    if (number * (c = pow(2, -exponent)) < 1) {\n      exponent--;\n      c *= 2;\n    }\n    if (exponent + eBias >= 1) {\n      number += rt / c;\n    } else {\n      number += rt * pow(2, 1 - eBias);\n    }\n    if (number * c >= 2) {\n      exponent++;\n      c /= 2;\n    }\n    if (exponent + eBias >= eMax) {\n      mantissa = 0;\n      exponent = eMax;\n    } else if (exponent + eBias >= 1) {\n      mantissa = (number * c - 1) * pow(2, mantissaLength);\n      exponent = exponent + eBias;\n    } else {\n      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);\n      exponent = 0;\n    }\n  }\n  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);\n  exponent = exponent << mantissaLength | mantissa;\n  exponentLength += mantissaLength;\n  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);\n  buffer[--index] |= sign * 128;\n  return buffer;\n};\n\nvar unpack = function (buffer, mantissaLength) {\n  var bytes = buffer.length;\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var nBits = exponentLength - 7;\n  var index = bytes - 1;\n  var sign = buffer[index--];\n  var exponent = sign & 127;\n  var mantissa;\n  sign >>= 7;\n  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);\n  mantissa = exponent & (1 << -nBits) - 1;\n  exponent >>= -nBits;\n  nBits += mantissaLength;\n  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);\n  if (exponent === 0) {\n    exponent = 1 - eBias;\n  } else if (exponent === eMax) {\n    return mantissa ? NaN : sign ? -Infinity : Infinity;\n  } else {\n    mantissa = mantissa + pow(2, mantissaLength);\n    exponent = exponent - eBias;\n  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);\n};\n\nmodule.exports = {\n  pack: pack,\n  unpack: unpack\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = lengthOfArrayLike(O);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $includes = require('../internals/array-includes').includes;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.includes` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes\nexportTypedArrayMethod('includes', function includes(searchElement /* , fromIndex */) {\n  return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","/* eslint-disable no-new -- required for testing */\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar NATIVE_ARRAY_BUFFER_VIEWS = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER_VIEWS;\n\nvar ArrayBuffer = global.ArrayBuffer;\nvar Int8Array = global.Int8Array;\n\nmodule.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {\n  Int8Array(1);\n}) || !fails(function () {\n  new Int8Array(-1);\n}) || !checkCorrectnessOfIteration(function (iterable) {\n  new Int8Array();\n  new Int8Array(null);\n  new Int8Array(1.5);\n  new Int8Array(iterable);\n}, true) || fails(function () {\n  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill\n  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int16Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int16', function (init) {\n  return function Int16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","'use strict';\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar toString = require('../internals/to-string');\nvar regexpFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar shared = require('../internals/shared');\nvar create = require('../internals/object-create');\nvar getInternalState = require('../internals/internal-state').get;\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar nativeExec = RegExp.prototype.exec;\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\n\nif (PATCH) {\n  // eslint-disable-next-line max-statements -- TODO\n  patchedExec = function exec(string) {\n    var re = this;\n    var state = getInternalState(re);\n    var str = toString(string);\n    var raw = state.raw;\n    var result, reCopy, lastIndex, match, i, object, group;\n\n    if (raw) {\n      raw.lastIndex = re.lastIndex;\n      result = patchedExec.call(raw, str);\n      re.lastIndex = raw.lastIndex;\n      return result;\n    }\n\n    var groups = state.groups;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = str.slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str.charAt(re.lastIndex - 1) !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    if (match && groups) {\n      match.groups = object = create(null);\n      for (i = 0; i < groups.length; i++) {\n        group = groups[i];\n        object[group[0]] = match[group[1]];\n      }\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $copyWithin = require('../internals/array-copy-within');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.copyWithin` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin\nexportTypedArrayMethod('copyWithin', function copyWithin(target, start /* , end */) {\n  return $copyWithin.call(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n});\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nexports.UNSUPPORTED_Y = fails(function () {\n  var re = $RegExp('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = $RegExp('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","var aConstructor = require('../internals/a-constructor');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar bind = require('../internals/function-bind-context');\nvar aTypedArrayConstructor = require('../internals/array-buffer-view-core').aTypedArrayConstructor;\n\nmodule.exports = function from(source /* , mapfn, thisArg */) {\n  var C = aConstructor(this);\n  var O = toObject(source);\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var i, length, result, step, iterator, next;\n  if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {\n    iterator = getIterator(O, iteratorMethod);\n    next = iterator.next;\n    O = [];\n    while (!(step = next.call(iterator)).done) {\n      O.push(step.value);\n    }\n  }\n  if (mapping && argumentsLength > 2) {\n    mapfn = bind(mapfn, arguments[2], 2);\n  }\n  length = lengthOfArrayLike(O);\n  result = new (aTypedArrayConstructor(C))(length);\n  for (i = 0; length > i; i++) {\n    result[i] = mapping ? mapfn(O[i], i) : O[i];\n  }\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.es/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = $toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.es/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.es/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (isCallable($replacer)) value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  var valueOf = $Symbol[PROTOTYPE].valueOf;\n  redefine($Symbol[PROTOTYPE], TO_PRIMITIVE, function () {\n    return valueOf.apply(this, arguments);\n  });\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $every = require('../internals/array-iteration').every;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.every` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every\nexportTypedArrayMethod('every', function every(callbackfn /* , thisArg */) {\n  return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// TODO: use something more complex like timsort?\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    mergeSort(array.slice(0, middle), comparefn),\n    mergeSort(array.slice(middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n  var result = [];\n\n  while (lindex < llength || rindex < rlength) {\n    if (lindex < llength && rindex < rlength) {\n      result.push(comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]);\n    } else {\n      result.push(lindex < llength ? left[lindex++] : right[rindex++]);\n    }\n  } return result;\n};\n\nmodule.exports = mergeSort;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","'use strict';\nvar global = require('../internals/global');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar fails = require('../internals/fails');\n\nvar Int8Array = global.Int8Array;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $toLocaleString = [].toLocaleString;\nvar $slice = [].slice;\n\n// iOS Safari 6.x fails here\nvar TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {\n  $toLocaleString.call(new Int8Array(1));\n});\n\nvar FORCED = fails(function () {\n  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();\n}) || !fails(function () {\n  Int8Array.prototype.toLocaleString.call([1, 2]);\n});\n\n// `%TypedArray%.prototype.toLocaleString` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring\nexportTypedArrayMethod('toLocaleString', function toLocaleString() {\n  return $toLocaleString.apply(TO_LOCALE_STRING_BUG ? $slice.call(aTypedArray(this)) : aTypedArray(this), arguments);\n}, FORCED);\n","var ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n\n// a part of `TypedArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#typedarray-species-create\nmodule.exports = function (originalArray) {\n  return aTypedArrayConstructor(speciesConstructor(originalArray, originalArray[TYPED_ARRAY_CONSTRUCTOR]));\n};\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push.call(target, value); // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","/*eslint-disable*/\r\n/*\r\n录音 Recorder扩展，动态波形显示\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n(function(){\r\n\r\nvar WaveView=function(set){\r\n\treturn new fn(set);\r\n};\r\nvar fn=function(set){\r\n\tvar This=this;\r\n\tvar o={\r\n\t\t/*\r\n\t\telem:\"css selector\" //自动显示到dom，并以此dom大小为显示大小\r\n\t\t\t//或者配置显示大小，手动把waveviewObj.elem显示到别的地方\r\n\t\t,width:0 //显示宽度\r\n\t\t,height:0 //显示高度\r\n\t\t\r\n\t\t以上配置二选一\r\n\t\t*/\r\n\t\t\r\n\t\tscale:2 //缩放系数，因为正整数，使用2(3? no!)倍宽高进行绘制，避免移动端绘制模糊\r\n\t\t,speed:8 //移动速度系数，越大越快\r\n\t\t\r\n\t\t,lineWidth:3 //线条基础粗细\r\n\t\t\r\n\t\t//渐变色配置：[位置，css颜色，...] 位置: 取值0.0-1.0之间\r\n\t\t,linear1:[0,\"rgba(150,96,238,1)\",0.2,\"rgba(170,79,249,1)\",1,\"rgba(53,199,253,1)\"] //线条渐变色1，从左到右\r\n\t\t,linear2:[0,\"rgba(209,130,255,0.6)\",1,\"rgba(53,199,255,0.6)\"] //线条渐变色2，从左到右\r\n\t\t,linearBg:[0,\"rgba(255,255,255,0.2)\",1,\"rgba(54,197,252,0.2)\"] //背景渐变色，从上到下\r\n\t};\r\n\tfor(var k in set){\r\n\t\to[k]=set[k];\r\n\t};\r\n\tThis.set=set=o;\r\n\t\r\n\tvar elem=set.elem;\r\n\tif(elem){\r\n\t\tif(typeof(elem)==\"string\"){\r\n\t\t\telem=document.querySelector(elem);\r\n\t\t}else if(elem.length){\r\n\t\t\telem=elem[0];\r\n\t\t};\r\n\t};\r\n\tif(elem){\r\n\t\tset.width=elem.offsetWidth;\r\n\t\tset.height=elem.offsetHeight;\r\n\t};\r\n\t\r\n\tvar scale=set.scale;\r\n\tvar width=set.width*scale;\r\n\tvar height=set.height*scale;\r\n\t\r\n\tvar thisElem=This.elem=document.createElement(\"div\");\r\n\tthisElem.innerHTML='<div style=\"width:'+set.width+'px;height:'+set.height+'px;overflow:hidden\"><div style=\"width:'+width+'px;height:'+height+'px;transform-origin:0 0;transform:scale('+(1/1/scale)+')\"><canvas/></div></div>';\r\n\t\r\n\tvar canvas=This.canvas=thisElem.querySelector(\"canvas\");\r\n\tvar ctx=This.ctx=canvas.getContext(\"2d\");\r\n\tcanvas.width=width;\r\n\tcanvas.height=height;\r\n\t\r\n\tThis.linear1=This.genLinear(ctx,width,set.linear1);\r\n\tThis.linear2=This.genLinear(ctx,width,set.linear2);\r\n\tThis.linearBg=This.genLinear(ctx,height,set.linearBg,true);\r\n\t\r\n\tif(elem){\r\n\t\telem.innerHTML=\"\";\r\n\t\telem.appendChild(thisElem);\r\n\t};\r\n\t\r\n\tThis._phase=0;\r\n};\r\nfn.prototype=WaveView.prototype={\r\n\tgenLinear:function(ctx,size,colors,top){\r\n\t\tvar rtv=ctx.createLinearGradient(0,0,top?0:size,top?size:0);\r\n\t\tfor(var i=0;i<colors.length;){\r\n\t\t\trtv.addColorStop(colors[i++],colors[i++]);\r\n\t\t};\r\n\t\treturn rtv;\r\n\t}\r\n\t,genPath:function(frequency,amplitude,phase){\r\n\t\t//曲线生成算法参考 https://github.com/HaloMartin/MCVoiceWave/blob/f6dc28975fbe0f7fc6cc4dbc2e61b0aa5574e9bc/MCVoiceWave/MCVoiceWaveView.m#L268\r\n\t\tvar rtv=[];\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\tvar maxAmplitude=set.height*scale/2;\r\n\t\t\r\n\t\tfor(var x=0;x<width;x+=scale) {\r\n\t\t\tvar scaling=(1+Math.cos(Math.PI+(x/width)*2*Math.PI))/2;\r\n\t\t\tvar y=scaling*maxAmplitude*amplitude*Math.sin(2*Math.PI*(x/width)*frequency+phase)+maxAmplitude;\r\n\t\t\trtv.push(y);\r\n\t\t}\r\n\t\treturn rtv;\r\n\t}\r\n\t,input:function(pcmData,powerLevel,sampleRate){\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar ctx=This.ctx;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\tvar height=set.height*scale;\r\n\t\t\r\n\t\tvar speedx=set.speed*pcmData.length/sampleRate;\r\n\t\tvar phase=This._phase-=speedx;//位移速度\r\n\t\tvar amplitude=powerLevel/100;\r\n\t\tvar path1=This.genPath(2,amplitude,phase);\r\n\t\tvar path2=This.genPath(1.8,amplitude,phase+speedx*5);\r\n\t\t\r\n\t\t//开始绘制图形\r\n\t\tctx.clearRect(0,0,width,height);\r\n\t\t\r\n\t\t//绘制包围背景\r\n\t\tctx.beginPath();\r\n\t\tfor(var i=0,x=0;x<width;i++,x+=scale) {\r\n\t\t\tif (x==0) {\r\n\t\t\t\tctx.moveTo(x,path1[i]);\r\n\t\t\t}else {\r\n\t\t\t\tctx.lineTo(x,path1[i]);\r\n\t\t\t};\r\n\t\t};\r\n\t\ti--;\r\n\t\tfor(var x=width-1;x>=0;i--,x-=scale) {\r\n\t\t\tctx.lineTo(x,path2[i]);\r\n\t\t};\r\n\t\tctx.closePath();\r\n\t\tctx.fillStyle=This.linearBg;\r\n\t\tctx.fill();\r\n\t\t\r\n\t\t//绘制线\r\n\t\tThis.drawPath(path2,This.linear2);\r\n\t\tThis.drawPath(path1,This.linear1);\r\n\t}\r\n\t,drawPath:function(path,linear){\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar ctx=This.ctx;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\tfor(var i=0,x=0;x<width;i++,x+=scale) {\r\n\t\t\tif (x==0) {\r\n\t\t\t\tctx.moveTo(x,path[i]);\r\n\t\t\t}else {\r\n\t\t\t\tctx.lineTo(x,path[i]);\r\n\t\t\t};\r\n\t\t};\r\n\t\tctx.lineWidth=set.lineWidth*scale;\r\n\t\tctx.strokeStyle=linear;\r\n\t\tctx.stroke();\r\n\t}\r\n};\r\nRecorder.WaveView=WaveView;\r\n\r\n\t\r\n})();","'use strict';\nvar $ = require('../internals/export');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return URL.prototype.toString.call(this);\n  }\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $filter = require('../internals/array-iteration').filter;\nvar fromSpeciesAndList = require('../internals/typed-array-from-species-and-list');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.filter` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter\nexportTypedArrayMethod('filter', function filter(callbackfn /* , thisArg */) {\n  var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  return fromSpeciesAndList(this, list);\n});\n","var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]()\n      || non[METHOD_NAME]() !== non\n      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);\n  });\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $reduce = require('../internals/array-reduce').left;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce\nexportTypedArrayMethod('reduce', function reduce(callbackfn /* , initialValue */) {\n  return $reduce(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n});\n","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar floor = Math.floor;\n\n// `%TypedArray%.prototype.reverse` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse\nexportTypedArrayMethod('reverse', function reverse() {\n  var that = this;\n  var length = aTypedArray(that).length;\n  var middle = floor(length / 2);\n  var index = 0;\n  var value;\n  while (index < middle) {\n    value = that[index];\n    that[index++] = that[--length];\n    that[length] = value;\n  } return that;\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Float32Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Float32', function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $find = require('../internals/array-iteration').find;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.find` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find\nexportTypedArrayMethod('find', function find(predicate /* , thisArg */) {\n  return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aCallable(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike(O);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.forEach` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach\nexportTypedArrayMethod('forEach', function forEach(callbackfn /* , thisArg */) {\n  $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    redefine(String.prototype, KEY, methods[0]);\n    redefine(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","module.exports = function (Constructor, list) {\n  var index = 0;\n  var length = list.length;\n  var result = new Constructor(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n","// `Symbol.prototype.description` getter\n// https://tc39.es/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var nativeSymbol = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = nativeSymbol ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","'use strict';\n/* eslint-disable es/no-array-prototype-lastindexof -- safe */\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar min = Math.min;\nvar $lastIndexOf = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');\nvar FORCED = NEGATIVE_ZERO || !STRICT_METHOD;\n\n// `Array.prototype.lastIndexOf` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.lastindexof\nmodule.exports = FORCED ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n  // convert -0 to +0\n  if (NEGATIVE_ZERO) return $lastIndexOf.apply(this, arguments) || 0;\n  var O = toIndexedObject(this);\n  var length = lengthOfArrayLike(O);\n  var index = length - 1;\n  if (arguments.length > 1) index = min(index, toIntegerOrInfinity(arguments[1]));\n  if (index < 0) index = length + index;\n  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;\n  return -1;\n} : $lastIndexOf;\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $indexOf = require('../internals/array-includes').indexOf;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.indexOf` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof\nexportTypedArrayMethod('indexOf', function indexOf(searchElement /* , fromIndex */) {\n  return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n});\n","var isObject = require('../internals/is-object');\n\nvar floor = Math.floor;\n\n// `IsIntegralNumber` abstract operation\n// https://tc39.es/ecma262/#sec-isintegralnumber\n// eslint-disable-next-line es/no-number-isinteger -- safe\nmodule.exports = Number.isInteger || function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\n\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar isPrototypeOf = ObjectPrototype.isPrototypeOf;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR');\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf.call(TypedArray, C))) return C;\n  throw TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) { /* empty */ }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    redefine(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      redefine(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQIRED = true;\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n  } });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","/*eslint-disable*/\r\n/*\r\nmp3编码器，需带上mp3-engine.js引擎使用\r\nhttps://github.com/xiangyuecn/Recorder\r\n\r\n当然最佳推荐使用mp3、wav格式，代码也是优先照顾这两种格式\r\n浏览器支持情况\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\r\n*/\r\n(function(){\r\n\"use strict\";\r\n\r\nRecorder.prototype.enc_mp3={\r\n\tstable:true\r\n\t,testmsg:\"采样率范围48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000\"\r\n};\r\n\r\n\r\nRecorder.prototype.mp3=function(res,True,False){\r\n\t\tvar This=this,set=This.set,size=res.length;\r\n\t\t//https://github.com/wangpengfei15975/recorder.js\r\n\t\t//https://github.com/zhuker/lamejs bug:采样率必须和源一致，不然8k时没有声音，有问题fix：https://github.com/zhuker/lamejs/pull/11\r\n\t\tvar mp3=new Recorder.lamejs.Mp3Encoder(1,set.sampleRate,set.bitRate);\r\n\t\t\r\n\t\tvar blockSize=57600;\r\n\t\tvar data=[];\r\n\t\t\r\n\t\tvar idx=0;\r\n\t\tvar run=function(){\r\n\t\t\tif(idx<size){\r\n\t\t\t\tvar buf=mp3.encodeBuffer(res.subarray(idx,idx+blockSize));\r\n\t\t\t\tif(buf.length>0){\r\n\t\t\t\t\tdata.push(buf);\r\n\t\t\t\t};\r\n\t\t\t\tidx+=blockSize;\r\n\t\t\t\tsetTimeout(run);//Worker? 复杂了\r\n\t\t\t}else{\r\n\t\t\t\tvar buf=mp3.flush();\r\n\t\t\t\tif(buf.length>0){\r\n\t\t\t\t\tdata.push(buf);\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tTrue(new Blob(data,{type:\"audio/mp3\"}));\r\n\t\t\t};\r\n\t\t};\r\n\t\trun();\r\n\t}\r\n\t\r\n})();","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int8Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int8', function (init) {\n  return function Int8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n"],"sourceRoot":""}